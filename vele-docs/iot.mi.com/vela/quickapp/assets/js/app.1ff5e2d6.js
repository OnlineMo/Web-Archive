(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var a,r,s=n[0],l=n[1],c=n[2],p=0,u=[];p<s.length;p++)r=s[p],Object.prototype.hasOwnProperty.call(o,r)&&o[r]&&u.push(o[r][0]),o[r]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(d&&d(n);u.length;)u.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],a=!0,s=1;s<t.length;s++){var l=t[s];0!==o[l]&&(a=!1)}a&&(i.splice(n--,1),e=r(r.s=t[0]))}return e}var a={},o={10:0},i=[];function r(n){if(a[n])return a[n].exports;var t=a[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.e=function(e){var n=[],t=o[e];if(0!==t)if(t)n.push(t[2]);else{var a=new Promise((function(n,a){t=o[e]=[n,a]}));n.push(t[2]=a);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,r.nc&&s.setAttribute("nonce",r.nc),s.src=function(e){return r.p+"assets/js/"+({11:"vendors~docsearch"}[e]||e)+"."+{1:"2d0409b9",2:"f5498a78",3:"61d49986",4:"f8b90ac5",5:"b3904973",6:"9582be7e",7:"6d746517",8:"d56ce9b8",9:"3715051d",11:"de37e793",12:"22554f8d",13:"4ba0b005",14:"82f2e10b",15:"5e742824",16:"6a637b80",17:"3bf8a5fd",18:"15c69c80",19:"dd1ec37a",20:"9bf0759d",21:"cd587aa9",22:"48b61558",23:"49888098",24:"2d160e75",25:"cd9e3848",26:"0a24c526",27:"a2370dc9",28:"6bcd945d",29:"51d9e671",30:"9ffb0227",31:"570516fd",32:"3644774b",33:"b5c6d31b",34:"a2de5b13",35:"0ee4624e",36:"dceb0e1b",37:"bc2ea2d6",38:"f5d40761",39:"f0d42ba0",40:"0ecdcc1e",41:"9791f602",42:"77676cfa",43:"301c8461",44:"6f6c62d7",45:"fee539be",46:"dfec7357",47:"772cb026",48:"1d59ffb0",49:"c4071c21",50:"22cd5a34",51:"59d916ec",52:"fddcc29f",53:"8b6be37b",54:"e5a5c1c1",55:"c08bbe5d",56:"846cd995",57:"3cf2c176",58:"6d325e67",59:"af369c06",60:"6af680c1",61:"4e14f634",62:"5e9a43ce",63:"5db01e98",64:"a70114e2",65:"125608f4",66:"ac642a04",67:"bcf57b67",68:"fb047209",69:"7f4b0467",70:"80182f79",71:"091a41d2",72:"039126f1",73:"a1d7c857",74:"20783bd2",75:"d2f8125d",76:"635b57f9",77:"fa49ee47",78:"4161829d",79:"069061a3",80:"cb57f57b",81:"831c50a3",82:"75f5a1a1",83:"a32c15d2",84:"df95a526",85:"0f16b2ec",86:"99248c39",87:"c2c22b7c",88:"b8f711fc",89:"6817da3e",90:"8292a863",91:"118d83a6",92:"3aaa096d",93:"577ae9a7",94:"c78738d0",95:"21e132ee",96:"0dd09196",97:"34059001",98:"369568c6",99:"e7f08d9d",100:"1fa08ab7",101:"f62604cb",102:"fd286b83",103:"c0d124e0",104:"05bb4800",105:"9bd0c752",106:"97af7d0e",107:"d67600b7",108:"a94763f9",109:"06c961e2",110:"835c3f4d",111:"d3a7d0a4",112:"96247afd",113:"c5c8fa33",114:"d0571e4b",115:"904d47ea",116:"fcf3d2d6",117:"3cd4421f",118:"f744f3dd",119:"1966d81a",120:"eb099709",121:"38bf9236",122:"f3fafdca",123:"168984be",124:"7417fbbf",125:"ac478a09",126:"94d6353d",127:"602d9a06",128:"85cacd0d",129:"d6249996",130:"fa1f43a3",131:"595dd6cb",132:"a844646f",133:"041f2c56",134:"8b5d8816",135:"5ff87b2f",136:"e6c9bc38",137:"5eb7dcf2",138:"ce7c3710",139:"09e21f31",140:"a12f1516",141:"44489424",142:"bdc8faf6",143:"59410661",144:"f625741d",145:"c74b7e3f",146:"032efdc7",147:"f7a487ac",148:"b440f9f6",149:"112689ee",150:"c518219b",151:"08c2ec67",152:"c1eec55c",153:"6ad696b9",154:"3f741416",155:"f89c6e76",156:"616710c9",157:"beb52443",158:"5209e7a9",159:"13e8bcaf",160:"e9472ff0",161:"035eb018",162:"8c6ec47d",163:"ae711f10",164:"8e3c644e",165:"c1dc2d2d",166:"5f393674",167:"2e094069",168:"08fa0078",169:"cc57786f",170:"dc7c3bf5",171:"741e96f1",172:"24632ad1",173:"0a3e6d15",174:"565dd72c",175:"a3baca16",176:"8290afe5",177:"3a0d228a",178:"6c0a573f",179:"f4975675",180:"967c2cfe",181:"065dc0a5",182:"caa8f3c4",183:"29493901",184:"6429a127",185:"359c76a4",186:"304e0510",187:"4d7d81c6",188:"a4882916",189:"78a3ee88",190:"975bbe92",191:"176a0802",192:"afe467d3",193:"ada0850b",194:"a37a2ced",195:"09d20e91",196:"a031d897",197:"419b68e6",198:"75ca4607",199:"890dd7de",200:"70ce0b06",201:"f7b7862b",202:"0c81db1a",203:"498b3367",204:"8418ea01",205:"8d05dee0",206:"cb83fc18",207:"02f08517",208:"9523fa97",209:"97862854",210:"136e2f30",211:"6a22e20f",212:"1147cac2",213:"cfeb38ab",214:"ee4a1418",215:"2e2aaf8d",216:"05d00224",217:"ec771426",218:"cc7624de",219:"e5aedf98",220:"e8b2fb04",221:"61a040f4",222:"d17f3380",223:"4a3a5849",224:"84ccbb2b",225:"d2616620",226:"d7ffca4d",227:"27d4eb31",228:"5d944d40",229:"1f74f86b",230:"7706871b",231:"68e461a1",232:"aa645ada",233:"e41cbb61",234:"afdc399b",235:"5628a9fb",236:"b6838a9d",237:"2a1e2f6b",238:"50f1a1d8",239:"c385ad16",240:"a3c59f40",241:"7911c034",242:"33987073",243:"c79b52dc",244:"bbcca650",245:"485366dd",246:"10f0df69",247:"ff032d40",248:"cdb2a014",249:"67729453",250:"918b0cf0",251:"ed8e3a5d",252:"455ad7b9",253:"bdf8c07d",254:"356614e6",255:"b0378f12",256:"809a8ac5",257:"e311850e",258:"1060c2de",259:"55ed9292",260:"0088ffac",261:"c49509c7",262:"83a759cc",263:"45c75d34",264:"e8eacfb2",265:"74e7cd71",266:"17eb34fa",267:"c090cb2d",268:"0450fbfc",269:"13c288b9",270:"6021c81d",271:"e9331f8f",272:"433985a0",273:"23fd2d13",274:"ee29f12e",275:"432be5e3",276:"a4ba0889",277:"a2d4e86f",278:"169bb7e6",279:"0cd09823",280:"493272d1",281:"ee979f2a",282:"fd563912",283:"79a7fff9",284:"d2942c1c",285:"a0fb21d0",286:"b3a25572",287:"f2910ec5",288:"39f1fa1f",289:"38610afb",290:"98910e87",291:"7727687b",292:"b385c87d",293:"80dad5c2",294:"3b527c65",295:"b89ebc20",296:"46f00013",297:"f6681d31",298:"d2b5c066",299:"4bca4485",300:"7fc56f49",301:"0f61d43a",302:"8b519d28",303:"b7d99adc",304:"62202d0a",305:"841edb49",306:"e077159e",307:"f46aace8",308:"72aa1fff",309:"78bc0129",310:"2f7dcef1",311:"726874a1",312:"f1185395",313:"8f9c9c8d",314:"5bd3146d",315:"34a3c65b",316:"5431d547",317:"272eb98e",318:"808ade19",319:"309d0181",320:"78c67362",321:"a0599ebe",322:"af994793"}[e]+".js"}(e);var l=new Error;i=function(n){s.onerror=s.onload=null,clearTimeout(c);var t=o[e];if(0!==t){if(t){var a=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+a+": "+i+")",l.name="ChunkLoadError",l.type=a,l.request=i,t[1](l)}o[e]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(n)},r.m=e,r.c=a,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)r.d(t,a,function(n){return e[n]}.bind(null,a));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="/vela/quickapp/",r.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=n,s=s.slice();for(var c=0;c<s.length;c++)n(s[c]);var d=l;i.push([125,0]),t()}([function(e,n,t){"use strict";var a=function(e){return e&&e.Math===Math&&e};e.exports=a("object"==typeof globalThis&&globalThis)||a("object"==typeof window&&window)||a("object"==typeof self&&self)||a("object"==typeof global&&global)||a("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(e,n,t){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,t){"use strict";var a="object"==typeof document&&document.all;e.exports=void 0===a&&void 0!==a?function(e){return"function"==typeof e||e===a}:function(e){return"function"==typeof e}},function(e,n,t){"use strict";var a=t(8),o=String,i=TypeError;e.exports=function(e){if(a(e))return e;throw new i(o(e)+" is not an object")}},function(e,n,t){"use strict";var a=t(30),o=Function.prototype,i=o.call,r=a&&o.bind.bind(i,i);e.exports=a?r:function(e){return function(){return i.apply(e,arguments)}}},function(e,n,t){"use strict";var a=t(1);e.exports=!a((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n,t){"use strict";var a=t(30),o=Function.prototype.call;e.exports=a?o.bind(o):function(){return o.apply(o,arguments)}},function(e,n,t){"use strict";var a=t(2),o=t(49),i=TypeError;e.exports=function(e){if(a(e))return e;throw new i(o(e)+" is not a function")}},function(e,n,t){"use strict";var a=t(2);e.exports=function(e){return"object"==typeof e?null!==e:a(e)}},function(e,n,t){"use strict";var a=t(4),o=t(28),i=a({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return i(o(e),n)}},function(e,n,t){"use strict";var a=t(0),o=t(69).f,i=t(21),r=t(45),s=t(51),l=t(83),c=t(139);e.exports=function(e,n){var t,d,p,u,h,m=e.target,f=e.global,g=e.stat;if(t=f?a:g?a[m]||s(m,{}):a[m]&&a[m].prototype)for(d in n){if(u=n[d],p=e.dontCallGetSet?(h=o(t,d))&&h.value:t[d],!c(f?d:m+(g?".":"#")+d,e.forced)&&void 0!==p){if(typeof u==typeof p)continue;l(u,p)}(e.sham||p&&p.sham)&&i(u,"sham",!0),r(t,d,u,e)}}},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){"use strict";var a=t(6),o=t(3),i=t(35);e.exports=function(e,n,t){var r,s;o(e);try{if(!(r=i(e,"return"))){if("throw"===n)throw t;return t}r=a(r,e)}catch(e){s=!0,r=e}if("throw"===n)throw t;if(s)throw r;return o(r),t}},function(e,n,t){var a=t(97),o="object"==typeof self&&self&&self.Object===Object&&self,i=a||o||Function("return this")();e.exports=i},function(e,n,t){"use strict";var a=t(10),o=t(0),i=t(140),r=t(3),s=t(2),l=t(86),c=t(123),d=t(142),p=t(1),u=t(9),h=t(15),m=t(87).IteratorPrototype,f=t(5),g=t(20),v=h("toStringTag"),b=TypeError,y=o.Iterator,x=g||!s(y)||y.prototype!==m||!p((function(){y({})})),w=function(){if(i(this,m),l(this)===m)throw new b("Abstract class Iterator not directly constructable")},k=function(e,n){f?c(m,e,{configurable:!0,get:function(){return n},set:function(n){if(r(this),this===m)throw new b("You can't redefine this property");u(this,e)?this[e]=n:d(this,e,n)}}):m[e]=n};u(m,v)||k(v,"Iterator"),!x&&u(m,"constructor")&&m.constructor!==Object||k("constructor",w),w.prototype=m,a({global:!0,constructor:!0,forced:x},{Iterator:w})},function(e,n,t){"use strict";var a=t(0),o=t(76),i=t(9),r=t(77),s=t(73),l=t(72),c=a.Symbol,d=o("wks"),p=l?c.for||c:c&&c.withoutSetter||r;e.exports=function(e){return i(d,e)||(d[e]=s&&i(c,e)?c[e]:p("Symbol."+e)),d[e]}},function(e,n,t){"use strict";var a=t(5),o=t(78),i=t(80),r=t(3),s=t(70),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;n.f=a?i?function(e,n,t){if(r(e),n=s(n),r(t),"function"==typeof e&&"prototype"===n&&"value"in t&&"writable"in t&&!t.writable){var a=d(e,n);a&&a.writable&&(e[n]=t.value,t={configurable:"configurable"in t?t.configurable:a.configurable,enumerable:"enumerable"in t?t.enumerable:a.enumerable,writable:!1})}return c(e,n,t)}:c:function(e,n,t){if(r(e),n=s(n),r(t),o)try{return c(e,n,t)}catch(e){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){var a=t(192),o=t(195);e.exports=function(e,n){var t=o(e,n);return a(t)?t:void 0}},function(e,n,t){"use strict";function a(e,n,t,a,o,i,r,s){var l,c="function"==typeof e?e.options:e;if(n&&(c.render=n,c.staticRenderFns=t,c._compiled=!0),a&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),r?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(e,n){return l.call(n),d(e,n)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:e,options:c}}t.d(n,"a",(function(){return a}))},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){"use strict";e.exports=!1},function(e,n,t){"use strict";var a=t(5),o=t(16),i=t(31);e.exports=a?function(e,n,t){return o.f(e,n,i(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){"use strict";var a=t(10),o=t(6),i=t(7),r=t(3),s=t(24),l=t(88),c=t(89),d=t(20),p=t(12),u=t(90),h=t(25),m=!d&&!u("filter",(function(){})),f=!d&&!m&&h("filter",TypeError),g=d||m||f,v=l((function(){for(var e,n,t=this.iterator,a=this.predicate,i=this.next;;){if(e=r(o(i,t)),this.done=!!e.done)return;if(n=e.value,c(t,a,[n,this.counter++],!0))return n}}));a({target:"Iterator",proto:!0,real:!0,forced:g},{filter:function(e){r(this);try{i(e)}catch(e){p(this,"throw",e)}return f?o(f,this,e):new v(s(this),{predicate:e})}})},function(e,n,t){var a=t(27),o=t(177),i=t(178),r=a?a.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":r&&r in Object(e)?o(e):i(e)}},function(e,n,t){"use strict";e.exports=function(e){return{iterator:e,next:e.next,done:!1}}},function(e,n,t){"use strict";var a=t(0);e.exports=function(e,n){var t=a.Iterator,o=t&&t.prototype,i=o&&o[e],r=!1;if(i)try{i.call({next:function(){return{done:!0}},return:function(){r=!0}},-1)}catch(e){e instanceof n||(r=!1)}if(!r)return i}},function(e,n,t){"use strict";var a=t(4),o=a({}.toString),i=a("".slice);e.exports=function(e){return i(o(e),8,-1)}},function(e,n,t){var a=t(13).Symbol;e.exports=a},function(e,n,t){"use strict";var a=t(47),o=Object;e.exports=function(e){return o(a(e))}},function(e,n,t){"use strict";var a=t(137);e.exports=function(e){return a(e.length)}},function(e,n,t){"use strict";var a=t(1);e.exports=!a((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,n,t){"use strict";e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){"use strict";var a=t(66),o=t(47);e.exports=function(e){return a(o(e))}},function(e,n,t){"use strict";var a=t(0),o=t(2),i=function(e){return o(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?i(a[e]):a[e]&&a[e][n]}},function(e,n,t){"use strict";var a=t(4);e.exports=a({}.isPrototypeOf)},function(e,n,t){"use strict";var a=t(7),o=t(48);e.exports=function(e,n){var t=e[n];return o(t)?void 0:a(t)}},function(e,n,t){var a=t(182),o=t(183),i=t(184),r=t(185),s=t(186);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var a=e[n];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n,t){var a=t(99);e.exports=function(e,n){for(var t=e.length;t--;)if(a(e[t][0],n))return t;return-1}},function(e,n,t){var a=t(17)(Object,"create");e.exports=a},function(e,n,t){var a=t(204);e.exports=function(e,n){var t=e.__data__;return a(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var a=t(62);e.exports=function(e){if("string"==typeof e||a(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n){var t=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,i=/^0o[0-7]+$/i,r=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,p=Math.max,u=Math.min,h=function(){return c.Date.now()};function m(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function f(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==d.call(e)}(e))return NaN;if(m(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=m(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var s=o.test(e);return s||i.test(e)?r(e.slice(2),s?2:8):a.test(e)?NaN:+e}e.exports=function(e,n,t){var a,o,i,r,s,l,c=0,d=!1,g=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function b(n){var t=a,i=o;return a=o=void 0,c=n,r=e.apply(i,t)}function y(e){return c=e,s=setTimeout(w,n),d?b(e):r}function x(e){var t=e-l;return void 0===l||t>=n||t<0||g&&e-c>=i}function w(){var e=h();if(x(e))return k(e);s=setTimeout(w,function(e){var t=n-(e-l);return g?u(t,i-(e-c)):t}(e))}function k(e){return s=void 0,v&&a?b(e):(a=o=void 0,r)}function T(){var e=h(),t=x(e);if(a=arguments,o=this,l=e,t){if(void 0===s)return y(l);if(g)return s=setTimeout(w,n),b(l)}return void 0===s&&(s=setTimeout(w,n)),r}return n=f(n)||0,m(t)&&(d=!!t.leading,i=(g="maxWait"in t)?p(f(t.maxWait)||0,n):i,v="trailing"in t?!!t.trailing:v),T.cancel=function(){void 0!==s&&clearTimeout(s),c=0,a=l=o=s=void 0},T.flush=function(){return void 0===s?r:k(h())},T}},function(e,n,t){var a,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(a=function(){var e,n,t={version:"0.2.0"},a=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(e,n,t){return e<n?n:e>t?t:e}function i(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(a[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=o(e,a.minimum,1),t.status=1===e?null:e;var l=t.render(!n),c=l.querySelector(a.barSelector),d=a.speed,p=a.easing;return l.offsetWidth,r((function(n){""===a.positionUsing&&(a.positionUsing=t.getPositioningCSS()),s(c,function(e,n,t){var o;return(o="translate3d"===a.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+n+"ms "+t,o}(e,d,p)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),d)}),d)):setTimeout(n,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),a.trickleSpeed)};return a.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*o(Math.random()*n,.1,.95)),n=o(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*a.trickleRate)},e=0,n=0,t.promise=function(a){return a&&"resolved"!==a.state()?(0===n&&t.start(),e++,n++,a.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=a.template;var o,r=n.querySelector(a.barSelector),l=e?"-100":i(t.status||0),d=document.querySelector(a.parent);return s(r,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),a.showSpinner||(o=n.querySelector(a.spinnerSelector))&&u(o),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(n),n},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(a.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&u(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var r=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var a,o=e.length,i=n.charAt(0).toUpperCase()+n.slice(1);o--;)if((a=e[o]+i)in t)return a;return n}(t))}function a(e,n,a){n=t(n),e.style[n]=a}return function(e,n){var t,o,i=arguments;if(2==i.length)for(t in n)void 0!==(o=n[t])&&n.hasOwnProperty(t)&&a(e,t,o);else a(e,i[1],i[2])}}();function l(e,n){return("string"==typeof e?e:p(e)).indexOf(" "+n+" ")>=0}function c(e,n){var t=p(e),a=t+n;l(t,n)||(e.className=a.substring(1))}function d(e,n){var t,a=p(e);l(e,n)&&(t=a.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function p(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function u(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?a.call(n,t,n,e):a)||(e.exports=o)},function(e,n,t){"use strict";var a=t(10),o=t(6),i=t(7),r=t(3),s=t(24),l=t(88),c=t(89),d=t(12),p=t(90),u=t(25),h=t(20),m=!h&&!p("map",(function(){})),f=!h&&!m&&u("map",TypeError),g=h||m||f,v=l((function(){var e=this.iterator,n=r(o(this.next,e));if(!(this.done=!!n.done))return c(e,this.mapper,[n.value,this.counter++],!0)}));a({target:"Iterator",proto:!0,real:!0,forced:g},{map:function(e){r(this);try{i(e)}catch(e){d(this,"throw",e)}return f?o(f,this,e):new v(s(this),{mapper:e})}})},function(e,n,t){"use strict";var a=t(10),o=t(6),i=t(46),r=t(7),s=t(3),l=t(24),c=t(12),d=t(25)("forEach",TypeError);a({target:"Iterator",proto:!0,real:!0,forced:d},{forEach:function(e){s(this);try{r(e)}catch(e){c(this,"throw",e)}if(d)return o(d,this,e);var n=l(this),t=0;i(n,(function(n){e(n,t++)}),{IS_RECORD:!0})}})},function(e,n,t){"use strict";var a=t(2),o=t(16),i=t(81),r=t(51);e.exports=function(e,n,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:n;if(a(t)&&i(t,c,s),s.global)l?e[n]=t:r(n,t);else{try{s.unsafe?e[n]&&(l=!0):delete e[n]}catch(e){}l?e[n]=t:o.f(e,n,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},function(e,n,t){"use strict";var a=t(124),o=t(6),i=t(3),r=t(49),s=t(155),l=t(29),c=t(34),d=t(156),p=t(92),u=t(12),h=TypeError,m=function(e,n){this.stopped=e,this.result=n},f=m.prototype;e.exports=function(e,n,t){var g,v,b,y,x,w,k,T=t&&t.that,I=!(!t||!t.AS_ENTRIES),E=!(!t||!t.IS_RECORD),S=!(!t||!t.IS_ITERATOR),z=!(!t||!t.INTERRUPTED),P=a(n,T),C=function(e){return g&&u(g,"normal"),new m(!0,e)},j=function(e){return I?(i(e),z?P(e[0],e[1],C):P(e[0],e[1])):z?P(e,C):P(e)};if(E)g=e.iterator;else if(S)g=e;else{if(!(v=p(e)))throw new h(r(e)+" is not iterable");if(s(v)){for(b=0,y=l(e);y>b;b++)if((x=j(e[b]))&&c(f,x))return x;return new m(!1)}g=d(e,v)}for(w=E?e.next:g.next;!(k=o(w,g)).done;){try{x=j(k.value)}catch(e){u(g,"throw",e)}if("object"==typeof x&&x&&c(f,x))return x}return new m(!1)}},function(e,n,t){"use strict";var a=t(48),o=TypeError;e.exports=function(e){if(a(e))throw new o("Can't call method on "+e);return e}},function(e,n,t){"use strict";e.exports=function(e){return null==e}},function(e,n,t){"use strict";var a=String;e.exports=function(e){try{return a(e)}catch(e){return"Object"}}},function(e,n,t){"use strict";var a=t(20),o=t(0),i=t(51),r=e.exports=o["__core-js_shared__"]||i("__core-js_shared__",{});(r.versions||(r.versions=[])).push({version:"3.46.0",mode:a?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru), 2025 CoreJS Company (core-js.io)",license:"https://github.com/zloirock/core-js/blob/v3.46.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,n,t){"use strict";var a=t(0),o=Object.defineProperty;e.exports=function(e,n){try{o(a,e,{value:n,configurable:!0,writable:!0})}catch(t){a[e]=n}return n}},function(e,n,t){"use strict";var a=t(76),o=t(77),i=a("keys");e.exports=function(e){return i[e]||(i[e]=o(e))}},function(e,n,t){"use strict";e.exports={}},function(e,n,t){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){var a=t(176),o=t(19),i=Object.prototype,r=i.hasOwnProperty,s=i.propertyIsEnumerable,l=a(function(){return arguments}())?a:function(e){return o(e)&&r.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,n,t){var a=t(17)(t(13),"Map");e.exports=a},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var a=t(196),o=t(203),i=t(205),r=t(206),s=t(207);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var a=e[n];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var a=t(11),o=t(62),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,r=/^\w*$/;e.exports=function(e,n){if(a(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!o(e))||(r.test(e)||!i.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var a=t(23),o=t(19);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==a(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,t){"use strict";var a=t(10),o=t(28),i=t(29),r=t(171),s=t(173);a({target:"Array",proto:!0,arity:1,forced:t(1)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var n=o(this),t=i(n),a=arguments.length;s(t+a);for(var l=0;l<a;l++)n[t]=arguments[l],t++;return r(n,t),t}})},function(e,n,t){"use strict";var a=t(10),o=t(6),i=t(46),r=t(7),s=t(3),l=t(24),c=t(12),d=t(25)("some",TypeError);a({target:"Iterator",proto:!0,real:!0,forced:d},{some:function(e){s(this);try{r(e)}catch(e){c(this,"throw",e)}if(d)return o(d,this,e);var n=l(this),t=0;return i(n,(function(n,a){if(e(n,t++))return a()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(e,n,t){"use strict";var a=t(4),o=t(1),i=t(26),r=Object,s=a("".split);e.exports=o((function(){return!r("z").propertyIsEnumerable(0)}))?function(e){return"String"===i(e)?s(e,""):r(e)}:r},function(e,n,t){"use strict";var a,o=t(3),i=t(143),r=t(54),s=t(53),l=t(145),c=t(79),d=t(52),p=d("IE_PROTO"),u=function(){},h=function(e){return"<script>"+e+"<\/script>"},m=function(e){e.write(h("")),e.close();var n=e.parentWindow.Object;return e=null,n},f=function(){try{a=new ActiveXObject("htmlfile")}catch(e){}var e,n;f="undefined"!=typeof document?document.domain&&a?m(a):((n=c("iframe")).style.display="none",l.appendChild(n),n.src=String("javascript:"),(e=n.contentWindow.document).open(),e.write(h("document.F=Object")),e.close(),e.F):m(a);for(var t=r.length;t--;)delete f.prototype[r[t]];return f()};s[p]=!0,e.exports=Object.create||function(e,n){var t;return null!==e?(u.prototype=o(e),t=new u,u.prototype=null,t[p]=e):t=f(),void 0===n?t:i.f(t,n)}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n,t){"use strict";var a=t(5),o=t(6),i=t(126),r=t(31),s=t(32),l=t(70),c=t(9),d=t(78),p=Object.getOwnPropertyDescriptor;n.f=a?p:function(e,n){if(e=s(e),n=l(n),d)try{return p(e,n)}catch(e){}if(c(e,n))return r(!o(i.f,e,n),e[n])}},function(e,n,t){"use strict";var a=t(127),o=t(71);e.exports=function(e){var n=a(e,"string");return o(n)?n:n+""}},function(e,n,t){"use strict";var a=t(33),o=t(2),i=t(34),r=t(72),s=Object;e.exports=r?function(e){return"symbol"==typeof e}:function(e){var n=a("Symbol");return o(n)&&i(n.prototype,s(e))}},function(e,n,t){"use strict";var a=t(73);e.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){"use strict";var a=t(74),o=t(1),i=t(0).String;e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol("symbol detection");return!i(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(e,n,t){"use strict";var a,o,i=t(0),r=t(75),s=i.process,l=i.Deno,c=s&&s.versions||l&&l.version,d=c&&c.v8;d&&(o=(a=d.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!o&&r&&(!(a=r.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=r.match(/Chrome\/(\d+)/))&&(o=+a[1]),e.exports=o},function(e,n,t){"use strict";var a=t(0).navigator,o=a&&a.userAgent;e.exports=o?String(o):""},function(e,n,t){"use strict";var a=t(50);e.exports=function(e,n){return a[e]||(a[e]=n||{})}},function(e,n,t){"use strict";var a=t(4),o=0,i=Math.random(),r=a(1.1.toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+r(++o+i,36)}},function(e,n,t){"use strict";var a=t(5),o=t(1),i=t(79);e.exports=!a&&!o((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){"use strict";var a=t(0),o=t(8),i=a.document,r=o(i)&&o(i.createElement);e.exports=function(e){return r?i.createElement(e):{}}},function(e,n,t){"use strict";var a=t(5),o=t(1);e.exports=a&&o((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,t){"use strict";var a=t(4),o=t(1),i=t(2),r=t(9),s=t(5),l=t(129).CONFIGURABLE,c=t(130),d=t(82),p=d.enforce,u=d.get,h=String,m=Object.defineProperty,f=a("".slice),g=a("".replace),v=a([].join),b=s&&!o((function(){return 8!==m((function(){}),"length",{value:8}).length})),y=String(String).split("String"),x=e.exports=function(e,n,t){"Symbol("===f(h(n),0,7)&&(n="["+g(h(n),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(n="get "+n),t&&t.setter&&(n="set "+n),(!r(e,"name")||l&&e.name!==n)&&(s?m(e,"name",{value:n,configurable:!0}):e.name=n),b&&t&&r(t,"arity")&&e.length!==t.arity&&m(e,"length",{value:t.arity});try{t&&r(t,"constructor")&&t.constructor?s&&m(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var a=p(e);return r(a,"source")||(a.source=v(y,"string"==typeof n?n:"")),e};Function.prototype.toString=x((function(){return i(this)&&u(this).source||c(this)}),"toString")},function(e,n,t){"use strict";var a,o,i,r=t(131),s=t(0),l=t(8),c=t(21),d=t(9),p=t(50),u=t(52),h=t(53),m=s.TypeError,f=s.WeakMap;if(r||p.state){var g=p.state||(p.state=new f);g.get=g.get,g.has=g.has,g.set=g.set,a=function(e,n){if(g.has(e))throw new m("Object already initialized");return n.facade=e,g.set(e,n),n},o=function(e){return g.get(e)||{}},i=function(e){return g.has(e)}}else{var v=u("state");h[v]=!0,a=function(e,n){if(d(e,v))throw new m("Object already initialized");return n.facade=e,c(e,v,n),n},o=function(e){return d(e,v)?e[v]:{}},i=function(e){return d(e,v)}}e.exports={set:a,get:o,has:i,enforce:function(e){return i(e)?o(e):a(e,{})},getterFor:function(e){return function(n){var t;if(!l(n)||(t=o(n)).type!==e)throw new m("Incompatible receiver, "+e+" required");return t}}}},function(e,n,t){"use strict";var a=t(9),o=t(132),i=t(69),r=t(16);e.exports=function(e,n,t){for(var s=o(n),l=r.f,c=i.f,d=0;d<s.length;d++){var p=s[d];a(e,p)||t&&a(t,p)||l(e,p,c(n,p))}}},function(e,n,t){"use strict";var a=t(4),o=t(9),i=t(32),r=t(134).indexOf,s=t(53),l=a([].push);e.exports=function(e,n){var t,a=i(e),c=0,d=[];for(t in a)!o(s,t)&&o(a,t)&&l(d,t);for(;n.length>c;)o(a,t=n[c++])&&(~r(d,t)||l(d,t));return d}},function(e,n,t){"use strict";var a=t(136);e.exports=function(e){var n=+e;return n!=n||0===n?0:a(n)}},function(e,n,t){"use strict";var a=t(9),o=t(2),i=t(28),r=t(52),s=t(141),l=r("IE_PROTO"),c=Object,d=c.prototype;e.exports=s?c.getPrototypeOf:function(e){var n=i(e);if(a(n,l))return n[l];var t=n.constructor;return o(t)&&n instanceof t?t.prototype:n instanceof c?d:null}},function(e,n,t){"use strict";var a,o,i,r=t(1),s=t(2),l=t(8),c=t(67),d=t(86),p=t(45),u=t(15),h=t(20),m=u("iterator"),f=!1;[].keys&&("next"in(i=[].keys())?(o=d(d(i)))!==Object.prototype&&(a=o):f=!0),!l(a)||r((function(){var e={};return a[m].call(e)!==e}))?a={}:h&&(a=c(a)),s(a[m])||p(a,m,(function(){return this})),e.exports={IteratorPrototype:a,BUGGY_SAFARI_ITERATORS:f}},function(e,n,t){"use strict";var a=t(6),o=t(67),i=t(21),r=t(146),s=t(15),l=t(82),c=t(35),d=t(87).IteratorPrototype,p=t(147),u=t(12),h=t(148),m=s("toStringTag"),f=l.set,g=function(e){var n=l.getterFor(e?"WrapForValidIterator":"IteratorHelper");return r(o(d),{next:function(){var t=n(this);if(e)return t.nextHandler();if(t.done)return p(void 0,!0);try{var a=t.nextHandler();return t.returnHandlerResult?a:p(a,t.done)}catch(e){throw t.done=!0,e}},return:function(){var t=n(this),o=t.iterator;if(t.done=!0,e){var i=c(o,"return");return i?a(i,o):p(void 0,!0)}if(t.inner)try{u(t.inner.iterator,"normal")}catch(e){return u(o,"throw",e)}if(t.openIters)try{h(t.openIters,"normal")}catch(e){return u(o,"throw",e)}return o&&u(o,"normal"),p(void 0,!0)}})},v=g(!0),b=g(!1);i(b,m,"Iterator Helper"),e.exports=function(e,n,t){var a=function(a,o){o?(o.iterator=a.iterator,o.next=a.next):o=a,o.type=n?"WrapForValidIterator":"IteratorHelper",o.returnHandlerResult=!!t,o.nextHandler=e,o.counter=0,o.done=!1,f(this,o)};return a.prototype=n?v:b,a}},function(e,n,t){"use strict";var a=t(3),o=t(12);e.exports=function(e,n,t,i){try{return i?n(a(t)[0],t[1]):n(t)}catch(n){o(e,"throw",n)}}},function(e,n,t){"use strict";e.exports=function(e,n){var t="function"==typeof Iterator&&Iterator.prototype[e];if(t)try{t.call({next:null},n).next()}catch(e){return!0}}},function(e,n,t){"use strict";e.exports={}},function(e,n,t){"use strict";var a=t(93),o=t(35),i=t(48),r=t(91),s=t(15)("iterator");e.exports=function(e){if(!i(e))return o(e,s)||o(e,"@@iterator")||r[a(e)]}},function(e,n,t){"use strict";var a=t(157),o=t(2),i=t(26),r=t(15)("toStringTag"),s=Object,l="Arguments"===i(function(){return arguments}());e.exports=a?i:function(e){var n,t,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=s(e),r))?t:l?i(n):"Object"===(a=i(n))&&o(n.callee)?"Arguments":a}},function(e,n,t){"use strict";var a=t(30),o=Function.prototype,i=o.apply,r=o.call;e.exports="object"==typeof Reflect&&Reflect.apply||(a?r.bind(i):function(){return r.apply(i,arguments)})},function(e,n,t){"use strict";var a=t(161),o=t(8),i=t(47),r=t(162);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=a(Object.prototype,"__proto__","set"))(t,[]),n=t instanceof Array}catch(e){}return function(t,a){return i(t),r(a),o(t)?(n?e(t,a):t.__proto__=a,t):t}}():void 0)},function(e,n){e.exports=function(e,n){for(var t=-1,a=n.length,o=e.length;++t<a;)e[o+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var a=t(36),o=t(187),i=t(188),r=t(189),s=t(190),l=t(191);function c(e){var n=this.__data__=new a(e);this.size=n.size}c.prototype.clear=o,c.prototype.delete=i,c.prototype.get=r,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var a=t(23),o=t(57);e.exports=function(e){if(!o(e))return!1;var n=a(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var a=t(208),o=t(19);e.exports=function e(n,t,i,r,s){return n===t||(null==n||null==t||!o(n)&&!o(t)?n!=n&&t!=t:a(n,t,i,r,e,s))}},function(e,n,t){var a=t(104),o=t(211),i=t(105);e.exports=function(e,n,t,r,s,l){var c=1&t,d=e.length,p=n.length;if(d!=p&&!(c&&p>d))return!1;var u=l.get(e),h=l.get(n);if(u&&h)return u==n&&h==e;var m=-1,f=!0,g=2&t?new a:void 0;for(l.set(e,n),l.set(n,e);++m<d;){var v=e[m],b=n[m];if(r)var y=c?r(b,v,m,n,e,l):r(v,b,m,e,n,l);if(void 0!==y){if(y)continue;f=!1;break}if(g){if(!o(n,(function(e,n){if(!i(g,n)&&(v===e||s(v,e,t,r,l)))return g.push(n)}))){f=!1;break}}else if(v!==b&&!s(v,b,t,r,l)){f=!1;break}}return l.delete(e),l.delete(n),f}},function(e,n,t){var a=t(58),o=t(209),i=t(210);function r(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new a;++n<t;)this.add(e[n])}r.prototype.add=r.prototype.push=o,r.prototype.has=i,e.exports=r},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var a=t(221),o=t(227),i=t(110);e.exports=function(e){return i(e)?a(e):o(e)}},function(e,n,t){(function(e){var a=t(13),o=t(223),i=n&&!n.nodeType&&n,r=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=r&&r.exports===i?a.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;e.exports=l}).call(this,t(68)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var a=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==a||"symbol"!=a&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var a=t(224),o=t(225),i=t(226),r=i&&i.isTypedArray,s=r?o(r):a;e.exports=s},function(e,n,t){var a=t(100),o=t(60);e.exports=function(e){return null!=e&&o(e.length)&&!a(e)}},function(e,n,t){var a=t(17)(t(13),"Set");e.exports=a},function(e,n,t){var a=t(57);e.exports=function(e){return e==e&&!a(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var a=t(115),o=t(40);e.exports=function(e,n){for(var t=0,i=(n=a(n,e)).length;null!=e&&t<i;)e=e[o(n[t++])];return t&&t==i?e:void 0}},function(e,n,t){var a=t(11),o=t(61),i=t(238),r=t(241);e.exports=function(e,n){return a(e)?e:o(e,n)?[e]:i(r(e))}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){var a=t(174),o=t(179),i=t(250),r=t(258),s=t(267),l=t(122),c=i((function(e){var n=l(e);return s(n)&&(n=void 0),r(a(e,1,s,!0),o(n,2))}));e.exports=c},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var a=/["'&<>]/;e.exports=function(e){var n,t=""+e,o=a.exec(t);if(!o)return t;var i="",r=0,s=0;for(r=o.index;r<t.length;r++){switch(t.charCodeAt(r)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}s!==r&&(i+=t.substring(s,r)),s=r+1,i+=n}return s!==r?i+t.substring(s,r):i}},function(e,n,t){"use strict";var a=t(93),o=String;e.exports=function(e){if("Symbol"===a(e))throw new TypeError("Cannot convert a Symbol value to a string");return o(e)}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){"use strict";var a=t(81),o=t(16);e.exports=function(e,n,t){return t.get&&a(t.get,n,{getter:!0}),t.set&&a(t.set,n,{setter:!0}),o.f(e,n,t)}},function(e,n,t){"use strict";var a=t(154),o=t(7),i=t(30),r=a(a.bind);e.exports=function(e,n){return o(e),void 0===n?e:i?r(e,n):function(){return e.apply(n,arguments)}}},function(e,n,t){e.exports=t(274)},function(e,n,t){"use strict";var a={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!a.call({1:2},1);n.f=i?function(e){var n=o(this,e);return!!n&&n.enumerable}:a},function(e,n,t){"use strict";var a=t(6),o=t(8),i=t(71),r=t(35),s=t(128),l=t(15),c=TypeError,d=l("toPrimitive");e.exports=function(e,n){if(!o(e)||i(e))return e;var t,l=r(e,d);if(l){if(void 0===n&&(n="default"),t=a(l,e,n),!o(t)||i(t))return t;throw new c("Can't convert object to primitive value")}return void 0===n&&(n="number"),s(e,n)}},function(e,n,t){"use strict";var a=t(6),o=t(2),i=t(8),r=TypeError;e.exports=function(e,n){var t,s;if("string"===n&&o(t=e.toString)&&!i(s=a(t,e)))return s;if(o(t=e.valueOf)&&!i(s=a(t,e)))return s;if("string"!==n&&o(t=e.toString)&&!i(s=a(t,e)))return s;throw new r("Can't convert object to primitive value")}},function(e,n,t){"use strict";var a=t(5),o=t(9),i=Function.prototype,r=a&&Object.getOwnPropertyDescriptor,s=o(i,"name"),l=s&&"something"===function(){}.name,c=s&&(!a||a&&r(i,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(e,n,t){"use strict";var a=t(4),o=t(2),i=t(50),r=a(Function.toString);o(i.inspectSource)||(i.inspectSource=function(e){return r(e)}),e.exports=i.inspectSource},function(e,n,t){"use strict";var a=t(0),o=t(2),i=a.WeakMap;e.exports=o(i)&&/native code/.test(String(i))},function(e,n,t){"use strict";var a=t(33),o=t(4),i=t(133),r=t(138),s=t(3),l=o([].concat);e.exports=a("Reflect","ownKeys")||function(e){var n=i.f(s(e)),t=r.f;return t?l(n,t(e)):n}},function(e,n,t){"use strict";var a=t(84),o=t(54).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return a(e,o)}},function(e,n,t){"use strict";var a=t(32),o=t(135),i=t(29),r=function(e){return function(n,t,r){var s=a(n),l=i(s);if(0===l)return!e&&-1;var c,d=o(r,l);if(e&&t!=t){for(;l>d;)if((c=s[d++])!=c)return!0}else for(;l>d;d++)if((e||d in s)&&s[d]===t)return e||d||0;return!e&&-1}};e.exports={includes:r(!0),indexOf:r(!1)}},function(e,n,t){"use strict";var a=t(85),o=Math.max,i=Math.min;e.exports=function(e,n){var t=a(e);return t<0?o(t+n,0):i(t,n)}},function(e,n,t){"use strict";var a=Math.ceil,o=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?o:a)(n)}},function(e,n,t){"use strict";var a=t(85),o=Math.min;e.exports=function(e){var n=a(e);return n>0?o(n,9007199254740991):0}},function(e,n,t){"use strict";n.f=Object.getOwnPropertySymbols},function(e,n,t){"use strict";var a=t(1),o=t(2),i=/#|\.prototype\./,r=function(e,n){var t=l[s(e)];return t===d||t!==c&&(o(n)?a(n):!!n)},s=r.normalize=function(e){return String(e).replace(i,".").toLowerCase()},l=r.data={},c=r.NATIVE="N",d=r.POLYFILL="P";e.exports=r},function(e,n,t){"use strict";var a=t(34),o=TypeError;e.exports=function(e,n){if(a(n,e))return e;throw new o("Incorrect invocation")}},function(e,n,t){"use strict";var a=t(1);e.exports=!a((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,n,t){"use strict";var a=t(5),o=t(16),i=t(31);e.exports=function(e,n,t){a?o.f(e,n,i(0,t)):e[n]=t}},function(e,n,t){"use strict";var a=t(5),o=t(80),i=t(16),r=t(3),s=t(32),l=t(144);n.f=a&&!o?Object.defineProperties:function(e,n){r(e);for(var t,a=s(n),o=l(n),c=o.length,d=0;c>d;)i.f(e,t=o[d++],a[t]);return e}},function(e,n,t){"use strict";var a=t(84),o=t(54);e.exports=Object.keys||function(e){return a(e,o)}},function(e,n,t){"use strict";var a=t(33);e.exports=a("document","documentElement")},function(e,n,t){"use strict";var a=t(45);e.exports=function(e,n,t){for(var o in n)a(e,o,n[o],t);return e}},function(e,n,t){"use strict";e.exports=function(e,n){return{value:e,done:n}}},function(e,n,t){"use strict";var a=t(12);e.exports=function(e,n,t){for(var o=e.length-1;o>=0;o--)if(void 0!==e[o])try{t=a(e[o].iterator,n,t)}catch(e){n="throw",t=e}if("throw"===n)throw t;return t}},function(e,n,t){"use strict";var a=t(10),o=t(150).left,i=t(151),r=t(74);a({target:"Array",proto:!0,forced:!t(152)&&r>79&&r<83||!i("reduce")},{reduce:function(e){var n=arguments.length;return o(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var a=t(7),o=t(28),i=t(66),r=t(29),s=TypeError,l="Reduce of empty array with no initial value",c=function(e){return function(n,t,c,d){var p=o(n),u=i(p),h=r(p);if(a(t),0===h&&c<2)throw new s(l);var m=e?h-1:0,f=e?-1:1;if(c<2)for(;;){if(m in u){d=u[m],m+=f;break}if(m+=f,e?m<0:h<=m)throw new s(l)}for(;e?m>=0:h>m;m+=f)m in u&&(d=t(d,u[m],m,p));return d}};e.exports={left:c(!1),right:c(!0)}},function(e,n,t){"use strict";var a=t(1);e.exports=function(e,n){var t=[][e];return!!t&&a((function(){t.call(null,n||function(){return 1},1)}))}},function(e,n,t){"use strict";var a=t(153);e.exports="NODE"===a},function(e,n,t){"use strict";var a=t(0),o=t(75),i=t(26),r=function(e){return o.slice(0,e.length)===e};e.exports=r("Bun/")?"BUN":r("Cloudflare-Workers")?"CLOUDFLARE":r("Deno/")?"DENO":r("Node.js/")?"NODE":a.Bun&&"string"==typeof Bun.version?"BUN":a.Deno&&"object"==typeof Deno.version?"DENO":"process"===i(a.process)?"NODE":a.window&&a.document?"BROWSER":"REST"},function(e,n,t){"use strict";var a=t(26),o=t(4);e.exports=function(e){if("Function"===a(e))return o(e)}},function(e,n,t){"use strict";var a=t(15),o=t(91),i=a("iterator"),r=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||r[i]===e)}},function(e,n,t){"use strict";var a=t(6),o=t(7),i=t(3),r=t(49),s=t(92),l=TypeError;e.exports=function(e,n){var t=arguments.length<2?s(e):n;if(o(t))return i(a(t,e));throw new l(r(e)+" is not iterable")}},function(e,n,t){"use strict";var a={};a[t(15)("toStringTag")]="z",e.exports="[object z]"===String(a)},function(e,n,t){"use strict";var a=t(10),o=t(46),i=t(7),r=t(3),s=t(24),l=t(12),c=t(25),d=t(94),p=t(1),u=TypeError,h=p((function(){[].keys().reduce((function(){}),void 0)})),m=!h&&c("reduce",u);a({target:"Iterator",proto:!0,real:!0,forced:h||m},{reduce:function(e){r(this);try{i(e)}catch(e){l(this,"throw",e)}var n=arguments.length<2,t=n?void 0:arguments[1];if(m)return d(m,this,n?[e]:[e,t]);var a=s(this),c=0;if(o(a,(function(a){n?(n=!1,t=a):t=e(t,a,c),c++}),{IS_RECORD:!0}),n)throw new u("Reduce of empty iterator with no initial value");return t}})},function(e,n,t){"use strict";var a=t(10),o=t(0),i=t(94),r=t(160),s=o.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(e,n){var t={};t[e]=r(e,n,l),a({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(e,n){if(s&&s[e]){var t={};t[e]=r("WebAssembly."+e,n,l),a({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(e){return function(n){return i(e,this,arguments)}})),c("EvalError",(function(e){return function(n){return i(e,this,arguments)}})),c("RangeError",(function(e){return function(n){return i(e,this,arguments)}})),c("ReferenceError",(function(e){return function(n){return i(e,this,arguments)}})),c("SyntaxError",(function(e){return function(n){return i(e,this,arguments)}})),c("TypeError",(function(e){return function(n){return i(e,this,arguments)}})),c("URIError",(function(e){return function(n){return i(e,this,arguments)}})),d("CompileError",(function(e){return function(n){return i(e,this,arguments)}})),d("LinkError",(function(e){return function(n){return i(e,this,arguments)}})),d("RuntimeError",(function(e){return function(n){return i(e,this,arguments)}}))},function(e,n,t){"use strict";var a=t(33),o=t(9),i=t(21),r=t(34),s=t(95),l=t(83),c=t(164),d=t(165),p=t(166),u=t(167),h=t(168),m=t(5),f=t(20);e.exports=function(e,n,t,g){var v=g?2:1,b=e.split("."),y=b[b.length-1],x=a.apply(null,b);if(x){var w=x.prototype;if(!f&&o(w,"cause")&&delete w.cause,!t)return x;var k=a("Error"),T=n((function(e,n){var t=p(g?n:e,void 0),a=g?new x(e):new x;return void 0!==t&&i(a,"message",t),h(a,T,a.stack,2),this&&r(w,this)&&d(a,this,T),arguments.length>v&&u(a,arguments[v]),a}));if(T.prototype=w,"Error"!==y?s?s(T,k):l(T,k,{name:!0}):m&&"stackTraceLimit"in x&&(c(T,x,"stackTraceLimit"),c(T,x,"prepareStackTrace")),l(T,x),!f)try{w.name!==y&&i(w,"name",y),w.constructor=T}catch(e){}return T}}},function(e,n,t){"use strict";var a=t(4),o=t(7);e.exports=function(e,n,t){try{return a(o(Object.getOwnPropertyDescriptor(e,n)[t]))}catch(e){}}},function(e,n,t){"use strict";var a=t(163),o=String,i=TypeError;e.exports=function(e){if(a(e))return e;throw new i("Can't set "+o(e)+" as a prototype")}},function(e,n,t){"use strict";var a=t(8);e.exports=function(e){return a(e)||null===e}},function(e,n,t){"use strict";var a=t(16).f;e.exports=function(e,n,t){t in e||a(e,t,{configurable:!0,get:function(){return n[t]},set:function(e){n[t]=e}})}},function(e,n,t){"use strict";var a=t(2),o=t(8),i=t(95);e.exports=function(e,n,t){var r,s;return i&&a(r=n.constructor)&&r!==t&&o(s=r.prototype)&&s!==t.prototype&&i(e,s),e}},function(e,n,t){"use strict";var a=t(121);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:a(e)}},function(e,n,t){"use strict";var a=t(8),o=t(21);e.exports=function(e,n){a(n)&&"cause"in n&&o(e,"cause",n.cause)}},function(e,n,t){"use strict";var a=t(21),o=t(169),i=t(170),r=Error.captureStackTrace;e.exports=function(e,n,t,s){i&&(r?r(e,n):a(e,"stack",o(t,s)))}},function(e,n,t){"use strict";var a=t(4),o=Error,i=a("".replace),r=String(new o("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(r);e.exports=function(e,n){if(l&&"string"==typeof e&&!o.prepareStackTrace)for(;n--;)e=i(e,s,"");return e}},function(e,n,t){"use strict";var a=t(1),o=t(31);e.exports=!a((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",o(1,7)),7!==e.stack)}))},function(e,n,t){"use strict";var a=t(5),o=t(172),i=TypeError,r=Object.getOwnPropertyDescriptor,s=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=s?function(e,n){if(o(e)&&!r(e,"length").writable)throw new i("Cannot set read only .length");return e.length=n}:function(e,n){return e.length=n}},function(e,n,t){"use strict";var a=t(26);e.exports=Array.isArray||function(e){return"Array"===a(e)}},function(e,n,t){"use strict";var a=TypeError;e.exports=function(e){if(e>9007199254740991)throw a("Maximum allowed index exceeded");return e}},function(e,n,t){var a=t(96),o=t(175);e.exports=function e(n,t,i,r,s){var l=-1,c=n.length;for(i||(i=o),s||(s=[]);++l<c;){var d=n[l];t>0&&i(d)?t>1?e(d,t-1,i,r,s):a(s,d):r||(s[s.length]=d)}return s}},function(e,n,t){var a=t(27),o=t(55),i=t(11),r=a?a.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||o(e)||!!(r&&e&&e[r])}},function(e,n,t){var a=t(23),o=t(19);e.exports=function(e){return o(e)&&"[object Arguments]"==a(e)}},function(e,n,t){var a=t(27),o=Object.prototype,i=o.hasOwnProperty,r=o.toString,s=a?a.toStringTag:void 0;e.exports=function(e){var n=i.call(e,s),t=e[s];try{e[s]=void 0;var a=!0}catch(e){}var o=r.call(e);return a&&(n?e[s]=t:delete e[s]),o}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var a=t(180),o=t(236),i=t(63),r=t(11),s=t(247);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?r(e)?o(e[0],e[1]):a(e):s(e)}},function(e,n,t){var a=t(181),o=t(235),i=t(113);e.exports=function(e){var n=o(e);return 1==n.length&&n[0][2]?i(n[0][0],n[0][1]):function(t){return t===e||a(t,e,n)}}},function(e,n,t){var a=t(98),o=t(102);e.exports=function(e,n,t,i){var r=t.length,s=r,l=!i;if(null==e)return!s;for(e=Object(e);r--;){var c=t[r];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++r<s;){var d=(c=t[r])[0],p=e[d],u=c[1];if(l&&c[2]){if(void 0===p&&!(d in e))return!1}else{var h=new a;if(i)var m=i(p,u,d,e,n,h);if(!(void 0===m?o(u,p,3,i,h):m))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var a=t(37),o=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=a(n,e);return!(t<0)&&(t==n.length-1?n.pop():o.call(n,t,1),--this.size,!0)}},function(e,n,t){var a=t(37);e.exports=function(e){var n=this.__data__,t=a(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var a=t(37);e.exports=function(e){return a(this.__data__,e)>-1}},function(e,n,t){var a=t(37);e.exports=function(e,n){var t=this.__data__,o=a(t,e);return o<0?(++this.size,t.push([e,n])):t[o][1]=n,this}},function(e,n,t){var a=t(36);e.exports=function(){this.__data__=new a,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var a=t(36),o=t(56),i=t(58);e.exports=function(e,n){var t=this.__data__;if(t instanceof a){var r=t.__data__;if(!o||r.length<199)return r.push([e,n]),this.size=++t.size,this;t=this.__data__=new i(r)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var a=t(100),o=t(193),i=t(57),r=t(101),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,p=c.hasOwnProperty,u=RegExp("^"+d.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||o(e))&&(a(e)?u:s).test(r(e))}},function(e,n,t){var a,o=t(194),i=(a=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";e.exports=function(e){return!!i&&i in e}},function(e,n,t){var a=t(13)["__core-js_shared__"];e.exports=a},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var a=t(197),o=t(36),i=t(56);e.exports=function(){this.size=0,this.__data__={hash:new a,map:new(i||o),string:new a}}},function(e,n,t){var a=t(198),o=t(199),i=t(200),r=t(201),s=t(202);function l(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var a=e[n];this.set(a[0],a[1])}}l.prototype.clear=a,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=r,l.prototype.set=s,e.exports=l},function(e,n,t){var a=t(38);e.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var a=t(38),o=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(a){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(n,e)?n[e]:void 0}},function(e,n,t){var a=t(38),o=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return a?void 0!==n[e]:o.call(n,e)}},function(e,n,t){var a=t(38);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=a&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var a=t(39);e.exports=function(e){var n=a(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var a=t(39);e.exports=function(e){return a(this,e).get(e)}},function(e,n,t){var a=t(39);e.exports=function(e){return a(this,e).has(e)}},function(e,n,t){var a=t(39);e.exports=function(e,n){var t=a(this,e),o=t.size;return t.set(e,n),this.size+=t.size==o?0:1,this}},function(e,n,t){var a=t(98),o=t(103),i=t(212),r=t(215),s=t(231),l=t(11),c=t(107),d=t(109),p="[object Object]",u=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,h,m,f){var g=l(e),v=l(n),b=g?"[object Array]":s(e),y=v?"[object Array]":s(n),x=(b="[object Arguments]"==b?p:b)==p,w=(y="[object Arguments]"==y?p:y)==p,k=b==y;if(k&&c(e)){if(!c(n))return!1;g=!0,x=!1}if(k&&!x)return f||(f=new a),g||d(e)?o(e,n,t,h,m,f):i(e,n,b,t,h,m,f);if(!(1&t)){var T=x&&u.call(e,"__wrapped__"),I=w&&u.call(n,"__wrapped__");if(T||I){var E=T?e.value():e,S=I?n.value():n;return f||(f=new a),m(E,S,t,h,f)}}return!!k&&(f||(f=new a),r(e,n,t,h,m,f))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,a=null==e?0:e.length;++t<a;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var a=t(27),o=t(213),i=t(99),r=t(103),s=t(214),l=t(59),c=a?a.prototype:void 0,d=c?c.valueOf:void 0;e.exports=function(e,n,t,a,c,p,u){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!p(new o(e),new o(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var h=s;case"[object Set]":var m=1&a;if(h||(h=l),e.size!=n.size&&!m)return!1;var f=u.get(e);if(f)return f==n;a|=2,u.set(e,n);var g=r(h(e),h(n),a,c,p,u);return u.delete(e),g;case"[object Symbol]":if(d)return d.call(e)==d.call(n)}return!1}},function(e,n,t){var a=t(13).Uint8Array;e.exports=a},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,a){t[++n]=[a,e]})),t}},function(e,n,t){var a=t(216),o=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,i,r,s){var l=1&t,c=a(e),d=c.length;if(d!=a(n).length&&!l)return!1;for(var p=d;p--;){var u=c[p];if(!(l?u in n:o.call(n,u)))return!1}var h=s.get(e),m=s.get(n);if(h&&m)return h==n&&m==e;var f=!0;s.set(e,n),s.set(n,e);for(var g=l;++p<d;){var v=e[u=c[p]],b=n[u];if(i)var y=l?i(b,v,u,n,e,s):i(v,b,u,e,n,s);if(!(void 0===y?v===b||r(v,b,t,i,s):y)){f=!1;break}g||(g="constructor"==u)}if(f&&!g){var x=e.constructor,w=n.constructor;x==w||!("constructor"in e)||!("constructor"in n)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(f=!1)}return s.delete(e),s.delete(n),f}},function(e,n,t){var a=t(217),o=t(218),i=t(106);e.exports=function(e){return a(e,i,o)}},function(e,n,t){var a=t(96),o=t(11);e.exports=function(e,n,t){var i=n(e);return o(e)?i:a(i,t(e))}},function(e,n,t){var a=t(219),o=t(220),i=Object.prototype.propertyIsEnumerable,r=Object.getOwnPropertySymbols,s=r?function(e){return null==e?[]:(e=Object(e),a(r(e),(function(n){return i.call(e,n)})))}:o;e.exports=s},function(e,n){e.exports=function(e,n){for(var t=-1,a=null==e?0:e.length,o=0,i=[];++t<a;){var r=e[t];n(r,t,e)&&(i[o++]=r)}return i}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var a=t(222),o=t(55),i=t(11),r=t(107),s=t(108),l=t(109),c=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=i(e),d=!t&&o(e),p=!t&&!d&&r(e),u=!t&&!d&&!p&&l(e),h=t||d||p||u,m=h?a(e.length,String):[],f=m.length;for(var g in e)!n&&!c.call(e,g)||h&&("length"==g||p&&("offset"==g||"parent"==g)||u&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,f))||m.push(g);return m}},function(e,n){e.exports=function(e,n){for(var t=-1,a=Array(e);++t<e;)a[t]=n(t);return a}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var a=t(23),o=t(60),i=t(19),r={};r["[object Float32Array]"]=r["[object Float64Array]"]=r["[object Int8Array]"]=r["[object Int16Array]"]=r["[object Int32Array]"]=r["[object Uint8Array]"]=r["[object Uint8ClampedArray]"]=r["[object Uint16Array]"]=r["[object Uint32Array]"]=!0,r["[object Arguments]"]=r["[object Array]"]=r["[object ArrayBuffer]"]=r["[object Boolean]"]=r["[object DataView]"]=r["[object Date]"]=r["[object Error]"]=r["[object Function]"]=r["[object Map]"]=r["[object Number]"]=r["[object Object]"]=r["[object RegExp]"]=r["[object Set]"]=r["[object String]"]=r["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&o(e.length)&&!!r[a(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var a=t(97),o=n&&!n.nodeType&&n,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,r=i&&i.exports===o&&a.process,s=function(){try{var e=i&&i.require&&i.require("util").types;return e||r&&r.binding&&r.binding("util")}catch(e){}}();e.exports=s}).call(this,t(68)(e))},function(e,n,t){var a=t(228),o=t(229),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!a(e))return o(e);var n=[];for(var t in Object(e))i.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var a=t(230)(Object.keys,Object);e.exports=a},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var a=t(232),o=t(56),i=t(233),r=t(111),s=t(234),l=t(23),c=t(101),d=c(a),p=c(o),u=c(i),h=c(r),m=c(s),f=l;(a&&"[object DataView]"!=f(new a(new ArrayBuffer(1)))||o&&"[object Map]"!=f(new o)||i&&"[object Promise]"!=f(i.resolve())||r&&"[object Set]"!=f(new r)||s&&"[object WeakMap]"!=f(new s))&&(f=function(e){var n=l(e),t="[object Object]"==n?e.constructor:void 0,a=t?c(t):"";if(a)switch(a){case d:return"[object DataView]";case p:return"[object Map]";case u:return"[object Promise]";case h:return"[object Set]";case m:return"[object WeakMap]"}return n}),e.exports=f},function(e,n,t){var a=t(17)(t(13),"DataView");e.exports=a},function(e,n,t){var a=t(17)(t(13),"Promise");e.exports=a},function(e,n,t){var a=t(17)(t(13),"WeakMap");e.exports=a},function(e,n,t){var a=t(112),o=t(106);e.exports=function(e){for(var n=o(e),t=n.length;t--;){var i=n[t],r=e[i];n[t]=[i,r,a(r)]}return n}},function(e,n,t){var a=t(102),o=t(237),i=t(244),r=t(61),s=t(112),l=t(113),c=t(40);e.exports=function(e,n){return r(e)&&s(n)?l(c(e),n):function(t){var r=o(t,e);return void 0===r&&r===n?i(t,e):a(n,r,3)}}},function(e,n,t){var a=t(114);e.exports=function(e,n,t){var o=null==e?void 0:a(e,n);return void 0===o?t:o}},function(e,n,t){var a=t(239),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,r=a((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(o,(function(e,t,a,o){n.push(a?o.replace(i,"$1"):t||e)})),n}));e.exports=r},function(e,n,t){var a=t(240);e.exports=function(e){var n=a(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var a=t(58);function o(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var a=arguments,o=n?n.apply(this,a):a[0],i=t.cache;if(i.has(o))return i.get(o);var r=e.apply(this,a);return t.cache=i.set(o,r)||i,r};return t.cache=new(o.Cache||a),t}o.Cache=a,e.exports=o},function(e,n,t){var a=t(242);e.exports=function(e){return null==e?"":a(e)}},function(e,n,t){var a=t(27),o=t(243),i=t(11),r=t(62),s=a?a.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(i(n))return o(n,e)+"";if(r(n))return l?l.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,a=null==e?0:e.length,o=Array(a);++t<a;)o[t]=n(e[t],t,e);return o}},function(e,n,t){var a=t(245),o=t(246);e.exports=function(e,n){return null!=e&&o(e,n,a)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var a=t(115),o=t(55),i=t(11),r=t(108),s=t(60),l=t(40);e.exports=function(e,n,t){for(var c=-1,d=(n=a(n,e)).length,p=!1;++c<d;){var u=l(n[c]);if(!(p=null!=e&&t(e,u)))break;e=e[u]}return p||++c!=d?p:!!(d=null==e?0:e.length)&&s(d)&&r(u,d)&&(i(e)||o(e))}},function(e,n,t){var a=t(248),o=t(249),i=t(61),r=t(40);e.exports=function(e){return i(e)?a(r(e)):o(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var a=t(114);e.exports=function(e){return function(n){return a(n,e)}}},function(e,n,t){var a=t(63),o=t(251),i=t(253);e.exports=function(e,n){return i(o(e,n,a),e+"")}},function(e,n,t){var a=t(252),o=Math.max;e.exports=function(e,n,t){return n=o(void 0===n?e.length-1:n,0),function(){for(var i=arguments,r=-1,s=o(i.length-n,0),l=Array(s);++r<s;)l[r]=i[n+r];r=-1;for(var c=Array(n+1);++r<n;)c[r]=i[r];return c[n]=t(l),a(e,this,c)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var a=t(254),o=t(257)(a);e.exports=o},function(e,n,t){var a=t(255),o=t(256),i=t(63),r=o?function(e,n){return o(e,"toString",{configurable:!0,enumerable:!1,value:a(n),writable:!0})}:i;e.exports=r},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var a=t(17),o=function(){try{var e=a(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},function(e,n){var t=Date.now;e.exports=function(e){var n=0,a=0;return function(){var o=t(),i=16-(o-a);if(a=o,i>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var a=t(104),o=t(259),i=t(264),r=t(105),s=t(265),l=t(59);e.exports=function(e,n,t){var c=-1,d=o,p=e.length,u=!0,h=[],m=h;if(t)u=!1,d=i;else if(p>=200){var f=n?null:s(e);if(f)return l(f);u=!1,d=r,m=new a}else m=n?[]:h;e:for(;++c<p;){var g=e[c],v=n?n(g):g;if(g=t||0!==g?g:0,u&&v==v){for(var b=m.length;b--;)if(m[b]===v)continue e;n&&m.push(v),h.push(g)}else d(m,v,t)||(m!==h&&m.push(v),h.push(g))}return h}},function(e,n,t){var a=t(260);e.exports=function(e,n){return!!(null==e?0:e.length)&&a(e,n,0)>-1}},function(e,n,t){var a=t(261),o=t(262),i=t(263);e.exports=function(e,n,t){return n==n?i(e,n,t):a(e,o,t)}},function(e,n){e.exports=function(e,n,t,a){for(var o=e.length,i=t+(a?1:-1);a?i--:++i<o;)if(n(e[i],i,e))return i;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var a=t-1,o=e.length;++a<o;)if(e[a]===n)return a;return-1}},function(e,n){e.exports=function(e,n,t){for(var a=-1,o=null==e?0:e.length;++a<o;)if(t(n,e[a]))return!0;return!1}},function(e,n,t){var a=t(111),o=t(266),i=t(59),r=a&&1/i(new a([,-0]))[1]==1/0?function(e){return new a(e)}:o;e.exports=r},function(e,n){e.exports=function(){}},function(e,n,t){var a=t(110),o=t(19);e.exports=function(e){return o(e)&&a(e)}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(116)},function(e,n,t){"use strict";t(117)},function(e,n,t){"use strict";t(118)},function(e,n,t){"use strict";t.r(n);t(14),t(22),t(43);var a=Object.freeze({}),o=Array.isArray;function i(e){return null==e}function r(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return"function"==typeof e}function d(e){return null!==e&&"object"==typeof e}var p=Object.prototype.toString;function u(e){return"[object Object]"===p.call(e)}function h(e){return"[object RegExp]"===p.call(e)}function m(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function f(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===p?JSON.stringify(e,v,2):String(e)}function v(e,n){return n&&n.__v_isRef?n.value:n}function b(e){var n=parseFloat(e);return isNaN(n)?e:n}function y(e,n){for(var t=Object.create(null),a=e.split(","),o=0;o<a.length;o++)t[a[o]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}y("slot,component",!0);var x=y("key,ref,slot,slot-scope,is");function w(e,n){var t=e.length;if(t){if(n===e[t-1])return void(e.length=t-1);var a=e.indexOf(n);if(a>-1)return e.splice(a,1)}}var k=Object.prototype.hasOwnProperty;function T(e,n){return k.call(e,n)}function I(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var E=/-(\w)/g,S=I((function(e){return e.replace(E,(function(e,n){return n?n.toUpperCase():""}))})),z=I((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),P=/\B([A-Z])/g,C=I((function(e){return e.replace(P,"-$1").toLowerCase()}));var j=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var a=arguments.length;return a?a>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function A(e,n){n=n||0;for(var t=e.length-n,a=new Array(t);t--;)a[t]=e[t+n];return a}function D(e,n){for(var t in n)e[t]=n[t];return e}function R(e){for(var n={},t=0;t<e.length;t++)e[t]&&D(n,e[t]);return n}function O(e,n,t){}var N=function(e,n,t){return!1},$=function(e){return e};function q(e,n){if(e===n)return!0;var t=d(e),a=d(n);if(!t||!a)return!t&&!a&&String(e)===String(n);try{var o=Array.isArray(e),i=Array.isArray(n);if(o&&i)return e.length===n.length&&e.every((function(e,t){return q(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(o||i)return!1;var r=Object.keys(e),s=Object.keys(n);return r.length===s.length&&r.every((function(t){return q(e[t],n[t])}))}catch(e){return!1}}function M(e,n){for(var t=0;t<e.length;t++)if(q(e[t],n))return t;return-1}function L(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function _(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var F=["component","directive","filter"],B=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],U={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:N,isReservedAttr:N,isUnknownElement:N,getTagNamespace:O,parsePlatformTagName:$,mustUseProp:N,async:!0,_lifecycleHooks:B},V=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function J(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function W(e,n,t,a){Object.defineProperty(e,n,{value:t,enumerable:!!a,writable:!0,configurable:!0})}var Y=new RegExp("[^".concat(V.source,".$_\\d]"));var H="__proto__"in{},X="undefined"!=typeof window,G=X&&window.navigator.userAgent.toLowerCase(),Q=G&&/msie|trident/.test(G),K=G&&G.indexOf("msie 9.0")>0,Z=G&&G.indexOf("edge/")>0;G&&G.indexOf("android");var ee=G&&/iphone|ipad|ipod|ios/.test(G);G&&/chrome\/\d+/.test(G),G&&/phantomjs/.test(G);var ne,te=G&&G.match(/firefox\/(\d+)/),ae={}.watch,oe=!1;if(X)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){oe=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var re=function(){return void 0===ne&&(ne=!X&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ne},se=X&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function le(e){return"function"==typeof e&&/native code/.test(e.toString())}var ce,de="undefined"!=typeof Symbol&&le(Symbol)&&"undefined"!=typeof Reflect&&le(Reflect.ownKeys);ce="undefined"!=typeof Set&&le(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var pe=null;function ue(e){void 0===e&&(e=null),e||pe&&pe._scope.off(),pe=e,e&&e._scope.on()}var he=function(){function e(e,n,t,a,o,i,r,s){this.tag=e,this.data=n,this.children=t,this.text=a,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),me=function(e){void 0===e&&(e="");var n=new he;return n.text=e,n.isComment=!0,n};function fe(e){return new he(void 0,void 0,void 0,String(e))}function ge(e){var n=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}"function"==typeof SuppressedError&&SuppressedError;var ve=0,be=[],ye=function(){function e(){this._pending=!1,this.id=ve++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,be.push(this))},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.filter((function(e){return e}));for(var t=0,a=n.length;t<a;t++){0,n[t].update()}},e}();ye.target=null;var xe=[];function we(e){xe.push(e),ye.target=e}function ke(){xe.pop(),ye.target=xe[xe.length-1]}var Te=Array.prototype,Ie=Object.create(Te);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=Te[e];W(Ie,e,(function(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];var o,i=n.apply(this,t),r=this.__ob__;switch(e){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&r.observeArray(o),r.dep.notify(),i}))}));var Ee=Object.getOwnPropertyNames(Ie),Se={},ze=!0;function Pe(e){ze=e}var Ce={notify:O,depend:O,addSub:O,removeSub:O},je=function(){function e(e,n,t){if(void 0===n&&(n=!1),void 0===t&&(t=!1),this.value=e,this.shallow=n,this.mock=t,this.dep=t?Ce:new ye,this.vmCount=0,W(e,"__ob__",this),o(e)){if(!t)if(H)e.__proto__=Ie;else for(var a=0,i=Ee.length;a<i;a++){W(e,s=Ee[a],Ie[s])}n||this.observeArray(e)}else{var r=Object.keys(e);for(a=0;a<r.length;a++){var s;De(e,s=r[a],Se,void 0,n,t)}}}return e.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Ae(e[n],!1,this.mock)},e}();function Ae(e,n,t){return e&&T(e,"__ob__")&&e.__ob__ instanceof je?e.__ob__:!ze||!t&&re()||!o(e)&&!u(e)||!Object.isExtensible(e)||e.__v_skip||Le(e)||e instanceof he?void 0:new je(e,n,t)}function De(e,n,t,a,i,r,s){void 0===s&&(s=!1);var l=new ye,c=Object.getOwnPropertyDescriptor(e,n);if(!c||!1!==c.configurable){var d=c&&c.get,p=c&&c.set;d&&!p||t!==Se&&2!==arguments.length||(t=e[n]);var u=i?t&&t.__ob__:Ae(t,!1,r);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=d?d.call(e):t;return ye.target&&(l.depend(),u&&(u.dep.depend(),o(n)&&Ne(n))),Le(n)&&!i?n.value:n},set:function(n){var a=d?d.call(e):t;if(_(a,n)){if(p)p.call(e,n);else{if(d)return;if(!i&&Le(a)&&!Le(n))return void(a.value=n);t=n}u=i?n&&n.__ob__:Ae(n,!1,r),l.notify()}}}),l}}function Re(e,n,t){if(!Me(e)){var a=e.__ob__;return o(e)&&m(n)?(e.length=Math.max(e.length,n),e.splice(n,1,t),a&&!a.shallow&&a.mock&&Ae(t,!1,!0),t):n in e&&!(n in Object.prototype)?(e[n]=t,t):e._isVue||a&&a.vmCount?t:a?(De(a.value,n,t,void 0,a.shallow,a.mock),a.dep.notify(),t):(e[n]=t,t)}}function Oe(e,n){if(o(e)&&m(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Me(e)||T(e,n)&&(delete e[n],t&&t.dep.notify())}}function Ne(e){for(var n=void 0,t=0,a=e.length;t<a;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),o(n)&&Ne(n)}function $e(e){return qe(e,!0),W(e,"__v_isShallow",!0),e}function qe(e,n){if(!Me(e)){Ae(e,n,re());0}}function Me(e){return!(!e||!e.__v_isReadonly)}function Le(e){return!(!e||!0!==e.__v_isRef)}function _e(e,n,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=n[t];if(Le(e))return e.value;var a=e&&e.__ob__;return a&&a.dep.depend(),e},set:function(e){var a=n[t];Le(a)&&!Le(e)?a.value=e:n[t]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Fe;var Be=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Fe,!e&&Fe&&(this.index=(Fe.scopes||(Fe.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=Fe;try{return Fe=this,e()}finally{Fe=n}}else 0},e.prototype.on=function(){Fe=this},e.prototype.off=function(){Fe=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,t=void 0;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].teardown();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Ue(e){var n=e._provided,t=e.$parent&&e.$parent._provided;return t===n?e._provided=Object.create(t):n}var Ve=I((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),a="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:t,capture:a,passive:n}}));function Je(e,n){function t(){var e=t.fns;if(!o(e))return Pn(e,null,arguments,n,"v-on handler");for(var a=e.slice(),i=0;i<a.length;i++)Pn(a[i],null,arguments,n,"v-on handler")}return t.fns=e,t}function We(e,n,t,a,o,r){var l,c,d,p;for(l in e)c=e[l],d=n[l],p=Ve(l),i(c)||(i(d)?(i(c.fns)&&(c=e[l]=Je(c,r)),s(p.once)&&(c=e[l]=o(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==d&&(d.fns=c,e[l]=d));for(l in n)i(e[l])&&a((p=Ve(l)).name,n[l],p.capture)}function Ye(e,n,t){var a;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var o=e[n];function l(){t.apply(this,arguments),w(a.fns,l)}i(o)?a=Je([l]):r(o.fns)&&s(o.merged)?(a=o).fns.push(l):a=Je([o,l]),a.merged=!0,e[n]=a}function He(e,n,t,a,o){if(r(n)){if(T(n,t))return e[t]=n[t],o||delete n[t],!0;if(T(n,a))return e[t]=n[a],o||delete n[a],!0}return!1}function Xe(e){return l(e)?[fe(e)]:o(e)?function e(n,t){var a,c,d,p,u=[];for(a=0;a<n.length;a++)i(c=n[a])||"boolean"==typeof c||(d=u.length-1,p=u[d],o(c)?c.length>0&&(Ge((c=e(c,"".concat(t||"","_").concat(a)))[0])&&Ge(p)&&(u[d]=fe(p.text+c[0].text),c.shift()),u.push.apply(u,c)):l(c)?Ge(p)?u[d]=fe(p.text+c):""!==c&&u.push(fe(c)):Ge(c)&&Ge(p)?u[d]=fe(p.text+c.text):(s(n._isVList)&&r(c.tag)&&i(c.key)&&r(t)&&(c.key="__vlist".concat(t,"_").concat(a,"__")),u.push(c)));return u}(e):void 0}function Ge(e){return r(e)&&r(e.text)&&!1===e.isComment}function Qe(e,n){var t,a,i,s,l=null;if(o(e)||"string"==typeof e)for(l=new Array(e.length),t=0,a=e.length;t<a;t++)l[t]=n(e[t],t);else if("number"==typeof e)for(l=new Array(e),t=0;t<e;t++)l[t]=n(t+1,t);else if(d(e))if(de&&e[Symbol.iterator]){l=[];for(var c=e[Symbol.iterator](),p=c.next();!p.done;)l.push(n(p.value,l.length)),p=c.next()}else for(i=Object.keys(e),l=new Array(i.length),t=0,a=i.length;t<a;t++)s=i[t],l[t]=n(e[s],s,t);return r(l)||(l=[]),l._isVList=!0,l}function Ke(e,n,t,a){var o,i=this.$scopedSlots[e];i?(t=t||{},a&&(t=D(D({},a),t)),o=i(t)||(c(n)?n():n)):o=this.$slots[e]||(c(n)?n():n);var r=t&&t.slot;return r?this.$createElement("template",{slot:r},o):o}function Ze(e){return At(this.$options,"filters",e,!0)||$}function en(e,n){return o(e)?-1===e.indexOf(n):e!==n}function nn(e,n,t,a,o){var i=U.keyCodes[n]||t;return o&&a&&!U.keyCodes[n]?en(o,a):i?en(i,e):a?C(a)!==n:void 0===e}function tn(e,n,t,a,i){if(t)if(d(t)){o(t)&&(t=R(t));var r=void 0,s=function(o){if("class"===o||"style"===o||x(o))r=e;else{var s=e.attrs&&e.attrs.type;r=a||U.mustUseProp(n,s,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=S(o),c=C(o);l in r||c in r||(r[o]=t[o],i&&((e.on||(e.on={}))["update:".concat(o)]=function(e){t[o]=e}))};for(var l in t)s(l)}else;return e}function an(e,n){var t=this._staticTrees||(this._staticTrees=[]),a=t[e];return a&&!n||rn(a=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),a}function on(e,n,t){return rn(e,"__once__".concat(n).concat(t?"_".concat(t):""),!0),e}function rn(e,n,t){if(o(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&sn(e[a],"".concat(n,"_").concat(a),t);else sn(e,n,t)}function sn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function ln(e,n){if(n)if(u(n)){var t=e.on=e.on?D({},e.on):{};for(var a in n){var o=t[a],i=n[a];t[a]=o?[].concat(o,i):i}}else;return e}function cn(e,n,t,a){n=n||{$stable:!t};for(var i=0;i<e.length;i++){var r=e[i];o(r)?cn(r,n,t):r&&(r.proxy&&(r.fn.proxy=!0),n[r.key]=r.fn)}return a&&(n.$key=a),n}function dn(e,n){for(var t=0;t<n.length;t+=2){var a=n[t];"string"==typeof a&&a&&(e[n[t]]=n[t+1])}return e}function pn(e,n){return"string"==typeof e?n+e:e}function un(e){e._o=on,e._n=b,e._s=g,e._l=Qe,e._t=Ke,e._q=q,e._i=M,e._m=an,e._f=Ze,e._k=nn,e._b=tn,e._v=fe,e._e=me,e._u=cn,e._g=ln,e._d=dn,e._p=pn}function hn(e,n){if(!e||!e.length)return{};for(var t={},a=0,o=e.length;a<o;a++){var i=e[a],r=i.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,i.context!==n&&i.fnContext!==n||!r||null==r.slot)(t.default||(t.default=[])).push(i);else{var s=r.slot,l=t[s]||(t[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(mn)&&delete t[c];return t}function mn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function fn(e){return e.isComment&&e.asyncFactory}function gn(e,n,t,o){var i,r=Object.keys(t).length>0,s=n?!!n.$stable:!r,l=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(s&&o&&o!==a&&l===o.$key&&!r&&!o.$hasNormal)return o;for(var c in i={},n)n[c]&&"$"!==c[0]&&(i[c]=vn(e,t,c,n[c]))}else i={};for(var d in t)d in i||(i[d]=bn(t,d));return n&&Object.isExtensible(n)&&(n._normalized=i),W(i,"$stable",s),W(i,"$key",l),W(i,"$hasNormal",r),i}function vn(e,n,t,a){var i=function(){var n=pe;ue(e);var t=arguments.length?a.apply(null,arguments):a({}),i=(t=t&&"object"==typeof t&&!o(t)?[t]:Xe(t))&&t[0];return ue(n),t&&(!i||1===t.length&&i.isComment&&!fn(i))?void 0:t};return a.proxy&&Object.defineProperty(n,t,{get:i,enumerable:!0,configurable:!0}),i}function bn(e,n){return function(){return e[n]}}function yn(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};W(n,"_v_attr_proxy",!0),xn(n,e.$attrs,a,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||xn(e._listenersProxy={},e.$listeners,a,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||kn(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:j(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(t){return _e(e,n,t)}))}}}function xn(e,n,t,a,o){var i=!1;for(var r in n)r in e?n[r]!==t[r]&&(i=!0):(i=!0,wn(e,r,a,o));for(var r in e)r in n||(i=!0,delete e[r]);return i}function wn(e,n,t,a){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t[a][n]}})}function kn(e,n){for(var t in n)e[t]=n[t];for(var t in e)t in n||delete e[t]}var Tn=null;function In(e,n){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),d(e)?n.extend(e):e}function En(e){if(o(e))for(var n=0;n<e.length;n++){var t=e[n];if(r(t)&&(r(t.componentOptions)||fn(t)))return t}}function Sn(e,n,t,a,p,u){return(o(t)||l(t))&&(p=a,a=t,t=void 0),s(u)&&(p=2),function(e,n,t,a,l){if(r(t)&&r(t.__ob__))return me();r(t)&&r(t.is)&&(n=t.is);if(!n)return me();0;o(a)&&c(a[0])&&((t=t||{}).scopedSlots={default:a[0]},a.length=0);2===l?a=Xe(a):1===l&&(a=function(e){for(var n=0;n<e.length;n++)if(o(e[n]))return Array.prototype.concat.apply([],e);return e}(a));var p,u;if("string"==typeof n){var h=void 0;u=e.$vnode&&e.$vnode.ns||U.getTagNamespace(n),p=U.isReservedTag(n)?new he(U.parsePlatformTagName(n),t,a,void 0,void 0,e):t&&t.pre||!r(h=At(e.$options,"components",n))?new he(n,t,a,void 0,void 0,e):wt(h,t,e,a,n)}else p=wt(n,t,e,a);return o(p)?p:r(p)?(r(u)&&function e(n,t,a){n.ns=t,"foreignObject"===n.tag&&(t=void 0,a=!0);if(r(n.children))for(var o=0,l=n.children.length;o<l;o++){var c=n.children[o];r(c.tag)&&(i(c.ns)||s(a)&&"svg"!==c.tag)&&e(c,t,a)}}(p,u),r(t)&&function(e){d(e.style)&&Un(e.style);d(e.class)&&Un(e.class)}(t),p):me()}(e,n,t,a,p)}function zn(e,n,t){we();try{if(n)for(var a=n;a=a.$parent;){var o=a.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(a,e,n,t))return}catch(e){Cn(e,a,"errorCaptured hook")}}Cn(e,n,t)}finally{ke()}}function Pn(e,n,t,a,o){var i;try{(i=t?e.apply(n,t):e.call(n))&&!i._isVue&&f(i)&&!i._handled&&(i.catch((function(e){return zn(e,a,o+" (Promise/async)")})),i._handled=!0)}catch(e){zn(e,a,o)}return i}function Cn(e,n,t){if(U.errorHandler)try{return U.errorHandler.call(null,e,n,t)}catch(n){n!==e&&jn(n,null,"config.errorHandler")}jn(e,n,t)}function jn(e,n,t){if(!X||"undefined"==typeof console)throw e;console.error(e)}var An,Dn=!1,Rn=[],On=!1;function Nn(){On=!1;var e=Rn.slice(0);Rn.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&le(Promise)){var $n=Promise.resolve();An=function(){$n.then(Nn),ee&&setTimeout(O)},Dn=!0}else if(Q||"undefined"==typeof MutationObserver||!le(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())An="undefined"!=typeof setImmediate&&le(setImmediate)?function(){setImmediate(Nn)}:function(){setTimeout(Nn,0)};else{var qn=1,Mn=new MutationObserver(Nn),Ln=document.createTextNode(String(qn));Mn.observe(Ln,{characterData:!0}),An=function(){qn=(qn+1)%2,Ln.data=String(qn)},Dn=!0}function _n(e,n){var t;if(Rn.push((function(){if(e)try{e.call(n)}catch(e){zn(e,n,"nextTick")}else t&&t(n)})),On||(On=!0,An()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function Fn(e){return function(n,t){if(void 0===t&&(t=pe),t)return function(e,n,t){var a=e.$options;a[n]=zt(a[n],t)}(t,e,n)}}Fn("beforeMount"),Fn("mounted"),Fn("beforeUpdate"),Fn("updated"),Fn("beforeDestroy"),Fn("destroyed"),Fn("activated"),Fn("deactivated"),Fn("serverPrefetch"),Fn("renderTracked"),Fn("renderTriggered"),Fn("errorCaptured");var Bn=new ce;function Un(e){return function e(n,t){var a,i,r=o(n);if(!r&&!d(n)||n.__v_skip||Object.isFrozen(n)||n instanceof he)return;if(n.__ob__){var s=n.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(r)for(a=n.length;a--;)e(n[a],t);else if(Le(n))e(n.value,t);else for(i=Object.keys(n),a=i.length;a--;)e(n[i[a]],t)}(e,Bn),Bn.clear(),e}var Vn,Jn=0,Wn=function(){function e(e,n,t,a,o){var i,r;i=this,void 0===(r=Fe&&!Fe._vm?Fe:e?e._scope:void 0)&&(r=Fe),r&&r.active&&r.effects.push(i),(this.vm=e)&&o&&(e._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Jn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ce,this.newDepIds=new ce,this.expression="",c(n)?this.getter=n:(this.getter=function(e){if(!Y.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;we(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;zn(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Un(e),ke(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ht(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||d(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');Pn(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&w(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Yn(e,n){Vn.$on(e,n)}function Hn(e,n){Vn.$off(e,n)}function Xn(e,n){var t=Vn;return function a(){var o=n.apply(null,arguments);null!==o&&t.$off(e,a)}}function Gn(e,n,t){Vn=e,We(n,t||{},Yn,Hn,Xn,e),Vn=void 0}var Qn=null;function Kn(e){var n=Qn;return Qn=e,function(){Qn=n}}function Zn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function et(e,n){if(n){if(e._directInactive=!1,Zn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)et(e.$children[t]);nt(e,"activated")}}function nt(e,n,t,a){void 0===a&&(a=!0),we();var o=pe,i=Fe;a&&ue(e);var r=e.$options[n],s="".concat(n," hook");if(r)for(var l=0,c=r.length;l<c;l++)Pn(r[l],e,t||null,e,s);e._hasHookEvent&&e.$emit("hook:"+n),a&&(ue(o),i&&i.on()),ke()}var tt=[],at=[],ot={},it=!1,rt=!1,st=0;var lt=0,ct=Date.now;if(X&&!Q){var dt=window.performance;dt&&"function"==typeof dt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return dt.now()})}var pt=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function ut(){var e,n;for(lt=ct(),rt=!0,tt.sort(pt),st=0;st<tt.length;st++)(e=tt[st]).before&&e.before(),n=e.id,ot[n]=null,e.run();var t=at.slice(),a=tt.slice();st=tt.length=at.length=0,ot={},it=rt=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,et(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],a=t.vm;a&&a._watcher===t&&a._isMounted&&!a._isDestroyed&&nt(a,"updated")}}(a),function(){for(var e=0;e<be.length;e++){var n=be[e];n.subs=n.subs.filter((function(e){return e})),n._pending=!1}be.length=0}(),se&&U.devtools&&se.emit("flush")}function ht(e){var n=e.id;if(null==ot[n]&&(e!==ye.target||!e.noRecurse)){if(ot[n]=!0,rt){for(var t=tt.length-1;t>st&&tt[t].id>e.id;)t--;tt.splice(t+1,0,e)}else tt.push(e);it||(it=!0,_n(ut))}}function mt(e,n){if(e){for(var t=Object.create(null),a=de?Reflect.ownKeys(e):Object.keys(e),o=0;o<a.length;o++){var i=a[o];if("__ob__"!==i){var r=e[i].from;if(r in n._provided)t[i]=n._provided[r];else if("default"in e[i]){var s=e[i].default;t[i]=c(s)?s.call(n):s}else 0}}return t}}function ft(e,n,t,i,r){var l,c=this,d=r.options;T(i,"_uid")?(l=Object.create(i))._original=i:(l=i,i=i._original);var p=s(d._compiled),u=!p;this.data=e,this.props=n,this.children=t,this.parent=i,this.listeners=e.on||a,this.injections=mt(d.inject,i),this.slots=function(){return c.$slots||gn(i,e.scopedSlots,c.$slots=hn(t,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return gn(i,e.scopedSlots,this.slots())}}),p&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=gn(i,e.scopedSlots,this.$slots)),d._scopeId?this._c=function(e,n,t,a){var r=Sn(l,e,n,t,a,u);return r&&!o(r)&&(r.fnScopeId=d._scopeId,r.fnContext=i),r}:this._c=function(e,n,t,a){return Sn(l,e,n,t,a,u)}}function gt(e,n,t,a,o){var i=ge(e);return i.fnContext=t,i.fnOptions=a,n.slot&&((i.data||(i.data={})).slot=n.slot),i}function vt(e,n){for(var t in n)e[S(t)]=n[t]}function bt(e){return e.name||e.__name||e._componentTag}un(ft.prototype);var yt={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;yt.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},a=e.data.inlineTemplate;r(a)&&(t.render=a.render,t.staticRenderFns=a.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,Qn)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,o,i){var r=o.data.scopedSlots,s=e.$scopedSlots,l=!!(r&&!r.$stable||s!==a&&!s.$stable||r&&e.$scopedSlots.$key!==r.$key||!r&&e.$scopedSlots.$key),c=!!(i||e.$options._renderChildren||l),d=e.$vnode;e.$options._parentVnode=o,e.$vnode=o,e._vnode&&(e._vnode.parent=o),e.$options._renderChildren=i;var p=o.data.attrs||a;e._attrsProxy&&xn(e._attrsProxy,p,d.data&&d.data.attrs||a,e,"$attrs")&&(c=!0),e.$attrs=p,t=t||a;var u=e.$options._parentListeners;if(e._listenersProxy&&xn(e._listenersProxy,t,u||a,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,Gn(e,t,u),n&&e.$options.props){Pe(!1);for(var h=e._props,m=e.$options._propKeys||[],f=0;f<m.length;f++){var g=m[f],v=e.$options.props;h[g]=Dt(g,v,n,e)}Pe(!0),e.$options.propsData=n}c&&(e.$slots=hn(i,o.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,nt(a,"mounted")),e.data.keepAlive&&(t._isMounted?((n=a)._inactive=!1,at.push(n)):et(a,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(!(t&&(n._directInactive=!0,Zn(n))||n._inactive)){n._inactive=!0;for(var a=0;a<n.$children.length;a++)e(n.$children[a]);nt(n,"deactivated")}}(n,!0):n.$destroy())}},xt=Object.keys(yt);function wt(e,n,t,l,c){if(!i(e)){var p=t.$options._base;if(d(e)&&(e=p.extend(e)),"function"==typeof e){var u;if(i(e.cid)&&void 0===(e=function(e,n){if(s(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var t=Tn;if(t&&r(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),s(e.loading)&&r(e.loadingComp))return e.loadingComp;if(t&&!r(e.owners)){var a=e.owners=[t],o=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return w(a,t)}));var p=function(e){for(var n=0,t=a.length;n<t;n++)a[n].$forceUpdate();e&&(a.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},u=L((function(t){e.resolved=In(t,n),o?a.length=0:p(!0)})),h=L((function(n){r(e.errorComp)&&(e.error=!0,p(!0))})),m=e(u,h);return d(m)&&(f(m)?i(e.resolved)&&m.then(u,h):f(m.component)&&(m.component.then(u,h),r(m.error)&&(e.errorComp=In(m.error,n)),r(m.loading)&&(e.loadingComp=In(m.loading,n),0===m.delay?e.loading=!0:l=setTimeout((function(){l=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,p(!1))}),m.delay||200)),r(m.timeout)&&(c=setTimeout((function(){c=null,i(e.resolved)&&h(null)}),m.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(u=e,p)))return function(e,n,t,a,o){var i=me();return i.asyncFactory=e,i.asyncMeta={data:n,context:t,children:a,tag:o},i}(u,n,t,l,c);n=n||{},Wt(e),r(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var i=n.on||(n.on={}),s=i[a],l=n.model.callback;r(s)?(o(s)?-1===s.indexOf(l):s!==l)&&(i[a]=[l].concat(s)):i[a]=l}(e.options,n);var h=function(e,n,t){var a=n.options.props;if(!i(a)){var o={},s=e.attrs,l=e.props;if(r(s)||r(l))for(var c in a){var d=C(c);He(o,l,c,d,!0)||He(o,s,c,d,!1)}return o}}(n,e);if(s(e.options.functional))return function(e,n,t,i,s){var l=e.options,c={},d=l.props;if(r(d))for(var p in d)c[p]=Dt(p,d,n||a);else r(t.attrs)&&vt(c,t.attrs),r(t.props)&&vt(c,t.props);var u=new ft(t,c,s,i,e),h=l.render.call(null,u._c,u);if(h instanceof he)return gt(h,t,u.parent,l,u);if(o(h)){for(var m=Xe(h)||[],f=new Array(m.length),g=0;g<m.length;g++)f[g]=gt(m[g],t,u.parent,l,u);return f}}(e,h,n,t,l);var m=n.on;if(n.on=n.nativeOn,s(e.options.abstract)){var g=n.slot;n={},g&&(n.slot=g)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<xt.length;t++){var a=xt[t],o=n[a],i=yt[a];o===i||o&&o._merged||(n[a]=o?kt(i,o):i)}}(n);var v=bt(e.options)||c;return new he("vue-component-".concat(e.cid).concat(v?"-".concat(v):""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:h,listeners:m,tag:c,children:l},u)}}}function kt(e,n){var t=function(t,a){e(t,a),n(t,a)};return t._merged=!0,t}var Tt=O,It=U.optionMergeStrategies;function Et(e,n,t){if(void 0===t&&(t=!0),!n)return e;for(var a,o,i,r=de?Reflect.ownKeys(n):Object.keys(n),s=0;s<r.length;s++)"__ob__"!==(a=r[s])&&(o=e[a],i=n[a],t&&T(e,a)?o!==i&&u(o)&&u(i)&&Et(o,i):Re(e,a,i));return e}function St(e,n,t){return t?function(){var a=c(n)?n.call(t,t):n,o=c(e)?e.call(t,t):e;return a?Et(a,o):o}:n?e?function(){return Et(c(n)?n.call(this,this):n,c(e)?e.call(this,this):e)}:n:e}function zt(e,n){var t=n?e?e.concat(n):o(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function Pt(e,n,t,a){var o=Object.create(e||null);return n?D(o,n):o}It.data=function(e,n,t){return t?St(e,n,t):n&&"function"!=typeof n?e:St(e,n)},B.forEach((function(e){It[e]=zt})),F.forEach((function(e){It[e+"s"]=Pt})),It.watch=function(e,n,t,a){if(e===ae&&(e=void 0),n===ae&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var i={};for(var r in D(i,e),n){var s=i[r],l=n[r];s&&!o(s)&&(s=[s]),i[r]=s?s.concat(l):o(l)?l:[l]}return i},It.props=It.methods=It.inject=It.computed=function(e,n,t,a){if(!e)return n;var o=Object.create(null);return D(o,e),n&&D(o,n),o},It.provide=function(e,n){return e?function(){var t=Object.create(null);return Et(t,c(e)?e.call(this):e),n&&Et(t,c(n)?n.call(this):n,!1),t}:n};var Ct=function(e,n){return void 0===n?e:n};function jt(e,n,t){if(c(n)&&(n=n.options),function(e,n){var t=e.props;if(t){var a,i,r={};if(o(t))for(a=t.length;a--;)"string"==typeof(i=t[a])&&(r[S(i)]={type:null});else if(u(t))for(var s in t)i=t[s],r[S(s)]=u(i)?i:{type:i};else 0;e.props=r}}(n),function(e,n){var t=e.inject;if(t){var a=e.inject={};if(o(t))for(var i=0;i<t.length;i++)a[t[i]]={from:t[i]};else if(u(t))for(var r in t){var s=t[r];a[r]=u(s)?D({from:r},s):{from:s}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var a=n[t];c(a)&&(n[t]={bind:a,update:a})}}(n),!n._base&&(n.extends&&(e=jt(e,n.extends,t)),n.mixins))for(var a=0,i=n.mixins.length;a<i;a++)e=jt(e,n.mixins[a],t);var r,s={};for(r in e)l(r);for(r in n)T(e,r)||l(r);function l(a){var o=It[a]||Ct;s[a]=o(e[a],n[a],t,a)}return s}function At(e,n,t,a){if("string"==typeof t){var o=e[n];if(T(o,t))return o[t];var i=S(t);if(T(o,i))return o[i];var r=z(i);return T(o,r)?o[r]:o[t]||o[i]||o[r]}}function Dt(e,n,t,a){var o=n[e],i=!T(t,e),r=t[e],s=$t(Boolean,o.type);if(s>-1)if(i&&!T(o,"default"))r=!1;else if(""===r||r===C(e)){var l=$t(String,o.type);(l<0||s<l)&&(r=!0)}if(void 0===r){r=function(e,n,t){if(!T(n,"default"))return;var a=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return c(a)&&"Function"!==Ot(n.type)?a.call(e):a}(a,o,e);var d=ze;Pe(!0),Ae(r),Pe(d)}return r}var Rt=/^\s*function (\w+)/;function Ot(e){var n=e&&e.toString().match(Rt);return n?n[1]:""}function Nt(e,n){return Ot(e)===Ot(n)}function $t(e,n){if(!o(n))return Nt(n,e)?0:-1;for(var t=0,a=n.length;t<a;t++)if(Nt(n[t],e))return t;return-1}var qt={enumerable:!0,configurable:!0,get:O,set:O};function Mt(e,n,t){qt.get=function(){return this[n][t]},qt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,qt)}function Lt(e){var n=e.$options;if(n.props&&function(e,n){var t=e.$options.propsData||{},a=e._props=$e({}),o=e.$options._propKeys=[];e.$parent&&Pe(!1);var i=function(i){o.push(i);var r=Dt(i,n,t,e);De(a,i,r,void 0,!0),i in e||Mt(e,"_props",i)};for(var r in n)i(r);Pe(!0)}(e,n.props),function(e){var n=e.$options,t=n.setup;if(t){var a=e._setupContext=yn(e);ue(e),we();var o=Pn(t,null,[e._props||$e({}),a],e,"setup");if(ke(),ue(),c(o))n.render=o;else if(d(o))if(e._setupState=o,o.__sfc){var i=e._setupProxy={};for(var r in o)"__sfc"!==r&&_e(i,o,r)}else for(var r in o)J(r)||_e(e,o,r);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?O:j(n[t],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;u(n=e._data=c(n)?function(e,n){we();try{return e.call(n,n)}catch(e){return zn(e,n,"data()"),{}}finally{ke()}}(n,e):n||{})||(n={});var t=Object.keys(n),a=e.$options.props,o=(e.$options.methods,t.length);for(;o--;){var i=t[o];0,a&&T(a,i)||J(i)||Mt(e,"_data",i)}var r=Ae(n);r&&r.vmCount++}(e);else{var t=Ae(e._data={});t&&t.vmCount++}n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),a=re();for(var o in n){var i=n[o],r=c(i)?i:i.get;0,a||(t[o]=new Wn(e,r||O,O,_t)),o in e||Ft(e,o,i)}}(e,n.computed),n.watch&&n.watch!==ae&&function(e,n){for(var t in n){var a=n[t];if(o(a))for(var i=0;i<a.length;i++)Vt(e,t,a[i]);else Vt(e,t,a)}}(e,n.watch)}var _t={lazy:!0};function Ft(e,n,t){var a=!re();c(t)?(qt.get=a?Bt(n):Ut(t),qt.set=O):(qt.get=t.get?a&&!1!==t.cache?Bt(n):Ut(t.get):O,qt.set=t.set||O),Object.defineProperty(e,n,qt)}function Bt(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),ye.target&&n.depend(),n.value}}function Ut(e){return function(){return e.call(this,this)}}function Vt(e,n,t,a){return u(t)&&(a=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,a)}var Jt=0;function Wt(e){var n=e.options;if(e.super){var t=Wt(e.super);if(t!==e.superOptions){e.superOptions=t;var a=function(e){var n,t=e.options,a=e.sealedOptions;for(var o in t)t[o]!==a[o]&&(n||(n={}),n[o]=t[o]);return n}(e);a&&D(e.extendOptions,a),(n=e.options=jt(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function Yt(e){this._init(e)}function Ht(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,a=t.cid,o=e._Ctor||(e._Ctor={});if(o[a])return o[a];var i=bt(e)||bt(t.options);var r=function(e){this._init(e)};return(r.prototype=Object.create(t.prototype)).constructor=r,r.cid=n++,r.options=jt(t.options,e),r.super=t,r.options.props&&function(e){var n=e.options.props;for(var t in n)Mt(e.prototype,"_props",t)}(r),r.options.computed&&function(e){var n=e.options.computed;for(var t in n)Ft(e.prototype,t,n[t])}(r),r.extend=t.extend,r.mixin=t.mixin,r.use=t.use,F.forEach((function(e){r[e]=t[e]})),i&&(r.options.components[i]=r),r.superOptions=t.options,r.extendOptions=e,r.sealedOptions=D({},r.options),o[a]=r,r}}function Xt(e){return e&&(bt(e.Ctor.options)||e.tag)}function Gt(e,n){return o(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!h(e)&&e.test(n)}function Qt(e,n){var t=e.cache,a=e.keys,o=e._vnode,i=e.$vnode;for(var r in t){var s=t[r];if(s){var l=s.name;l&&!n(l)&&Kt(t,r,a,o)}}i.componentOptions.children=void 0}function Kt(e,n,t,a){var o=e[n];!o||a&&o.tag===a.tag||o.componentInstance.$destroy(),e[n]=null,w(t,n)}Yt.prototype._init=function(e){var n=this;n._uid=Jt++,n._isVue=!0,n.__v_skip=!0,n._scope=new Be(!0),n._scope.parent=void 0,n._scope._vm=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),a=n._parentVnode;t.parent=n.parent,t._parentVnode=a;var o=a.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=jt(Wt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Gn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,o=t&&t.context;e.$slots=hn(n._renderChildren,o),e.$scopedSlots=t?gn(e.$parent,t.data.scopedSlots,e.$slots):a,e._c=function(n,t,a,o){return Sn(e,n,t,a,o,!1)},e.$createElement=function(n,t,a,o){return Sn(e,n,t,a,o,!0)};var i=t&&t.data;De(e,"$attrs",i&&i.attrs||a,null,!0),De(e,"$listeners",n._parentListeners||a,null,!0)}(n),nt(n,"beforeCreate",void 0,!1),function(e){var n=mt(e.$options.inject,e);n&&(Pe(!1),Object.keys(n).forEach((function(t){De(e,t,n[t])})),Pe(!0))}(n),Lt(n),function(e){var n=e.$options.provide;if(n){var t=c(n)?n.call(e):n;if(!d(t))return;for(var a=Ue(e),o=de?Reflect.ownKeys(t):Object.keys(t),i=0;i<o.length;i++){var r=o[i];Object.defineProperty(a,r,Object.getOwnPropertyDescriptor(t,r))}}}(n),nt(n,"created"),n.$options.el&&n.$mount(n.$options.el)},function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=Re,e.prototype.$delete=Oe,e.prototype.$watch=function(e,n,t){if(u(n))return Vt(this,e,n,t);(t=t||{}).user=!0;var a=new Wn(this,e,n,t);if(t.immediate){var o='callback for immediate watcher "'.concat(a.expression,'"');we(),Pn(n,this,[a.value],this,o),ke()}return function(){a.teardown()}}}(Yt),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var a=this;if(o(e))for(var i=0,r=e.length;i<r;i++)a.$on(e[i],t);else(a._events[e]||(a._events[e]=[])).push(t),n.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,n){var t=this;function a(){t.$off(e,a),n.apply(t,arguments)}return a.fn=n,t.$on(e,a),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(o(e)){for(var a=0,i=e.length;a<i;a++)t.$off(e[a],n);return t}var r,s=t._events[e];if(!s)return t;if(!n)return t._events[e]=null,t;for(var l=s.length;l--;)if((r=s[l])===n||r.fn===n){s.splice(l,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?A(t):t;for(var a=A(arguments,1),o='event handler for "'.concat(e,'"'),i=0,r=t.length;i<r;i++)Pn(t[i],n,a,n,o)}return n}}(Yt),function(e){e.prototype._update=function(e,n){var t=this,a=t.$el,o=t._vnode,i=Kn(t);t._vnode=e,t.$el=o?t.__patch__(o,e):t.__patch__(t.$el,e,n,!1),i(),a&&(a.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var r=t;r&&r.$vnode&&r.$parent&&r.$vnode===r.$parent._vnode;)r.$parent.$el=r.$el,r=r.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){nt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||w(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),nt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Yt),function(e){un(e.prototype),e.prototype.$nextTick=function(e){return _n(e,this)},e.prototype._render=function(){var e=this,n=e.$options,t=n.render,a=n._parentVnode;a&&e._isMounted&&(e.$scopedSlots=gn(e.$parent,a.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&kn(e._slotsProxy,e.$scopedSlots)),e.$vnode=a;var i,r=pe,s=Tn;try{ue(e),Tn=e,i=t.call(e._renderProxy,e.$createElement)}catch(n){zn(n,e,"render"),i=e._vnode}finally{Tn=s,ue(r)}return o(i)&&1===i.length&&(i=i[0]),i instanceof he||(i=me()),i.parent=a,i}}(Yt);var Zt=[String,RegExp,Array],ea={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Zt,exclude:Zt,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,a=this.keyToCache;if(t){var o=t.tag,i=t.componentInstance,r=t.componentOptions;e[a]={name:Xt(r),tag:o,componentInstance:i},n.push(a),this.max&&n.length>parseInt(this.max)&&Kt(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Kt(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){Qt(e,(function(e){return Gt(n,e)}))})),this.$watch("exclude",(function(n){Qt(e,(function(e){return!Gt(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=En(e),t=n&&n.componentOptions;if(t){var a=Xt(t),o=this.include,i=this.exclude;if(o&&(!a||!Gt(o,a))||i&&a&&Gt(i,a))return n;var r=this.cache,s=this.keys,l=null==n.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):n.key;r[l]?(n.componentInstance=r[l].componentInstance,w(s,l),s.push(l)):(this.vnodeToCache=n,this.keyToCache=l),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return U}};Object.defineProperty(e,"config",n),e.util={warn:Tt,extend:D,mergeOptions:jt,defineReactive:De},e.set=Re,e.delete=Oe,e.nextTick=_n,e.observable=function(e){return Ae(e),e},e.options=Object.create(null),F.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,D(e.options.components,ea),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=A(arguments,1);return t.unshift(this),c(e.install)?e.install.apply(e,t):c(e)&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=jt(this.options,e),this}}(e),Ht(e),function(e){F.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&u(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&c(t)&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(Yt),Object.defineProperty(Yt.prototype,"$isServer",{get:re}),Object.defineProperty(Yt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Yt,"FunctionalRenderContext",{value:ft}),Yt.version="2.7.16";var na=y("style,class"),ta=y("input,textarea,option,select,progress"),aa=y("contenteditable,draggable,spellcheck"),oa=y("events,caret,typing,plaintext-only"),ia=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ra="http://www.w3.org/1999/xlink",sa=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},la=function(e){return sa(e)?e.slice(6,e.length):""},ca=function(e){return null==e||!1===e};function da(e){for(var n=e.data,t=e,a=e;r(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(n=pa(a.data,n));for(;r(t=t.parent);)t&&t.data&&(n=pa(n,t.data));return function(e,n){if(r(e)||r(n))return ua(e,ha(n));return""}(n.staticClass,n.class)}function pa(e,n){return{staticClass:ua(e.staticClass,n.staticClass),class:r(e.class)?[e.class,n.class]:n.class}}function ua(e,n){return e?n?e+" "+n:e:n||""}function ha(e){return Array.isArray(e)?function(e){for(var n,t="",a=0,o=e.length;a<o;a++)r(n=ha(e[a]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):d(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var ma={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},fa=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),ga=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),va=function(e){return fa(e)||ga(e)};var ba=Object.create(null);var ya=y("text,number,password,search,email,tel,url");var xa=Object.freeze({__proto__:null,createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(ma[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),wa={create:function(e,n){ka(n)},update:function(e,n){e.data.ref!==n.data.ref&&(ka(e,!0),ka(n))},destroy:function(e){ka(e,!0)}};function ka(e,n){var t=e.data.ref;if(r(t)){var a=e.context,i=e.componentInstance||e.elm,s=n?null:i,l=n?void 0:i;if(c(t))Pn(t,a,[s],a,"template ref function");else{var d=e.data.refInFor,p="string"==typeof t||"number"==typeof t,u=Le(t),h=a.$refs;if(p||u)if(d){var m=p?h[t]:t.value;n?o(m)&&w(m,i):o(m)?m.includes(i)||m.push(i):p?(h[t]=[i],Ta(a,t,h[t])):t.value=[i]}else if(p){if(n&&h[t]!==i)return;h[t]=l,Ta(a,t,s)}else if(u){if(n&&t.value!==i)return;t.value=s}else 0}}}function Ta(e,n,t){var a=e._setupState;a&&T(a,n)&&(Le(a[n])?a[n].value=t:a[n]=t)}var Ia=new he("",{},[]),Ea=["create","activate","update","remove","destroy"];function Sa(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&r(e.data)===r(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,a=r(t=e.data)&&r(t=t.attrs)&&t.type,o=r(t=n.data)&&r(t=t.attrs)&&t.type;return a===o||ya(a)&&ya(o)}(e,n)||s(e.isAsyncPlaceholder)&&i(n.asyncFactory.error))}function za(e,n,t){var a,o,i={};for(a=n;a<=t;++a)r(o=e[a].key)&&(i[o]=a);return i}var Pa={create:Ca,update:Ca,destroy:function(e){Ca(e,Ia)}};function Ca(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,a,o,i=e===Ia,r=n===Ia,s=Aa(e.data.directives,e.context),l=Aa(n.data.directives,n.context),c=[],d=[];for(t in l)a=s[t],o=l[t],a?(o.oldValue=a.value,o.oldArg=a.arg,Ra(o,"update",n,e),o.def&&o.def.componentUpdated&&d.push(o)):(Ra(o,"bind",n,e),o.def&&o.def.inserted&&c.push(o));if(c.length){var p=function(){for(var t=0;t<c.length;t++)Ra(c[t],"inserted",n,e)};i?Ye(n,"insert",p):p()}d.length&&Ye(n,"postpatch",(function(){for(var t=0;t<d.length;t++)Ra(d[t],"componentUpdated",n,e)}));if(!i)for(t in s)l[t]||Ra(s[t],"unbind",e,e,r)}(e,n)}var ja=Object.create(null);function Aa(e,n){var t,a,o=Object.create(null);if(!e)return o;for(t=0;t<e.length;t++){if((a=e[t]).modifiers||(a.modifiers=ja),o[Da(a)]=a,n._setupState&&n._setupState.__sfc){var i=a.def||At(n,"_setupState","v-"+a.name);a.def="function"==typeof i?{bind:i,update:i}:i}a.def=a.def||At(n.$options,"directives",a.name)}return o}function Da(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Ra(e,n,t,a,o){var i=e.def&&e.def[n];if(i)try{i(t.elm,e,t,a,o)}catch(a){zn(a,t.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Oa=[wa,Pa];function Na(e,n){var t=n.componentOptions;if(!(r(t)&&!1===t.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(n.data.attrs))){var a,o,l=n.elm,c=e.data.attrs||{},d=n.data.attrs||{};for(a in(r(d.__ob__)||s(d._v_attr_proxy))&&(d=n.data.attrs=D({},d)),d)o=d[a],c[a]!==o&&$a(l,a,o,n.data.pre);for(a in(Q||Z)&&d.value!==c.value&&$a(l,"value",d.value),c)i(d[a])&&(sa(a)?l.removeAttributeNS(ra,la(a)):aa(a)||l.removeAttribute(a))}}function $a(e,n,t,a){a||e.tagName.indexOf("-")>-1?qa(e,n,t):ia(n)?ca(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):aa(n)?e.setAttribute(n,function(e,n){return ca(n)||"false"===n?"false":"contenteditable"===e&&oa(n)?n:"true"}(n,t)):sa(n)?ca(t)?e.removeAttributeNS(ra,la(n)):e.setAttributeNS(ra,n,t):qa(e,n,t)}function qa(e,n,t){if(ca(t))e.removeAttribute(n);else{if(Q&&!K&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var a=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(n,t)}}var Ma={create:Na,update:Na};function La(e,n){var t=n.elm,a=n.data,o=e.data;if(!(i(a.staticClass)&&i(a.class)&&(i(o)||i(o.staticClass)&&i(o.class)))){var s=da(n),l=t._transitionClasses;r(l)&&(s=ua(s,ha(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var _a,Fa={create:La,update:La};function Ba(e,n,t){var a=_a;return function o(){var i=n.apply(null,arguments);null!==i&&Ja(e,o,t,a)}}var Ua=Dn&&!(te&&Number(te[1])<=53);function Va(e,n,t,a){if(Ua){var o=lt,i=n;n=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=o||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}_a.addEventListener(e,n,oe?{capture:t,passive:a}:t)}function Ja(e,n,t,a){(a||_a).removeEventListener(e,n._wrapper||n,t)}function Wa(e,n){if(!i(e.data.on)||!i(n.data.on)){var t=n.data.on||{},a=e.data.on||{};_a=n.elm||e.elm,function(e){if(r(e.__r)){var n=Q?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),We(t,a,Va,Ja,Ba,n.context),_a=void 0}}var Ya,Ha={create:Wa,update:Wa,destroy:function(e){return Wa(e,Ia)}};function Xa(e,n){if(!i(e.data.domProps)||!i(n.data.domProps)){var t,a,o=n.elm,l=e.data.domProps||{},c=n.data.domProps||{};for(t in(r(c.__ob__)||s(c._v_attr_proxy))&&(c=n.data.domProps=D({},c)),l)t in c||(o[t]="");for(t in c){if(a=c[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),a===l[t])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===t&&"PROGRESS"!==o.tagName){o._value=a;var d=i(a)?"":String(a);Ga(o,d)&&(o.value=d)}else if("innerHTML"===t&&ga(o.tagName)&&i(o.innerHTML)){(Ya=Ya||document.createElement("div")).innerHTML="<svg>".concat(a,"</svg>");for(var p=Ya.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;p.firstChild;)o.appendChild(p.firstChild)}else if(a!==l[t])try{o[t]=a}catch(e){}}}}function Ga(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,a=e._vModifiers;if(r(a)){if(a.number)return b(t)!==b(n);if(a.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var Qa={create:Xa,update:Xa},Ka=I((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(t);a.length>1&&(n[a[0].trim()]=a[1].trim())}})),n}));function Za(e){var n=eo(e.style);return e.staticStyle?D(e.staticStyle,n):n}function eo(e){return Array.isArray(e)?R(e):"string"==typeof e?Ka(e):e}var no,to=/^--/,ao=/\s*!important$/,oo=function(e,n,t){if(to.test(n))e.style.setProperty(n,t);else if(ao.test(t))e.style.setProperty(C(n),t.replace(ao,""),"important");else{var a=ro(n);if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)e.style[a]=t[o];else e.style[a]=t}},io=["Webkit","Moz","ms"],ro=I((function(e){if(no=no||document.createElement("div").style,"filter"!==(e=S(e))&&e in no)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<io.length;t++){var a=io[t]+n;if(a in no)return a}}));function so(e,n){var t=n.data,a=e.data;if(!(i(t.staticStyle)&&i(t.style)&&i(a.staticStyle)&&i(a.style))){var o,s,l=n.elm,c=a.staticStyle,d=a.normalizedStyle||a.style||{},p=c||d,u=eo(n.data.style)||{};n.data.normalizedStyle=r(u.__ob__)?D({},u):u;var h=function(e,n){var t,a={};if(n)for(var o=e;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=Za(o.data))&&D(a,t);(t=Za(e.data))&&D(a,t);for(var i=e;i=i.parent;)i.data&&(t=Za(i.data))&&D(a,t);return a}(n,!0);for(s in p)i(h[s])&&oo(l,s,"");for(s in h)o=h[s],oo(l,s,null==o?"":o)}}var lo={create:so,update:so},co=/\s+/;function po(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(co).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function uo(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(co).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),a=" "+n+" ";t.indexOf(a)>=0;)t=t.replace(a," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function ho(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&D(n,mo(e.name||"v")),D(n,e),n}return"string"==typeof e?mo(e):void 0}}var mo=I((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),fo=X&&!K,go="transition",vo="transitionend",bo="animation",yo="animationend";fo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(go="WebkitTransition",vo="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(bo="WebkitAnimation",yo="webkitAnimationEnd"));var xo=X?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function wo(e){xo((function(){xo(e)}))}function ko(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),po(e,n))}function To(e,n){e._transitionClasses&&w(e._transitionClasses,n),uo(e,n)}function Io(e,n,t){var a=So(e,n),o=a.type,i=a.timeout,r=a.propCount;if(!o)return t();var s="transition"===o?vo:yo,l=0,c=function(){e.removeEventListener(s,d),t()},d=function(n){n.target===e&&++l>=r&&c()};setTimeout((function(){l<r&&c()}),i+1),e.addEventListener(s,d)}var Eo=/\b(transform|all)(,|$)/;function So(e,n){var t,a=window.getComputedStyle(e),o=(a[go+"Delay"]||"").split(", "),i=(a[go+"Duration"]||"").split(", "),r=zo(o,i),s=(a[bo+"Delay"]||"").split(", "),l=(a[bo+"Duration"]||"").split(", "),c=zo(s,l),d=0,p=0;return"transition"===n?r>0&&(t="transition",d=r,p=i.length):"animation"===n?c>0&&(t="animation",d=c,p=l.length):p=(t=(d=Math.max(r,c))>0?r>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:d,propCount:p,hasTransform:"transition"===t&&Eo.test(a[go+"Property"])}}function zo(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return Po(n)+Po(e[t])})))}function Po(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Co(e,n){var t=e.elm;r(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var a=ho(e.data.transition);if(!i(a)&&!r(t._enterCb)&&1===t.nodeType){for(var o=a.css,s=a.type,l=a.enterClass,p=a.enterToClass,u=a.enterActiveClass,h=a.appearClass,m=a.appearToClass,f=a.appearActiveClass,g=a.beforeEnter,v=a.enter,y=a.afterEnter,x=a.enterCancelled,w=a.beforeAppear,k=a.appear,T=a.afterAppear,I=a.appearCancelled,E=a.duration,S=Qn,z=Qn.$vnode;z&&z.parent;)S=z.context,z=z.parent;var P=!S._isMounted||!e.isRootInsert;if(!P||k||""===k){var C=P&&h?h:l,j=P&&f?f:u,A=P&&m?m:p,D=P&&w||g,R=P&&c(k)?k:v,O=P&&T||y,N=P&&I||x,$=b(d(E)?E.enter:E);0;var q=!1!==o&&!K,M=Do(R),_=t._enterCb=L((function(){q&&(To(t,A),To(t,j)),_.cancelled?(q&&To(t,C),N&&N(t)):O&&O(t),t._enterCb=null}));e.data.show||Ye(e,"insert",(function(){var n=t.parentNode,a=n&&n._pending&&n._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),R&&R(t,_)})),D&&D(t),q&&(ko(t,C),ko(t,j),wo((function(){To(t,C),_.cancelled||(ko(t,A),M||(Ao($)?setTimeout(_,$):Io(t,s,_)))}))),e.data.show&&(n&&n(),R&&R(t,_)),q||M||_()}}}function jo(e,n){var t=e.elm;r(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var a=ho(e.data.transition);if(i(a)||1!==t.nodeType)return n();if(!r(t._leaveCb)){var o=a.css,s=a.type,l=a.leaveClass,c=a.leaveToClass,p=a.leaveActiveClass,u=a.beforeLeave,h=a.leave,m=a.afterLeave,f=a.leaveCancelled,g=a.delayLeave,v=a.duration,y=!1!==o&&!K,x=Do(h),w=b(d(v)?v.leave:v);0;var k=t._leaveCb=L((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),y&&(To(t,c),To(t,p)),k.cancelled?(y&&To(t,l),f&&f(t)):(n(),m&&m(t)),t._leaveCb=null}));g?g(T):T()}function T(){k.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),u&&u(t),y&&(ko(t,l),ko(t,p),wo((function(){To(t,l),k.cancelled||(ko(t,c),x||(Ao(w)?setTimeout(k,w):Io(t,s,k)))}))),h&&h(t,k),y||x||k())}}function Ao(e){return"number"==typeof e&&!isNaN(e)}function Do(e){if(i(e))return!1;var n=e.fns;return r(n)?Do(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Ro(e,n){!0!==n.data.show&&Co(n)}var Oo=function(e){var n,t,a={},c=e.modules,d=e.nodeOps;for(n=0;n<Ea.length;++n)for(a[Ea[n]]=[],t=0;t<c.length;++t)r(c[t][Ea[n]])&&a[Ea[n]].push(c[t][Ea[n]]);function p(e){var n=d.parentNode(e);r(n)&&d.removeChild(n,e)}function u(e,n,t,o,i,l,c){if(r(e.elm)&&r(l)&&(e=l[c]=ge(e)),e.isRootInsert=!i,!function(e,n,t,o){var i=e.data;if(r(i)){var l=r(e.componentInstance)&&i.keepAlive;if(r(i=i.hook)&&r(i=i.init)&&i(e,!1),r(e.componentInstance))return h(e,n),m(t,e.elm,o),s(l)&&function(e,n,t,o){var i,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,r(i=s.data)&&r(i=i.transition)){for(i=0;i<a.activate.length;++i)a.activate[i](Ia,s);n.push(s);break}m(t,e.elm,o)}(e,n,t,o),!0}}(e,n,t,o)){var p=e.data,u=e.children,g=e.tag;r(g)?(e.elm=e.ns?d.createElementNS(e.ns,g):d.createElement(g,e),b(e),f(e,u,n),r(p)&&v(e,n),m(t,e.elm,o)):s(e.isComment)?(e.elm=d.createComment(e.text),m(t,e.elm,o)):(e.elm=d.createTextNode(e.text),m(t,e.elm,o))}}function h(e,n){r(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(v(e,n),b(e)):(ka(e),n.push(e))}function m(e,n,t){r(e)&&(r(t)?d.parentNode(t)===e&&d.insertBefore(e,n,t):d.appendChild(e,n))}function f(e,n,t){if(o(n)){0;for(var a=0;a<n.length;++a)u(n[a],t,e.elm,null,!0,n,a)}else l(e.text)&&d.appendChild(e.elm,d.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function v(e,t){for(var o=0;o<a.create.length;++o)a.create[o](Ia,e);r(n=e.data.hook)&&(r(n.create)&&n.create(Ia,e),r(n.insert)&&t.push(e))}function b(e){var n;if(r(n=e.fnScopeId))d.setStyleScope(e.elm,n);else for(var t=e;t;)r(n=t.context)&&r(n=n.$options._scopeId)&&d.setStyleScope(e.elm,n),t=t.parent;r(n=Qn)&&n!==e.context&&n!==e.fnContext&&r(n=n.$options._scopeId)&&d.setStyleScope(e.elm,n)}function x(e,n,t,a,o,i){for(;a<=o;++a)u(t[a],i,e,n,!1,t,a)}function w(e){var n,t,o=e.data;if(r(o))for(r(n=o.hook)&&r(n=n.destroy)&&n(e),n=0;n<a.destroy.length;++n)a.destroy[n](e);if(r(n=e.children))for(t=0;t<e.children.length;++t)w(e.children[t])}function k(e,n,t){for(;n<=t;++n){var a=e[n];r(a)&&(r(a.tag)?(T(a),w(a)):p(a.elm))}}function T(e,n){if(r(n)||r(e.data)){var t,o=a.remove.length+1;for(r(n)?n.listeners+=o:n=function(e,n){function t(){0==--t.listeners&&p(e)}return t.listeners=n,t}(e.elm,o),r(t=e.componentInstance)&&r(t=t._vnode)&&r(t.data)&&T(t,n),t=0;t<a.remove.length;++t)a.remove[t](e,n);r(t=e.data.hook)&&r(t=t.remove)?t(e,n):n()}else p(e.elm)}function I(e,n,t,a){for(var o=t;o<a;o++){var i=n[o];if(r(i)&&Sa(e,i))return o}}function E(e,n,t,o,l,c){if(e!==n){r(n.elm)&&r(o)&&(n=o[l]=ge(n));var p=n.elm=e.elm;if(s(e.isAsyncPlaceholder))r(n.asyncFactory.resolved)?P(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(s(n.isStatic)&&s(e.isStatic)&&n.key===e.key&&(s(n.isCloned)||s(n.isOnce)))n.componentInstance=e.componentInstance;else{var h,m=n.data;r(m)&&r(h=m.hook)&&r(h=h.prepatch)&&h(e,n);var f=e.children,v=n.children;if(r(m)&&g(n)){for(h=0;h<a.update.length;++h)a.update[h](e,n);r(h=m.hook)&&r(h=h.update)&&h(e,n)}i(n.text)?r(f)&&r(v)?f!==v&&function(e,n,t,a,o){var s,l,c,p=0,h=0,m=n.length-1,f=n[0],g=n[m],v=t.length-1,b=t[0],y=t[v],w=!o;for(0;p<=m&&h<=v;)i(f)?f=n[++p]:i(g)?g=n[--m]:Sa(f,b)?(E(f,b,a,t,h),f=n[++p],b=t[++h]):Sa(g,y)?(E(g,y,a,t,v),g=n[--m],y=t[--v]):Sa(f,y)?(E(f,y,a,t,v),w&&d.insertBefore(e,f.elm,d.nextSibling(g.elm)),f=n[++p],y=t[--v]):Sa(g,b)?(E(g,b,a,t,h),w&&d.insertBefore(e,g.elm,f.elm),g=n[--m],b=t[++h]):(i(s)&&(s=za(n,p,m)),i(l=r(b.key)?s[b.key]:I(b,n,p,m))?u(b,a,e,f.elm,!1,t,h):Sa(c=n[l],b)?(E(c,b,a,t,h),n[l]=void 0,w&&d.insertBefore(e,c.elm,f.elm)):u(b,a,e,f.elm,!1,t,h),b=t[++h]);p>m?x(e,i(t[v+1])?null:t[v+1].elm,t,h,v,a):h>v&&k(n,p,m)}(p,f,v,t,c):r(v)?(r(e.text)&&d.setTextContent(p,""),x(p,null,v,0,v.length-1,t)):r(f)?k(f,0,f.length-1):r(e.text)&&d.setTextContent(p,""):e.text!==n.text&&d.setTextContent(p,n.text),r(m)&&r(h=m.hook)&&r(h=h.postpatch)&&h(e,n)}}}function S(e,n,t){if(s(t)&&r(e.parent))e.parent.data.pendingInsert=n;else for(var a=0;a<n.length;++a)n[a].data.hook.insert(n[a])}var z=y("attrs,class,staticClass,staticStyle,key");function P(e,n,t,a){var o,i=n.tag,l=n.data,c=n.children;if(a=a||l&&l.pre,n.elm=e,s(n.isComment)&&r(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(r(l)&&(r(o=l.hook)&&r(o=o.init)&&o(n,!0),r(o=n.componentInstance)))return h(n,t),!0;if(r(i)){if(r(c))if(e.hasChildNodes())if(r(o=l)&&r(o=o.domProps)&&r(o=o.innerHTML)){if(o!==e.innerHTML)return!1}else{for(var d=!0,p=e.firstChild,u=0;u<c.length;u++){if(!p||!P(p,c[u],t,a)){d=!1;break}p=p.nextSibling}if(!d||p)return!1}else f(n,c,t);if(r(l)){var m=!1;for(var g in l)if(!z(g)){m=!0,v(n,t);break}!m&&l.class&&Un(l.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,o){if(!i(n)){var l,c=!1,p=[];if(i(e))c=!0,u(n,p);else{var h=r(e.nodeType);if(!h&&Sa(e,n))E(e,n,p,null,null,o);else{if(h){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),s(t)&&P(e,n,p))return S(n,p,!0),e;l=e,e=new he(d.tagName(l).toLowerCase(),{},[],void 0,l)}var m=e.elm,f=d.parentNode(m);if(u(n,p,m._leaveCb?null:f,d.nextSibling(m)),r(n.parent))for(var v=n.parent,b=g(n);v;){for(var y=0;y<a.destroy.length;++y)a.destroy[y](v);if(v.elm=n.elm,b){for(var x=0;x<a.create.length;++x)a.create[x](Ia,v);var T=v.data.hook.insert;if(T.merged)for(var I=T.fns.slice(1),z=0;z<I.length;z++)I[z]()}else ka(v);v=v.parent}r(f)?k([e],0,0):r(e.tag)&&w(e)}}return S(n,p,c),n.elm}r(e)&&w(e)}}({nodeOps:xa,modules:[Ma,Fa,Ha,Qa,lo,X?{create:Ro,activate:Ro,remove:function(e,n){!0!==e.data.show?jo(e,n):n()}}:{}].concat(Oa)});K&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Bo(e,"input")}));var No={inserted:function(e,n,t,a){"select"===t.tag?(a.elm&&!a.elm._vOptions?Ye(t,"postpatch",(function(){No.componentUpdated(e,n,t)})):$o(e,n,t.context),e._vOptions=[].map.call(e.options,Lo)):("textarea"===t.tag||ya(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",_o),e.addEventListener("compositionend",Fo),e.addEventListener("change",Fo),K&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){$o(e,n,t.context);var a=e._vOptions,o=e._vOptions=[].map.call(e.options,Lo);if(o.some((function(e,n){return!q(e,a[n])})))(e.multiple?n.value.some((function(e){return Mo(e,o)})):n.value!==n.oldValue&&Mo(n.value,o))&&Bo(e,"change")}}};function $o(e,n,t){qo(e,n,t),(Q||Z)&&setTimeout((function(){qo(e,n,t)}),0)}function qo(e,n,t){var a=n.value,o=e.multiple;if(!o||Array.isArray(a)){for(var i,r,s=0,l=e.options.length;s<l;s++)if(r=e.options[s],o)i=M(a,Lo(r))>-1,r.selected!==i&&(r.selected=i);else if(q(Lo(r),a))return void(e.selectedIndex!==s&&(e.selectedIndex=s));o||(e.selectedIndex=-1)}}function Mo(e,n){return n.every((function(n){return!q(n,e)}))}function Lo(e){return"_value"in e?e._value:e.value}function _o(e){e.target.composing=!0}function Fo(e){e.target.composing&&(e.target.composing=!1,Bo(e.target,"input"))}function Bo(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Uo(e){return!e.componentInstance||e.data&&e.data.transition?e:Uo(e.componentInstance._vnode)}var Vo={model:No,show:{bind:function(e,n,t){var a=n.value,o=(t=Uo(t)).data&&t.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&o?(t.data.show=!0,Co(t,(function(){e.style.display=i}))):e.style.display=a?i:"none"},update:function(e,n,t){var a=n.value;!a!=!n.oldValue&&((t=Uo(t)).data&&t.data.transition?(t.data.show=!0,a?Co(t,(function(){e.style.display=e.__vOriginalDisplay})):jo(t,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,a,o){o||(e.style.display=e.__vOriginalDisplay)}}},Jo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Wo(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?Wo(En(n.children)):e}function Yo(e){var n={},t=e.$options;for(var a in t.propsData)n[a]=e[a];var o=t._parentListeners;for(var a in o)n[S(a)]=o[a];return n}function Ho(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Xo=function(e){return e.tag||fn(e)},Go=function(e){return"show"===e.name},Qo={name:"transition",props:Jo,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(Xo)).length){0;var a=this.mode;0;var o=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return o;var i=Wo(o);if(!i)return o;if(this._leaving)return Ho(e,o);var r="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?r+"comment":r+i.tag:l(i.key)?0===String(i.key).indexOf(r)?i.key:r+i.key:i.key;var s=(i.data||(i.data={})).transition=Yo(this),c=this._vnode,d=Wo(c);if(i.data.directives&&i.data.directives.some(Go)&&(i.data.show=!0),d&&d.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(i,d)&&!fn(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var p=d.data.transition=D({},s);if("out-in"===a)return this._leaving=!0,Ye(p,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),Ho(e,o);if("in-out"===a){if(fn(i))return c;var u,h=function(){u()};Ye(s,"afterEnter",h),Ye(s,"enterCancelled",h),Ye(p,"delayLeave",(function(e){u=e}))}}return o}}},Ko=D({tag:String,moveClass:String},Jo);function Zo(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function ei(e){e.data.newPos=e.elm.getBoundingClientRect()}function ni(e){var n=e.data.pos,t=e.data.newPos,a=n.left-t.left,o=n.top-t.top;if(a||o){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate(".concat(a,"px,").concat(o,"px)"),i.transitionDuration="0s"}}delete Ko.mode;var ti={Transition:Qo,TransitionGroup:{props:Ko,beforeMount:function(){var e=this,n=this._update;this._update=function(t,a){var o=Kn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,o(),n.call(e,t,a)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),a=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],r=Yo(this),s=0;s<o.length;s++){if((d=o[s]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))i.push(d),t[d.key]=d,(d.data||(d.data={})).transition=r;else;}if(a){var l=[],c=[];for(s=0;s<a.length;s++){var d;(d=a[s]).data.transition=r,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):c.push(d)}this.kept=e(n,null,l),this.removed=c}return e(n,null,i)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(Zo),e.forEach(ei),e.forEach(ni),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,a=t.style;ko(t,n),a.transform=a.WebkitTransform=a.transitionDuration="",t.addEventListener(vo,t._moveCb=function e(a){a&&a.target!==t||a&&!/transform$/.test(a.propertyName)||(t.removeEventListener(vo,e),t._moveCb=null,To(t,n))})}})))},methods:{hasMove:function(e,n){if(!fo)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){uo(t,e)})),po(t,n),t.style.display="none",this.$el.appendChild(t);var a=So(t);return this.$el.removeChild(t),this._hasMove=a.hasTransform}}}};function ai(e,n){for(var t in n)e[t]=n[t];return e}Yt.config.mustUseProp=function(e,n,t){return"value"===t&&ta(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},Yt.config.isReservedTag=va,Yt.config.isReservedAttr=na,Yt.config.getTagNamespace=function(e){return ga(e)?"svg":"math"===e?"math":void 0},Yt.config.isUnknownElement=function(e){if(!X)return!0;if(va(e))return!1;if(e=e.toLowerCase(),null!=ba[e])return ba[e];var n=document.createElement(e);return e.indexOf("-")>-1?ba[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:ba[e]=/HTMLUnknownElement/.test(n.toString())},D(Yt.options.directives,Vo),D(Yt.options.components,ti),Yt.prototype.__patch__=X?Oo:O,Yt.prototype.$mount=function(e,n){return function(e,n,t){var a;e.$el=n,e.$options.render||(e.$options.render=me),nt(e,"beforeMount"),a=function(){e._update(e._render(),t)},new Wn(e,a,O,{before:function(){e._isMounted&&!e._isDestroyed&&nt(e,"beforeUpdate")}},!0),t=!1;var o=e._preWatchers;if(o)for(var i=0;i<o.length;i++)o[i].run();return null==e.$vnode&&(e._isMounted=!0,nt(e,"mounted")),e}(this,e=e&&X?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},X&&setTimeout((function(){U.devtools&&se&&se.emit("init",Yt)}),0);var oi=/[!'()*]/g,ii=function(e){return"%"+e.charCodeAt(0).toString(16)},ri=/%2C/g,si=function(e){return encodeURIComponent(e).replace(oi,ii).replace(ri,",")};function li(e){try{return decodeURIComponent(e)}catch(e){0}return e}var ci=function(e){return null==e||"object"==typeof e?e:String(e)};function di(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),a=li(t.shift()),o=t.length>0?li(t.join("=")):null;void 0===n[a]?n[a]=o:Array.isArray(n[a])?n[a].push(o):n[a]=[n[a],o]})),n):n}function pi(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return si(n);if(Array.isArray(t)){var a=[];return t.forEach((function(e){void 0!==e&&(null===e?a.push(si(n)):a.push(si(n)+"="+si(e)))})),a.join("&")}return si(n)+"="+si(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var ui=/\/?$/;function hi(e,n,t,a){var o=a&&a.options.stringifyQuery,i=n.query||{};try{i=mi(i)}catch(e){}var r={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:i,params:n.params||{},fullPath:vi(n,o),matched:e?gi(e):[]};return t&&(r.redirectedFrom=vi(t,o)),Object.freeze(r)}function mi(e){if(Array.isArray(e))return e.map(mi);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=mi(e[t]);return n}return e}var fi=hi(null,{path:"/"});function gi(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function vi(e,n){var t=e.path,a=e.query;void 0===a&&(a={});var o=e.hash;return void 0===o&&(o=""),(t||"/")+(n||pi)(a)+o}function bi(e,n,t){return n===fi?e===n:!!n&&(e.path&&n.path?e.path.replace(ui,"")===n.path.replace(ui,"")&&(t||e.hash===n.hash&&yi(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&yi(e.query,n.query)&&yi(e.params,n.params))))}function yi(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),a=Object.keys(n).sort();return t.length===a.length&&t.every((function(t,o){var i=e[t];if(a[o]!==t)return!1;var r=n[t];return null==i||null==r?i===r:"object"==typeof i&&"object"==typeof r?yi(i,r):String(i)===String(r)}))}function xi(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var a in t.instances){var o=t.instances[a],i=t.enteredCbs[a];if(o&&i){delete t.enteredCbs[a];for(var r=0;r<i.length;r++)o._isBeingDestroyed||i[r](o)}}}}var wi={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,a=n.children,o=n.parent,i=n.data;i.routerView=!0;for(var r=o.$createElement,s=t.name,l=o.$route,c=o._routerViewCache||(o._routerViewCache={}),d=0,p=!1;o&&o._routerRoot!==o;){var u=o.$vnode?o.$vnode.data:{};u.routerView&&d++,u.keepAlive&&o._directInactive&&o._inactive&&(p=!0),o=o.$parent}if(i.routerViewDepth=d,p){var h=c[s],m=h&&h.component;return m?(h.configProps&&ki(m,i,h.route,h.configProps),r(m,i,a)):r()}var f=l.matched[d],g=f&&f.components[s];if(!f||!g)return c[s]=null,r();c[s]={component:g},i.registerRouteInstance=function(e,n){var t=f.instances[s];(n&&t!==e||!n&&t===e)&&(f.instances[s]=n)},(i.hook||(i.hook={})).prepatch=function(e,n){f.instances[s]=n.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==f.instances[s]&&(f.instances[s]=e.componentInstance),xi(l)};var v=f.props&&f.props[s];return v&&(ai(c[s],{route:l,configProps:v}),ki(g,i,l,v)),r(g,i,a)}};function ki(e,n,t,a){var o=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,a);if(o){o=n.props=ai({},o);var i=n.attrs=n.attrs||{};for(var r in o)e.props&&r in e.props||(i[r]=o[r],delete o[r])}}function Ti(e,n,t){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return n+e;var o=n.split("/");t&&o[o.length-1]||o.pop();for(var i=e.replace(/^\//,"").split("/"),r=0;r<i.length;r++){var s=i[r];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function Ii(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var Ei=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Si=_i,zi=Di,Pi=function(e,n){return Oi(Di(e,n),n)},Ci=Oi,ji=Li,Ai=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Di(e,n){for(var t,a=[],o=0,i=0,r="",s=n&&n.delimiter||"/";null!=(t=Ai.exec(e));){var l=t[0],c=t[1],d=t.index;if(r+=e.slice(i,d),i=d+l.length,c)r+=c[1];else{var p=e[i],u=t[2],h=t[3],m=t[4],f=t[5],g=t[6],v=t[7];r&&(a.push(r),r="");var b=null!=u&&null!=p&&p!==u,y="+"===g||"*"===g,x="?"===g||"*"===g,w=t[2]||s,k=m||f;a.push({name:h||o++,prefix:u||"",delimiter:w,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:k?$i(k):v?".*":"[^"+Ni(w)+"]+?"})}}return i<e.length&&(r+=e.substr(i)),r&&a.push(r),a}function Ri(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Oi(e,n){for(var t=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(t[a]=new RegExp("^(?:"+e[a].pattern+")$",Mi(n)));return function(n,a){for(var o="",i=n||{},r=(a||{}).pretty?Ri:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,d=i[l.name];if(null==d){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(Ei(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(c=r(d[p]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function Ni(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function $i(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function qi(e,n){return e.keys=n,e}function Mi(e){return e&&e.sensitive?"":"i"}function Li(e,n,t){Ei(n)||(t=n||t,n=[]);for(var a=(t=t||{}).strict,o=!1!==t.end,i="",r=0;r<e.length;r++){var s=e[r];if("string"==typeof s)i+=Ni(s);else{var l=Ni(s.prefix),c="(?:"+s.pattern+")";n.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=Ni(t.delimiter||"/"),p=i.slice(-d.length)===d;return a||(i=(p?i.slice(0,-d.length):i)+"(?:"+d+"(?=$))?"),i+=o?"$":a&&p?"":"(?="+d+"|$)",qi(new RegExp("^"+i,Mi(t)),n)}function _i(e,n,t){return Ei(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var a=0;a<t.length;a++)n.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return qi(e,n)}(e,n):Ei(e)?function(e,n,t){for(var a=[],o=0;o<e.length;o++)a.push(_i(e[o],n,t).source);return qi(new RegExp("(?:"+a.join("|")+")",Mi(t)),n)}(e,n,t):function(e,n,t){return Li(Di(e,t),n,t)}(e,n,t)}Si.parse=zi,Si.compile=Pi,Si.tokensToFunction=Ci,Si.tokensToRegExp=ji;var Fi=Object.create(null);function Bi(e,n,t){n=n||{};try{var a=Fi[e]||(Fi[e]=Si.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),a(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function Ui(e,n,t,a){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var i=(o=ai({},e)).params;return i&&"object"==typeof i&&(o.params=ai({},i)),o}if(!o.path&&o.params&&n){(o=ai({},o))._normalized=!0;var r=ai(ai({},n.params),o.params);if(n.name)o.name=n.name,o.params=r;else if(n.matched.length){var s=n.matched[n.matched.length-1].path;o.path=Bi(s,r,n.path)}else 0;return o}var l=function(e){var n="",t="",a=e.indexOf("#");a>=0&&(n=e.slice(a),e=e.slice(0,a));var o=e.indexOf("?");return o>=0&&(t=e.slice(o+1),e=e.slice(0,o)),{path:e,query:t,hash:n}}(o.path||""),c=n&&n.path||"/",d=l.path?Ti(l.path,c,t||o.append):c,p=function(e,n,t){void 0===n&&(n={});var a,o=t||di;try{a=o(e||"")}catch(e){a={}}for(var i in n){var r=n[i];a[i]=Array.isArray(r)?r.map(ci):ci(r)}return a}(l.query,o.query,a&&a.options.parseQuery),u=o.hash||l.hash;return u&&"#"!==u.charAt(0)&&(u="#"+u),{_normalized:!0,path:d,query:p,hash:u}}var Vi,Ji=function(){},Wi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,a=this.$route,o=t.resolve(this.to,a,this.append),i=o.location,r=o.route,s=o.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,u=null==d?"router-link-exact-active":d,h=null==this.activeClass?p:this.activeClass,m=null==this.exactActiveClass?u:this.exactActiveClass,f=r.redirectedFrom?hi(null,Ui(r.redirectedFrom),null,t):r;l[m]=bi(a,f,this.exactPath),l[h]=this.exact||this.exactPath?l[m]:function(e,n){return 0===e.path.replace(ui,"/").indexOf(n.path.replace(ui,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(a,f);var g=l[m]?this.ariaCurrentValue:null,v=function(e){Yi(e)&&(n.replace?t.replace(i,Ji):t.push(i,Ji))},b={click:Yi};Array.isArray(this.event)?this.event.forEach((function(e){b[e]=v})):b[this.event]=v;var y={class:l},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:r,navigate:v,isActive:l[h],isExactActive:l[m]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?e():e("span",{},x)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":g};else{var w=function e(n){var t;if(n)for(var a=0;a<n.length;a++){if("a"===(t=n[a]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(w){w.isStatic=!1;var k=w.data=ai({},w.data);for(var T in k.on=k.on||{},k.on){var I=k.on[T];T in b&&(k.on[T]=Array.isArray(I)?I:[I])}for(var E in b)E in k.on?k.on[E].push(b[E]):k.on[E]=v;var S=w.data.attrs=ai({},w.data.attrs);S.href=s,S["aria-current"]=g}else y.on=b}return e(this.tag,y,this.$slots.default)}};function Yi(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var Hi="undefined"!=typeof window;function Xi(e,n,t,a,o){var i=n||[],r=t||Object.create(null),s=a||Object.create(null);e.forEach((function(e){!function e(n,t,a,o,i,r){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},d=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return Ii(n.path+"/"+e)}(s,i,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var p={path:d,regex:Gi(d,c),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:l,parent:i,matchAs:r,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var i=r?Ii(r+"/"+o.path):void 0;e(n,t,a,o,p,i)}));t[p.path]||(n.push(p.path),t[p.path]=p);if(void 0!==o.alias)for(var u=Array.isArray(o.alias)?o.alias:[o.alias],h=0;h<u.length;++h){0;var m={path:u[h],children:o.children};e(n,t,a,m,i,p.path||"/")}l&&(a[l]||(a[l]=p))}(i,r,s,e,o)}));for(var l=0,c=i.length;l<c;l++)"*"===i[l]&&(i.push(i.splice(l,1)[0]),c--,l--);return{pathList:i,pathMap:r,nameMap:s}}function Gi(e,n){return Si(e,[],n)}function Qi(e,n){var t=Xi(e),a=t.pathList,o=t.pathMap,i=t.nameMap;function r(e,t,r){var s=Ui(e,t,!1,n),c=s.name;if(c){var d=i[c];if(!d)return l(null,s);var p=d.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var u in t.params)!(u in s.params)&&p.indexOf(u)>-1&&(s.params[u]=t.params[u]);return s.path=Bi(d.path,s.params),l(d,s,r)}if(s.path){s.params={};for(var h=0;h<a.length;h++){var m=a[h],f=o[m];if(Ki(f.regex,s.path,s.params))return l(f,s,r)}}return l(null,s)}function s(e,t){var a=e.redirect,o="function"==typeof a?a(hi(e,t,null,n)):a;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,t);var s=o,c=s.name,d=s.path,p=t.query,u=t.hash,h=t.params;if(p=s.hasOwnProperty("query")?s.query:p,u=s.hasOwnProperty("hash")?s.hash:u,h=s.hasOwnProperty("params")?s.params:h,c){i[c];return r({_normalized:!0,name:c,query:p,hash:u,params:h},void 0,t)}if(d){var m=function(e,n){return Ti(e,n.parent?n.parent.path:"/",!0)}(d,e);return r({_normalized:!0,path:Bi(m,h),query:p,hash:u},void 0,t)}return l(null,t)}function l(e,t,a){return e&&e.redirect?s(e,a||t):e&&e.matchAs?function(e,n,t){var a=r({_normalized:!0,path:Bi(t,n.params)});if(a){var o=a.matched,i=o[o.length-1];return n.params=a.params,l(i,n)}return l(null,n)}(0,t,e.matchAs):hi(e,t,a,n)}return{match:r,addRoute:function(e,n){var t="object"!=typeof e?i[e]:void 0;Xi([n||e],a,o,i,t),t&&t.alias.length&&Xi(t.alias.map((function(e){return{path:e,children:[n]}})),a,o,i,t)},getRoutes:function(){return a.map((function(e){return o[e]}))},addRoutes:function(e){Xi(e,a,o,i)}}}function Ki(e,n,t){var a=n.match(e);if(!a)return!1;if(!t)return!0;for(var o=1,i=a.length;o<i;++o){var r=e.keys[o-1];r&&(t[r.name||"pathMatch"]="string"==typeof a[o]?li(a[o]):a[o])}return!0}var Zi=Hi&&window.performance&&window.performance.now?window.performance:Date;function er(){return Zi.now().toFixed(3)}var nr=er();function tr(){return nr}function ar(e){return nr=e}var or=Object.create(null);function ir(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=ai({},window.history.state);return t.key=tr(),window.history.replaceState(t,"",n),window.addEventListener("popstate",lr),function(){window.removeEventListener("popstate",lr)}}function rr(e,n,t,a){if(e.app){var o=e.options.scrollBehavior;o&&e.app.$nextTick((function(){var i=function(){var e=tr();if(e)return or[e]}(),r=o.call(e,n,t,a?i:null);r&&("function"==typeof r.then?r.then((function(e){hr(e,i)})).catch((function(e){0})):hr(r,i))}))}}function sr(){var e=tr();e&&(or[e]={x:window.pageXOffset,y:window.pageYOffset})}function lr(e){sr(),e.state&&e.state.key&&ar(e.state.key)}function cr(e){return pr(e.x)||pr(e.y)}function dr(e){return{x:pr(e.x)?e.x:window.pageXOffset,y:pr(e.y)?e.y:window.pageYOffset}}function pr(e){return"number"==typeof e}var ur=/^#\d/;function hr(e,n){var t,a="object"==typeof e;if(a&&"string"==typeof e.selector){var o=ur.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(o){var i=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-t.left-n.x,y:a.top-t.top-n.y}}(o,i={x:pr((t=i).x)?t.x:0,y:pr(t.y)?t.y:0})}else cr(e)&&(n=dr(e))}else a&&cr(e)&&(n=dr(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var mr,fr=Hi&&((-1===(mr=window.navigator.userAgent).indexOf("Android 2.")&&-1===mr.indexOf("Android 4.0")||-1===mr.indexOf("Mobile Safari")||-1!==mr.indexOf("Chrome")||-1!==mr.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function gr(e,n){sr();var t=window.history;try{if(n){var a=ai({},t.state);a.key=tr(),t.replaceState(a,"",e)}else t.pushState({key:ar(er())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function vr(e){gr(e,!0)}var br={redirected:2,aborted:4,cancelled:8,duplicated:16};function yr(e,n){return wr(e,n,br.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return kr.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function xr(e,n){return wr(e,n,br.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function wr(e,n,t,a){var o=new Error(a);return o._isRouter=!0,o.from=e,o.to=n,o.type=t,o}var kr=["params","query","hash"];function Tr(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Ir(e,n){return Tr(e)&&e._isRouter&&(null==n||e.type===n)}function Er(e,n,t){var a=function(o){o>=e.length?t():e[o]?n(e[o],(function(){a(o+1)})):a(o+1)};a(0)}function Sr(e){return function(n,t,a){var o=!1,i=0,r=null;zr(e,(function(e,n,t,s){if("function"==typeof e&&void 0===e.cid){o=!0,i++;var l,c=jr((function(n){var o;((o=n).__esModule||Cr&&"Module"===o[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:Vi.extend(n),t.components[s]=n,--i<=0&&a()})),d=jr((function(e){var n="Failed to resolve async component "+s+": "+e;r||(r=Tr(e)?e:new Error(n),a(r))}));try{l=e(c,d)}catch(e){d(e)}if(l)if("function"==typeof l.then)l.then(c,d);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,d)}}})),o||a()}}function zr(e,n){return Pr(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function Pr(e){return Array.prototype.concat.apply([],e)}var Cr="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function jr(e){var n=!1;return function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];if(!n)return n=!0,e.apply(this,t)}}var Ar=function(e,n){this.router=e,this.base=function(e){if(!e)if(Hi){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=fi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Dr(e,n,t,a){var o=zr(e,(function(e,a,o,i){var r=function(e,n){"function"!=typeof e&&(e=Vi.extend(e));return e.options[n]}(e,n);if(r)return Array.isArray(r)?r.map((function(e){return t(e,a,o,i)})):t(r,a,o,i)}));return Pr(a?o.reverse():o)}function Rr(e,n){if(n)return function(){return e.apply(n,arguments)}}Ar.prototype.listen=function(e){this.cb=e},Ar.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Ar.prototype.onError=function(e){this.errorCbs.push(e)},Ar.prototype.transitionTo=function(e,n,t){var a,o=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var i=this.current;this.confirmTransition(a,(function(){o.updateRoute(a),n&&n(a),o.ensureURL(),o.router.afterHooks.forEach((function(e){e&&e(a,i)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(e){e(a)})))}),(function(e){t&&t(e),e&&!o.ready&&(Ir(e,br.redirected)&&i===fi||(o.ready=!0,o.readyErrorCbs.forEach((function(n){n(e)}))))}))},Ar.prototype.confirmTransition=function(e,n,t){var a=this,o=this.current;this.pending=e;var i,r,s=function(e){!Ir(e)&&Tr(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},l=e.matched.length-1,c=o.matched.length-1;if(bi(e,o)&&l===c&&e.matched[l]===o.matched[c])return this.ensureURL(),e.hash&&rr(this.router,o,e,!1),s(((r=wr(i=o,e,br.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",r));var d=function(e,n){var t,a=Math.max(e.length,n.length);for(t=0;t<a&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),p=d.updated,u=d.deactivated,h=d.activated,m=[].concat(function(e){return Dr(e,"beforeRouteLeave",Rr,!0)}(u),this.router.beforeHooks,function(e){return Dr(e,"beforeRouteUpdate",Rr)}(p),h.map((function(e){return e.beforeEnter})),Sr(h)),f=function(n,t){if(a.pending!==e)return s(xr(o,e));try{n(e,o,(function(n){!1===n?(a.ensureURL(!0),s(function(e,n){return wr(e,n,br.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(o,e))):Tr(n)?(a.ensureURL(!0),s(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(s(yr(o,e)),"object"==typeof n&&n.replace?a.replace(n):a.push(n)):t(n)}))}catch(e){s(e)}};Er(m,f,(function(){Er(function(e){return Dr(e,"beforeRouteEnter",(function(e,n,t,a){return function(e,n,t){return function(a,o,i){return e(a,o,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),i(e)}))}}(e,t,a)}))}(h).concat(a.router.resolveHooks),f,(function(){if(a.pending!==e)return s(xr(o,e));a.pending=null,n(e),a.router.app&&a.router.app.$nextTick((function(){xi(e)}))}))}))},Ar.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ar.prototype.setupListeners=function(){},Ar.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=fi,this.pending=null};var Or=function(e){function n(n,t){e.call(this,n,t),this._startLocation=Nr(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,a=fr&&t;a&&this.listeners.push(ir());var o=function(){var t=e.current,o=Nr(e.base);e.current===fi&&o===e._startLocation||e.transitionTo(o,(function(e){a&&rr(n,e,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var a=this,o=this.current;this.transitionTo(e,(function(e){gr(Ii(a.base+e.fullPath)),rr(a.router,e,o,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var a=this,o=this.current;this.transitionTo(e,(function(e){vr(Ii(a.base+e.fullPath)),rr(a.router,e,o,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if(Nr(this.base)!==this.current.fullPath){var n=Ii(this.base+this.current.fullPath);e?gr(n):vr(n)}},n.prototype.getCurrentLocation=function(){return Nr(this.base)},n}(Ar);function Nr(e){var n=window.location.pathname,t=n.toLowerCase(),a=e.toLowerCase();return!e||t!==a&&0!==t.indexOf(Ii(a+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var $r=function(e){function n(n,t,a){e.call(this,n,t),a&&function(e){var n=Nr(e);if(!/^\/#/.test(n))return window.location.replace(Ii(e+"/#"+n)),!0}(this.base)||qr()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=fr&&n;t&&this.listeners.push(ir());var a=function(){var n=e.current;qr()&&e.transitionTo(Mr(),(function(a){t&&rr(e.router,a,n,!0),fr||Fr(a.fullPath)}))},o=fr?"popstate":"hashchange";window.addEventListener(o,a),this.listeners.push((function(){window.removeEventListener(o,a)}))}},n.prototype.push=function(e,n,t){var a=this,o=this.current;this.transitionTo(e,(function(e){_r(e.fullPath),rr(a.router,e,o,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var a=this,o=this.current;this.transitionTo(e,(function(e){Fr(e.fullPath),rr(a.router,e,o,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Mr()!==n&&(e?_r(n):Fr(n))},n.prototype.getCurrentLocation=function(){return Mr()},n}(Ar);function qr(){var e=Mr();return"/"===e.charAt(0)||(Fr("/"+e),!1)}function Mr(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Lr(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function _r(e){fr?gr(Lr(e)):window.location.hash=e}function Fr(e){fr?vr(Lr(e)):window.location.replace(Lr(e))}var Br=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var a=this.stack[t];this.confirmTransition(a,(function(){var e=n.current;n.index=t,n.updateRoute(a),n.router.afterHooks.forEach((function(n){n&&n(a,e)}))}),(function(e){Ir(e,br.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Ar),Ur=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Qi(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!fr&&!1!==e.fallback,this.fallback&&(n="hash"),Hi||(n="abstract"),this.mode=n,n){case"history":this.history=new Or(this,e.base);break;case"hash":this.history=new $r(this,e.base,this.fallback);break;case"abstract":this.history=new Br(this,e.base);break;default:0}},Vr={currentRoute:{configurable:!0}};Ur.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},Vr.currentRoute.get=function(){return this.history&&this.history.current},Ur.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Or||t instanceof $r){var a=function(e){t.setupListeners(),function(e){var a=t.current,o=n.options.scrollBehavior;fr&&o&&"fullPath"in e&&rr(n,e,a,!1)}(e)};t.transitionTo(t.getCurrentLocation(),a,a)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},Ur.prototype.beforeEach=function(e){return Wr(this.beforeHooks,e)},Ur.prototype.beforeResolve=function(e){return Wr(this.resolveHooks,e)},Ur.prototype.afterEach=function(e){return Wr(this.afterHooks,e)},Ur.prototype.onReady=function(e,n){this.history.onReady(e,n)},Ur.prototype.onError=function(e){this.history.onError(e)},Ur.prototype.push=function(e,n,t){var a=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){a.history.push(e,n,t)}));this.history.push(e,n,t)},Ur.prototype.replace=function(e,n,t){var a=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){a.history.replace(e,n,t)}));this.history.replace(e,n,t)},Ur.prototype.go=function(e){this.history.go(e)},Ur.prototype.back=function(){this.go(-1)},Ur.prototype.forward=function(){this.go(1)},Ur.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},Ur.prototype.resolve=function(e,n,t){var a=Ui(e,n=n||this.history.current,t,this),o=this.match(a,n),i=o.redirectedFrom||o.fullPath;return{location:a,route:o,href:function(e,n,t){var a="hash"===t?"#"+n:n;return e?Ii(e+"/"+a):a}(this.history.base,i,this.mode),normalizedTo:a,resolved:o}},Ur.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ur.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==fi&&this.history.transitionTo(this.history.getCurrentLocation())},Ur.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==fi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ur.prototype,Vr);var Jr=Ur;function Wr(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}Ur.install=function e(n){if(!e.installed||Vi!==n){e.installed=!0,Vi=n;var t=function(e){return void 0!==e},a=function(e,n){var a=e.$options._parentVnode;t(a)&&t(a=a.data)&&t(a=a.registerRouteInstance)&&a(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",wi),n.component("RouterLink",Wi);var o=n.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Ur.version="3.6.5",Ur.isNavigationFailure=Ir,Ur.NavigationFailureType=br,Ur.START_LOCATION=fi,Hi&&window.Vue&&window.Vue.use(Ur);t(149),t(44),t(158);t(159),t(64);var Yr={"components/AlgoliaSearchBox":()=>Promise.all([t.e(0),t.e(16)]).then(t.bind(null,361)),"components/DropdownLink":()=>Promise.all([t.e(0),t.e(15)]).then(t.bind(null,290)),"components/DropdownTransition":()=>Promise.all([t.e(0),t.e(25)]).then(t.bind(null,278)),"components/Home":()=>Promise.all([t.e(0),t.e(18)]).then(t.bind(null,329)),"components/NavLink":()=>t.e(31).then(t.bind(null,277)),"components/NavLinks":()=>Promise.all([t.e(0),t.e(13)]).then(t.bind(null,304)),"components/Navbar":()=>Promise.all([t.e(0),t.e(1),t.e(2)]).then(t.bind(null,356)),"components/Page":()=>Promise.all([t.e(0),t.e(14)]).then(t.bind(null,330)),"components/PageEdit":()=>Promise.all([t.e(0),t.e(19)]).then(t.bind(null,306)),"components/PageNav":()=>Promise.all([t.e(0),t.e(17)]).then(t.bind(null,307)),"components/Sidebar":()=>Promise.all([t.e(0),t.e(12)]).then(t.bind(null,331)),"components/SidebarButton":()=>Promise.all([t.e(0),t.e(26)]).then(t.bind(null,333)),"components/SidebarGroup":()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,305)),"components/SidebarLink":()=>Promise.all([t.e(0),t.e(20)]).then(t.bind(null,291)),"components/SidebarLinks":()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,289)),"global-components/Badge":()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,371)),"global-components/CodeBlock":()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,362)),"global-components/CodeGroup":()=>Promise.all([t.e(0),t.e(8)]).then(t.bind(null,363)),"layouts/404":()=>t.e(9).then(t.bind(null,364)),"layouts/Layout":()=>Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(5)]).then(t.bind(null,365)),NotFound:()=>t.e(9).then(t.bind(null,364)),Layout:()=>Promise.all([t.e(0),t.e(1),t.e(3),t.e(2),t.e(5)]).then(t.bind(null,365)),"components/Toc":()=>Promise.all([t.e(0),t.e(24)]).then(t.bind(null,332))},Hr={"v-11df0e36":()=>t.e(32).then(t.bind(null,372)),"v-613aa916":()=>t.e(33).then(t.bind(null,373)),"v-f26ec16a":()=>t.e(34).then(t.bind(null,374)),"v-b3e9ed94":()=>t.e(36).then(t.bind(null,375)),"v-75805ecd":()=>t.e(35).then(t.bind(null,376)),"v-7c40e756":()=>t.e(37).then(t.bind(null,377)),"v-1e30b996":()=>t.e(38).then(t.bind(null,378)),"v-40142828":()=>t.e(39).then(t.bind(null,379)),"v-160aff14":()=>t.e(40).then(t.bind(null,380)),"v-4599b396":()=>t.e(41).then(t.bind(null,381)),"v-44b0b780":()=>t.e(42).then(t.bind(null,382)),"v-68e1933e":()=>t.e(43).then(t.bind(null,383)),"v-1774cd46":()=>t.e(44).then(t.bind(null,384)),"v-7dbe2080":()=>t.e(45).then(t.bind(null,385)),"v-3d3c09a7":()=>t.e(46).then(t.bind(null,386)),"v-02db6d94":()=>t.e(48).then(t.bind(null,387)),"v-2b6f63d6":()=>t.e(47).then(t.bind(null,388)),"v-54443c26":()=>t.e(50).then(t.bind(null,389)),"v-f6317614":()=>t.e(51).then(t.bind(null,390)),"v-cf625d60":()=>t.e(52).then(t.bind(null,391)),"v-75c52e96":()=>t.e(53).then(t.bind(null,392)),"v-2b656194":()=>t.e(56).then(t.bind(null,393)),"v-f6a85044":()=>t.e(54).then(t.bind(null,394)),"v-e4ca2fd4":()=>t.e(55).then(t.bind(null,395)),"v-5d3cf656":()=>t.e(57).then(t.bind(null,396)),"v-3c6e5e4e":()=>t.e(58).then(t.bind(null,397)),"v-b7631414":()=>t.e(60).then(t.bind(null,398)),"v-61f1485c":()=>t.e(62).then(t.bind(null,399)),"v-ca844214":()=>t.e(61).then(t.bind(null,400)),"v-034ad2d6":()=>t.e(63).then(t.bind(null,401)),"v-714e99b0":()=>t.e(64).then(t.bind(null,402)),"v-353fde94":()=>t.e(65).then(t.bind(null,403)),"v-1510df86":()=>t.e(66).then(t.bind(null,404)),"v-27fabfbf":()=>t.e(67).then(t.bind(null,405)),"v-59887b56":()=>t.e(68).then(t.bind(null,406)),"v-5b9bc276":()=>t.e(69).then(t.bind(null,407)),"v-f2386108":()=>t.e(70).then(t.bind(null,408)),"v-9b4d3678":()=>t.e(49).then(t.bind(null,409)),"v-26d74295":()=>t.e(72).then(t.bind(null,410)),"v-374da7d6":()=>t.e(71).then(t.bind(null,411)),"v-b992a184":()=>t.e(74).then(t.bind(null,412)),"v-2a1e2616":()=>t.e(59).then(t.bind(null,413)),"v-b8027794":()=>t.e(75).then(t.bind(null,414)),"v-3bbc9c36":()=>t.e(73).then(t.bind(null,415)),"v-c893ac02":()=>t.e(76).then(t.bind(null,416)),"v-0aa6e348":()=>t.e(80).then(t.bind(null,417)),"v-646982b6":()=>t.e(77).then(t.bind(null,418)),"v-e58eed0a":()=>t.e(81).then(t.bind(null,419)),"v-3aefc694":()=>t.e(82).then(t.bind(null,420)),"v-8a8f96b8":()=>t.e(83).then(t.bind(null,421)),"v-3b708a68":()=>t.e(84).then(t.bind(null,422)),"v-aaedfe56":()=>t.e(85).then(t.bind(null,423)),"v-853d4ce8":()=>t.e(78).then(t.bind(null,424)),"v-76d30e56":()=>t.e(86).then(t.bind(null,425)),"v-25149635":()=>t.e(87).then(t.bind(null,426)),"v-64b84cc8":()=>t.e(88).then(t.bind(null,427)),"v-d7c2cd94":()=>t.e(90).then(t.bind(null,428)),"v-03b90ef6":()=>t.e(91).then(t.bind(null,429)),"v-7cb77764":()=>t.e(93).then(t.bind(null,430)),"v-06016b90":()=>t.e(89).then(t.bind(null,431)),"v-82aca8c4":()=>t.e(92).then(t.bind(null,432)),"v-44429b16":()=>t.e(95).then(t.bind(null,433)),"v-20507bb6":()=>t.e(94).then(t.bind(null,434)),"v-ff2c43d4":()=>t.e(79).then(t.bind(null,435)),"v-75fe8b76":()=>t.e(96).then(t.bind(null,436)),"v-50ca41d4":()=>t.e(97).then(t.bind(null,437)),"v-a1727e30":()=>t.e(98).then(t.bind(null,438)),"v-19f13395":()=>t.e(99).then(t.bind(null,439)),"v-ee2ffd94":()=>t.e(102).then(t.bind(null,440)),"v-61711d96":()=>t.e(100).then(t.bind(null,441)),"v-05f71e86":()=>t.e(103).then(t.bind(null,442)),"v-1c129c56":()=>t.e(101).then(t.bind(null,443)),"v-1154cd55":()=>t.e(104).then(t.bind(null,444)),"v-2d7e6276":()=>t.e(105).then(t.bind(null,445)),"v-ccfcc414":()=>t.e(106).then(t.bind(null,446)),"v-4511cdf5":()=>t.e(108).then(t.bind(null,447)),"v-2935b8f6":()=>t.e(109).then(t.bind(null,448)),"v-4270c0d6":()=>t.e(110).then(t.bind(null,449)),"v-381950f6":()=>t.e(111).then(t.bind(null,450)),"v-ea959454":()=>t.e(112).then(t.bind(null,451)),"v-43e6a0f6":()=>t.e(113).then(t.bind(null,452)),"v-7ab512d4":()=>t.e(114).then(t.bind(null,453)),"v-798a3855":()=>t.e(107).then(t.bind(null,454)),"v-aad94e4c":()=>t.e(116).then(t.bind(null,455)),"v-28d1c972":()=>t.e(117).then(t.bind(null,456)),"v-16cdf598":()=>t.e(118).then(t.bind(null,457)),"v-508a854e":()=>t.e(119).then(t.bind(null,458)),"v-fc6abe4c":()=>t.e(120).then(t.bind(null,459)),"v-14cde4d4":()=>t.e(122).then(t.bind(null,460)),"v-1af07735":()=>t.e(123).then(t.bind(null,461)),"v-c37165d8":()=>t.e(124).then(t.bind(null,462)),"v-4281869e":()=>t.e(125).then(t.bind(null,463)),"v-90903354":()=>t.e(126).then(t.bind(null,464)),"v-177546b6":()=>t.e(127).then(t.bind(null,465)),"v-25a1c724":()=>t.e(115).then(t.bind(null,466)),"v-dbefd20a":()=>t.e(128).then(t.bind(null,467)),"v-134b9196":()=>t.e(129).then(t.bind(null,468)),"v-75011dd2":()=>t.e(130).then(t.bind(null,469)),"v-4ca36f14":()=>t.e(131).then(t.bind(null,470)),"v-40922854":()=>t.e(121).then(t.bind(null,471)),"v-52d35d94":()=>t.e(134).then(t.bind(null,472)),"v-462f9e96":()=>t.e(132).then(t.bind(null,473)),"v-6714f355":()=>t.e(135).then(t.bind(null,474)),"v-668fe79c":()=>t.e(133).then(t.bind(null,475)),"v-589990da":()=>t.e(137).then(t.bind(null,476)),"v-2dae6518":()=>t.e(136).then(t.bind(null,477)),"v-1855b854":()=>t.e(140).then(t.bind(null,478)),"v-627f2808":()=>t.e(138).then(t.bind(null,479)),"v-06bbf686":()=>t.e(139).then(t.bind(null,480)),"v-2aa5f770":()=>t.e(143).then(t.bind(null,481)),"v-de750ad6":()=>t.e(141).then(t.bind(null,482)),"v-4cd7ee94":()=>t.e(145).then(t.bind(null,483)),"v-72a35ab6":()=>t.e(146).then(t.bind(null,484)),"v-2c543360":()=>t.e(144).then(t.bind(null,485)),"v-18e80676":()=>t.e(147).then(t.bind(null,486)),"v-6658530a":()=>t.e(142).then(t.bind(null,487)),"v-0932ee36":()=>t.e(148).then(t.bind(null,488)),"v-1feb2446":()=>Promise.all([t.e(0),t.e(27)]).then(t.bind(null,366)),"v-4d64fddc":()=>t.e(149).then(t.bind(null,489)),"v-7594b9e4":()=>t.e(151).then(t.bind(null,490)),"v-4f419210":()=>t.e(150).then(t.bind(null,491)),"v-46051735":()=>Promise.all([t.e(0),t.e(28)]).then(t.bind(null,359)),"v-c0242c16":()=>t.e(153).then(t.bind(null,492)),"v-3c246d88":()=>t.e(156).then(t.bind(null,493)),"v-70f8c8cc":()=>t.e(155).then(t.bind(null,494)),"v-530de478":()=>t.e(154).then(t.bind(null,495)),"v-2b7a6570":()=>t.e(158).then(t.bind(null,496)),"v-2c3d8df6":()=>t.e(157).then(t.bind(null,497)),"v-1f294796":()=>t.e(152).then(t.bind(null,498)),"v-998bcf10":()=>t.e(160).then(t.bind(null,499)),"v-fb2b5dac":()=>t.e(159).then(t.bind(null,500)),"v-5f79073c":()=>t.e(161).then(t.bind(null,501)),"v-7e7f9636":()=>t.e(163).then(t.bind(null,502)),"v-975854e4":()=>t.e(162).then(t.bind(null,503)),"v-e7f83714":()=>t.e(164).then(t.bind(null,504)),"v-68186856":()=>t.e(166).then(t.bind(null,505)),"v-686f59a6":()=>t.e(165).then(t.bind(null,506)),"v-672f48dc":()=>t.e(168).then(t.bind(null,507)),"v-90080bd4":()=>t.e(167).then(t.bind(null,508)),"v-044a34d4":()=>t.e(171).then(t.bind(null,509)),"v-427a1a38":()=>t.e(169).then(t.bind(null,510)),"v-136ceff0":()=>t.e(170).then(t.bind(null,511)),"v-4583e590":()=>t.e(172).then(t.bind(null,512)),"v-956bf67c":()=>t.e(173).then(t.bind(null,513)),"v-202babb6":()=>t.e(174).then(t.bind(null,514)),"v-47286cc4":()=>t.e(175).then(t.bind(null,515)),"v-1dab2654":()=>t.e(176).then(t.bind(null,516)),"v-75394a56":()=>t.e(177).then(t.bind(null,517)),"v-3535af55":()=>t.e(178).then(t.bind(null,518)),"v-a7dea294":()=>t.e(182).then(t.bind(null,519)),"v-06803356":()=>t.e(179).then(t.bind(null,520)),"v-7979ae97":()=>t.e(180).then(t.bind(null,521)),"v-d7a6ce54":()=>t.e(181).then(t.bind(null,522)),"v-45d6b3b6":()=>t.e(183).then(t.bind(null,523)),"v-1ca07a96":()=>t.e(185).then(t.bind(null,524)),"v-0cc3d5c4":()=>t.e(184).then(t.bind(null,525)),"v-75697af6":()=>t.e(186).then(t.bind(null,526)),"v-69a751f6":()=>t.e(187).then(t.bind(null,527)),"v-437d6134":()=>t.e(188).then(t.bind(null,528)),"v-3809a908":()=>t.e(189).then(t.bind(null,529)),"v-e4b16414":()=>t.e(190).then(t.bind(null,530)),"v-4ba44c1e":()=>t.e(191).then(t.bind(null,531)),"v-5b3f2b36":()=>t.e(192).then(t.bind(null,532)),"v-230dd856":()=>t.e(193).then(t.bind(null,533)),"v-3e59127a":()=>t.e(194).then(t.bind(null,534)),"v-766a399c":()=>t.e(195).then(t.bind(null,535)),"v-056e8295":()=>t.e(198).then(t.bind(null,536)),"v-8b166274":()=>t.e(197).then(t.bind(null,537)),"v-51323614":()=>t.e(199).then(t.bind(null,538)),"v-957e3b94":()=>t.e(200).then(t.bind(null,539)),"v-11f34956":()=>t.e(201).then(t.bind(null,540)),"v-f63a1f14":()=>t.e(202).then(t.bind(null,541)),"v-740c98e3":()=>t.e(203).then(t.bind(null,542)),"v-1eaadfb6":()=>t.e(204).then(t.bind(null,543)),"v-1f35e996":()=>t.e(196).then(t.bind(null,544)),"v-1052e756":()=>t.e(205).then(t.bind(null,545)),"v-6ae4b354":()=>t.e(206).then(t.bind(null,546)),"v-c4cd1114":()=>t.e(208).then(t.bind(null,547)),"v-241e13dc":()=>t.e(207).then(t.bind(null,548)),"v-1e491f44":()=>t.e(209).then(t.bind(null,549)),"v-152fd816":()=>t.e(210).then(t.bind(null,550)),"v-2a3a9f07":()=>t.e(211).then(t.bind(null,551)),"v-09fdb16e":()=>t.e(212).then(t.bind(null,552)),"v-536a2db2":()=>t.e(215).then(t.bind(null,553)),"v-47aa0af6":()=>t.e(213).then(t.bind(null,554)),"v-03d4060c":()=>t.e(216).then(t.bind(null,555)),"v-193751b5":()=>t.e(217).then(t.bind(null,556)),"v-29de2bd6":()=>t.e(218).then(t.bind(null,557)),"v-6fbd0d74":()=>t.e(219).then(t.bind(null,558)),"v-6deb5754":()=>t.e(214).then(t.bind(null,559)),"v-e7e10654":()=>t.e(222).then(t.bind(null,560)),"v-45a492d4":()=>t.e(220).then(t.bind(null,561)),"v-c0a10c6e":()=>t.e(221).then(t.bind(null,562)),"v-3237d27c":()=>t.e(223).then(t.bind(null,563)),"v-9f8cb514":()=>t.e(224).then(t.bind(null,564)),"v-1cd28bd2":()=>t.e(225).then(t.bind(null,565)),"v-130d5996":()=>t.e(227).then(t.bind(null,566)),"v-603ef105":()=>t.e(226).then(t.bind(null,567)),"v-0d931942":()=>t.e(229).then(t.bind(null,568)),"v-72cc1575":()=>t.e(230).then(t.bind(null,569)),"v-b2ba5494":()=>t.e(231).then(t.bind(null,570)),"v-6565b015":()=>t.e(232).then(t.bind(null,571)),"v-313eaafe":()=>t.e(233).then(t.bind(null,572)),"v-2e6d3dd6":()=>t.e(235).then(t.bind(null,573)),"v-5f8125a8":()=>t.e(236).then(t.bind(null,574)),"v-3e60add8":()=>t.e(237).then(t.bind(null,575)),"v-c77fdb78":()=>t.e(238).then(t.bind(null,576)),"v-47f675d6":()=>t.e(239).then(t.bind(null,577)),"v-6be89536":()=>t.e(240).then(t.bind(null,578)),"v-b4635a54":()=>t.e(241).then(t.bind(null,579)),"v-017e4d94":()=>t.e(242).then(t.bind(null,580)),"v-4adbc144":()=>t.e(243).then(t.bind(null,581)),"v-3d8677b5":()=>t.e(244).then(t.bind(null,582)),"v-409d1ed6":()=>t.e(245).then(t.bind(null,583)),"v-ecfda394":()=>t.e(246).then(t.bind(null,584)),"v-3ec58cf4":()=>t.e(234).then(t.bind(null,585)),"v-dc126788":()=>t.e(248).then(t.bind(null,586)),"v-2336a5d6":()=>t.e(247).then(t.bind(null,587)),"v-729846c2":()=>t.e(249).then(t.bind(null,588)),"v-7065f1d4":()=>t.e(250).then(t.bind(null,589)),"v-7c187e6a":()=>t.e(252).then(t.bind(null,590)),"v-215b5716":()=>t.e(251).then(t.bind(null,591)),"v-f53a3056":()=>t.e(253).then(t.bind(null,592)),"v-59058056":()=>t.e(254).then(t.bind(null,593)),"v-f182da4c":()=>t.e(228).then(t.bind(null,594)),"v-2e7d0c96":()=>t.e(255).then(t.bind(null,595)),"v-0b125b94":()=>t.e(257).then(t.bind(null,596)),"v-b7c47b54":()=>t.e(256).then(t.bind(null,597)),"v-439574d4":()=>t.e(258).then(t.bind(null,598)),"v-14d28e38":()=>t.e(260).then(t.bind(null,599)),"v-31bdf494":()=>t.e(259).then(t.bind(null,600)),"v-5f42e590":()=>t.e(261).then(t.bind(null,601)),"v-4af7c6e8":()=>t.e(262).then(t.bind(null,602)),"v-6904fb64":()=>t.e(263).then(t.bind(null,603)),"v-a06bb43a":()=>t.e(264).then(t.bind(null,604)),"v-4f788836":()=>t.e(266).then(t.bind(null,605)),"v-775de6e0":()=>t.e(265).then(t.bind(null,606)),"v-655aa9f6":()=>t.e(267).then(t.bind(null,607)),"v-30f0a494":()=>t.e(271).then(t.bind(null,608)),"v-52f6d9ca":()=>t.e(269).then(t.bind(null,609)),"v-1d91c214":()=>t.e(270).then(t.bind(null,610)),"v-429eb076":()=>t.e(273).then(t.bind(null,611)),"v-24ea5155":()=>t.e(268).then(t.bind(null,612)),"v-07d84b36":()=>t.e(274).then(t.bind(null,613)),"v-29b0aa88":()=>t.e(275).then(t.bind(null,614)),"v-2243ecb0":()=>t.e(278).then(t.bind(null,615)),"v-03ac50d4":()=>t.e(276).then(t.bind(null,616)),"v-76903e54":()=>t.e(279).then(t.bind(null,617)),"v-98c39f14":()=>t.e(277).then(t.bind(null,618)),"v-777ef2b5":()=>t.e(280).then(t.bind(null,619)),"v-778dee2c":()=>t.e(281).then(t.bind(null,620)),"v-3bf0d5d6":()=>t.e(272).then(t.bind(null,621)),"v-5ac019b2":()=>t.e(283).then(t.bind(null,622)),"v-1350a57c":()=>t.e(284).then(t.bind(null,623)),"v-f9b4ec96":()=>t.e(286).then(t.bind(null,624)),"v-1b07dfc0":()=>t.e(287).then(t.bind(null,625)),"v-517db6e6":()=>t.e(288).then(t.bind(null,626)),"v-2d041636":()=>t.e(285).then(t.bind(null,627)),"v-7abf8e50":()=>t.e(282).then(t.bind(null,628)),"v-1358a386":()=>t.e(289).then(t.bind(null,629)),"v-013a02d6":()=>t.e(290).then(t.bind(null,630)),"v-3fdc26d4":()=>t.e(291).then(t.bind(null,631)),"v-4b3682bc":()=>Promise.all([t.e(0),t.e(29)]).then(t.bind(null,367)),"v-9992a9d4":()=>t.e(292).then(t.bind(null,632)),"v-b8fcda54":()=>t.e(293).then(t.bind(null,633)),"v-982d61f0":()=>t.e(294).then(t.bind(null,634)),"v-29dd6006":()=>t.e(295).then(t.bind(null,635)),"v-c05d1df8":()=>t.e(296).then(t.bind(null,636)),"v-3a692956":()=>t.e(297).then(t.bind(null,637)),"v-718fa615":()=>Promise.all([t.e(0),t.e(30)]).then(t.bind(null,360)),"v-78f9a3d6":()=>t.e(298).then(t.bind(null,638)),"v-060f12fc":()=>t.e(300).then(t.bind(null,639)),"v-42f699a4":()=>t.e(299).then(t.bind(null,640)),"v-1a5f1d96":()=>t.e(302).then(t.bind(null,641)),"v-70c98784":()=>t.e(301).then(t.bind(null,642)),"v-76427afe":()=>t.e(303).then(t.bind(null,643)),"v-0de11fe0":()=>t.e(304).then(t.bind(null,644)),"v-c66c4ad0":()=>t.e(306).then(t.bind(null,645)),"v-90a2eed4":()=>t.e(308).then(t.bind(null,646)),"v-42f51224":()=>t.e(305).then(t.bind(null,647)),"v-7504089c":()=>t.e(310).then(t.bind(null,648)),"v-7a257416":()=>t.e(309).then(t.bind(null,649)),"v-42b4364c":()=>t.e(311).then(t.bind(null,650)),"v-7e2ef6f8":()=>t.e(307).then(t.bind(null,651)),"v-ed55735c":()=>t.e(313).then(t.bind(null,652)),"v-4710ed94":()=>t.e(312).then(t.bind(null,653)),"v-64a017ae":()=>t.e(314).then(t.bind(null,654)),"v-401963b4":()=>t.e(315).then(t.bind(null,655)),"v-2580dfb6":()=>t.e(316).then(t.bind(null,656)),"v-ac772924":()=>t.e(317).then(t.bind(null,657)),"v-3ed53990":()=>t.e(318).then(t.bind(null,658)),"v-07b72814":()=>t.e(320).then(t.bind(null,659)),"v-a8bb0b28":()=>t.e(319).then(t.bind(null,660)),"v-48f684ca":()=>t.e(321).then(t.bind(null,661)),"v-b482f194":()=>t.e(322).then(t.bind(null,662))};function Xr(e){const n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}const Gr=/-(\w)/g,Qr=Xr(e=>e.replace(Gr,(e,n)=>n?n.toUpperCase():"")),Kr=/\B([A-Z])/g,Zr=Xr(e=>e.replace(Kr,"-$1").toLowerCase()),es=Xr(e=>e.charAt(0).toUpperCase()+e.slice(1));function ns(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(es(Qr(n))):e(es(n))||e(Zr(n))}const ts=Object.assign({},Yr,Hr),as=e=>ts[e],os=e=>Hr[e],is=e=>Yr[e],rs=e=>Yt.component(e);function ss(e){return ns(os,e)}function ls(e){return ns(is,e)}function cs(e){return ns(as,e)}function ds(e){return ns(rs,e)}function ps(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!ds(e)&&cs(e)){const n=await cs(e)();Yt.component(e,n.default)}}))}function us(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var hs=t(119),ms=t.n(hs),fs=t(120),gs=t.n(fs),vs={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(t=>{n+=` ${t}="${gs()(e[t])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=ys(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=xs(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return ms()([{name:"description",content:this.$description}],e,this.siteMeta,ws)},updateCanonicalLink(){bs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ys(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){xs(null,this.currentMetaTags),bs()}};function bs(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function ys(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function xs(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(t=>{n.setAttribute(t,e[t])}),document.head.appendChild(n),n})}function ws(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}t(65);var ks=t(41),Ts=t.n(ks),Is={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:Ts()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+t;for(let e=0;e<n.length;e++){const i=n[e],r=n[e+1],s=0===e&&0===t||t>=i.parentElement.offsetTop+10&&(!r||t<r.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(i.hash)){const t=i;if(o===a)for(let t=e+1;t<n.length;t++)if(l===decodeURIComponent(n[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Es=t(42),Ss=t.n(Es),zs={mounted(){Ss.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,t)=>{e.path===n.path||Yt.component(e.name)||Ss.a.start(),t()}),this.$router.afterEach(()=>{Ss.a.done(),this.isSidebarOpen=!1})}},Ps=(t(268),[vs,Is,zs,{data:()=>({zoom:null}),mounted(){this.updateCopy()},updated(){this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{document.querySelectorAll('div[class*="language-"]').forEach(this.generateCopyButton)},1e3)},generateCopyButton:function(e){if(e.classList.contains("codecopy-enabled"))return;const n=document.createElement("span");n.className="code-copy",n.title="Click to Copy to Clipboard",n.addEventListener("click",()=>{this.copyToClipboard(e.innerText),n.classList.add("copied");const t=setTimeout(()=>{n.classList.remove("copied"),clearTimeout(t)},2e3)}),e.appendChild(n),e.classList.add("codecopy-enabled")},copyToClipboard:function(e){const n=document.createElement("textarea");n.value=e,n.setAttribute("readonly",""),n.style.position="absolute",n.style.left="-9999px",document.body.appendChild(n);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);n.select(),document.execCommand("copy"),document.body.removeChild(n),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}}]),Cs={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return us("layout",e),Yt.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},js=t(18),As=Object(js.a)(Cs,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...t);break;default:throw new Error("Unknown option name.")}}(As,"mixins",Ps);const Ds=[{name:"v-11df0e36",path:"/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-11df0e36").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-613aa916",path:"/en/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-613aa916").then(t)}},{path:"/en/index.html",redirect:"/en/"},{name:"v-f26ec16a",path:"/en/components/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f26ec16a").then(t)}},{path:"/en/components/index.html",redirect:"/en/components/"},{name:"v-b3e9ed94",path:"/en/components/basic/a.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b3e9ed94").then(t)}},{name:"v-75805ecd",path:"/en/components/basic/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-75805ecd").then(t)}},{path:"/en/components/basic/index.html",redirect:"/en/components/basic/"},{name:"v-7c40e756",path:"/en/components/basic/barcode.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7c40e756").then(t)}},{name:"v-1e30b996",path:"/en/components/basic/chart.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1e30b996").then(t)}},{name:"v-40142828",path:"/en/components/basic/image-animator.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-40142828").then(t)}},{name:"v-160aff14",path:"/en/components/basic/image.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-160aff14").then(t)}},{name:"v-4599b396",path:"/en/components/basic/marquee.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4599b396").then(t)}},{name:"v-44b0b780",path:"/en/components/basic/progress.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-44b0b780").then(t)}},{name:"v-68e1933e",path:"/en/components/basic/qrcode.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-68e1933e").then(t)}},{name:"v-1774cd46",path:"/en/components/basic/span.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1774cd46").then(t)}},{name:"v-7dbe2080",path:"/en/components/basic/text.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7dbe2080").then(t)}},{name:"v-3d3c09a7",path:"/en/components/container/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3d3c09a7").then(t)}},{path:"/en/components/container/index.html",redirect:"/en/components/container/"},{name:"v-02db6d94",path:"/en/components/container/list-item.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-02db6d94").then(t)}},{name:"v-2b6f63d6",path:"/en/components/container/div.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2b6f63d6").then(t)}},{name:"v-54443c26",path:"/en/components/container/scroll.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-54443c26").then(t)}},{name:"v-f6317614",path:"/en/components/container/stack.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f6317614").then(t)}},{name:"v-cf625d60",path:"/en/components/container/swiper.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-cf625d60").then(t)}},{name:"v-75c52e96",path:"/en/components/form/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-75c52e96").then(t)}},{path:"/en/components/form/index.html",redirect:"/en/components/form/"},{name:"v-2b656194",path:"/en/components/form/slider.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2b656194").then(t)}},{name:"v-f6a85044",path:"/en/components/form/input.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f6a85044").then(t)}},{name:"v-e4ca2fd4",path:"/en/components/form/picker.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-e4ca2fd4").then(t)}},{name:"v-5d3cf656",path:"/en/components/form/switch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-5d3cf656").then(t)}},{name:"v-3c6e5e4e",path:"/en/components/general/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3c6e5e4e").then(t)}},{path:"/en/components/general/index.html",redirect:"/en/components/general/"},{name:"v-b7631414",path:"/en/components/general/background-img-styles.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b7631414").then(t)}},{name:"v-61f1485c",path:"/en/components/general/events.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-61f1485c").then(t)}},{name:"v-ca844214",path:"/en/components/general/color.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ca844214").then(t)}},{name:"v-034ad2d6",path:"/en/components/general/methods.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-034ad2d6").then(t)}},{name:"v-714e99b0",path:"/en/components/general/properties.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-714e99b0").then(t)}},{name:"v-353fde94",path:"/en/components/general/style.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-353fde94").then(t)}},{name:"v-1510df86",path:"/en/features/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1510df86").then(t)}},{path:"/en/features/index.html",redirect:"/en/features/"},{name:"v-27fabfbf",path:"/en/features/basic/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-27fabfbf").then(t)}},{path:"/en/features/basic/index.html",redirect:"/en/features/basic/"},{name:"v-59887b56",path:"/en/features/basic/app.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-59887b56").then(t)}},{name:"v-5b9bc276",path:"/en/features/basic/configuration.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-5b9bc276").then(t)}},{name:"v-f2386108",path:"/en/features/basic/device.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f2386108").then(t)}},{name:"v-9b4d3678",path:"/en/components/container/list.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-9b4d3678").then(t)}},{name:"v-26d74295",path:"/en/features/data/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-26d74295").then(t)}},{path:"/en/features/data/index.html",redirect:"/en/features/data/"},{name:"v-374da7d6",path:"/en/features/basic/router.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-374da7d6").then(t)}},{name:"v-b992a184",path:"/en/features/data/storage.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b992a184").then(t)}},{name:"v-2a1e2616",path:"/en/components/general/animation-style.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2a1e2616").then(t)}},{name:"v-b8027794",path:"/en/features/grammar.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b8027794").then(t)}},{name:"v-3bbc9c36",path:"/en/features/data/file.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3bbc9c36").then(t)}},{name:"v-c893ac02",path:"/en/features/network/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c893ac02").then(t)}},{path:"/en/features/network/index.html",redirect:"/en/features/network/"},{name:"v-0aa6e348",path:"/en/features/network/uploadtask.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-0aa6e348").then(t)}},{name:"v-646982b6",path:"/en/features/network/fetch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-646982b6").then(t)}},{name:"v-e58eed0a",path:"/en/features/other/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-e58eed0a").then(t)}},{path:"/en/features/other/index.html",redirect:"/en/features/other/"},{name:"v-3aefc694",path:"/en/features/other/audio.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3aefc694").then(t)}},{name:"v-8a8f96b8",path:"/en/features/other/prompt.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-8a8f96b8").then(t)}},{name:"v-3b708a68",path:"/en/features/permission.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3b708a68").then(t)}},{name:"v-aaedfe56",path:"/en/features/security/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-aaedfe56").then(t)}},{path:"/en/features/security/index.html",redirect:"/en/features/security/"},{name:"v-853d4ce8",path:"/en/features/network/interconnect.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-853d4ce8").then(t)}},{name:"v-76d30e56",path:"/en/features/security/crypto.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-76d30e56").then(t)}},{name:"v-25149635",path:"/en/features/system/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-25149635").then(t)}},{path:"/en/features/system/index.html",redirect:"/en/features/system/"},{name:"v-64b84cc8",path:"/en/features/system/alarm.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-64b84cc8").then(t)}},{name:"v-d7c2cd94",path:"/en/features/system/brightness.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-d7c2cd94").then(t)}},{name:"v-03b90ef6",path:"/en/features/system/event.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-03b90ef6").then(t)}},{name:"v-7cb77764",path:"/en/features/system/network.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7cb77764").then(t)}},{name:"v-06016b90",path:"/en/features/system/battery.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-06016b90").then(t)}},{name:"v-82aca8c4",path:"/en/features/system/geolocation.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-82aca8c4").then(t)}},{name:"v-44429b16",path:"/en/features/system/sensor.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-44429b16").then(t)}},{name:"v-20507bb6",path:"/en/features/system/record.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-20507bb6").then(t)}},{name:"v-ff2c43d4",path:"/en/features/network/request.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ff2c43d4").then(t)}},{name:"v-75fe8b76",path:"/en/features/system/vibrator.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-75fe8b76").then(t)}},{name:"v-50ca41d4",path:"/en/features/system/volume.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-50ca41d4").then(t)}},{name:"v-a1727e30",path:"/en/features/system/zip.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-a1727e30").then(t)}},{name:"v-19f13395",path:"/en/guide/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-19f13395").then(t)}},{path:"/en/guide/index.html",redirect:"/en/guide/"},{name:"v-ee2ffd94",path:"/en/guide/best-practice/memory.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ee2ffd94").then(t)}},{name:"v-61711d96",path:"/en/guide/best-practice/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-61711d96").then(t)}},{path:"/en/guide/best-practice/index.html",redirect:"/en/guide/best-practice/"},{name:"v-05f71e86",path:"/en/guide/best-practice/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-05f71e86").then(t)}},{name:"v-1c129c56",path:"/en/guide/best-practice/business.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1c129c56").then(t)}},{name:"v-1154cd55",path:"/en/guide/design/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1154cd55").then(t)}},{path:"/en/guide/design/index.html",redirect:"/en/guide/design/"},{name:"v-2d7e6276",path:"/en/guide/design/multi-screens.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2d7e6276").then(t)}},{name:"v-ccfcc414",path:"/en/guide/developer-materials/extension-components.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ccfcc414").then(t)}},{name:"v-4511cdf5",path:"/en/guide/framework/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4511cdf5").then(t)}},{path:"/en/guide/framework/index.html",redirect:"/en/guide/framework/"},{name:"v-2935b8f6",path:"/en/guide/framework/manifest.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2935b8f6").then(t)}},{name:"v-4270c0d6",path:"/en/guide/framework/other/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4270c0d6").then(t)}},{path:"/en/guide/framework/other/index.html",redirect:"/en/guide/framework/other/"},{name:"v-381950f6",path:"/en/guide/framework/other/background-running.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-381950f6").then(t)}},{name:"v-ea959454",path:"/en/guide/framework/other/hap-schema.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ea959454").then(t)}},{name:"v-43e6a0f6",path:"/en/guide/framework/other/i18n.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-43e6a0f6").then(t)}},{name:"v-7ab512d4",path:"/en/guide/framework/other/js-chunk.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7ab512d4").then(t)}},{name:"v-798a3855",path:"/en/guide/developer-materials/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-798a3855").then(t)}},{path:"/en/guide/developer-materials/index.html",redirect:"/en/guide/developer-materials/"},{name:"v-aad94e4c",path:"/en/guide/framework/other/launch-mode.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-aad94e4c").then(t)}},{name:"v-28d1c972",path:"/en/guide/framework/page-switch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-28d1c972").then(t)}},{name:"v-16cdf598",path:"/en/guide/framework/project-structure.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-16cdf598").then(t)}},{name:"v-508a854e",path:"/en/guide/framework/script/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-508a854e").then(t)}},{path:"/en/guide/framework/script/index.html",redirect:"/en/guide/framework/script/"},{name:"v-fc6abe4c",path:"/en/guide/framework/script/global-data-method.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-fc6abe4c").then(t)}},{name:"v-14cde4d4",path:"/en/guide/framework/script/page-data.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-14cde4d4").then(t)}},{name:"v-1af07735",path:"/en/guide/framework/style/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1af07735").then(t)}},{path:"/en/guide/framework/style/index.html",redirect:"/en/guide/framework/style/"},{name:"v-c37165d8",path:"/en/guide/framework/style/media-query.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c37165d8").then(t)}},{name:"v-4281869e",path:"/en/guide/framework/style/page-style-and-layout.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4281869e").then(t)}},{name:"v-90903354",path:"/en/guide/framework/template.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-90903354").then(t)}},{name:"v-177546b6",path:"/en/guide/framework/template/Props.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-177546b6").then(t)}},{name:"v-25a1c724",path:"/en/guide/framework/other/language-list.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-25a1c724").then(t)}},{name:"v-dbefd20a",path:"/en/guide/framework/template/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-dbefd20a").then(t)}},{path:"/en/guide/framework/template/index.html",redirect:"/en/guide/framework/template/"},{name:"v-134b9196",path:"/en/guide/framework/template/component.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-134b9196").then(t)}},{name:"v-75011dd2",path:"/en/guide/framework/template/computed.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-75011dd2").then(t)}},{name:"v-4ca36f14",path:"/en/guide/framework/template/event.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4ca36f14").then(t)}},{name:"v-40922854",path:"/en/guide/framework/script/lifecycle.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-40922854").then(t)}},{name:"v-52d35d94",path:"/en/guide/framework/ux.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-52d35d94").then(t)}},{name:"v-462f9e96",path:"/en/guide/framework/template/for.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-462f9e96").then(t)}},{name:"v-6714f355",path:"/en/guide/multi-screens/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6714f355").then(t)}},{path:"/en/guide/multi-screens/index.html",redirect:"/en/guide/multi-screens/"},{name:"v-668fe79c",path:"/en/guide/framework/template/if.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-668fe79c").then(t)}},{name:"v-589990da",path:"/en/guide/multi-screens/samples.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-589990da").then(t)}},{name:"v-2dae6518",path:"/en/guide/multi-screens/conditional-compilation.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2dae6518").then(t)}},{name:"v-1855b854",path:"/en/guide/other/tips.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1855b854").then(t)}},{name:"v-627f2808",path:"/en/guide/multi-screens/specs.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-627f2808").then(t)}},{name:"v-06bbf686",path:"/en/guide/other/faq.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-06bbf686").then(t)}},{name:"v-2aa5f770",path:"/en/guide/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2aa5f770").then(t)}},{name:"v-de750ad6",path:"/en/guide/publish/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-de750ad6").then(t)}},{path:"/en/guide/publish/index.html",redirect:"/en/guide/publish/"},{name:"v-4cd7ee94",path:"/en/guide/start/data-fetch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4cd7ee94").then(t)}},{name:"v-72a35ab6",path:"/en/guide/start/project-overview.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-72a35ab6").then(t)}},{name:"v-2c543360",path:"/en/guide/start/add-interactivity.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2c543360").then(t)}},{name:"v-18e80676",path:"/en/guide/start/toolkit-params.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-18e80676").then(t)}},{name:"v-6658530a",path:"/en/guide/publish/acceptance-criteria.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6658530a").then(t)}},{name:"v-0932ee36",path:"/en/guide/start/user-interface.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-0932ee36").then(t)}},{name:"v-1feb2446",path:"/en/guide/start/use-ide.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1feb2446").then(t)}},{name:"v-4d64fddc",path:"/en/guide/version/APILevel2.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4d64fddc").then(t)}},{name:"v-7594b9e4",path:"/en/guide/version/APILevel4.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7594b9e4").then(t)}},{name:"v-4f419210",path:"/en/guide/version/APILevel3.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4f419210").then(t)}},{name:"v-46051735",path:"/en/samples/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-46051735").then(t)}},{path:"/en/samples/index.html",redirect:"/en/samples/"},{name:"v-c0242c16",path:"/en/tools/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c0242c16").then(t)}},{path:"/en/tools/index.html",redirect:"/en/tools/"},{name:"v-3c246d88",path:"/en/tools/debug/debug.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3c246d88").then(t)}},{name:"v-70f8c8cc",path:"/en/tools/debug/build-setting.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-70f8c8cc").then(t)}},{name:"v-530de478",path:"/en/tools/debug/audit.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-530de478").then(t)}},{name:"v-2b7a6570",path:"/en/tools/debug/multi-screens.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2b7a6570").then(t)}},{name:"v-2c3d8df6",path:"/en/tools/debug/memory.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2c3d8df6").then(t)}},{name:"v-1f294796",path:"/en/guide/version/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1f294796").then(t)}},{path:"/en/guide/version/index.html",redirect:"/en/guide/version/"},{name:"v-998bcf10",path:"/en/tools/debug/toolbar.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-998bcf10").then(t)}},{name:"v-fb2b5dac",path:"/en/tools/debug/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-fb2b5dac").then(t)}},{name:"v-5f79073c",path:"/en/tools/debug/watch-log.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-5f79073c").then(t)}},{name:"v-7e7f9636",path:"/en/tools/dev/format.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7e7f9636").then(t)}},{name:"v-975854e4",path:"/en/tools/dev/build.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-975854e4").then(t)}},{name:"v-e7f83714",path:"/en/tools/dev/manifest.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-e7f83714").then(t)}},{name:"v-68186856",path:"/en/tools/devicedebug/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-68186856").then(t)}},{name:"v-686f59a6",path:"/en/tools/dev/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-686f59a6").then(t)}},{name:"v-672f48dc",path:"/en/tools/emulator/emulator-run.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-672f48dc").then(t)}},{name:"v-90080bd4",path:"/en/tools/emulator/create-emulator.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-90080bd4").then(t)}},{name:"v-044a34d4",path:"/en/tools/project/template.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-044a34d4").then(t)}},{name:"v-427a1a38",path:"/en/tools/project/creat-project.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-427a1a38").then(t)}},{name:"v-136ceff0",path:"/en/tools/project/project.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-136ceff0").then(t)}},{name:"v-4583e590",path:"/en/tools/release/release.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4583e590").then(t)}},{name:"v-956bf67c",path:"/en/tools/release/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-956bf67c").then(t)}},{name:"v-202babb6",path:"/en/tools/start/about.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-202babb6").then(t)}},{name:"v-47286cc4",path:"/en/tools/start/project.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-47286cc4").then(t)}},{name:"v-1dab2654",path:"/en/tools/toolkit/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1dab2654").then(t)}},{name:"v-75394a56",path:"/en/tools/toolkit/update.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-75394a56").then(t)}},{name:"v-3535af55",path:"/zh/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3535af55").then(t)}},{path:"/zh/index.html",redirect:"/zh/"},{name:"v-a7dea294",path:"/zh/components/basic/barcode.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-a7dea294").then(t)}},{name:"v-06803356",path:"/zh/components/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-06803356").then(t)}},{path:"/zh/components/index.html",redirect:"/zh/components/"},{name:"v-7979ae97",path:"/zh/components/basic/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7979ae97").then(t)}},{path:"/zh/components/basic/index.html",redirect:"/zh/components/basic/"},{name:"v-d7a6ce54",path:"/zh/components/basic/a.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-d7a6ce54").then(t)}},{name:"v-45d6b3b6",path:"/zh/components/basic/chart.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-45d6b3b6").then(t)}},{name:"v-1ca07a96",path:"/zh/components/basic/image.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1ca07a96").then(t)}},{name:"v-0cc3d5c4",path:"/zh/components/basic/image-animator.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-0cc3d5c4").then(t)}},{name:"v-75697af6",path:"/zh/components/basic/marquee.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-75697af6").then(t)}},{name:"v-69a751f6",path:"/zh/components/basic/progress.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-69a751f6").then(t)}},{name:"v-437d6134",path:"/zh/components/basic/qrcode.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-437d6134").then(t)}},{name:"v-3809a908",path:"/zh/components/basic/span.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3809a908").then(t)}},{name:"v-e4b16414",path:"/zh/components/basic/text.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-e4b16414").then(t)}},{name:"v-4ba44c1e",path:"/zh/components/container/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4ba44c1e").then(t)}},{path:"/zh/components/container/index.html",redirect:"/zh/components/container/"},{name:"v-5b3f2b36",path:"/zh/components/container/div.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-5b3f2b36").then(t)}},{name:"v-230dd856",path:"/zh/components/container/list-item.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-230dd856").then(t)}},{name:"v-3e59127a",path:"/zh/components/container/list.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3e59127a").then(t)}},{name:"v-766a399c",path:"/zh/components/container/scroll.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-766a399c").then(t)}},{name:"v-056e8295",path:"/zh/components/form/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-056e8295").then(t)}},{path:"/zh/components/form/index.html",redirect:"/zh/components/form/"},{name:"v-8b166274",path:"/zh/components/container/swiper.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-8b166274").then(t)}},{name:"v-51323614",path:"/zh/components/form/input.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-51323614").then(t)}},{name:"v-957e3b94",path:"/zh/components/form/picker.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-957e3b94").then(t)}},{name:"v-11f34956",path:"/zh/components/form/slider.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-11f34956").then(t)}},{name:"v-f63a1f14",path:"/zh/components/form/switch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f63a1f14").then(t)}},{name:"v-740c98e3",path:"/zh/components/general/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-740c98e3").then(t)}},{path:"/zh/components/general/index.html",redirect:"/zh/components/general/"},{name:"v-1eaadfb6",path:"/zh/components/general/animation-style.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1eaadfb6").then(t)}},{name:"v-1f35e996",path:"/zh/components/container/stack.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1f35e996").then(t)}},{name:"v-1052e756",path:"/zh/components/general/background-img-styles.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1052e756").then(t)}},{name:"v-6ae4b354",path:"/zh/components/general/color.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6ae4b354").then(t)}},{name:"v-c4cd1114",path:"/zh/components/general/methods.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c4cd1114").then(t)}},{name:"v-241e13dc",path:"/zh/components/general/events.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-241e13dc").then(t)}},{name:"v-1e491f44",path:"/zh/components/general/properties.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1e491f44").then(t)}},{name:"v-152fd816",path:"/zh/components/general/style.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-152fd816").then(t)}},{name:"v-2a3a9f07",path:"/zh/features/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2a3a9f07").then(t)}},{path:"/zh/features/index.html",redirect:"/zh/features/"},{name:"v-09fdb16e",path:"/zh/features/basic/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-09fdb16e").then(t)}},{path:"/zh/features/basic/index.html",redirect:"/zh/features/basic/"},{name:"v-536a2db2",path:"/zh/features/basic/device.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-536a2db2").then(t)}},{name:"v-47aa0af6",path:"/zh/features/basic/app.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-47aa0af6").then(t)}},{name:"v-03d4060c",path:"/zh/features/basic/router.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-03d4060c").then(t)}},{name:"v-193751b5",path:"/zh/features/data/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-193751b5").then(t)}},{path:"/zh/features/data/index.html",redirect:"/zh/features/data/"},{name:"v-29de2bd6",path:"/zh/features/data/file.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-29de2bd6").then(t)}},{name:"v-6fbd0d74",path:"/zh/features/data/storage.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6fbd0d74").then(t)}},{name:"v-6deb5754",path:"/zh/features/basic/configuration.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6deb5754").then(t)}},{name:"v-e7e10654",path:"/zh/features/network/fetch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-e7e10654").then(t)}},{name:"v-45a492d4",path:"/zh/features/grammar.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-45a492d4").then(t)}},{name:"v-c0a10c6e",path:"/zh/features/network/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c0a10c6e").then(t)}},{path:"/zh/features/network/index.html",redirect:"/zh/features/network/"},{name:"v-3237d27c",path:"/zh/features/network/interconnect.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3237d27c").then(t)}},{name:"v-9f8cb514",path:"/zh/features/network/request.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-9f8cb514").then(t)}},{name:"v-1cd28bd2",path:"/zh/features/network/uploadtask.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1cd28bd2").then(t)}},{name:"v-130d5996",path:"/zh/features/other/audio.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-130d5996").then(t)}},{name:"v-603ef105",path:"/zh/features/other/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-603ef105").then(t)}},{path:"/zh/features/other/index.html",redirect:"/zh/features/other/"},{name:"v-0d931942",path:"/zh/features/permission.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-0d931942").then(t)}},{name:"v-72cc1575",path:"/zh/features/security/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-72cc1575").then(t)}},{path:"/zh/features/security/index.html",redirect:"/zh/features/security/"},{name:"v-b2ba5494",path:"/zh/features/security/crypto.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b2ba5494").then(t)}},{name:"v-6565b015",path:"/zh/features/system/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6565b015").then(t)}},{path:"/zh/features/system/index.html",redirect:"/zh/features/system/"},{name:"v-313eaafe",path:"/zh/features/system/alarm.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-313eaafe").then(t)}},{name:"v-2e6d3dd6",path:"/zh/features/system/brightness.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2e6d3dd6").then(t)}},{name:"v-5f8125a8",path:"/zh/features/system/event.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-5f8125a8").then(t)}},{name:"v-3e60add8",path:"/zh/features/system/geolocation.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3e60add8").then(t)}},{name:"v-c77fdb78",path:"/zh/features/system/network.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c77fdb78").then(t)}},{name:"v-47f675d6",path:"/zh/features/system/record.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-47f675d6").then(t)}},{name:"v-6be89536",path:"/zh/features/system/sensor.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6be89536").then(t)}},{name:"v-b4635a54",path:"/zh/features/system/vibrator.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b4635a54").then(t)}},{name:"v-017e4d94",path:"/zh/features/system/volume.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-017e4d94").then(t)}},{name:"v-4adbc144",path:"/zh/features/system/zip.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4adbc144").then(t)}},{name:"v-3d8677b5",path:"/zh/guide/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3d8677b5").then(t)}},{path:"/zh/guide/index.html",redirect:"/zh/guide/"},{name:"v-409d1ed6",path:"/zh/guide/best-practice/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-409d1ed6").then(t)}},{path:"/zh/guide/best-practice/index.html",redirect:"/zh/guide/best-practice/"},{name:"v-ecfda394",path:"/zh/guide/best-practice/business.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ecfda394").then(t)}},{name:"v-3ec58cf4",path:"/zh/features/system/battery.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3ec58cf4").then(t)}},{name:"v-dc126788",path:"/zh/guide/best-practice/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-dc126788").then(t)}},{name:"v-2336a5d6",path:"/zh/guide/best-practice/memory.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2336a5d6").then(t)}},{name:"v-729846c2",path:"/zh/guide/design/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-729846c2").then(t)}},{path:"/zh/guide/design/index.html",redirect:"/zh/guide/design/"},{name:"v-7065f1d4",path:"/zh/guide/design/multi-screens.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7065f1d4").then(t)}},{name:"v-7c187e6a",path:"/zh/guide/developer-materials/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7c187e6a").then(t)}},{path:"/zh/guide/developer-materials/index.html",redirect:"/zh/guide/developer-materials/"},{name:"v-215b5716",path:"/zh/guide/developer-materials/extension-components.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-215b5716").then(t)}},{name:"v-f53a3056",path:"/zh/guide/framework/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f53a3056").then(t)}},{path:"/zh/guide/framework/index.html",redirect:"/zh/guide/framework/"},{name:"v-59058056",path:"/zh/guide/framework/manifest.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-59058056").then(t)}},{name:"v-f182da4c",path:"/zh/features/other/prompt.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f182da4c").then(t)}},{name:"v-2e7d0c96",path:"/zh/guide/framework/other/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2e7d0c96").then(t)}},{path:"/zh/guide/framework/other/index.html",redirect:"/zh/guide/framework/other/"},{name:"v-0b125b94",path:"/zh/guide/framework/other/hap-schema.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-0b125b94").then(t)}},{name:"v-b7c47b54",path:"/zh/guide/framework/other/background-running.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b7c47b54").then(t)}},{name:"v-439574d4",path:"/zh/guide/framework/other/i18n.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-439574d4").then(t)}},{name:"v-14d28e38",path:"/zh/guide/framework/other/language-list.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-14d28e38").then(t)}},{name:"v-31bdf494",path:"/zh/guide/framework/other/js-chunk.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-31bdf494").then(t)}},{name:"v-5f42e590",path:"/zh/guide/framework/other/launch-mode.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-5f42e590").then(t)}},{name:"v-4af7c6e8",path:"/zh/guide/framework/page-switch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4af7c6e8").then(t)}},{name:"v-6904fb64",path:"/zh/guide/framework/project-structure.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-6904fb64").then(t)}},{name:"v-a06bb43a",path:"/zh/guide/framework/script/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-a06bb43a").then(t)}},{path:"/zh/guide/framework/script/index.html",redirect:"/zh/guide/framework/script/"},{name:"v-4f788836",path:"/zh/guide/framework/script/lifecycle.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4f788836").then(t)}},{name:"v-775de6e0",path:"/zh/guide/framework/script/global-data-method.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-775de6e0").then(t)}},{name:"v-655aa9f6",path:"/zh/guide/framework/script/page-data.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-655aa9f6").then(t)}},{name:"v-30f0a494",path:"/zh/guide/framework/template.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-30f0a494").then(t)}},{name:"v-52f6d9ca",path:"/zh/guide/framework/style/media-query.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-52f6d9ca").then(t)}},{name:"v-1d91c214",path:"/zh/guide/framework/style/page-style-and-layout.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1d91c214").then(t)}},{name:"v-429eb076",path:"/zh/guide/framework/template/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-429eb076").then(t)}},{path:"/zh/guide/framework/template/index.html",redirect:"/zh/guide/framework/template/"},{name:"v-24ea5155",path:"/zh/guide/framework/style/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-24ea5155").then(t)}},{path:"/zh/guide/framework/style/index.html",redirect:"/zh/guide/framework/style/"},{name:"v-07d84b36",path:"/zh/guide/framework/template/component.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-07d84b36").then(t)}},{name:"v-29b0aa88",path:"/zh/guide/framework/template/computed.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-29b0aa88").then(t)}},{name:"v-2243ecb0",path:"/zh/guide/framework/template/if.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2243ecb0").then(t)}},{name:"v-03ac50d4",path:"/zh/guide/framework/template/event.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-03ac50d4").then(t)}},{name:"v-76903e54",path:"/zh/guide/framework/ux.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-76903e54").then(t)}},{name:"v-98c39f14",path:"/zh/guide/framework/template/for.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-98c39f14").then(t)}},{name:"v-777ef2b5",path:"/zh/guide/multi-screens/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-777ef2b5").then(t)}},{path:"/zh/guide/multi-screens/index.html",redirect:"/zh/guide/multi-screens/"},{name:"v-778dee2c",path:"/zh/guide/multi-screens/conditional-compilation.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-778dee2c").then(t)}},{name:"v-3bf0d5d6",path:"/zh/guide/framework/template/Props.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3bf0d5d6").then(t)}},{name:"v-5ac019b2",path:"/zh/guide/multi-screens/specs.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-5ac019b2").then(t)}},{name:"v-1350a57c",path:"/zh/guide/other/faq.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1350a57c").then(t)}},{name:"v-f9b4ec96",path:"/zh/guide/publish/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-f9b4ec96").then(t)}},{path:"/zh/guide/publish/index.html",redirect:"/zh/guide/publish/"},{name:"v-1b07dfc0",path:"/zh/guide/publish/acceptance-criteria.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1b07dfc0").then(t)}},{name:"v-517db6e6",path:"/zh/guide/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-517db6e6").then(t)}},{name:"v-2d041636",path:"/zh/guide/other/tips.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2d041636").then(t)}},{name:"v-7abf8e50",path:"/zh/guide/multi-screens/samples.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7abf8e50").then(t)}},{name:"v-1358a386",path:"/zh/guide/start/add-interactivity.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1358a386").then(t)}},{name:"v-013a02d6",path:"/zh/guide/start/data-fetch.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-013a02d6").then(t)}},{name:"v-3fdc26d4",path:"/zh/guide/start/project-overview.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3fdc26d4").then(t)}},{name:"v-4b3682bc",path:"/zh/guide/start/use-ide.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4b3682bc").then(t)}},{name:"v-9992a9d4",path:"/zh/guide/start/toolkit-params.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-9992a9d4").then(t)}},{name:"v-b8fcda54",path:"/zh/guide/start/user-interface.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b8fcda54").then(t)}},{name:"v-982d61f0",path:"/zh/guide/version/APILevel2.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-982d61f0").then(t)}},{name:"v-29dd6006",path:"/zh/guide/version/APILevel3.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-29dd6006").then(t)}},{name:"v-c05d1df8",path:"/zh/guide/version/APILevel4.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c05d1df8").then(t)}},{name:"v-3a692956",path:"/zh/guide/version/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3a692956").then(t)}},{path:"/zh/guide/version/index.html",redirect:"/zh/guide/version/"},{name:"v-718fa615",path:"/zh/samples/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-718fa615").then(t)}},{path:"/zh/samples/index.html",redirect:"/zh/samples/"},{name:"v-78f9a3d6",path:"/zh/tools/",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-78f9a3d6").then(t)}},{path:"/zh/tools/index.html",redirect:"/zh/tools/"},{name:"v-060f12fc",path:"/zh/tools/debug/build-setting.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-060f12fc").then(t)}},{name:"v-42f699a4",path:"/zh/tools/debug/audit.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-42f699a4").then(t)}},{name:"v-1a5f1d96",path:"/zh/tools/debug/memory.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-1a5f1d96").then(t)}},{name:"v-70c98784",path:"/zh/tools/debug/debug.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-70c98784").then(t)}},{name:"v-76427afe",path:"/zh/tools/debug/multi-screens.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-76427afe").then(t)}},{name:"v-0de11fe0",path:"/zh/tools/debug/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-0de11fe0").then(t)}},{name:"v-c66c4ad0",path:"/zh/tools/debug/watch-log.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-c66c4ad0").then(t)}},{name:"v-90a2eed4",path:"/zh/tools/dev/format.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-90a2eed4").then(t)}},{name:"v-42f51224",path:"/zh/tools/debug/toolbar.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-42f51224").then(t)}},{name:"v-7504089c",path:"/zh/tools/dev/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7504089c").then(t)}},{name:"v-7a257416",path:"/zh/tools/dev/manifest.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7a257416").then(t)}},{name:"v-42b4364c",path:"/zh/tools/devicedebug/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-42b4364c").then(t)}},{name:"v-7e2ef6f8",path:"/zh/tools/dev/build.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-7e2ef6f8").then(t)}},{name:"v-ed55735c",path:"/zh/tools/emulator/emulator-run.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ed55735c").then(t)}},{name:"v-4710ed94",path:"/zh/tools/emulator/create-emulator.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-4710ed94").then(t)}},{name:"v-64a017ae",path:"/zh/tools/project/creat-project.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-64a017ae").then(t)}},{name:"v-401963b4",path:"/zh/tools/project/project.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-401963b4").then(t)}},{name:"v-2580dfb6",path:"/zh/tools/project/template.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-2580dfb6").then(t)}},{name:"v-ac772924",path:"/zh/tools/release/release.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-ac772924").then(t)}},{name:"v-3ed53990",path:"/zh/tools/release/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-3ed53990").then(t)}},{name:"v-07b72814",path:"/zh/tools/start/project.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-07b72814").then(t)}},{name:"v-a8bb0b28",path:"/zh/tools/start/about.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-a8bb0b28").then(t)}},{name:"v-48f684ca",path:"/zh/tools/toolkit/start.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-48f684ca").then(t)}},{name:"v-b482f194",path:"/zh/tools/toolkit/update.html",component:As,beforeEnter:(e,n,t)=>{ps("Layout","v-b482f194").then(t)}},{path:"*",component:As}],Rs={title:"Xiaomi Vela JS 应用",description:"",base:"/vela/quickapp/",headTags:[["meta",{httpEquiv:"Content-Language",content:"zh-CN"}],["link",{rel:"icon",href:"/vela/quickapp/favicon.ico"}],["script",{async:!0,src:"https://ssl-cdn.static.browser.mi-img.com/mistat-data/onetrack/onetrack.js"}],["script",{},"\nif('production' !== 'production') {\n  localStorage.setItem('_onetrack_test', 1)\n}\nwindow.onetrack = window.onetrack||function(){(onetrack.q=onetrack.q||[]).push(arguments)};\nconsole.log(onetrack);\nonetrack(\"init\", 31000402093);\nonetrack(\"trackPage\");\n"]],pages:[{title:"Home",frontmatter:{home:!0,heroImage:"/xiaomi_vela.png",heroText:"JS应用开发文档",tagline:"开发者友好，性能高效的IoT跨端应用框架",actionText:"快速开始",actionLink:"/zh/guide/",features:[{title:"开发者友好",details:"类Web开发范式，快速上手，提供一站式开发工具，便捷高效。"},{title:"丰富的组件和接口",details:"提供了多种常用组件和接口，如网络、音频、图形和安全等，方便开发者快速构建应用。"},{title:"性能高效",details:"基于 Vela OS 进行应用开发，具有高实时性、低功耗、低延迟等特点，同时具备出色的渲染能力，媲美原生的流畅体验。"}],footer:"© Xiaomi Vela all rights reserved."},regularPath:"/",relativePath:"README.md",key:"v-11df0e36",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Home",frontmatter:{home:!0,heroImage:"/xiaomi_vela.png",heroText:"JS Application Development Documentation",tagline:"A developer-friendly, high-performance IoT cross-platform application framework",actionText:"Get Started",actionLink:"/en/guide/",features:[{title:"Developer-Friendly",details:"Web-like development paradigm for quick learning, with one-stop development tools for convenience and efficiency."},{title:"Rich Components and Interfaces",details:"Provides a variety of commonly used components and interfaces, such as networking, audio, graphics, and security, enabling developers to quickly build applications."},{title:"High Performance",details:"Application development based on Vela OS offers high real-time capability, low power consumption, and low latency, along with exceptional rendering capabilities for a native-like smooth experience."}],footer:"© Xiaomi Vela all rights reserved."},regularPath:"/en/",relativePath:"en/README.md",key:"v-613aa916",path:"/en/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Component",frontmatter:{},regularPath:"/en/components/",relativePath:"en/components/README.md",key:"v-f26ec16a",path:"/en/components/",headersStr:null,content:"# Component\n\nComponents are divided into predefined components and custom components.\n\nPredefined components are components that are predefined by the framework and whose rendering and logic are implemented by the framework. For example, when developing a page, developers must use components such as text and div, which are rendered by the platform's Native layer.\n\nIf developers are developing a complex page and write all UI parts in the <template> of a single file, the maintainability of the code will be very low, and unnecessary coupling relationships between modules may easily arise. To better organize logic and code, the page can be divided into multiple modules according to functionality, with each module responsible for a specific functional part. Finally, the page incorporates and manages these modules, passing business and configuration data to achieve code separation. This is the significance of custom components.\n\nCustom components are components written by developers. They are used similarly to Native components and are ultimately rendered according to the component's <template>. At the same time, they are developed similarly to pages, with a ViewModel that manages data, events, and methods.\n\nIn this light, a page can also be seen as a special type of custom component that can be used without being imported and serves the entire page.\n\nThis chapter mainly provides a detailed introduction to the usage of predefined Native components, including their supported styles, properties, and events.",normalizedContent:"# component\n\ncomponents are divided into predefined components and custom components.\n\npredefined components are components that are predefined by the framework and whose rendering and logic are implemented by the framework. for example, when developing a page, developers must use components such as text and div, which are rendered by the platform's native layer.\n\nif developers are developing a complex page and write all ui parts in the <template> of a single file, the maintainability of the code will be very low, and unnecessary coupling relationships between modules may easily arise. to better organize logic and code, the page can be divided into multiple modules according to functionality, with each module responsible for a specific functional part. finally, the page incorporates and manages these modules, passing business and configuration data to achieve code separation. this is the significance of custom components.\n\ncustom components are components written by developers. they are used similarly to native components and are ultimately rendered according to the component's <template>. at the same time, they are developed similarly to pages, with a viewmodel that manages data, events, and methods.\n\nin this light, a page can also be seen as a special type of custom component that can be used without being imported and serves the entire page.\n\nthis chapter mainly provides a detailed introduction to the usage of predefined native components, including their supported styles, properties, and events.",charsets:{}},{title:"a",frontmatter:{},regularPath:"/en/components/basic/a.html",relativePath:"en/components/basic/a.md",key:"v-b3e9ed94",path:"/en/components/basic/a.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:8},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:58},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:106},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:1138},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:1198},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:1236}],headersStr:"Overview Child Components Attributes Styles Events Example Code",content:'# a\n\n\n# Overview\n\nHyperlink (no underline by default)\n\n\n# Child Components\n\nOnly <span> is supported.\n\n\n# Attributes\n\nSupports universal attributes\n\nNAME   TYPE     DEFAULT VALUE   REQUIRED   DESCRIPTION\nhref   string   -               No         For supported formats, see the uri parameter in page\n                                           routing.\n                                           Additional:\n                                           href can also add parameters in the format of\n                                           "?param1=value1", and the parameters can be used in the page\n                                           via this.param1. When using the this.param1 variable, you\n                                           need to define a property with the same key name under\n                                           public (passing parameters outside the app) or protected\n                                           (passing parameters inside the app) in the target page.\n                                           Example:\n                                           <a href="/about?param1=value1">About</a>\n\n\n# Styles\n\nSupports text styles\n\nSupports universal styles\n\n\n# Events\n\nSupports universal events\n\n\n# Example Code\n\n<template>\n  <div>\n    <a class="link" href="/home">goHome</a>\n    <a href="/home">\n      <span class="link">Using span child component</span>\n    </a>\n  </div>\n</template>\n',normalizedContent:'# a\n\n\n# overview\n\nhyperlink (no underline by default)\n\n\n# child components\n\nonly <span> is supported.\n\n\n# attributes\n\nsupports universal attributes\n\nname   type     default value   required   description\nhref   string   -               no         for supported formats, see the uri parameter in page\n                                           routing.\n                                           additional:\n                                           href can also add parameters in the format of\n                                           "?param1=value1", and the parameters can be used in the page\n                                           via this.param1. when using the this.param1 variable, you\n                                           need to define a property with the same key name under\n                                           public (passing parameters outside the app) or protected\n                                           (passing parameters inside the app) in the target page.\n                                           example:\n                                           <a href="/about?param1=value1">about</a>\n\n\n# styles\n\nsupports text styles\n\nsupports universal styles\n\n\n# events\n\nsupports universal events\n\n\n# example code\n\n<template>\n  <div>\n    <a class="link" href="/home">gohome</a>\n    <a href="/home">\n      <span class="link">using span child component</span>\n    </a>\n  </div>\n</template>\n',charsets:{}},{title:"Basic Components",frontmatter:{},regularPath:"/en/components/basic/",relativePath:"en/components/basic/README.md",key:"v-75805ecd",path:"/en/components/basic/",headersStr:null,content:"# Basic Components\n\nComponents on a page, such as text and images.\n\n * text\n * span\n * a\n * image\n * image-animator\n * progress\n * marquee\n * chart\n * qrcode\n * barcode",normalizedContent:"# basic components\n\ncomponents on a page, such as text and images.\n\n * text\n * span\n * a\n * image\n * image-animator\n * progress\n * marquee\n * chart\n * qrcode\n * barcode",charsets:{}},{title:"barcode",frontmatter:{},regularPath:"/en/components/basic/barcode.html",relativePath:"en/components/basic/barcode.md",key:"v-7c40e756",path:"/en/components/basic/barcode.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:14},{level:2,title:"Subcomponents",slug:"subcomponents",normalizedTitle:"subcomponents",charIndex:93},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:126},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:390},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:870},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:908}],headersStr:"Overview Subcomponents Attributes Styles Events Example Code",content:'# barcode\n\n\n# Overview\n\nBarcode, which converts text content into a barcode for display.\n\n\n# Subcomponents\n\nNot supported\n\n\n# Attributes\n\nSupports universal attributes\n\nNAME    TYPE     DEFAULT VALUE   REQUIRED   DESCRIPTION\nvalue   string   -               Yes        Barcode content, using Code128 encoding, with a length of up\n                                            to 20 bytes\n\n\n# Styles\n\nSupports universal styles\n\nNAME               TYPE      DEFAULT VALUE   REQUIRED   DESCRIPTION\ncolor              <color>   #000000         No         Barcode color\nbackground-color   <color>   #ffffff         No         Barcode background color\n\nNote\n\n * When setting the rotate property of transform, this component can only be rotated to a vertical or horizontal state;\n * When setting the scale property of transform, this component only supports integer scaling.\n\n\n# Events\n\nSupports universal events\n\n\n# Example Code\n\n<template>\n  <div>\n    <barcode value="barcodetest" style="color: #008cff;"></barcode>\n  </div>\n</template>\n\n\n',normalizedContent:'# barcode\n\n\n# overview\n\nbarcode, which converts text content into a barcode for display.\n\n\n# subcomponents\n\nnot supported\n\n\n# attributes\n\nsupports universal attributes\n\nname    type     default value   required   description\nvalue   string   -               yes        barcode content, using code128 encoding, with a length of up\n                                            to 20 bytes\n\n\n# styles\n\nsupports universal styles\n\nname               type      default value   required   description\ncolor              <color>   #000000         no         barcode color\nbackground-color   <color>   #ffffff         no         barcode background color\n\nnote\n\n * when setting the rotate property of transform, this component can only be rotated to a vertical or horizontal state;\n * when setting the scale property of transform, this component only supports integer scaling.\n\n\n# events\n\nsupports universal events\n\n\n# example code\n\n<template>\n  <div>\n    <barcode value="barcodetest" style="color: #008cff;"></barcode>\n  </div>\n</template>\n\n\n',charsets:{}},{title:"chart",frontmatter:{},regularPath:"/en/components/basic/chart.html",relativePath:"en/components/basic/chart.md",key:"v-1e30b996",path:"/en/components/basic/chart.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:12},{level:2,title:"Subcomponents",slug:"subcomponents",normalizedTitle:"subcomponents",charIndex:88},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:121},{level:3,title:"ChartOptions Description",slug:"chartoptions-description",normalizedTitle:"chartoptions description",charIndex:1248},{level:3,title:"ChartDataset Description",slug:"chartdataset-description",normalizedTitle:"chartdataset description",charIndex:2280},{level:3,title:"ChartAxis Description",slug:"chartaxis-description",normalizedTitle:"chartaxis description",charIndex:2964},{level:3,title:"ChartSeries Description",slug:"chartseries-description",normalizedTitle:"chartseries description",charIndex:4552},{level:3,title:"ChartLineStyle Description",slug:"chartlinestyle-description",normalizedTitle:"chartlinestyle description",charIndex:4874},{level:3,title:"ChartLoop Description",slug:"chartloop-description",normalizedTitle:"chartloop description",charIndex:5030},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:5749},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:5784},{level:2,title:"Sample Code",slug:"sample-code",normalizedTitle:"sample code",charIndex:5819},{level:3,title:"Line Chart",slug:"line-chart",normalizedTitle:"line chart",charIndex:5835},{level:3,title:"Bar Chart",slug:"bar-chart",normalizedTitle:"bar chart",charIndex:6674}],headersStr:"Overview Subcomponents Attributes ChartOptions Description ChartDataset Description ChartAxis Description ChartSeries Description ChartLineStyle Description ChartLoop Description Styles Events Sample Code Line Chart Bar Chart",content:"# chart\n\n\n# Overview\n\nA chart component used to display line charts and bar charts.\n\n\n# Subcomponents\n\nNot supported\n\n\n# Attributes\n\nSupports Common Attributes\n\nNAME       TYPE                  DEFAULT VALUE   REQUIRED   DESCRIPTION\ntype       <string>              line            No         Sets the chart type (dynamic modification not supported).\n                                                            Options: bar (bar chart) \\ line (line chart)\noptions    ChartOptions          -               Yes        Chart parameter settings. Parameters must be set for bar\n                                                            charts and line charts. You can set the minimum and maximum\n                                                            values, the number of ticks, visibility, line width, and\n                                                            smoothness for the x-axis and y-axis. (Dynamic modification\n                                                            not supported)\ndatasets   Array<ChartDataset>   -               Yes        Data collection. Must be set for bar charts and line charts.\n                                                            Multiple datasets and their background colors can be set.\n\n\n# ChartOptions Description\n\nNAME     TYPE          DEFAULT VALUE   REQUIRED   DESCRIPTION\nxAxis    ChartAxis     line            Yes        x-axis parameter settings. You can set the minimum and\n                                                  maximum values, the number of ticks, and visibility for the\n                                                  x-axis.\nyAxis    ChartAxis     -               Yes        y-axis parameter settings. You can set the minimum and\n                                                  maximum values, the number of ticks, and visibility for the\n                                                  y-axis.\nseries   ChartSeries   -               No         Data sequence parameter settings. You can set: 1) line\n                                                  styles, such as line width and smoothness; 2) the style and\n                                                  size of the white dot at the end of the line (only supported\n                                                  for line charts).\n\n\n# ChartDataset Description\n\nNAME          TYPE             DEFAULT VALUE   REQUIRED   DESCRIPTION\nstrokeColor   <color>          #ff6384         No         Line color. (Only supported for line charts)\nfillColor     <color>          #ff6384         No         Fill color. For line charts, it represents the gradient fill\n                                                          color.\ndata          Array<<number>   -               Yes        Sets the points for drawing lines or bars.\ngradient      <boolean>        false           No         Sets whether to display a gradient fill color. (Only\n                                                          supported for line charts)\n\n\n# ChartAxis Description\n\nNAME       TYPE        DEFAULT VALUE          REQUIRED   DESCRIPTION\nmin        <number>    0                      No         Minimum value of the axis. (Negative numbers not supported.\n                                                         Only supported for line charts)\nmax        <number>    dataset data count-1   No         Maximum value of the axis. (Negative numbers not supported.\n                                                         Only supported for line charts)\naxisTick   <number>    10                     No         Number of ticks displayed on the axis. (Only supports values\n                                                         from 1 to 20, and the actual display depends on the\n                                                         calculated value (width of the chart in pixels / (max-min)).\n                                                         Due to integer operations in lightweight smart wearables,\n                                                         errors may occur when the division is not exact, resulting\n                                                         in a blank space at the end of the x-axis. For bar charts,\n                                                         the number of bars displayed per group matches the number of\n                                                         ticks, and the bars are displayed at the tick positions.)\ndisplay    <boolean>   false                  No         Whether to display the axis.\ncolor      <color>     #c0c0c0                No         Axis color.\n\n\n# ChartSeries Description\n\nNAME        TYPE             DEFAULT VALUE   REQUIRED   DESCRIPTION\nlineStyle   ChartLineStyle   -               No         Line style settings, such as line width and smoothness.\nloop        ChartLoop        -               No         Sets whether to restart drawing when the screen is full.\n\n\n# ChartLineStyle Description\n\nNAME    TYPE       DEFAULT VALUE   REQUIRED   DESCRIPTION\nwidth   <length>   2px             No         Line width setting.\n\n\n# ChartLoop Description\n\nNAME     TYPE       DEFAULT VALUE   REQUIRED   DESCRIPTION\nmargin   <length>   1px             No         Number of points to erase (horizontal distance between the\n                                               most recently drawn point and the oldest point). Note: On\n                                               lightweight devices, when margin is used simultaneously with\n                                               topPoint/bottomPoint/headPoint, there is a chance that a\n                                               point may fall exactly within the erased area, making it\n                                               invisible. Therefore, simultaneous use is not recommended.\n\n\n# Styles\n\nSupports Common Styles\n\n\n# Events\n\nSupports Common Events\n\n\n# Sample Code\n\n\n# Line Chart\n\n<template>\n  <chart type=\"line\" options=\"{{lineOpts}}\" datasets=\"{{lineData}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      lineData: [\n        {\n          strokeColor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525, 696, 595, 628],\n        },\n        {\n          strokeColor: '#cce5ff',\n          fillColor: '#cce5ff', \n          data: [535, 776, 615, 444, 694, 785, 677, 609, 562, 410],\n        },\n        {\n          strokeColor: '#ff88bb',\n          data: [673, 500, 574, 483, 702, 583, 437, 506, 693, 657]\n        },\n      ],\n      lineOpts: {\n        xAxis: {\n          min: 0,\n          max: 10,\n          display: true,\n          axisTick: 10\n        },\n        yAxis: {\n          min: 400,\n          max: 900,\n          display: true,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n\n\n\n# Bar Chart\n\n<template>\n  <chart type=\"bar\" options=\"{{barOpts}}\" datasets=\"{{barData}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      barData: [\n        {\n          fillColor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525]\n        },\n        {\n          fillColor: '#cce5ff',\n          data: [535, 776, 615, 444, 694, 785, 677]\n        }\n      ],\n      barOpts: {\n        xAxis: {\n          min: 0,\n          max: 7,\n          display: false,\n          axisTick: 7\n        },\n        yAxis: {\n          min: 0,\n          max: 800,\n          display: false,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n",normalizedContent:"# chart\n\n\n# overview\n\na chart component used to display line charts and bar charts.\n\n\n# subcomponents\n\nnot supported\n\n\n# attributes\n\nsupports common attributes\n\nname       type                  default value   required   description\ntype       <string>              line            no         sets the chart type (dynamic modification not supported).\n                                                            options: bar (bar chart) \\ line (line chart)\noptions    chartoptions          -               yes        chart parameter settings. parameters must be set for bar\n                                                            charts and line charts. you can set the minimum and maximum\n                                                            values, the number of ticks, visibility, line width, and\n                                                            smoothness for the x-axis and y-axis. (dynamic modification\n                                                            not supported)\ndatasets   array<chartdataset>   -               yes        data collection. must be set for bar charts and line charts.\n                                                            multiple datasets and their background colors can be set.\n\n\n# chartoptions description\n\nname     type          default value   required   description\nxaxis    chartaxis     line            yes        x-axis parameter settings. you can set the minimum and\n                                                  maximum values, the number of ticks, and visibility for the\n                                                  x-axis.\nyaxis    chartaxis     -               yes        y-axis parameter settings. you can set the minimum and\n                                                  maximum values, the number of ticks, and visibility for the\n                                                  y-axis.\nseries   chartseries   -               no         data sequence parameter settings. you can set: 1) line\n                                                  styles, such as line width and smoothness; 2) the style and\n                                                  size of the white dot at the end of the line (only supported\n                                                  for line charts).\n\n\n# chartdataset description\n\nname          type             default value   required   description\nstrokecolor   <color>          #ff6384         no         line color. (only supported for line charts)\nfillcolor     <color>          #ff6384         no         fill color. for line charts, it represents the gradient fill\n                                                          color.\ndata          array<<number>   -               yes        sets the points for drawing lines or bars.\ngradient      <boolean>        false           no         sets whether to display a gradient fill color. (only\n                                                          supported for line charts)\n\n\n# chartaxis description\n\nname       type        default value          required   description\nmin        <number>    0                      no         minimum value of the axis. (negative numbers not supported.\n                                                         only supported for line charts)\nmax        <number>    dataset data count-1   no         maximum value of the axis. (negative numbers not supported.\n                                                         only supported for line charts)\naxistick   <number>    10                     no         number of ticks displayed on the axis. (only supports values\n                                                         from 1 to 20, and the actual display depends on the\n                                                         calculated value (width of the chart in pixels / (max-min)).\n                                                         due to integer operations in lightweight smart wearables,\n                                                         errors may occur when the division is not exact, resulting\n                                                         in a blank space at the end of the x-axis. for bar charts,\n                                                         the number of bars displayed per group matches the number of\n                                                         ticks, and the bars are displayed at the tick positions.)\ndisplay    <boolean>   false                  no         whether to display the axis.\ncolor      <color>     #c0c0c0                no         axis color.\n\n\n# chartseries description\n\nname        type             default value   required   description\nlinestyle   chartlinestyle   -               no         line style settings, such as line width and smoothness.\nloop        chartloop        -               no         sets whether to restart drawing when the screen is full.\n\n\n# chartlinestyle description\n\nname    type       default value   required   description\nwidth   <length>   2px             no         line width setting.\n\n\n# chartloop description\n\nname     type       default value   required   description\nmargin   <length>   1px             no         number of points to erase (horizontal distance between the\n                                               most recently drawn point and the oldest point). note: on\n                                               lightweight devices, when margin is used simultaneously with\n                                               toppoint/bottompoint/headpoint, there is a chance that a\n                                               point may fall exactly within the erased area, making it\n                                               invisible. therefore, simultaneous use is not recommended.\n\n\n# styles\n\nsupports common styles\n\n\n# events\n\nsupports common events\n\n\n# sample code\n\n\n# line chart\n\n<template>\n  <chart type=\"line\" options=\"{{lineopts}}\" datasets=\"{{linedata}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      linedata: [\n        {\n          strokecolor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525, 696, 595, 628],\n        },\n        {\n          strokecolor: '#cce5ff',\n          fillcolor: '#cce5ff', \n          data: [535, 776, 615, 444, 694, 785, 677, 609, 562, 410],\n        },\n        {\n          strokecolor: '#ff88bb',\n          data: [673, 500, 574, 483, 702, 583, 437, 506, 693, 657]\n        },\n      ],\n      lineopts: {\n        xaxis: {\n          min: 0,\n          max: 10,\n          display: true,\n          axistick: 10\n        },\n        yaxis: {\n          min: 400,\n          max: 900,\n          display: true,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n\n\n\n# bar chart\n\n<template>\n  <chart type=\"bar\" options=\"{{baropts}}\" datasets=\"{{bardata}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      bardata: [\n        {\n          fillcolor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525]\n        },\n        {\n          fillcolor: '#cce5ff',\n          data: [535, 776, 615, 444, 694, 785, 677]\n        }\n      ],\n      baropts: {\n        xaxis: {\n          min: 0,\n          max: 7,\n          display: false,\n          axistick: 7\n        },\n        yaxis: {\n          min: 0,\n          max: 800,\n          display: false,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n",charsets:{}},{title:"image-animator",frontmatter:{},regularPath:"/en/components/basic/image-animator.html",relativePath:"en/components/basic/image-animator.md",key:"v-40142828",path:"/en/components/basic/image-animator.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:21},{level:2,title:"Subcomponents",slug:"subcomponents",normalizedTitle:"subcomponents",charIndex:65},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:98},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:3388},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:3429},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:4060}],headersStr:"Overview Subcomponents Attributes Styles Methods Example Code",content:'# image-animator\n\n\n# Overview\n\nImage frame animation player.\n\n\n# Subcomponents\n\nNot supported\n\n\n# Attributes\n\nCommon attributes are supported.\n\nNAME        TYPE                DEFAULT VALUE   MANDATORY   DESCRIPTION\nimages      Array<ImageFrame>   -               Yes         Sets the collection of image frame information. The frame\n                                                            information of each frame includes the image path, image\n                                                            size, and image position information.\niteration   <number>|<string>   infinite        No          Sets the number of frame animation playbacks. number\n                                                            indicates a fixed number of times, and the infinite\n                                                            enumeration indicates infinite playbacks.\nreverse     <boolean>           false           No          Sets the playback sequence. false indicates that the\n                                                            playback starts from the first image to the last image; true\n                                                            indicates that the playback starts from the last image to\n                                                            the first image.\nfixedsize   <boolean>           true            No          Sets whether the image size is fixed to the component size.\n                                                            true indicates that the image size is the same as the\n                                                            component size. In this case, the width, height, top, and\n                                                            left attributes of the image are invalid. false indicates\n                                                            that the width, height, top, and left attributes of each\n                                                            image must be set separately.\nduration    <string>            -               No          Sets the duration of a single playback. The unit supports\n                                                            [s(second)|ms(millisecond)], and the default unit is ms.\nfillmode    <string>            forwards        No          Specifies the state of the frame animation after the\n                                                            execution is complete. The options are as follows:\n                                                            none: restores to the initial state.\n                                                            forwards: maintains the state of the frame animation at the\n                                                            end (defined in the last keyframe).\n\nDescription of ImageFrame\n\nNAME     TYPE       DEFAULT VALUE   MANDATORY   DESCRIPTION\nsrc      <uri>      -               Yes         Image path\nwidth    <length>   0               No          Image width\nheight   <length>   0               No          Image height\ntop      <length>   0               No          Vertical coordinate of the image relative to the upper left\n                                                corner of the component\nleft     <length>   0               No          Horizontal coordinate of the image relative to the upper\n                                                left corner of the component\n\n\n# Styles\n\nCommon styles are supported.\n\n\n# Methods\n\nCommon methods are supported.\n\nNAME       PARAMETERS   DESCRIPTION\nstart      -            Starts playing the image frame animation. If this method is\n                        called again, the playback starts from the first frame.\npause      -            Pauses the image frame animation.\nstop       -            Stops the image frame animation.\nresume     -            Continues to play the image frame.\ngetState   -            Obtains the playback status. The options are as follows:\n                        - playing: being played\n                        - paused: paused\n                        - stopped: stopped\n\n\n# Example Code\n\n<template>\n  <div class="container">\n  <image-animator class="animator" id="animator" images="{{frames}}" duration="1s" />\n  <div class="btn-box">\n    <input class="btn" type="button" value="start" @click="handleStart" />\n    <input class="btn" type="button" value="stop" @click="handleStop" />\n    <input class="btn" type="button" value="pause" @click="handlePause" />\n    <input class="btn" type="button" value="resume" @click="handleResume" />\n  </div>\n</div>\n</template>\n\n\n.container {\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  left: 0px;\n  top: 0px;\n  width: 454px;\n  height: 454px;\n  background-color: black;\n}\n.animator {\n  width: 70px;\n  height: 70px;\n}\n.btn-box {\n  width: 264px;\n  height: 120px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.btn {\n  border-radius: 8px;\n  width: 120px;\n  margin-top: 8px;\n}\n\n\nexport default {\n  data: {\n    frames: [\n      {\n        src: "/common/asserts/001.png",\n      },\n      {\n        src: "/common/asserts/002.png",\n      },\n      {\n        src: "/common/asserts/003.png",\n      },\n      {\n        src: "/common/asserts/004.png",\n      },\n      {\n        src: "/common/asserts/005.png",\n      }\n    ],\n  },\n  handleStart() {\n    this.$element(\'animator\').start();\n  },\n  handlePause() {\n    this.$element(\'animator\').pause();\n  },\n  handleResume() {\n    this.$element(\'animator\').resume();\n  },\n  handleStop() {\n    this.$element(\'animator\').stop();\n  },\n};\n\n\n',normalizedContent:'# image-animator\n\n\n# overview\n\nimage frame animation player.\n\n\n# subcomponents\n\nnot supported\n\n\n# attributes\n\ncommon attributes are supported.\n\nname        type                default value   mandatory   description\nimages      array<imageframe>   -               yes         sets the collection of image frame information. the frame\n                                                            information of each frame includes the image path, image\n                                                            size, and image position information.\niteration   <number>|<string>   infinite        no          sets the number of frame animation playbacks. number\n                                                            indicates a fixed number of times, and the infinite\n                                                            enumeration indicates infinite playbacks.\nreverse     <boolean>           false           no          sets the playback sequence. false indicates that the\n                                                            playback starts from the first image to the last image; true\n                                                            indicates that the playback starts from the last image to\n                                                            the first image.\nfixedsize   <boolean>           true            no          sets whether the image size is fixed to the component size.\n                                                            true indicates that the image size is the same as the\n                                                            component size. in this case, the width, height, top, and\n                                                            left attributes of the image are invalid. false indicates\n                                                            that the width, height, top, and left attributes of each\n                                                            image must be set separately.\nduration    <string>            -               no          sets the duration of a single playback. the unit supports\n                                                            [s(second)|ms(millisecond)], and the default unit is ms.\nfillmode    <string>            forwards        no          specifies the state of the frame animation after the\n                                                            execution is complete. the options are as follows:\n                                                            none: restores to the initial state.\n                                                            forwards: maintains the state of the frame animation at the\n                                                            end (defined in the last keyframe).\n\ndescription of imageframe\n\nname     type       default value   mandatory   description\nsrc      <uri>      -               yes         image path\nwidth    <length>   0               no          image width\nheight   <length>   0               no          image height\ntop      <length>   0               no          vertical coordinate of the image relative to the upper left\n                                                corner of the component\nleft     <length>   0               no          horizontal coordinate of the image relative to the upper\n                                                left corner of the component\n\n\n# styles\n\ncommon styles are supported.\n\n\n# methods\n\ncommon methods are supported.\n\nname       parameters   description\nstart      -            starts playing the image frame animation. if this method is\n                        called again, the playback starts from the first frame.\npause      -            pauses the image frame animation.\nstop       -            stops the image frame animation.\nresume     -            continues to play the image frame.\ngetstate   -            obtains the playback status. the options are as follows:\n                        - playing: being played\n                        - paused: paused\n                        - stopped: stopped\n\n\n# example code\n\n<template>\n  <div class="container">\n  <image-animator class="animator" id="animator" images="{{frames}}" duration="1s" />\n  <div class="btn-box">\n    <input class="btn" type="button" value="start" @click="handlestart" />\n    <input class="btn" type="button" value="stop" @click="handlestop" />\n    <input class="btn" type="button" value="pause" @click="handlepause" />\n    <input class="btn" type="button" value="resume" @click="handleresume" />\n  </div>\n</div>\n</template>\n\n\n.container {\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  left: 0px;\n  top: 0px;\n  width: 454px;\n  height: 454px;\n  background-color: black;\n}\n.animator {\n  width: 70px;\n  height: 70px;\n}\n.btn-box {\n  width: 264px;\n  height: 120px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.btn {\n  border-radius: 8px;\n  width: 120px;\n  margin-top: 8px;\n}\n\n\nexport default {\n  data: {\n    frames: [\n      {\n        src: "/common/asserts/001.png",\n      },\n      {\n        src: "/common/asserts/002.png",\n      },\n      {\n        src: "/common/asserts/003.png",\n      },\n      {\n        src: "/common/asserts/004.png",\n      },\n      {\n        src: "/common/asserts/005.png",\n      }\n    ],\n  },\n  handlestart() {\n    this.$element(\'animator\').start();\n  },\n  handlepause() {\n    this.$element(\'animator\').pause();\n  },\n  handleresume() {\n    this.$element(\'animator\').resume();\n  },\n  handlestop() {\n    this.$element(\'animator\').stop();\n  },\n};\n\n\n',charsets:{cjk:!0}},{title:"image",frontmatter:{},regularPath:"/en/components/basic/image.html",relativePath:"en/components/basic/image.md",key:"v-160aff14",path:"/en/components/basic/image.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:12},{level:2,title:"Subcomponents",slug:"subcomponents",normalizedTitle:"subcomponents",charIndex:41},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:75},{level:2,title:"Style",slug:"style",normalizedTitle:"style",charIndex:1595},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:2418},{level:2,title:"Sample Code",slug:"sample-code",normalizedTitle:"sample code",charIndex:2736}],headersStr:"Overview Subcomponents Attributes Style Events Sample Code",content:'# image\n\n\n# Overview\n\nRender images.\n\n\n# Subcomponents\n\nNot supported.\n\n\n# Attributes\n\nSupports General Attributes.\n\nNAME   TYPE              DEFAULT VALUE   REQUIRED   DESCRIPTION\nsrc    <uri>             -               No         URI of the image, supporting both local and cloud paths.\n                                                    Supported image formats include png and jpg.\nalt    <uri> | \'blank\'   -               No         Placeholder image displayed during loading; only supports\n                                                    local image resources.\n\nNote: Details about the alt attribute are as follows:\n\n * If the alt value is not set for the Image component, the terminal will add a default gray placeholder image.\n\n * When src is a local image address, there will be no placeholder image.\n\n * When src is a remote image address, if the image has been successfully loaded before and cached locally, there will be no placeholder image.\n\n * When src is a remote image address and the alt value of the Image component is set to the string "blank", there will be no placeholder image (this can avoid the instant flickering of small icons from remote addresses during the first load).\n\n * When alt is set to a local image address, the placeholder image scaling mode is changed from center-no-scaling to center-keep-aspect-ratio scaling, reducing the resolution and size of the placeholder image resource file.\n\nNote: The scaling mode can be configured through the style value object-fit, with a default value of cover (center-keep-aspect-ratio scaling). For details, see the Style section.\n\n\n# Style\n\nSupports General Styles.\n\nNAME         TYPE                                  DEFAULT VALUE   REQUIRED   DESCRIPTION\nobject-fit   contain | cover | none | scale-down   cover           No         Scaling type of the image.\n\nNote:\n\n 1. The object-fit parameter list is as follows:\n\nTYPE         DESCRIPTION\ncontain      Maintains aspect ratio, scales down or up so that the image\n             is fully displayed within the display boundary, centered.\ncover        Maintains aspect ratio, scales down or up so that both sides\n             are greater than or equal to the display boundary, centered.\nnone         Centers without scaling.\nscale-down   Maintains aspect ratio, scales down or remains unchanged,\n             takes the smaller display between contain and none,\n             centered.\n\n\n# Events\n\nSupports General Events.\n\nNAME       PARAMETERS                                         DESCRIPTION\ncomplete   {width: widthValue(px), height: heightValue(px)}   Triggered when the image is fully loaded.\nerror      -                                                  Triggered when the image fails to load.\n\n\n# Sample Code\n\n<template>\n  <div>\n    <image src="/common/logo.png" />\n  </div>\n</template>\n\n\n',normalizedContent:'# image\n\n\n# overview\n\nrender images.\n\n\n# subcomponents\n\nnot supported.\n\n\n# attributes\n\nsupports general attributes.\n\nname   type              default value   required   description\nsrc    <uri>             -               no         uri of the image, supporting both local and cloud paths.\n                                                    supported image formats include png and jpg.\nalt    <uri> | \'blank\'   -               no         placeholder image displayed during loading; only supports\n                                                    local image resources.\n\nnote: details about the alt attribute are as follows:\n\n * if the alt value is not set for the image component, the terminal will add a default gray placeholder image.\n\n * when src is a local image address, there will be no placeholder image.\n\n * when src is a remote image address, if the image has been successfully loaded before and cached locally, there will be no placeholder image.\n\n * when src is a remote image address and the alt value of the image component is set to the string "blank", there will be no placeholder image (this can avoid the instant flickering of small icons from remote addresses during the first load).\n\n * when alt is set to a local image address, the placeholder image scaling mode is changed from center-no-scaling to center-keep-aspect-ratio scaling, reducing the resolution and size of the placeholder image resource file.\n\nnote: the scaling mode can be configured through the style value object-fit, with a default value of cover (center-keep-aspect-ratio scaling). for details, see the style section.\n\n\n# style\n\nsupports general styles.\n\nname         type                                  default value   required   description\nobject-fit   contain | cover | none | scale-down   cover           no         scaling type of the image.\n\nnote:\n\n 1. the object-fit parameter list is as follows:\n\ntype         description\ncontain      maintains aspect ratio, scales down or up so that the image\n             is fully displayed within the display boundary, centered.\ncover        maintains aspect ratio, scales down or up so that both sides\n             are greater than or equal to the display boundary, centered.\nnone         centers without scaling.\nscale-down   maintains aspect ratio, scales down or remains unchanged,\n             takes the smaller display between contain and none,\n             centered.\n\n\n# events\n\nsupports general events.\n\nname       parameters                                         description\ncomplete   {width: widthvalue(px), height: heightvalue(px)}   triggered when the image is fully loaded.\nerror      -                                                  triggered when the image fails to load.\n\n\n# sample code\n\n<template>\n  <div>\n    <image src="/common/logo.png" />\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"marquee",frontmatter:{},regularPath:"/en/components/basic/marquee.html",relativePath:"en/components/basic/marquee.md",key:"v-4599b396",path:"/en/components/basic/marquee.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:14},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:116},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:152},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:1203},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:1451},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:1847},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:1991}],headersStr:"Overview Child Components Attributes Styles Events Methods Example Code",content:"# marquee\n\n\n# Overview\n\nMarquee is used to insert a segment of scrolling text. By default, it is a single line.\n\n\n# Child Components\n\nNot supported\n\n\n# Attributes\n\nCommon attributes are supported.\n\nNAME           TYPE       DEFAULT VALUE   MANDATORY   DESCRIPTION\nscrollamount   <number>   6               No          Sets the length of each scroll, in px.\nloop           <number>   -1              No          Sets the number of times that the marquee scrolls. If this\n                                                      parameter is not specified, the default value is −1,\n                                                      indicating that the marquee scrolls continuously.\ndirection      <string>   left            No          Direction of text scrolling. The value can be left or right.\ntext-offset    <number>   -               No          Sets the distance between the end of the previous text\n                                                      segment and the start of the next text segment when the\n                                                      marquee is looped. The attribute value is an integer greater\n                                                      than 0, in px.\n\n\n# Styles\n\nCommon styles are supported.\n\nNAME        TYPE       DEFAULT VALUE         MANDATORY   DESCRIPTION\ncolor       <color>    rgba(0, 0, 0, 0.54)   No          Text color.\nfont-size   <length>   30px                  No          Text size.\n\n\n# Events\n\nCommon events are supported.\n\nNAME     PARAMETER   DESCRIPTION\nbounce   -           Triggered when the marquee scrolls to the end.\nfinish   -           Triggered when the marquee completes the number of times set\n                     by loop. This event is valid only when loop is greater than\n                     0.\nstart    -           Triggered when the marquee starts to scroll.\n\n\n# Methods\n\nNAME    PARAMETER   DESCRIPTION\nstart   -           Starts scrolling the marquee.\nstop    -           Stops scrolling the marquee.\n\n\n# Example Code\n\n<template>\n  <div>\n    <marquee id=\"marquee\" scrollamount={{6}} loop={{-1}}>\n      scrollamount controls the scrolling speed. The default value is 6 (6 px/s).\n    </marquee>\n  </div>\n</template>\n\n<script>\n  export default {\n    onReady() {\n      this.$element('marquee').start()\n    }\n  }\n<\/script>\n\n\n",normalizedContent:"# marquee\n\n\n# overview\n\nmarquee is used to insert a segment of scrolling text. by default, it is a single line.\n\n\n# child components\n\nnot supported\n\n\n# attributes\n\ncommon attributes are supported.\n\nname           type       default value   mandatory   description\nscrollamount   <number>   6               no          sets the length of each scroll, in px.\nloop           <number>   -1              no          sets the number of times that the marquee scrolls. if this\n                                                      parameter is not specified, the default value is −1,\n                                                      indicating that the marquee scrolls continuously.\ndirection      <string>   left            no          direction of text scrolling. the value can be left or right.\ntext-offset    <number>   -               no          sets the distance between the end of the previous text\n                                                      segment and the start of the next text segment when the\n                                                      marquee is looped. the attribute value is an integer greater\n                                                      than 0, in px.\n\n\n# styles\n\ncommon styles are supported.\n\nname        type       default value         mandatory   description\ncolor       <color>    rgba(0, 0, 0, 0.54)   no          text color.\nfont-size   <length>   30px                  no          text size.\n\n\n# events\n\ncommon events are supported.\n\nname     parameter   description\nbounce   -           triggered when the marquee scrolls to the end.\nfinish   -           triggered when the marquee completes the number of times set\n                     by loop. this event is valid only when loop is greater than\n                     0.\nstart    -           triggered when the marquee starts to scroll.\n\n\n# methods\n\nname    parameter   description\nstart   -           starts scrolling the marquee.\nstop    -           stops scrolling the marquee.\n\n\n# example code\n\n<template>\n  <div>\n    <marquee id=\"marquee\" scrollamount={{6}} loop={{-1}}>\n      scrollamount controls the scrolling speed. the default value is 6 (6 px/s).\n    </marquee>\n  </div>\n</template>\n\n<script>\n  export default {\n    onready() {\n      this.$element('marquee').start()\n    }\n  }\n<\/script>\n\n\n",charsets:{}},{title:"progress",frontmatter:{},regularPath:"/en/components/basic/progress.html",relativePath:"en/components/basic/progress.md",key:"v-44b0b780",path:"/en/components/basic/progress.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:15},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:42},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:78},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:363},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:2945},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:2981}],headersStr:"Overview Child Components Attributes Styles Events Example Code",content:'# progress\n\n\n# Overview\n\nProgress bar\n\n\n# Child Components\n\nNot supported\n\n\n# Attributes\n\nSupports general attributes\n\nNAME      TYPE               DEFAULT VALUE   REQUIRED   DESCRIPTION\npercent   <number>           0               No         -\ntype      horizontal | arc   horizontal      No         Progress bar type. Dynamic modification is not supported.\n\n\n# Styles\n\nSupports general styles\n\nNote: The base color of the horizontal progress bar is #f0f0f0. The height attribute is invalid.\n\nNAME           TYPE       DEFAULT VALUE                   REQUIRED   DESCRIPTION\ncolor          <color>    #33b4ff or rgb(51, 180, 255)    No         Progress bar color\nstroke-width   <length>   32px                            No         Progress bar width\nlayer-color    <color>    #f0f0f0 or rgb(240, 240, 240)   No         Progress bar background color\n\nEffective when type=arc:\n\nNAME          TYPE       DEFAULT VALUE                                                 REQUIRED   DESCRIPTION\nstart-angle   <deg>      240                                                           No         Starting angle of the arc progress bar, with the 0 point of\n                                                                                                  the clock as the baseline. The range is 0 to 360 (clockwise)\ntotal-angle   <deg>      240                                                           No         Total length of the arc progress bar, ranging from -360 to\n                                                                                                  360. A negative number indicates a counterclockwise\n                                                                                                  direction from the start point to the end point.\ncenter-x      <length>   Half of the component width                                   No         Center position of the arc progress bar (the origin is the\n                                                                                                  top-left vertex of the component). This style must be used\n                                                                                                  together with center-y and radius.\ncenter-y      <length>   Half of the component height                                  No         Center position of the arc progress bar (the origin is the\n                                                                                                  top-left vertex of the component). This style must be used\n                                                                                                  together with center-x and radius.\nradius        <length>   Half of the smaller value of the component width and height   No         Radius of the arc progress bar. This style must be used\n                                                                                                  together with center-x and center-y.\n\n\n# Events\n\nSupports general events\n\n\n# Example Code\n\n<template>\n  <div style="flex-direction: column">\n    <progress class="p1" percent="40"></progress> \n    <progress class="p2" percent="80" type="arc"></progress>\n  </div>\n</template>\n<style>\n  .p1 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n  }\n\n  .p2 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n    start-angle: 0;\n    total-angle: 360deg;\n  }\n</style>\n\n\n',normalizedContent:'# progress\n\n\n# overview\n\nprogress bar\n\n\n# child components\n\nnot supported\n\n\n# attributes\n\nsupports general attributes\n\nname      type               default value   required   description\npercent   <number>           0               no         -\ntype      horizontal | arc   horizontal      no         progress bar type. dynamic modification is not supported.\n\n\n# styles\n\nsupports general styles\n\nnote: the base color of the horizontal progress bar is #f0f0f0. the height attribute is invalid.\n\nname           type       default value                   required   description\ncolor          <color>    #33b4ff or rgb(51, 180, 255)    no         progress bar color\nstroke-width   <length>   32px                            no         progress bar width\nlayer-color    <color>    #f0f0f0 or rgb(240, 240, 240)   no         progress bar background color\n\neffective when type=arc:\n\nname          type       default value                                                 required   description\nstart-angle   <deg>      240                                                           no         starting angle of the arc progress bar, with the 0 point of\n                                                                                                  the clock as the baseline. the range is 0 to 360 (clockwise)\ntotal-angle   <deg>      240                                                           no         total length of the arc progress bar, ranging from -360 to\n                                                                                                  360. a negative number indicates a counterclockwise\n                                                                                                  direction from the start point to the end point.\ncenter-x      <length>   half of the component width                                   no         center position of the arc progress bar (the origin is the\n                                                                                                  top-left vertex of the component). this style must be used\n                                                                                                  together with center-y and radius.\ncenter-y      <length>   half of the component height                                  no         center position of the arc progress bar (the origin is the\n                                                                                                  top-left vertex of the component). this style must be used\n                                                                                                  together with center-x and radius.\nradius        <length>   half of the smaller value of the component width and height   no         radius of the arc progress bar. this style must be used\n                                                                                                  together with center-x and center-y.\n\n\n# events\n\nsupports general events\n\n\n# example code\n\n<template>\n  <div style="flex-direction: column">\n    <progress class="p1" percent="40"></progress> \n    <progress class="p2" percent="80" type="arc"></progress>\n  </div>\n</template>\n<style>\n  .p1 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n  }\n\n  .p2 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n    start-angle: 0;\n    total-angle: 360deg;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"qrcode",frontmatter:{},regularPath:"/en/components/basic/qrcode.html",relativePath:"en/components/basic/qrcode.md",key:"v-68e1933e",path:"/en/components/basic/qrcode.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:13},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:61},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:97},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:282},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:537},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:572}],headersStr:"Overview Child Components Attributes Styles Events Example Code",content:'# qrcode\n\n\n# Overview\n\nGenerates and displays a QR code.\n\n\n# Child Components\n\nNot supported\n\n\n# Attributes\n\nSupports common attributes\n\nNAME    TYPE     DEFAULT VALUE   REQUIRED   DESCRIPTION\nvalue   string   -               Yes        The content used to generate the QR code\n\n\n# Styles\n\nSupports common styles\n\nNAME               TYPE      DEFAULT VALUE   REQUIRED   DESCRIPTION\ncolor              <color>   #000000         No         QR code color\nbackground-color   <color>   #ffffff         No         QR code background color\n\n\n# Events\n\nSupports common events\n\n\n# Example Code\n\n<template>\n  <div>\n    <qrcode value="https://iot.mi.com" style="color: #008cff;"></qrcode>\n  </div>\n</template>\n\n\n',normalizedContent:'# qrcode\n\n\n# overview\n\ngenerates and displays a qr code.\n\n\n# child components\n\nnot supported\n\n\n# attributes\n\nsupports common attributes\n\nname    type     default value   required   description\nvalue   string   -               yes        the content used to generate the qr code\n\n\n# styles\n\nsupports common styles\n\nname               type      default value   required   description\ncolor              <color>   #000000         no         qr code color\nbackground-color   <color>   #ffffff         no         qr code background color\n\n\n# events\n\nsupports common events\n\n\n# example code\n\n<template>\n  <div>\n    <qrcode value="https://iot.mi.com" style="color: #008cff;"></qrcode>\n  </div>\n</template>\n\n\n',charsets:{}},{title:"span",frontmatter:{},regularPath:"/en/components/basic/span.html",relativePath:"en/components/basic/span.md",key:"v-1774cd46",path:"/en/components/basic/span.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:11},{level:2,title:"Subcomponents",slug:"subcomponents",normalizedTitle:"subcomponents",charIndex:110},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:155},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:683},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:1572},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:1599}],headersStr:"Overview Subcomponents Attributes Styles Events Example Code",content:'# span\n\n\n# Overview\n\nFormatted text, which can only be used as a subcomponent of <text>, <a>, and <span>.\n\n\n# Subcomponents\n\nOnly <span> is supported.\n\n\n# Attributes\n\nNAME    TYPE        DEFAULT VALUE   REQUIRED   DESCRIPTION\nid      <string>    -               No         Unique identifier\nstyle   <string>    -               No         Style declaration\nclass   <string>    -               No         Reference stylesheet\nfor     <array>     -               No         Loop through the current tag based on the data list\nif      <boolean>   -               No         Add or remove the current tag based on the data boolean\n                                               value\n\n\n# Styles\n\nNAME              TYPE                              DEFAULT VALUE         REQUIRED   DESCRIPTION\ncolor             <color>                           rgba(0, 0, 0, 0.54)   No         Text color\nfont-size         <length>                          30px                  No         Text size\nfont-style        normal | italic                   normal                No         -\nfont-weight       normal | bold | <number>          normal                No         The current platform only supports normal and bold effects.\n                                                                                     When the value is a number, values below 550 are considered\n                                                                                     as the former, otherwise as the latter.\ntext-decoration   underline | line-through | none   none                  No         -\n\n\n# Events\n\nNot supported.\n\n\n# Example Code\n\n<template>\n  <div>\n    <text>\n      <span>I am span,</span>\n      <span style="color: #f76160">I am span,</span>\n      <span style="color: #f76160;text-decoration: underline;">I am span,</span>\n    </text>\n  </div>\n</template>\n\n\n',normalizedContent:'# span\n\n\n# overview\n\nformatted text, which can only be used as a subcomponent of <text>, <a>, and <span>.\n\n\n# subcomponents\n\nonly <span> is supported.\n\n\n# attributes\n\nname    type        default value   required   description\nid      <string>    -               no         unique identifier\nstyle   <string>    -               no         style declaration\nclass   <string>    -               no         reference stylesheet\nfor     <array>     -               no         loop through the current tag based on the data list\nif      <boolean>   -               no         add or remove the current tag based on the data boolean\n                                               value\n\n\n# styles\n\nname              type                              default value         required   description\ncolor             <color>                           rgba(0, 0, 0, 0.54)   no         text color\nfont-size         <length>                          30px                  no         text size\nfont-style        normal | italic                   normal                no         -\nfont-weight       normal | bold | <number>          normal                no         the current platform only supports normal and bold effects.\n                                                                                     when the value is a number, values below 550 are considered\n                                                                                     as the former, otherwise as the latter.\ntext-decoration   underline | line-through | none   none                  no         -\n\n\n# events\n\nnot supported.\n\n\n# example code\n\n<template>\n  <div>\n    <text>\n      <span>i am span,</span>\n      <span style="color: #f76160">i am span,</span>\n      <span style="color: #f76160;text-decoration: underline;">i am span,</span>\n    </text>\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"text",frontmatter:{},regularPath:"/en/components/basic/text.html",relativePath:"en/components/basic/text.md",key:"v-7dbe2080",path:"/en/components/basic/text.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:11},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:114},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:162},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:212},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:2099},{level:2,title:"Sample Code",slug:"sample-code",normalizedTitle:"sample code",charIndex:2141}],headersStr:"Overview Child Components Attributes Styles Events Sample Code",content:'# text\n\n\n# Overview\n\nThe text content is written in the label content area, supporting escape characters "\\".\n\n\n# Child Components\n\nOnly <span> is supported.\n\n\n# Attributes\n\nGeneral attributes are supported.\n\n\n# Styles\n\nGeneral styles are supported.\n\nNAME              TYPE                              DEFAULT VALUE         REQUIRED   DESCRIPTION\nlines             <number>                          -1                    No         Number of text lines, -1 means unlimited lines.\ncolor             <color>                           rgba(0, 0, 0, 0.54)   No         Text color.\nfont-size         <length>                          30px                  No         Text size.\nfont-style        normal | italic                   normal                No         \nfont-weight       normal | bold | <number>          normal                No         The current platform only supports two effects: normal and\n                                                                                     bold. When the value is a number, if it is below 550, it is\n                                                                                     the former; otherwise, it is the latter.\ntext-decoration   underline | line-through | none   none                  No         \ntext-align        left | center | right             left                  No         \ntext-indent       <length> | <percentage>           -                     No         Specifies the indentation of the first line of the text\n                                                                                     block.\nline-height       <length>                          -                     No         Text line height.\ntext-overflow     clip | ellipsis                   clip                  No         Takes effect when the number of lines is set.\n\nExamples\n\n * Single-line ellipsis\n   \n   text {\n     width: 150px;\n     lines: 1;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n * Multi-line ellipsis, taking two lines as an example\n   \n   text {\n     width: 100px;\n     lines: 2;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n\n# Events\n\nGeneral events are supported.\n\n\n# Sample Code\n\n<template>\n  <div>\n    <text>This is a piece of text.</text>\n  </div>\n</template>\n\n\n',normalizedContent:'# text\n\n\n# overview\n\nthe text content is written in the label content area, supporting escape characters "\\".\n\n\n# child components\n\nonly <span> is supported.\n\n\n# attributes\n\ngeneral attributes are supported.\n\n\n# styles\n\ngeneral styles are supported.\n\nname              type                              default value         required   description\nlines             <number>                          -1                    no         number of text lines, -1 means unlimited lines.\ncolor             <color>                           rgba(0, 0, 0, 0.54)   no         text color.\nfont-size         <length>                          30px                  no         text size.\nfont-style        normal | italic                   normal                no         \nfont-weight       normal | bold | <number>          normal                no         the current platform only supports two effects: normal and\n                                                                                     bold. when the value is a number, if it is below 550, it is\n                                                                                     the former; otherwise, it is the latter.\ntext-decoration   underline | line-through | none   none                  no         \ntext-align        left | center | right             left                  no         \ntext-indent       <length> | <percentage>           -                     no         specifies the indentation of the first line of the text\n                                                                                     block.\nline-height       <length>                          -                     no         text line height.\ntext-overflow     clip | ellipsis                   clip                  no         takes effect when the number of lines is set.\n\nexamples\n\n * single-line ellipsis\n   \n   text {\n     width: 150px;\n     lines: 1;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n * multi-line ellipsis, taking two lines as an example\n   \n   text {\n     width: 100px;\n     lines: 2;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n\n# events\n\ngeneral events are supported.\n\n\n# sample code\n\n<template>\n  <div>\n    <text>this is a piece of text.</text>\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"Container Component",frontmatter:{},regularPath:"/en/components/container/",relativePath:"en/components/container/README.md",key:"v-3d3c09a7",path:"/en/components/container/",headersStr:null,content:"# Container Component\n\nIn general, it refers to components that can contain child components.\n\n * div\n * list\n * list-item\n * scroll\n * stack\n * swiper",normalizedContent:"# container component\n\nin general, it refers to components that can contain child components.\n\n * div\n * list\n * list-item\n * scroll\n * stack\n * swiper",charsets:{}},{title:"list-item",frontmatter:{},regularPath:"/en/components/container/list-item.html",relativePath:"en/components/container/list-item.md",key:"v-02db6d94",path:"/en/components/container/list-item.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:16},{level:2,title:"Subcomponents",slug:"subcomponents",normalizedTitle:"subcomponents",charIndex:153},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:182},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:854},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:990},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:1031},{level:3,title:"Display Effect",slug:"display-effect",normalizedTitle:"display effect",charIndex:1618}],headersStr:"Overview Subcomponents Attributes Styles Events Example Code Display Effect",content:"# list-item\n\n\n# Overview\n\nThe subcomponent of <list>, used to display specific items in a list. It fills the width of the list component by default.\n\n\n# Subcomponents\n\nSupported\n\n\n# Attributes\n\nCommon attributes are supported.\n\nNAME   TYPE       DEFAULT VALUE   REQUIRED   DESCRIPTION\ntype   <string>   -               Yes        The type of list-item, defined as a custom string, such as\n                                             'loadMore'. List-items with the same type must have\n                                             identical DOM structures. Therefore, use if and for with\n                                             caution inside list-items, as they may cause DOM structure\n                                             inconsistencies for list-items of the same type, leading to\n                                             errors.\n\n\n# Styles\n\nCommon styles are supported.\n\nTo achieve component reuse and optimize performance, explicitly specify the width and height.\n\n\n# Events\n\nCommon events are supported.\n\n\n# Example Code\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\">\n      <list-item for=\"{{productList}}\" class=\"item\" type=\"list-item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      productList: [\n        { name: 'Clothes', price: '100' },\n        { name: 'Pants', price: '200' }\n      ],\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .list {\n    width: 100%;\n    height: 100%;\n  }\n\n  .item {\n    height: 40px;\n  }\n</style>\n\n\n\n# Display Effect\n\n",normalizedContent:"# list-item\n\n\n# overview\n\nthe subcomponent of <list>, used to display specific items in a list. it fills the width of the list component by default.\n\n\n# subcomponents\n\nsupported\n\n\n# attributes\n\ncommon attributes are supported.\n\nname   type       default value   required   description\ntype   <string>   -               yes        the type of list-item, defined as a custom string, such as\n                                             'loadmore'. list-items with the same type must have\n                                             identical dom structures. therefore, use if and for with\n                                             caution inside list-items, as they may cause dom structure\n                                             inconsistencies for list-items of the same type, leading to\n                                             errors.\n\n\n# styles\n\ncommon styles are supported.\n\nto achieve component reuse and optimize performance, explicitly specify the width and height.\n\n\n# events\n\ncommon events are supported.\n\n\n# example code\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\">\n      <list-item for=\"{{productlist}}\" class=\"item\" type=\"list-item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      productlist: [\n        { name: 'clothes', price: '100' },\n        { name: 'pants', price: '200' }\n      ],\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .list {\n    width: 100%;\n    height: 100%;\n  }\n\n  .item {\n    height: 40px;\n  }\n</style>\n\n\n\n# display effect\n\n",charsets:{}},{title:"div",frontmatter:{},regularPath:"/en/components/container/div.html",relativePath:"en/components/container/div.md",key:"v-2b6f63d6",path:"/en/components/container/div.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:10},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:105},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:137},{level:2,title:"Style",slug:"style",normalizedTitle:"style",charIndex:181},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:215},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:251}],headersStr:"Overview Child Components Attributes Style Events Example Code",content:'# div\n\n\n# Overview\n\nBasic container used as the root node of the page structure or to group content.\n\n\n# Child Components\n\nSupported\n\n\n# Attributes\n\nSupports general attributes\n\n\n# Style\n\nSupports general style\n\n\n# Events\n\nSupports general events\n\n\n# Example Code\n\n<template>\n  <div class="page">\n    <div style="flex-direction: row;">\n      <text class="item color-1">1</text>\n      <text class="item color-2">2</text>\n      <text class="item color-3">3</text>\n    </div>\n  </div>\n</template>\n<style>\n  .page {\n    margin: 20px;\n    flex-direction: column;\n    background-color: white;\n  }\n\n  .item {\n    height: 100px;\n    width: 100px;\n    text-align: center;\n    margin-right: 10px;\n  }\n  \n  .color-1 {\n    background-color: #09ba07;\n  }\n  \n  .color-2 {\n    background-color: #f76160;\n  }\n  \n  .color-3 {\n    background-color: #0faeff;\n  }\n</style>\n\n\n',normalizedContent:'# div\n\n\n# overview\n\nbasic container used as the root node of the page structure or to group content.\n\n\n# child components\n\nsupported\n\n\n# attributes\n\nsupports general attributes\n\n\n# style\n\nsupports general style\n\n\n# events\n\nsupports general events\n\n\n# example code\n\n<template>\n  <div class="page">\n    <div style="flex-direction: row;">\n      <text class="item color-1">1</text>\n      <text class="item color-2">2</text>\n      <text class="item color-3">3</text>\n    </div>\n  </div>\n</template>\n<style>\n  .page {\n    margin: 20px;\n    flex-direction: column;\n    background-color: white;\n  }\n\n  .item {\n    height: 100px;\n    width: 100px;\n    text-align: center;\n    margin-right: 10px;\n  }\n  \n  .color-1 {\n    background-color: #09ba07;\n  }\n  \n  .color-2 {\n    background-color: #f76160;\n  }\n  \n  .color-3 {\n    background-color: #0faeff;\n  }\n</style>\n\n\n',charsets:{}},{title:"scroll",frontmatter:{},regularPath:"/en/components/container/scroll.html",relativePath:"en/components/container/scroll.md",key:"v-54443c26",path:"/en/components/container/scroll.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:13},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:186},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:270},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:2565},{level:3,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:5298},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:7999},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:8455},{level:3,title:"scrollTo Method Object Parameters",slug:"scrollto-method-object-parameters",normalizedTitle:"scrollto method object parameters",charIndex:8874},{level:3,title:"scrollBy Method Object Parameters",slug:"scrollby-method-object-parameters",normalizedTitle:"scrollby method object parameters",charIndex:10070},{level:3,title:"Return Value (Asynchronous)",slug:"return-value-asynchronous",normalizedTitle:"return value (asynchronous)",charIndex:11e3},{level:2,title:"Example Code",slug:"example-code-2",normalizedTitle:"example code",charIndex:5298}],headersStr:"Overview Child Components Attributes Styles Example Code Events Methods scrollTo Method Object Parameters scrollBy Method Object Parameters Return Value (Asynchronous) Example Code",content:'# scroll\n\n\n# Overview\n\nScroll view container. A vertical or horizontal scroll container. Vertical scrolling requires a fixed height, and horizontal scrolling requires a fixed width.\n\n\n# Child Components\n\nSupported. Nested child scroll components are also supported.\n\n\n# Attributes\n\nSupports Common Attributes\n\nNAME            TYPE                  DEFAULT   REQUIRED   DESCRIPTION\nscroll-x        <boolean>             false     No         Whether to allow horizontal scrolling\nscroll-y        <boolean>             false     No         Whether to allow vertical scrolling\nscroll-top      <number> | <string>             No         Sets the vertical scroll bar position, the distance from the\n                                                           top of the content to the top of the scroll. If there is a\n                                                           scroll snap effect, it will scroll first and then snap.\nscroll-bottom   <number> | <string>             No         Sets the vertical scroll bar position, the distance from the\n                                                           bottom of the content to the bottom of the scroll. If there\n                                                           is a scroll snap effect, it will scroll first and then snap.\n                                                           If both scroll-top and scroll-bottom are set, scroll-top\n                                                           takes precedence.\nscroll-left     <number> | <string>             No         Sets the horizontal scroll bar position, the distance from\n                                                           the left side of the content to the left side of the scroll.\n                                                           If there is a scroll snap effect, it will scroll first and\n                                                           then snap.\nscroll-right    <number> | <string>             No         Sets the horizontal scroll bar position, the distance from\n                                                           the right side of the content to the right side of the\n                                                           scroll. If there is a scroll snap effect, it will scroll\n                                                           first and then snap. If both scroll-left and scroll-right\n                                                           are set, scroll-left takes precedence.\nbounces         <boolean>             false     No         Whether to enable boundary rebound\n\n\n# Styles\n\nSupports Common Styles\n\nNAME                TYPE                                 DEFAULT   DESCRIPTION\nscroll-snap-type    -                                    none      Used in conjunction with scroll-snap-align, applied to the\n                                                                   scroll component, indicating the scroll snap type. The first\n                                                                   parameter is x or y, indicating horizontal or vertical\n                                                                   scrolling; the second parameter is mandatory, proximity, or\n                                                                   cross. mandatory: snaps to the nearest anchor; proximity:\n                                                                   snaps only when the distance to the snap anchor is less than\n                                                                   30% of the container height; cross: snaps only when the\n                                                                   child component\'s boundary that can be snapped appears in\n                                                                   the scroll viewport. Default is proximity\n                                                                   Minimum aiot-toolkit version: 1.1.4\nscroll-snap-align   none | start | center | end | edge   none      Used in conjunction with scroll-snap-type, applied to the\n                                                                   scroll child component, indicating the alignment form\n                                                                   between the child component and the scroll. none: no\n                                                                   alignment, default value; start: aligns the component with\n                                                                   the start edge of the scroll; center: aligns the component\n                                                                   with the center of the scroll; end: aligns the component\n                                                                   with the end edge of the scroll; edge: in the scrolling\n                                                                   direction, aligns the component with the start or end edge\n                                                                   of the scroll\n                                                                   Minimum aiot-toolkit version: 1.1.4\nscroll-snap-stop    normal | always                      normal    When set to always, cannot skip elements during snapping\n                                                                   Minimum aiot-toolkit version: 1.1.4\n\n\n# Example Code\n\n * scroll-snap-type & scroll-snap-align\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x proximity;">\n           <text class="scroll-item color-1">A</text>\n           <text class="scroll-item color-2">B</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: start;">C</text>\n           <text class="scroll-item color-2">D</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">E</text>\n           <text class="scroll-item color-2">F</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: end;">G</text>\n           <text class="scroll-item color-2">H</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n * scroll-snap-stop\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x cross;scroll-snap-stop:always;">\n           <text class="scroll-item color-1">A</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">B</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">C</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">D</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">E</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">F</text>\n           <text class="scroll-item color-1">G</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n\n# Events\n\nNAME           PARAMETERS             DESCRIPTION\nscrolltop      -                      Triggered when scrolling to the top\nscrollbottom   -                      Triggered when scrolling to the bottom\nscroll         { scrollX, scrollY }   Triggered when scrolling, scrollX represents the horizontal\n                                      distance scrolled; scrollY represents the vertical distance\n                                      scrolled\n\n\n# Methods\n\nNAME            PARAMETERS   RETURN VALUE   DESCRIPTION\ngetScrollRect   None         <object>       Gets the dimensions of the scrollable content\nscrollTo        Object       None           Scrolls the scroll component window to a specific coordinate\n                                            position\nscrollBy        Object       None           Scrolls the scroll component window by a certain distance\n\n\n# scrollTo Method Object Parameters\n\nNAME       TYPE                      DEFAULT   REQUIRED   DESCRIPTION\nleft       number                    -         No         The horizontal coordinate value of the scroll component. If\n                                                          not provided, no horizontal scrolling occurs. Negative\n                                                          values are treated as 0. Values beyond the scroll range are\n                                                          treated as the scroll boundary.\ntop        number                    -         No         The vertical coordinate value of the scroll component. If\n                                                          not provided, no vertical scrolling occurs. Negative values\n                                                          are treated as 0. Values beyond the scroll range are treated\n                                                          as the scroll boundary.\nbehavior   smooth / instant / auto   auto      No         The scrolling behavior. smooth-smooth scrolling,\n                                                          instant-instant scrolling, auto-same as instant\n\n\n# scrollBy Method Object Parameters\n\nNAME       TYPE                      DEFAULT   REQUIRED   DESCRIPTION\nleft       number                    -         No         The horizontal offset of the scroll component. Can be\n                                                          negative. Values beyond the scroll range are treated as the\n                                                          scroll boundary.\ntop        number                    -         No         The vertical offset of the scroll component. Can be\n                                                          negative. Values beyond the scroll range are treated as the\n                                                          scroll boundary.\nbehavior   smooth / instant / auto   auto      No         The scrolling behavior. smooth-smooth scrolling,\n                                                          instant-instant scrolling, auto-same as instant\n\n\n# Return Value (Asynchronous)\n\nPROPERTY   TYPE       DESCRIPTION\nwidth      <number>   The width of the scrollable content, including border and\n                      padding\nheight     <number>   The height of the scrollable content, including border and\n                      padding\n\n\n# Example Code\n\n<template>\n  <div class="page">\n      <scroll id="scrollId" scroll-y="true" onscrolltop="handleScrollTop">\n          <div class="item">\n             <text>Beijing</text>\n          </div>\n          <div class="item">\n             <text>Shanghai</text>\n          </div>\n          <div class="item">\n             <text>Guangzhou</text>\n          </div>\n          <div class="item">\n             <text>Shenzhen</text>\n          </div>\n       </scroll>\n  </div>\n</template>\n\n<script>\n  export default {\n    onShow() {\n      this.$element(\'scrollId\').getScrollRect({\n        success({ width, height }) {\n          console.log(\'Width\', width);\n          console.log(\'Height\', height);  \n        }\n      })\n\n      // this.scrollTo()\n      // this.scrollBy()\n    },\n    handleScrollTop() {\n      console.info(\'Scrolled to top.\')\n    },\n    scrollTo() {\n      this.$element(\'scrollId\').scrollTo({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    },\n    scrollBy() {\n      this.$element(\'scrollId\').scrollBy({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n  }\n\n  #scrollId {\n    width: 50%;\n    height: 100px;\n    flex-direction: column;\n    background-color: yellowgreen;\n  }\n\n  .item {\n    width: 100%;\n    height: 50px;\n    justify-content: center;\n  }\n</style>\n\n',normalizedContent:'# scroll\n\n\n# overview\n\nscroll view container. a vertical or horizontal scroll container. vertical scrolling requires a fixed height, and horizontal scrolling requires a fixed width.\n\n\n# child components\n\nsupported. nested child scroll components are also supported.\n\n\n# attributes\n\nsupports common attributes\n\nname            type                  default   required   description\nscroll-x        <boolean>             false     no         whether to allow horizontal scrolling\nscroll-y        <boolean>             false     no         whether to allow vertical scrolling\nscroll-top      <number> | <string>             no         sets the vertical scroll bar position, the distance from the\n                                                           top of the content to the top of the scroll. if there is a\n                                                           scroll snap effect, it will scroll first and then snap.\nscroll-bottom   <number> | <string>             no         sets the vertical scroll bar position, the distance from the\n                                                           bottom of the content to the bottom of the scroll. if there\n                                                           is a scroll snap effect, it will scroll first and then snap.\n                                                           if both scroll-top and scroll-bottom are set, scroll-top\n                                                           takes precedence.\nscroll-left     <number> | <string>             no         sets the horizontal scroll bar position, the distance from\n                                                           the left side of the content to the left side of the scroll.\n                                                           if there is a scroll snap effect, it will scroll first and\n                                                           then snap.\nscroll-right    <number> | <string>             no         sets the horizontal scroll bar position, the distance from\n                                                           the right side of the content to the right side of the\n                                                           scroll. if there is a scroll snap effect, it will scroll\n                                                           first and then snap. if both scroll-left and scroll-right\n                                                           are set, scroll-left takes precedence.\nbounces         <boolean>             false     no         whether to enable boundary rebound\n\n\n# styles\n\nsupports common styles\n\nname                type                                 default   description\nscroll-snap-type    -                                    none      used in conjunction with scroll-snap-align, applied to the\n                                                                   scroll component, indicating the scroll snap type. the first\n                                                                   parameter is x or y, indicating horizontal or vertical\n                                                                   scrolling; the second parameter is mandatory, proximity, or\n                                                                   cross. mandatory: snaps to the nearest anchor; proximity:\n                                                                   snaps only when the distance to the snap anchor is less than\n                                                                   30% of the container height; cross: snaps only when the\n                                                                   child component\'s boundary that can be snapped appears in\n                                                                   the scroll viewport. default is proximity\n                                                                   minimum aiot-toolkit version: 1.1.4\nscroll-snap-align   none | start | center | end | edge   none      used in conjunction with scroll-snap-type, applied to the\n                                                                   scroll child component, indicating the alignment form\n                                                                   between the child component and the scroll. none: no\n                                                                   alignment, default value; start: aligns the component with\n                                                                   the start edge of the scroll; center: aligns the component\n                                                                   with the center of the scroll; end: aligns the component\n                                                                   with the end edge of the scroll; edge: in the scrolling\n                                                                   direction, aligns the component with the start or end edge\n                                                                   of the scroll\n                                                                   minimum aiot-toolkit version: 1.1.4\nscroll-snap-stop    normal | always                      normal    when set to always, cannot skip elements during snapping\n                                                                   minimum aiot-toolkit version: 1.1.4\n\n\n# example code\n\n * scroll-snap-type & scroll-snap-align\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x proximity;">\n           <text class="scroll-item color-1">a</text>\n           <text class="scroll-item color-2">b</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: start;">c</text>\n           <text class="scroll-item color-2">d</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">e</text>\n           <text class="scroll-item color-2">f</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: end;">g</text>\n           <text class="scroll-item color-2">h</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n * scroll-snap-stop\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x cross;scroll-snap-stop:always;">\n           <text class="scroll-item color-1">a</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">b</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">c</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">d</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">e</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">f</text>\n           <text class="scroll-item color-1">g</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n\n# events\n\nname           parameters             description\nscrolltop      -                      triggered when scrolling to the top\nscrollbottom   -                      triggered when scrolling to the bottom\nscroll         { scrollx, scrolly }   triggered when scrolling, scrollx represents the horizontal\n                                      distance scrolled; scrolly represents the vertical distance\n                                      scrolled\n\n\n# methods\n\nname            parameters   return value   description\ngetscrollrect   none         <object>       gets the dimensions of the scrollable content\nscrollto        object       none           scrolls the scroll component window to a specific coordinate\n                                            position\nscrollby        object       none           scrolls the scroll component window by a certain distance\n\n\n# scrollto method object parameters\n\nname       type                      default   required   description\nleft       number                    -         no         the horizontal coordinate value of the scroll component. if\n                                                          not provided, no horizontal scrolling occurs. negative\n                                                          values are treated as 0. values beyond the scroll range are\n                                                          treated as the scroll boundary.\ntop        number                    -         no         the vertical coordinate value of the scroll component. if\n                                                          not provided, no vertical scrolling occurs. negative values\n                                                          are treated as 0. values beyond the scroll range are treated\n                                                          as the scroll boundary.\nbehavior   smooth / instant / auto   auto      no         the scrolling behavior. smooth-smooth scrolling,\n                                                          instant-instant scrolling, auto-same as instant\n\n\n# scrollby method object parameters\n\nname       type                      default   required   description\nleft       number                    -         no         the horizontal offset of the scroll component. can be\n                                                          negative. values beyond the scroll range are treated as the\n                                                          scroll boundary.\ntop        number                    -         no         the vertical offset of the scroll component. can be\n                                                          negative. values beyond the scroll range are treated as the\n                                                          scroll boundary.\nbehavior   smooth / instant / auto   auto      no         the scrolling behavior. smooth-smooth scrolling,\n                                                          instant-instant scrolling, auto-same as instant\n\n\n# return value (asynchronous)\n\nproperty   type       description\nwidth      <number>   the width of the scrollable content, including border and\n                      padding\nheight     <number>   the height of the scrollable content, including border and\n                      padding\n\n\n# example code\n\n<template>\n  <div class="page">\n      <scroll id="scrollid" scroll-y="true" onscrolltop="handlescrolltop">\n          <div class="item">\n             <text>beijing</text>\n          </div>\n          <div class="item">\n             <text>shanghai</text>\n          </div>\n          <div class="item">\n             <text>guangzhou</text>\n          </div>\n          <div class="item">\n             <text>shenzhen</text>\n          </div>\n       </scroll>\n  </div>\n</template>\n\n<script>\n  export default {\n    onshow() {\n      this.$element(\'scrollid\').getscrollrect({\n        success({ width, height }) {\n          console.log(\'width\', width);\n          console.log(\'height\', height);  \n        }\n      })\n\n      // this.scrollto()\n      // this.scrollby()\n    },\n    handlescrolltop() {\n      console.info(\'scrolled to top.\')\n    },\n    scrollto() {\n      this.$element(\'scrollid\').scrollto({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    },\n    scrollby() {\n      this.$element(\'scrollid\').scrollby({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n  }\n\n  #scrollid {\n    width: 50%;\n    height: 100px;\n    flex-direction: column;\n    background-color: yellowgreen;\n  }\n\n  .item {\n    width: 100%;\n    height: 50px;\n    justify-content: center;\n  }\n</style>\n\n',charsets:{cjk:!0}},{title:"stack",frontmatter:{},regularPath:"/en/components/container/stack.html",relativePath:"en/components/container/stack.md",key:"v-f6317614",path:"/en/components/container/stack.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:12},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:169},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:201},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:245},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:281},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:317}],headersStr:"Overview Child Components Properties Styles Events Example Code",content:'# stack\n\n\n# Overview\n\nA basic container that stacks its direct child components in a layered manner, with each subsequent child component covering the previous one.\n\n\n# Child Components\n\nSupported\n\n\n# Properties\n\nSupports general properties\n\n\n# Styles\n\nSupports general styles\n\n\n# Events\n\nSupports general events\n\n\n# Example Code\n\n<template>\n  <div class="page">\n    <stack class="stack">\n      <div class="box box1"></div>\n      <div class="box box2"></div>\n      <div class="box box3"></div>\n      <div class="box box4"></div>\n    </stack>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box {\n    border-radius: 8px;\n    width: 100px;\n    height: 100px;\n  }\n\n  .box1 {\n    width: 200px;\n    height: 200px;\n    background-color: #3f56ea;\n  }\n\n  .box2 {\n    left: 20px;\n    top: 20px;\n    background-color: #00bfc9;\n  }\n\n  .box3 {\n    left: 50px;\n    top: 50px;\n    background-color: #47cc47;\n  }\n\n  .box4 {\n    left: 80px;\n    top: 80px;\n    background-color: #FF6A00;\n  }\n</style>\n\n\n',normalizedContent:'# stack\n\n\n# overview\n\na basic container that stacks its direct child components in a layered manner, with each subsequent child component covering the previous one.\n\n\n# child components\n\nsupported\n\n\n# properties\n\nsupports general properties\n\n\n# styles\n\nsupports general styles\n\n\n# events\n\nsupports general events\n\n\n# example code\n\n<template>\n  <div class="page">\n    <stack class="stack">\n      <div class="box box1"></div>\n      <div class="box box2"></div>\n      <div class="box box3"></div>\n      <div class="box box4"></div>\n    </stack>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box {\n    border-radius: 8px;\n    width: 100px;\n    height: 100px;\n  }\n\n  .box1 {\n    width: 200px;\n    height: 200px;\n    background-color: #3f56ea;\n  }\n\n  .box2 {\n    left: 20px;\n    top: 20px;\n    background-color: #00bfc9;\n  }\n\n  .box3 {\n    left: 50px;\n    top: 50px;\n    background-color: #47cc47;\n  }\n\n  .box4 {\n    left: 80px;\n    top: 80px;\n    background-color: #ff6a00;\n  }\n</style>\n\n\n',charsets:{}},{title:"swiper",frontmatter:{},regularPath:"/en/components/container/swiper.html",relativePath:"en/components/container/swiper.md",key:"v-cf625d60",path:"/en/components/container/swiper.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:13},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:50},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:83},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:1655},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:2368},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:3022},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:3193}],headersStr:"Overview Child Components Attributes Styles Events Methods Example Code",content:'# swiper\n\n\n# Overview\n\nSlider view container.\n\n\n# Child Components\n\nSupported.\n\n\n# Attributes\n\nSupports Universal Attributes.\n\nNAME             TYPE        DEFAULT   REQUIRED   DESCRIPTION\nindex            <number>    0         No         Index of the currently displayed child component\nautoplay         <boolean>   false     No         Whether to automatically play after rendering\ninterval         <number>    3000ms    No         Time interval for autoplay, in milliseconds\nindicator        <boolean>   true      No         Whether to enable the indicator, default true\nloop             <boolean>   true      No         Whether to enable loop mode\nduration         <number>    -         No         Slide animation duration (duration is dynamically calculated\n                                                  based on finger speed by default)\nvertical         <boolean>   false     No         Whether the slide direction is vertical, and the indicator\n                                                  is also vertical when it is\npreviousmargin   <string>    0px       No         Front margin, can be used to expose a small part of the\n                                                  previous item, supports units: px and %\nnextmargin       <string>    0px       No         Rear margin, can be used to expose a small part of the next\n                                                  item, supports units: px and %\nenableswipe      <boolean>   true      No         Whether to support gesture swiping on the swiper\n\nNote: The sum of previousmargin and nextmargin should not exceed 1/2 of the entire swiper size, and any excess will be truncated.\n\n\n# Styles\n\nSupports Universal Styles.\n\nNAME                                TYPE                      DEFAULT                        REQUIRED   DESCRIPTION\nindicator-color                     <color>                   rgba(0, 0, 0, 0.5)             No         Indicator fill color\nindicator-selected-color            <color>                   #33b4ff or rgb(51, 180, 255)   No         Indicator color when selected\nindicator-size                      <length>                  20px                           No         Diameter size of the indicator component\nindicator-[top|left|right|bottom]   <length> | <percentage>   -                              No         Position of the indicator relative to the swiper\n\n\n# Events\n\nSupports Universal Events.\n\nNAME         PARAMETERS             DESCRIPTION\nchange       {index:currentIndex}   Triggered when the index of the currently displayed\n                                    component changes\nswipestart   {index:currentIndex}   Triggered when the child component switching animation\n                                    starts (if the switching is caused by finger dragging, it\n                                    refers to the time point when the finger starts pressing and\n                                    dragging)\nswipeend     {index:currentIndex}   Triggered when the child component switching animation ends\n\n\n# Methods\n\nNAME      PARAMETERS                            DESCRIPTION\nswipeTo   {index: number(specified position)}   Scroll the swiper to the specified index position\n\n\n# Example Code\n\n<template>\n  <div class="page">\n    <swiper class="swiper">\n      <text class="item item-1">A</text>\n      <text class="item item-2">B</text>\n      <text class="item item-3">C</text>\n      <text class="item item-4">D</text>\n    </swiper>\n    \n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .swiper {\n    width: 300px;\n    height: 160px;\n    indicator-size: 10px;\n  }\n\n  .item {\n    text-align: center;\n    color: white;\n    font-size: 30px;\n  }\n\n  .item-1 {\n    background-color: #3f56ea;\n  }\n\n  .item-2 {\n    background-color: #00bfc9;\n  }\n\n  .item-3 {\n    background-color: #47cc47;\n  }\n\n  .item-4 {\n    background-color: #FF6A00;\n  }\n</style>\n\n\n',normalizedContent:'# swiper\n\n\n# overview\n\nslider view container.\n\n\n# child components\n\nsupported.\n\n\n# attributes\n\nsupports universal attributes.\n\nname             type        default   required   description\nindex            <number>    0         no         index of the currently displayed child component\nautoplay         <boolean>   false     no         whether to automatically play after rendering\ninterval         <number>    3000ms    no         time interval for autoplay, in milliseconds\nindicator        <boolean>   true      no         whether to enable the indicator, default true\nloop             <boolean>   true      no         whether to enable loop mode\nduration         <number>    -         no         slide animation duration (duration is dynamically calculated\n                                                  based on finger speed by default)\nvertical         <boolean>   false     no         whether the slide direction is vertical, and the indicator\n                                                  is also vertical when it is\npreviousmargin   <string>    0px       no         front margin, can be used to expose a small part of the\n                                                  previous item, supports units: px and %\nnextmargin       <string>    0px       no         rear margin, can be used to expose a small part of the next\n                                                  item, supports units: px and %\nenableswipe      <boolean>   true      no         whether to support gesture swiping on the swiper\n\nnote: the sum of previousmargin and nextmargin should not exceed 1/2 of the entire swiper size, and any excess will be truncated.\n\n\n# styles\n\nsupports universal styles.\n\nname                                type                      default                        required   description\nindicator-color                     <color>                   rgba(0, 0, 0, 0.5)             no         indicator fill color\nindicator-selected-color            <color>                   #33b4ff or rgb(51, 180, 255)   no         indicator color when selected\nindicator-size                      <length>                  20px                           no         diameter size of the indicator component\nindicator-[top|left|right|bottom]   <length> | <percentage>   -                              no         position of the indicator relative to the swiper\n\n\n# events\n\nsupports universal events.\n\nname         parameters             description\nchange       {index:currentindex}   triggered when the index of the currently displayed\n                                    component changes\nswipestart   {index:currentindex}   triggered when the child component switching animation\n                                    starts (if the switching is caused by finger dragging, it\n                                    refers to the time point when the finger starts pressing and\n                                    dragging)\nswipeend     {index:currentindex}   triggered when the child component switching animation ends\n\n\n# methods\n\nname      parameters                            description\nswipeto   {index: number(specified position)}   scroll the swiper to the specified index position\n\n\n# example code\n\n<template>\n  <div class="page">\n    <swiper class="swiper">\n      <text class="item item-1">a</text>\n      <text class="item item-2">b</text>\n      <text class="item item-3">c</text>\n      <text class="item item-4">d</text>\n    </swiper>\n    \n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .swiper {\n    width: 300px;\n    height: 160px;\n    indicator-size: 10px;\n  }\n\n  .item {\n    text-align: center;\n    color: white;\n    font-size: 30px;\n  }\n\n  .item-1 {\n    background-color: #3f56ea;\n  }\n\n  .item-2 {\n    background-color: #00bfc9;\n  }\n\n  .item-3 {\n    background-color: #47cc47;\n  }\n\n  .item-4 {\n    background-color: #ff6a00;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"Form Components",frontmatter:{},regularPath:"/en/components/form/",relativePath:"en/components/form/README.md",key:"v-75c52e96",path:"/en/components/form/",headersStr:null,content:"# Form Components\n\nComponents used for interaction, such as submitting data, etc.\n\n * input\n * picker\n * switch\n * slider",normalizedContent:"# form components\n\ncomponents used for interaction, such as submitting data, etc.\n\n * input\n * picker\n * switch\n * slider",charsets:{}},{title:"slider",frontmatter:{},regularPath:"/en/components/form/slider.html",relativePath:"en/components/form/slider.md",key:"v-2b656194",path:"/en/components/form/slider.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:13},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:44},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:81},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:377},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:890},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:1315}],headersStr:"Overview Child Components Attributes Styles Events Example Code",content:'# slider\n\n\n# Overview\n\nSlider selector.\n\n\n# Child Components\n\nNot supported.\n\n\n# Attributes\n\nSupports general attributes.\n\nNAME    TYPE       DEFAULT VALUE   REQUIRED   DESCRIPTION\nmin     <number>   0               No         -\nmax     <number>   100             No         -\nstep    <number>   1               No         -\nvalue   <number>   0               No         -\n\n\n# Styles\n\nSupports general styles.\n\nNAME                   TYPE       DEFAULT VALUE                   REQUIRED   DESCRIPTION\ncolor                  <color>    #f0f0f0 or rgb(240, 240, 240)   No         Background bar color\nselected-color         <color>    #009688 or rgb(0, 150, 136)     No         Selected color\nblock-color            <color>    -                               No         Slider block color\npadding-[left|right]   <length>   32px                            No         Left and right padding\n\n\n# Events\n\nSupports general events.\n\nNAME     PARAMETERS                                             DESCRIPTION\nchange   {progress:progressValue, isFromUser:isFromUserValue}   Triggered after a drag is completed\n                                                                isFromUser description:\n                                                                Indicates whether the event was triggered by user dragging\n\n\n# Example Code\n\n<template>\n  <div class="page">\n    <text class="title">Slider Component</text>\n    <slider class="slider" min="0" max="100" step="10" value="{{ initialSliderValue }}" onchange="onSliderChange"></slider>\n    <text>Slider value: {{ sliderValue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      initialSliderValue: 10,\n      sliderValue: null\n    },\n    onSliderChange (e) {\n      this.sliderValue = e.progress\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .slider {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n</style>\n\n\n',normalizedContent:'# slider\n\n\n# overview\n\nslider selector.\n\n\n# child components\n\nnot supported.\n\n\n# attributes\n\nsupports general attributes.\n\nname    type       default value   required   description\nmin     <number>   0               no         -\nmax     <number>   100             no         -\nstep    <number>   1               no         -\nvalue   <number>   0               no         -\n\n\n# styles\n\nsupports general styles.\n\nname                   type       default value                   required   description\ncolor                  <color>    #f0f0f0 or rgb(240, 240, 240)   no         background bar color\nselected-color         <color>    #009688 or rgb(0, 150, 136)     no         selected color\nblock-color            <color>    -                               no         slider block color\npadding-[left|right]   <length>   32px                            no         left and right padding\n\n\n# events\n\nsupports general events.\n\nname     parameters                                             description\nchange   {progress:progressvalue, isfromuser:isfromuservalue}   triggered after a drag is completed\n                                                                isfromuser description:\n                                                                indicates whether the event was triggered by user dragging\n\n\n# example code\n\n<template>\n  <div class="page">\n    <text class="title">slider component</text>\n    <slider class="slider" min="0" max="100" step="10" value="{{ initialslidervalue }}" onchange="onsliderchange"></slider>\n    <text>slider value: {{ slidervalue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      initialslidervalue: 10,\n      slidervalue: null\n    },\n    onsliderchange (e) {\n      this.slidervalue = e.progress\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .slider {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"input",frontmatter:{},regularPath:"/en/components/form/input.html",relativePath:"en/components/form/input.md",key:"v-f6a85044",path:"/en/components/form/input.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:12},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:82},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:119},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:1001},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:1536},{level:3,title:"Parameters of the change Event",slug:"parameters-of-the-change-event",normalizedTitle:"parameters of the change event",charIndex:1921},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:2095},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:2517}],headersStr:"Overview Child Components Attributes Styles Events Parameters of the change Event Methods Example Code",content:'# input\n\n\n# Overview\n\nProvide an interactive interface to receive user input.\n\n\n# Child Components\n\nNot supported.\n\n\n# Attributes\n\nCommon attributes are supported.\n\nNAME      TYPE                          DEFAULT VALUE   REQUIRED   DESCRIPTION\ntype      button | checkbox | radio |   button          No         Dynamic modification is supported.\nchecked   <boolean>                     false           No         The checked status of the current component, which takes\n                                                                   effect when the type is checkbox. It can trigger the checked\n                                                                   pseudo-class (checked pseudo-class style is not supported\n                                                                   yet).\nname      <string>                      -               No         The name of the input component.\nvalue     <string>                      -               No         The value of the input component.\n\n\n# Styles\n\nCommon styles are supported.\n\nNAME        TYPE                      DEFAULT VALUE         REQUIRED   DESCRIPTION\ncolor       <color>                   rgba(0, 0, 0, 0.87)   No         Text color\nfont-size   <length>                  37.5px                No         Text size\nwidth       <length> | <percentage>   -                     No         When the type is button, the default value is 128px.\nheight      <length> | <percentage>   -                     No         When the type is button, the default value is 70px.\n\n\n# Events\n\nCommon events are supported.\n\nNAME     PARAMETERS                                                    DESCRIPTION\nchange   Different types have different parameters. For details, see   Triggered when the value or status of the input component\n         the parameters of the change event below.                     changes. When the type is button, there is no change event.\n\n\n# Parameters of the change Event\n\nPARAMETER   CHECKBOX   RADIO   REMARKS\nname        √          √       -\nvalue       √          √       -\nchecked     √          -       -\n\n\n# Methods\n\nNAME    PARAMETERS                                                DESCRIPTION\nfocus   {focus:true|false}, if focus is not passed, the default   Enable or disable the focus of the component. It can trigger\n        value is true                                             the focus pseudo-class (focus pseudo-class style is not\n                                                                  supported yet).\n\n\n# Example Code\n\n<template>\n  <div class="page">\n    <div class="section">\n      <text class="title">input-button component</text>\n      <input class="button" type="button" value="Button" @click="onButtonClick" />\n      <text>{{ buttonText }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-checkbox component</text>\n      <input class="checkbox" type="checkbox" checked="{{ checkboxChecked }}" @change="onCheckboxChange" />\n      <text>My checked status: {{ checkboxChecked }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-radio component</text>\n      <div>\n        <input class="radio" type="radio" name="radio" value="1" checked="{{radioValue === \'1\'}}" @change="onRadioChange" />\n        <input class="radio" type="radio" name="radio" value="2" checked="{{radioValue === \'2\'}}" @change="onRadioChange" />\n        <input class="radio" type="radio" name="radio" value="3" checked="{{radioValue === \'3\'}}" @change="onRadioChange" />\n      </div>\n      <text>Currently, the {{ radioValue }}th one is selected.</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      buttonText: \'\',\n      checkboxChecked: true,\n      radioValue: \'1\'\n    },\n    onTextChange(e) {\n      this.textValue = e.value\n    },\n    onButtonClick() {\n      this.buttonText = \'The button is clicked.\'\n    },\n    onCheckboxChange(e) {\n      this.checkboxChecked = e.checked\n    },\n    onRadioChange(e) {\n      this.radioValue = e.value\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .section {\n    flex-direction: column;\n    margin-bottom: 30px;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .button {\n    width: 140px;\n    height: 50px;\n    font-size: 25px;\n    color: white;\n  }\n\n  .checkbox, .radio {\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n  }\n</style>\n\n\n',normalizedContent:'# input\n\n\n# overview\n\nprovide an interactive interface to receive user input.\n\n\n# child components\n\nnot supported.\n\n\n# attributes\n\ncommon attributes are supported.\n\nname      type                          default value   required   description\ntype      button | checkbox | radio |   button          no         dynamic modification is supported.\nchecked   <boolean>                     false           no         the checked status of the current component, which takes\n                                                                   effect when the type is checkbox. it can trigger the checked\n                                                                   pseudo-class (checked pseudo-class style is not supported\n                                                                   yet).\nname      <string>                      -               no         the name of the input component.\nvalue     <string>                      -               no         the value of the input component.\n\n\n# styles\n\ncommon styles are supported.\n\nname        type                      default value         required   description\ncolor       <color>                   rgba(0, 0, 0, 0.87)   no         text color\nfont-size   <length>                  37.5px                no         text size\nwidth       <length> | <percentage>   -                     no         when the type is button, the default value is 128px.\nheight      <length> | <percentage>   -                     no         when the type is button, the default value is 70px.\n\n\n# events\n\ncommon events are supported.\n\nname     parameters                                                    description\nchange   different types have different parameters. for details, see   triggered when the value or status of the input component\n         the parameters of the change event below.                     changes. when the type is button, there is no change event.\n\n\n# parameters of the change event\n\nparameter   checkbox   radio   remarks\nname        √          √       -\nvalue       √          √       -\nchecked     √          -       -\n\n\n# methods\n\nname    parameters                                                description\nfocus   {focus:true|false}, if focus is not passed, the default   enable or disable the focus of the component. it can trigger\n        value is true                                             the focus pseudo-class (focus pseudo-class style is not\n                                                                  supported yet).\n\n\n# example code\n\n<template>\n  <div class="page">\n    <div class="section">\n      <text class="title">input-button component</text>\n      <input class="button" type="button" value="button" @click="onbuttonclick" />\n      <text>{{ buttontext }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-checkbox component</text>\n      <input class="checkbox" type="checkbox" checked="{{ checkboxchecked }}" @change="oncheckboxchange" />\n      <text>my checked status: {{ checkboxchecked }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-radio component</text>\n      <div>\n        <input class="radio" type="radio" name="radio" value="1" checked="{{radiovalue === \'1\'}}" @change="onradiochange" />\n        <input class="radio" type="radio" name="radio" value="2" checked="{{radiovalue === \'2\'}}" @change="onradiochange" />\n        <input class="radio" type="radio" name="radio" value="3" checked="{{radiovalue === \'3\'}}" @change="onradiochange" />\n      </div>\n      <text>currently, the {{ radiovalue }}th one is selected.</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      buttontext: \'\',\n      checkboxchecked: true,\n      radiovalue: \'1\'\n    },\n    ontextchange(e) {\n      this.textvalue = e.value\n    },\n    onbuttonclick() {\n      this.buttontext = \'the button is clicked.\'\n    },\n    oncheckboxchange(e) {\n      this.checkboxchecked = e.checked\n    },\n    onradiochange(e) {\n      this.radiovalue = e.value\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .section {\n    flex-direction: column;\n    margin-bottom: 30px;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .button {\n    width: 140px;\n    height: 50px;\n    font-size: 25px;\n    color: white;\n  }\n\n  .checkbox, .radio {\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"picker",frontmatter:{},regularPath:"/en/components/form/picker.html",relativePath:"en/components/form/picker.md",key:"v-e4ca2fd4",path:"/en/components/form/picker.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:13},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:170},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:206},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:927},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:1565},{level:2,title:"Sample Code",slug:"sample-code",normalizedTitle:"sample code",charIndex:2111}],headersStr:"Overview Child Components Attributes Styles Events Sample Code",content:'# picker\n\n\n# Overview\n\nA scroll picker that currently supports two types of pickers: the ordinary picker and the time picker. The ordinary picker is used by default.\n\n\n# Child Components\n\nNot supported\n\n\n# Attributes\n\nCommon attributes are supported.\n\nOrdinary picker\n\nNAME       TYPE       DEFAULT VALUE   MANDATORY   DESCRIPTION\ntype       text       -               Yes         Dynamic modification is not supported.\nrange      <array>    -               No          Value range of the picker\nselected   <number>   0               No          Default value of the picker, which is the index of the\n                                                  range.\n\nTime picker\n\nNAME       TYPE       DEFAULT VALUE   MANDATORY   DESCRIPTION\ntype       time       -               Yes         Dynamic modification is not supported.\nselected   <string>   Current time    No          Default value of the picker. The format is hh:mm.\n\n\n# Styles\n\nCommon styles are supported.\n\nNAME                        TYPE       DEFAULT VALUE   MANDATORY   DESCRIPTION\ncolor                       <color>    Theme color     No          Font color of the candidate items\nfont-size                   <length>   30px            No          Font size of the candidate items, in px\nselected-color              <length>   #ffffff         No          Font color of the selected item\nselected-font-size          <length>   20px            No          Font size of the selected item, in px\nselected-background-color   <color>    -               No          Background color of the selected item\n\n\n# Events\n\nOrdinary picker\n\nEVENT NAME   PARAMETERS                                     DESCRIPTION\nchange       {newValue:newValue, newSelected:newSelected}   Triggered when a value is selected from the scroll picker\n                                                            and confirmed (newSelected is the index).\n\nTime picker\n\nEVENT NAME   PARAMETERS                   DESCRIPTION\nchange       {hour:hour, minute:minute}   Triggered when a value is selected from the scroll picker\n                                          and confirmed.\n\n\n# Sample Code\n\n<template>\n  <div class="page">\n    <text class="title">Ordinary picker</text>\n    <picker \n      class="picker" \n      type="text" \n      range="{{pickerList}}" \n      selected="1" \n      onchange="onPickerChange">\n    </picker>\n    <text class="value">Selected value: {{v1}}</text>\n\n    <text class="title">Time picker</text>\n    <picker \n      class="picker" \n      type="time"\n      selected="12:00" \n      onchange="onTimePickerChange">\n    </picker>\n    <text class="value">Selected value: {{v2}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      pickerList: [\'apple\', \'peach\', \'pear\', \'banana\'],\n      v1: \'peach\',\n      v2: \'12:00\'\n    },\n    onPickerChange(e) {\n      this.v1 = e.newValue;\n    },\n    onTimePickerChange(e) {\n      this.v2 = e.hour + \':\' + e.minute;\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n    color: #000;\n  }\n\n  .value {\n    margin-top: 5px;\n    margin-bottom: 30px;\n    color: #090;\n  }\n\n  .picker {\n    font-size: 25px;\n    color: #000;\n    selected-font-size: 30px;\n    selected-color: #09f;\n    selected-background-color: #ccc;\n  }\n</style>\n\n\n',normalizedContent:'# picker\n\n\n# overview\n\na scroll picker that currently supports two types of pickers: the ordinary picker and the time picker. the ordinary picker is used by default.\n\n\n# child components\n\nnot supported\n\n\n# attributes\n\ncommon attributes are supported.\n\nordinary picker\n\nname       type       default value   mandatory   description\ntype       text       -               yes         dynamic modification is not supported.\nrange      <array>    -               no          value range of the picker\nselected   <number>   0               no          default value of the picker, which is the index of the\n                                                  range.\n\ntime picker\n\nname       type       default value   mandatory   description\ntype       time       -               yes         dynamic modification is not supported.\nselected   <string>   current time    no          default value of the picker. the format is hh:mm.\n\n\n# styles\n\ncommon styles are supported.\n\nname                        type       default value   mandatory   description\ncolor                       <color>    theme color     no          font color of the candidate items\nfont-size                   <length>   30px            no          font size of the candidate items, in px\nselected-color              <length>   #ffffff         no          font color of the selected item\nselected-font-size          <length>   20px            no          font size of the selected item, in px\nselected-background-color   <color>    -               no          background color of the selected item\n\n\n# events\n\nordinary picker\n\nevent name   parameters                                     description\nchange       {newvalue:newvalue, newselected:newselected}   triggered when a value is selected from the scroll picker\n                                                            and confirmed (newselected is the index).\n\ntime picker\n\nevent name   parameters                   description\nchange       {hour:hour, minute:minute}   triggered when a value is selected from the scroll picker\n                                          and confirmed.\n\n\n# sample code\n\n<template>\n  <div class="page">\n    <text class="title">ordinary picker</text>\n    <picker \n      class="picker" \n      type="text" \n      range="{{pickerlist}}" \n      selected="1" \n      onchange="onpickerchange">\n    </picker>\n    <text class="value">selected value: {{v1}}</text>\n\n    <text class="title">time picker</text>\n    <picker \n      class="picker" \n      type="time"\n      selected="12:00" \n      onchange="ontimepickerchange">\n    </picker>\n    <text class="value">selected value: {{v2}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      pickerlist: [\'apple\', \'peach\', \'pear\', \'banana\'],\n      v1: \'peach\',\n      v2: \'12:00\'\n    },\n    onpickerchange(e) {\n      this.v1 = e.newvalue;\n    },\n    ontimepickerchange(e) {\n      this.v2 = e.hour + \':\' + e.minute;\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n    color: #000;\n  }\n\n  .value {\n    margin-top: 5px;\n    margin-bottom: 30px;\n    color: #090;\n  }\n\n  .picker {\n    font-size: 25px;\n    color: #000;\n    selected-font-size: 30px;\n    selected-color: #09f;\n    selected-background-color: #ccc;\n  }\n</style>\n\n\n',charsets:{}},{title:"switch",frontmatter:{},regularPath:"/en/components/form/switch.html",relativePath:"en/components/form/switch.md",key:"v-5d3cf656",path:"/en/components/form/switch.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:13},{level:2,title:"Subcomponents",slug:"subcomponents",normalizedTitle:"subcomponents",charIndex:44},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:77},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:370},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:647},{level:2,title:"Sample Code",slug:"sample-code",normalizedTitle:"sample code",charIndex:807}],headersStr:"Overview Subcomponents Attributes Styles Events Sample Code",content:'# switch\n\n\n# Overview\n\nSwitch selection\n\n\n# Subcomponents\n\nNot supported\n\n\n# Attributes\n\nSupports universal attributes\n\nNAME      TYPE        DEFAULT VALUE   REQUIRED   DESCRIPTION\nchecked   <boolean>   false           No         Can trigger the checked pseudo-class (checked pseudo-class\n                                                 style is not yet supported)\n\n\n# Styles\n\nSupports universal styles\n\nNAME          TYPE      DEFAULT VALUE                   REQUIRED   DESCRIPTION\nthumb-color   <color>   #ffffff or rgb(255, 255, 255)   No         Slider color\ntrack-color   <color>   #0d84ff or rgb(13, 132, 255)    No         Track color\n\n\n# Events\n\nSupports universal events\n\nNAME     PARAMETERS               DESCRIPTION\nchange   {checked:checkedValue}   Triggered when the checked state changes\n\n\n# Sample Code\n\n<template>\n  <div class="page">\n    <text class="title">switch component</text>\n    <switch checked="{{ switchValue }}" class="switch" @change="onSwitchChange"></switch>\n    <text>Status: {{ switchValue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      switchValue: true\n    },\n    onSwitchChange(e) {\n      this.switchValue = e.checked\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .switch {\n    width: 100px;\n    margin-top: 10px;\n  }\n</style>\n\n\n',normalizedContent:'# switch\n\n\n# overview\n\nswitch selection\n\n\n# subcomponents\n\nnot supported\n\n\n# attributes\n\nsupports universal attributes\n\nname      type        default value   required   description\nchecked   <boolean>   false           no         can trigger the checked pseudo-class (checked pseudo-class\n                                                 style is not yet supported)\n\n\n# styles\n\nsupports universal styles\n\nname          type      default value                   required   description\nthumb-color   <color>   #ffffff or rgb(255, 255, 255)   no         slider color\ntrack-color   <color>   #0d84ff or rgb(13, 132, 255)    no         track color\n\n\n# events\n\nsupports universal events\n\nname     parameters               description\nchange   {checked:checkedvalue}   triggered when the checked state changes\n\n\n# sample code\n\n<template>\n  <div class="page">\n    <text class="title">switch component</text>\n    <switch checked="{{ switchvalue }}" class="switch" @change="onswitchchange"></switch>\n    <text>status: {{ switchvalue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      switchvalue: true\n    },\n    onswitchchange(e) {\n      this.switchvalue = e.checked\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .switch {\n    width: 100px;\n    margin-top: 10px;\n  }\n</style>\n\n\n',charsets:{}},{title:"General Component Description",frontmatter:{},regularPath:"/en/components/general/",relativePath:"en/components/general/README.md",key:"v-3c6e5e4e",path:"/en/components/general/",headersStr:null,content:"# General Component Description\n\nThis section introduces the styles, properties, and events common to all components.",normalizedContent:"# general component description\n\nthis section introduces the styles, properties, and events common to all components.",charsets:{}},{title:"Background Image Style",frontmatter:{},regularPath:"/en/components/general/background-img-styles.html",relativePath:"en/components/general/background-img-styles.md",key:"v-b7631414",path:"/en/components/general/background-img-styles.html",headers:[{level:2,title:"background-size Property",slug:"background-size-property",normalizedTitle:"background-size property",charIndex:202},{level:2,title:"background-repeat Property (Not yet implemented)",slug:"background-repeat-property-not-yet-implemented",normalizedTitle:"background-repeat property (not yet implemented)",charIndex:2619},{level:2,title:"background-position Property",slug:"background-position-property",normalizedTitle:"background-position property",charIndex:4299},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:8761}],headersStr:"background-size Property background-repeat Property (Not yet implemented) background-position Property Support Details",content:'# Background Image Style\n\nWhen adding an image as a component background within a page component, developers can adjust the size, repetition pattern, and placement position of the image background.\n\n\n# background-size Property\n\nThis property defines the size of the background image.\n\nThe number of parameters can be one or two.\n\nThe list of valid parameters is as follows:\n\nPARAMETER   DESCRIPTION\ncontain     Scales the background image proportionally to fit entirely\n            within the container, possibly leaving some blank space in\n            the container (used as a single parameter only)\ncover       Scales the background image proportionally to cover the\n            entire container, possibly making parts of the background\n            image invisible (used as a single parameter only)\nauto        Maintains the original image size. Note that the original\n            image size is in physical resolution, consistent with the\n            mobile screen resolution unit, not the 1px length in JS\n            applications\n<length>    Specifies the exact dimensions of the image in px or dp\n            units. Floating-point calculations are not supported;\n            floating-point values will be floored.\n<percent>   Specifies the image dimensions as a percentage of the\n            corresponding container dimensions. Floating-point\n            calculations are not supported; floating-point values will\n            be floored.\n\nWhen two parameters are provided, the first parameter is interpreted as the width along the horizontal axis, and the second parameter is interpreted as the height along the vertical axis. If only one parameter is provided, auto is used as the second parameter, and the rules for two parameters are applied.\n\nInvalid parameters are uniformly interpreted as the default value auto, i.e., the original image size.\n\nExample\n\n<template>\n  <div class="page">\n    <text>Image size 128 * 128</text>\n    <text>Background container 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgBg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgBg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: 300px 200px;\n    background-repeat: no-repeat; // Not yet supported; recommended to include in case support is added later to prevent style anomalies\n  }\n</style>\n\n\n\nEffect\n\n\n# background-repeat Property (Not yet implemented)\n\nThis property defines how the background image repeats within the component. The background image can repeat along the horizontal axis, vertical axis, both axes, or not at all.\n\nThe number of parameters is one.\n\nThe list of valid parameters is as follows:\n\nPARAMETER   DESCRIPTION\nrepeat      Repeats the image along both the horizontal and vertical\n            axes\nrepeat-x    Repeats the image only along the horizontal axis\nrepeat-y    Repeats the image only along the vertical axis\nno-repeat   Does not repeat the image\n\nInvalid parameters are interpreted as the default value, i.e., repeat.\n\nExample\n\n<div class="container">\n  <div class="img"></div>\n</div>\n\n<style>\n  .container {\n    width: 365px;\n    height: 365px;\n    background-color: #c7c7c7;\n  }\n  .img {\n    width: 100%;\n    height: 100%;\n    background-image: url(\'../common/logo.png\');\n    /* Scales the background image proportionally to half the width of the component */\n    background-size: 50%;\n    /* Repeats the image along both the horizontal and vertical axes */\n    background-repeat: repeat;\n    /* Positions the background image at the center of the component */\n    background-position: center;\n  }\n</style>\n\n\n.img {\n  width: 100%;\n  height: 100%;\n  background-image: url(\'../common/logo.png\');\n  /* Scales the background image proportionally to a width of 100px */\n  background-size: 100px;\n  /* Does not repeat the background image */\n  background-repeat: no-repeat;\n  /* Positions the background image 20px from the left edge of the component and at a ratio of 3:7 from the top and bottom edges */\n  background-position: left 20px top 30%;\n}\n\n\n\n# background-position Property\n\nThis property defines the position of the background image within the component.\n\nIt can be defined using 1-4 values. If two non-keyword values are used, the first value represents the horizontal position, and the second value represents the vertical position. If only one value is specified, the second value defaults to center. If three or four values are used, the length or percentage values are offsets from the preceding keyword values.\n\nSyntax for one value:\n\nThe value can be:\n\n * The keyword center to center the background image.\n * One of the keywords top, left, bottom, right to specify which boundary to place the background image. The other dimension is set to 50%, so the background image is centered in that dimension.\n * <length> or <percentage> to specify the x-coordinate relative to the left boundary. The y-coordinate is set to 50%, centering the background image along the y-axis.\n\nSyntax for two values:\n\nOne defines the x-coordinate, and the other defines the y-coordinate. Each value can be:\n\n * One of the keywords top, left, bottom, right. If left or right is given here, this value defines the x-axis position, and the other value defines the y-axis position. If top or bottom is given here, this value defines the y-axis position, and the other value defines the x-axis position.\n * <length> or <percentage>. If the other value is left or right, this value defines the Y relative to the top boundary. If the other value is top or bottom, this value defines the X relative to the left boundary. If both values are <length> or <percentage>, the first defines X, and the second defines Y.\n\nNote: If one value is top or bottom, the other value cannot be top or bottom. If one value is left or right, the other value cannot be left or right. In other words, top top and left right are invalid.\n\nOrdering: When pairing keywords, the position does not matter; top left and left top produce the same effect. When pairing <length> or <percentage> with a keyword, the order is important; the value defining X should come first, followed by the value defining Y. right 20px and 20px right have different effects; the former is valid, but the latter is not. left 20% or 20% bottom are valid because the X and Y values are clearly defined and in the correct position.\n\nDefault values are left top or 0% 0%.\n\nSyntax for three values:\n\nTwo values are keyword values, and the third is an offset from the preceding values:\n\n * The first value is one of the keywords top, left, bottom, right, or center. If set to left or right, X is defined. If set to top or bottom, Y is defined, and the other keyword value defines X.\n * <length> or <percentage>, if the second value, is an offset from the first value. If the third value, it is an offset from the second value.\n * A single length or percentage value is an offset from the preceding keyword value. A combination of one keyword with two <length> or <percentage> values is invalid.\n\nSyntax for four values:\n\nThe first and third values are keyword values defining X and Y. The second and fourth values are offsets from the preceding X and Y keyword values:\n\n * The first and third values are one of the keyword values top, left, bottom, right. If set to left or right, X is defined. If set to top or bottom, Y is defined, and the other keyword value defines X.\n * The second and fourth values are <length> or <percentage>. The second value is an offset from the first keyword. The fourth value is an offset from the second keyword.\n\nInvalid parameters are all interpreted as the default value (0px, 0px), i.e., the image is displayed in the top-left corner of the component.\n\nExample\n\n<template>\n  <div class="page">\n    <text>Image size 128 * 128</text>\n    <text>Background container 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgBg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgBg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: cover;\n    background-position: right bottom;\n    background-repeat: no-repeat; // Not yet supported; recommended to include in case support is added later to prevent style anomalies\n  }\n</style>\n\n\nEffect\n\n\n# Support Details\n\nDEVICE PRODUCT                            DESCRIPTION\nXiaomi S1 Pro Sports Health Watch         Not supported\nXiaomi Band 8 Pro                         Not supported\nXiaomi Watch S3                           Not supported\nRedmi Watch 4                             Not supported\nXiaomi Wrist ECG Blood Pressure Monitor   Not supported\nXiaomi Watch S4                           Supported\nREDMI Watch 5                             Supported',normalizedContent:'# background image style\n\nwhen adding an image as a component background within a page component, developers can adjust the size, repetition pattern, and placement position of the image background.\n\n\n# background-size property\n\nthis property defines the size of the background image.\n\nthe number of parameters can be one or two.\n\nthe list of valid parameters is as follows:\n\nparameter   description\ncontain     scales the background image proportionally to fit entirely\n            within the container, possibly leaving some blank space in\n            the container (used as a single parameter only)\ncover       scales the background image proportionally to cover the\n            entire container, possibly making parts of the background\n            image invisible (used as a single parameter only)\nauto        maintains the original image size. note that the original\n            image size is in physical resolution, consistent with the\n            mobile screen resolution unit, not the 1px length in js\n            applications\n<length>    specifies the exact dimensions of the image in px or dp\n            units. floating-point calculations are not supported;\n            floating-point values will be floored.\n<percent>   specifies the image dimensions as a percentage of the\n            corresponding container dimensions. floating-point\n            calculations are not supported; floating-point values will\n            be floored.\n\nwhen two parameters are provided, the first parameter is interpreted as the width along the horizontal axis, and the second parameter is interpreted as the height along the vertical axis. if only one parameter is provided, auto is used as the second parameter, and the rules for two parameters are applied.\n\ninvalid parameters are uniformly interpreted as the default value auto, i.e., the original image size.\n\nexample\n\n<template>\n  <div class="page">\n    <text>image size 128 * 128</text>\n    <text>background container 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgbg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgbg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: 300px 200px;\n    background-repeat: no-repeat; // not yet supported; recommended to include in case support is added later to prevent style anomalies\n  }\n</style>\n\n\n\neffect\n\n\n# background-repeat property (not yet implemented)\n\nthis property defines how the background image repeats within the component. the background image can repeat along the horizontal axis, vertical axis, both axes, or not at all.\n\nthe number of parameters is one.\n\nthe list of valid parameters is as follows:\n\nparameter   description\nrepeat      repeats the image along both the horizontal and vertical\n            axes\nrepeat-x    repeats the image only along the horizontal axis\nrepeat-y    repeats the image only along the vertical axis\nno-repeat   does not repeat the image\n\ninvalid parameters are interpreted as the default value, i.e., repeat.\n\nexample\n\n<div class="container">\n  <div class="img"></div>\n</div>\n\n<style>\n  .container {\n    width: 365px;\n    height: 365px;\n    background-color: #c7c7c7;\n  }\n  .img {\n    width: 100%;\n    height: 100%;\n    background-image: url(\'../common/logo.png\');\n    /* scales the background image proportionally to half the width of the component */\n    background-size: 50%;\n    /* repeats the image along both the horizontal and vertical axes */\n    background-repeat: repeat;\n    /* positions the background image at the center of the component */\n    background-position: center;\n  }\n</style>\n\n\n.img {\n  width: 100%;\n  height: 100%;\n  background-image: url(\'../common/logo.png\');\n  /* scales the background image proportionally to a width of 100px */\n  background-size: 100px;\n  /* does not repeat the background image */\n  background-repeat: no-repeat;\n  /* positions the background image 20px from the left edge of the component and at a ratio of 3:7 from the top and bottom edges */\n  background-position: left 20px top 30%;\n}\n\n\n\n# background-position property\n\nthis property defines the position of the background image within the component.\n\nit can be defined using 1-4 values. if two non-keyword values are used, the first value represents the horizontal position, and the second value represents the vertical position. if only one value is specified, the second value defaults to center. if three or four values are used, the length or percentage values are offsets from the preceding keyword values.\n\nsyntax for one value:\n\nthe value can be:\n\n * the keyword center to center the background image.\n * one of the keywords top, left, bottom, right to specify which boundary to place the background image. the other dimension is set to 50%, so the background image is centered in that dimension.\n * <length> or <percentage> to specify the x-coordinate relative to the left boundary. the y-coordinate is set to 50%, centering the background image along the y-axis.\n\nsyntax for two values:\n\none defines the x-coordinate, and the other defines the y-coordinate. each value can be:\n\n * one of the keywords top, left, bottom, right. if left or right is given here, this value defines the x-axis position, and the other value defines the y-axis position. if top or bottom is given here, this value defines the y-axis position, and the other value defines the x-axis position.\n * <length> or <percentage>. if the other value is left or right, this value defines the y relative to the top boundary. if the other value is top or bottom, this value defines the x relative to the left boundary. if both values are <length> or <percentage>, the first defines x, and the second defines y.\n\nnote: if one value is top or bottom, the other value cannot be top or bottom. if one value is left or right, the other value cannot be left or right. in other words, top top and left right are invalid.\n\nordering: when pairing keywords, the position does not matter; top left and left top produce the same effect. when pairing <length> or <percentage> with a keyword, the order is important; the value defining x should come first, followed by the value defining y. right 20px and 20px right have different effects; the former is valid, but the latter is not. left 20% or 20% bottom are valid because the x and y values are clearly defined and in the correct position.\n\ndefault values are left top or 0% 0%.\n\nsyntax for three values:\n\ntwo values are keyword values, and the third is an offset from the preceding values:\n\n * the first value is one of the keywords top, left, bottom, right, or center. if set to left or right, x is defined. if set to top or bottom, y is defined, and the other keyword value defines x.\n * <length> or <percentage>, if the second value, is an offset from the first value. if the third value, it is an offset from the second value.\n * a single length or percentage value is an offset from the preceding keyword value. a combination of one keyword with two <length> or <percentage> values is invalid.\n\nsyntax for four values:\n\nthe first and third values are keyword values defining x and y. the second and fourth values are offsets from the preceding x and y keyword values:\n\n * the first and third values are one of the keyword values top, left, bottom, right. if set to left or right, x is defined. if set to top or bottom, y is defined, and the other keyword value defines x.\n * the second and fourth values are <length> or <percentage>. the second value is an offset from the first keyword. the fourth value is an offset from the second keyword.\n\ninvalid parameters are all interpreted as the default value (0px, 0px), i.e., the image is displayed in the top-left corner of the component.\n\nexample\n\n<template>\n  <div class="page">\n    <text>image size 128 * 128</text>\n    <text>background container 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgbg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgbg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: cover;\n    background-position: right bottom;\n    background-repeat: no-repeat; // not yet supported; recommended to include in case support is added later to prevent style anomalies\n  }\n</style>\n\n\neffect\n\n\n# support details\n\ndevice product                            description\nxiaomi s1 pro sports health watch         not supported\nxiaomi band 8 pro                         not supported\nxiaomi watch s3                           not supported\nredmi watch 4                             not supported\nxiaomi wrist ecg blood pressure monitor   not supported\nxiaomi watch s4                           supported\nredmi watch 5                             supported',charsets:{}},{title:"Common Events",frontmatter:{},regularPath:"/en/components/general/events.html",relativePath:"en/components/general/events.md",key:"v-61f1485c",path:"/en/components/general/events.html",headers:[{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:290},{level:2,title:"List of Common Events",slug:"list-of-common-events",normalizedTitle:"list of common events",charIndex:450},{level:2,title:"Event Objects",slug:"event-objects",normalizedTitle:"event objects",charIndex:1982},{level:3,title:"1. TouchEvent Type Description:",slug:"_1-touchevent-type-description",normalizedTitle:"1. touchevent type description:",charIndex:2e3},{level:3,title:"2. Touch Type Description",slug:"_2-touch-type-description",normalizedTitle:"2. touch type description",charIndex:2902},{level:3,title:"3. MouseEvent Type Description",slug:"_3-mouseevent-type-description",normalizedTitle:"3. mouseevent type description",charIndex:4315},{level:2,title:"Example",slug:"example",normalizedTitle:"example",charIndex:290}],headersStr:"Example Code List of Common Events Event Objects 1. TouchEvent Type Description: 2. Touch Type Description 3. MouseEvent Type Description Example",content:'# Common Events\n\nCommon events are the event callbacks supported by all components.\n\nDevelopers can register callback events on component tags using on{eventName} (e.g., onclick) or @{eventName} (e.g., @click).\n\nFor more detailed explanations, refer to the Event Binding documentation.\n\n\n# Example Code\n\n<template>\n  <div>\n      <text onclick="clickFunction1">line 1</text>\n      <text @click="clickFunction2">line 2</text>\n  </div>\n</template>\n\n\n\n# List of Common Events\n\nNAME         PARAMETERS                                          DESCRIPTION                                                   BUBBLING\ntouchstart   TouchEvent                                          Triggered when a finger first touches the component           Supported\ntouchmove    TouchEvent                                          Triggered when a finger moves after touching the component    Supported\ntouchend     TouchEvent                                          Triggered when a finger ends the touch action                 Supported\nclick        MouseEvent                                          Triggered when the component is clicked                       Supported\nlongpress    MouseEvent                                          Triggered when the component is long-pressed                  Supported\nswipe        { direction: <"left" | "right" | "up" | "down"> }   Triggered after a quick swipe on the component (not           Not Supported\n                                                                 triggered when there is a scrollbar in the swipe direction)\n                                                                 Parameter description:\n                                                                 left: swipe left;\n                                                                 right: swipe right;\n                                                                 up: swipe up;\n                                                                 down: swipe down;\n\n\n# Event Objects\n\n\n# 1. TouchEvent Type Description:\n\nPROPERTY         TYPE        DESCRIPTION\ntouches          TouchList   Touch event, an array of touch point information currently\n                             on the screen\nchangedTouches   TouchList   Touch event, an array of changed touch point information.\n                             The data format of changedTouches is the same as touches,\n                             representing the changed touch points, such as from none to\n                             present (touchstart), position change (touchmove), from\n                             present to none (touchend),\n                             For example, when the user\'s finger leaves the screen, there\n                             is no data in the touches array, while changedtouches will\n                             save the data before leaving\n\nWhere, TouchList is a collection of Touch objects.\n\n\n# 2. Touch Type Description\n\nPROPERTY     TYPE     DESCRIPTION\nidentifier   number   The identifier of the touch point. For multi-point\n                      simultaneous touch, it is [0,1,2,3,...], representing the\n                      first finger, second finger...\n                      During a touch action (from finger press to finger release),\n                      this identifier remains unchanged and can be used to\n                      determine if it is the same touch process\nclientX      number   The X-axis coordinate from the left edge of the visible\n                      area, excluding any scroll offset\nclientY      number   The Y-axis coordinate from the top edge of the visible area,\n                      excluding any scroll offset and the height of the status bar\n                      and titlebar\npageX        number   The X-axis coordinate from the left edge of the visible\n                      area, including any scroll offset\npageY        number   The Y-axis coordinate from the top edge of the visible area,\n                      including any scroll offset. (Excluding the height of the\n                      status bar and titlebar)\noffsetX      number   The distance from the left edge of the event trigger object\n                      along the X-axis\noffsetY      number   The distance from the top edge of the event trigger object\n                      along the Y-axis\n\n\n# 3. MouseEvent Type Description\n\nPROPERTY   TYPE     DESCRIPTION\nclientX    number   The X-axis coordinate from the left edge of the visible\n                    area, excluding any scroll offset\nclientY    number   The Y-axis coordinate from the top edge of the visible area,\n                    excluding any scroll offset and the height of the status bar\n                    and titlebar\npageX      number   The X-axis coordinate from the left edge of the visible\n                    area, including any scroll offset\npageY      number   The Y-axis coordinate from the top edge of the visible area,\n                    including any scroll offset. (Excluding the height of the\n                    status bar and titlebar)\noffsetX    number   The distance from the left edge of the event trigger object\n                    along the X-axis\noffsetY    number   The distance from the top edge of the event trigger object\n                    along the Y-axis\n\n\n# Example\n\nBelow, click and touchmove events are bound to a div, and the events are printed when triggered.\n\n<template>\n  <div class="root-page">\n    <div class="touch-region" onclick="click" ontouchmove="move"></div>\n  </div>\n</template>\n\n<style>\n  .root-page {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .touch-region {\n    width: 80%;\n    height: 20%;\n    background-color: #444444;\n  }\n\n</style>\n\n<script>\n  export default {\n    private: {},\n    click(event) {\n      console.log("click event fired")\n    },\n    move(event) {\n      console.log("move event touches:" + JSON.stringify(event.touches))\n      console.log("move event changedTouches:" + JSON.stringify(event.changedTouches))\n    }\n  }\n\n<\/script>\n\n\nThe printed results are as follows, for the click event:\n\nmove event touches:[\n  {\n    "offsetX": 296,\n    "identifier": 0,\n    "offsetY": 113.48148345947266,\n    "clientY": 113.48148345947266,\n    "clientX": 360,\n    "pageY": 113.48148345947266,\n    "pageX": 360\n  }\n]\n\n\nmove event changedTouches:[\n  {\n    "offsetX": 296,\n    "identifier": 0,\n    "offsetY": 113.48148345947266,\n    "clientY": 113.48148345947266,\n    "clientX": 360,\n    "pageY": 113.48148345947266,\n    "pageX": 360\n  }\n]\n\n\nclick event fired\n',normalizedContent:'# common events\n\ncommon events are the event callbacks supported by all components.\n\ndevelopers can register callback events on component tags using on{eventname} (e.g., onclick) or @{eventname} (e.g., @click).\n\nfor more detailed explanations, refer to the event binding documentation.\n\n\n# example code\n\n<template>\n  <div>\n      <text onclick="clickfunction1">line 1</text>\n      <text @click="clickfunction2">line 2</text>\n  </div>\n</template>\n\n\n\n# list of common events\n\nname         parameters                                          description                                                   bubbling\ntouchstart   touchevent                                          triggered when a finger first touches the component           supported\ntouchmove    touchevent                                          triggered when a finger moves after touching the component    supported\ntouchend     touchevent                                          triggered when a finger ends the touch action                 supported\nclick        mouseevent                                          triggered when the component is clicked                       supported\nlongpress    mouseevent                                          triggered when the component is long-pressed                  supported\nswipe        { direction: <"left" | "right" | "up" | "down"> }   triggered after a quick swipe on the component (not           not supported\n                                                                 triggered when there is a scrollbar in the swipe direction)\n                                                                 parameter description:\n                                                                 left: swipe left;\n                                                                 right: swipe right;\n                                                                 up: swipe up;\n                                                                 down: swipe down;\n\n\n# event objects\n\n\n# 1. touchevent type description:\n\nproperty         type        description\ntouches          touchlist   touch event, an array of touch point information currently\n                             on the screen\nchangedtouches   touchlist   touch event, an array of changed touch point information.\n                             the data format of changedtouches is the same as touches,\n                             representing the changed touch points, such as from none to\n                             present (touchstart), position change (touchmove), from\n                             present to none (touchend),\n                             for example, when the user\'s finger leaves the screen, there\n                             is no data in the touches array, while changedtouches will\n                             save the data before leaving\n\nwhere, touchlist is a collection of touch objects.\n\n\n# 2. touch type description\n\nproperty     type     description\nidentifier   number   the identifier of the touch point. for multi-point\n                      simultaneous touch, it is [0,1,2,3,...], representing the\n                      first finger, second finger...\n                      during a touch action (from finger press to finger release),\n                      this identifier remains unchanged and can be used to\n                      determine if it is the same touch process\nclientx      number   the x-axis coordinate from the left edge of the visible\n                      area, excluding any scroll offset\nclienty      number   the y-axis coordinate from the top edge of the visible area,\n                      excluding any scroll offset and the height of the status bar\n                      and titlebar\npagex        number   the x-axis coordinate from the left edge of the visible\n                      area, including any scroll offset\npagey        number   the y-axis coordinate from the top edge of the visible area,\n                      including any scroll offset. (excluding the height of the\n                      status bar and titlebar)\noffsetx      number   the distance from the left edge of the event trigger object\n                      along the x-axis\noffsety      number   the distance from the top edge of the event trigger object\n                      along the y-axis\n\n\n# 3. mouseevent type description\n\nproperty   type     description\nclientx    number   the x-axis coordinate from the left edge of the visible\n                    area, excluding any scroll offset\nclienty    number   the y-axis coordinate from the top edge of the visible area,\n                    excluding any scroll offset and the height of the status bar\n                    and titlebar\npagex      number   the x-axis coordinate from the left edge of the visible\n                    area, including any scroll offset\npagey      number   the y-axis coordinate from the top edge of the visible area,\n                    including any scroll offset. (excluding the height of the\n                    status bar and titlebar)\noffsetx    number   the distance from the left edge of the event trigger object\n                    along the x-axis\noffsety    number   the distance from the top edge of the event trigger object\n                    along the y-axis\n\n\n# example\n\nbelow, click and touchmove events are bound to a div, and the events are printed when triggered.\n\n<template>\n  <div class="root-page">\n    <div class="touch-region" onclick="click" ontouchmove="move"></div>\n  </div>\n</template>\n\n<style>\n  .root-page {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .touch-region {\n    width: 80%;\n    height: 20%;\n    background-color: #444444;\n  }\n\n</style>\n\n<script>\n  export default {\n    private: {},\n    click(event) {\n      console.log("click event fired")\n    },\n    move(event) {\n      console.log("move event touches:" + json.stringify(event.touches))\n      console.log("move event changedtouches:" + json.stringify(event.changedtouches))\n    }\n  }\n\n<\/script>\n\n\nthe printed results are as follows, for the click event:\n\nmove event touches:[\n  {\n    "offsetx": 296,\n    "identifier": 0,\n    "offsety": 113.48148345947266,\n    "clienty": 113.48148345947266,\n    "clientx": 360,\n    "pagey": 113.48148345947266,\n    "pagex": 360\n  }\n]\n\n\nmove event changedtouches:[\n  {\n    "offsetx": 296,\n    "identifier": 0,\n    "offsety": 113.48148345947266,\n    "clienty": 113.48148345947266,\n    "clientx": 360,\n    "pagey": 113.48148345947266,\n    "pagex": 360\n  }\n]\n\n\nclick event fired\n',charsets:{cjk:!0}},{title:"Color Configuration",frontmatter:{},regularPath:"/en/components/general/color.html",relativePath:"en/components/general/color.md",key:"v-ca844214",path:"/en/components/general/color.html",headers:[{level:2,title:"Color Value Format Examples",slug:"color-value-format-examples",normalizedTitle:"color value format examples",charIndex:180},{level:2,title:"Transparency",slug:"transparency",normalizedTitle:"transparency",charIndex:351},{level:2,title:"Color Names",slug:"color-names",normalizedTitle:"color names",charIndex:437}],headersStr:"Color Value Format Examples Transparency Color Names",content:"# Color Configuration\n\nVela JS applications support rgb() and rgba() color value settings.\n\nDevelopers can refer to the MDN documentation for more information on color values.\n\n\n# Color Value Format Examples\n\n * '#f0f' (#rgb)\n * '#ff00ff' (#rrggbb)\n * 'rgb(255, 0, 255)'\n * 'rgba(255, 255, 255, 1.0)'\n * '#f0ff' (#rgba)\n * '#ff00ff00' (#rrggbbaa)\n\n\n# Transparency\n\nrgba(0,0,0,0) also has another shorthand version:\n\n * 'transparent'\n\n\n# Color Names\n\nYou can also use the following color configurations:\n\n * aliceblue (#f0f8ff)\n * antiquewhite (#faebd7)\n * aqua (#00ffff)\n * aquamarine (#7fffd4)\n * azure (#f0ffff)\n * beige (#f5f5dc)\n * bisque (#ffe4c4)\n * black (#000000)\n * blanchedalmond (#ffebcd)\n * blue (#0000ff)\n * blueviolet (#8a2be2)\n * brown (#a52a2a)\n * burlywood (#deb887)\n * cadetblue (#5f9ea0)\n * chartreuse (#7fff00)\n * chocolate (#d2691e)\n * coral (#ff7f50)\n * cornflowerblue (#6495ed)\n * cornsilk (#fff8dc)\n * crimson (#dc143c)\n * cyan (#00ffff)\n * darkblue (#00008b)\n * darkcyan (#008b8b)\n * darkgoldenrod (#b8860b)\n * darkgray (#a9a9a9)\n * darkgreen (#006400)\n * darkgrey (#a9a9a9)\n * darkkhaki (#bdb76b)\n * darkmagenta (#8b008b)\n * darkolivegreen (#556b2f)\n * darkorange (#ff8c00)\n * darkorchid (#9932cc)\n * darkred (#8b0000)\n * darksalmon (#e9967a)\n * darkseagreen (#8fbc8f)\n * darkslateblue (#483d8b)\n * darkslategrey (#2f4f4f)\n * darkturquoise (#00ced1)\n * darkviolet (#9400d3)\n * deeppink (#ff1493)\n * deepskyblue (#00bfff)\n * dimgray (#696969)\n * dimgrey (#696969)\n * dodgerblue (#1e90ff)\n * firebrick (#b22222)\n * floralwhite (#fffaf0)\n * forestgreen (#228b22)\n * fuchsia (#ff00ff)\n * gainsboro (#dcdcdc)\n * ghostwhite (#f8f8ff)\n * gold (#ffd700)\n * goldenrod (#daa520)\n * gray (#808080)\n * green (#008000)\n * greenyellow (#adff2f)\n * grey (#808080)\n * honeydew (#f0fff0)\n * hotpink (#ff69b4)\n * indianred (#cd5c5c)\n * indigo (#4b0082)\n * ivory (#fffff0)\n * khaki (#f0e68c)\n * lavender (#e6e6fa)\n * lavenderblush (#fff0f5)\n * lawngreen (#7cfc00)\n * lemonchiffon (#fffacd)\n * lightblue (#add8e6)\n * lightcoral (#f08080)\n * lightcyan (#e0ffff)\n * lightgoldenrodyellow (#fafad2)\n * lightgray (#d3d3d3)\n * lightgreen (#90ee90)\n * lightgrey (#d3d3d3)\n * lightpink (#ffb6c1)\n * lightsalmon (#ffa07a)\n * lightseagreen (#20b2aa)\n * lightskyblue (#87cefa)\n * lightslategrey (#778899)\n * lightsteelblue (#b0c4de)\n * lightyellow (#ffffe0)\n * lime (#00ff00)\n * limegreen (#32cd32)\n * linen (#faf0e6)\n * magenta (#ff00ff)\n * maroon (#800000)\n * mediumaquamarine (#66cdaa)\n * mediumblue (#0000cd)\n * mediumorchid (#ba55d3)\n * mediumpurple (#9370db)\n * mediumseagreen (#3cb371)\n * mediumslateblue (#7b68ee)\n * mediumspringgreen (#00fa9a)\n * mediumturquoise (#48d1cc)\n * mediumvioletred (#c71585)\n * midnightblue (#191970)\n * mintcream (#f5fffa)\n * mistyrose (#ffe4e1)\n * moccasin (#ffe4b5)\n * navajowhite (#ffdead)\n * navy (#000080)\n * oldlace (#fdf5e6)\n * olive (#808000)\n * olivedrab (#6b8e23)\n * orange (#ffa500)\n * orangered (#ff4500)\n * orchid (#da70d6)\n * palegoldenrod (#eee8aa)\n * palegreen (#98fb98)\n * paleturquoise (#afeeee)\n * palevioletred (#db7093)\n * papayawhip (#ffefd5)\n * peachpuff (#ffdab9)\n * peru (#cd853f)\n * pink (#ffc0cb)\n * plum (#dda0dd)\n * powderblue (#b0e0e6)\n * purple (#800080)\n * rebeccapurple (#663399)\n * red (#ff0000)\n * rosybrown (#bc8f8f)\n * royalblue (#4169e1)\n * saddlebrown (#8b4513)\n * salmon (#fa8072)\n * sandybrown (#f4a460)\n * seagreen (#2e8b57)\n * seashell (#fff5ee)\n * sienna (#a0522d)\n * silver (#c0c0c0)\n * skyblue (#87ceeb)\n * slateblue (#6a5acd)\n * slategray (#708090)\n * snow (#fffafa)\n * springgreen (#00ff7f)\n * steelblue (#4682b4)\n * tan (#d2b48c)\n * teal (#008080)\n * thistle (#d8bfd8)\n * tomato (#ff6347)\n * turquoise (#40e0d0)\n * violet (#ee82ee)\n * wheat (#f5deb3)\n * white (#ffffff)\n * whitesmoke (#f5f5f5)\n * yellow (#ffff00)\n * yellowgreen (#9acd32)",normalizedContent:"# color configuration\n\nvela js applications support rgb() and rgba() color value settings.\n\ndevelopers can refer to the mdn documentation for more information on color values.\n\n\n# color value format examples\n\n * '#f0f' (#rgb)\n * '#ff00ff' (#rrggbb)\n * 'rgb(255, 0, 255)'\n * 'rgba(255, 255, 255, 1.0)'\n * '#f0ff' (#rgba)\n * '#ff00ff00' (#rrggbbaa)\n\n\n# transparency\n\nrgba(0,0,0,0) also has another shorthand version:\n\n * 'transparent'\n\n\n# color names\n\nyou can also use the following color configurations:\n\n * aliceblue (#f0f8ff)\n * antiquewhite (#faebd7)\n * aqua (#00ffff)\n * aquamarine (#7fffd4)\n * azure (#f0ffff)\n * beige (#f5f5dc)\n * bisque (#ffe4c4)\n * black (#000000)\n * blanchedalmond (#ffebcd)\n * blue (#0000ff)\n * blueviolet (#8a2be2)\n * brown (#a52a2a)\n * burlywood (#deb887)\n * cadetblue (#5f9ea0)\n * chartreuse (#7fff00)\n * chocolate (#d2691e)\n * coral (#ff7f50)\n * cornflowerblue (#6495ed)\n * cornsilk (#fff8dc)\n * crimson (#dc143c)\n * cyan (#00ffff)\n * darkblue (#00008b)\n * darkcyan (#008b8b)\n * darkgoldenrod (#b8860b)\n * darkgray (#a9a9a9)\n * darkgreen (#006400)\n * darkgrey (#a9a9a9)\n * darkkhaki (#bdb76b)\n * darkmagenta (#8b008b)\n * darkolivegreen (#556b2f)\n * darkorange (#ff8c00)\n * darkorchid (#9932cc)\n * darkred (#8b0000)\n * darksalmon (#e9967a)\n * darkseagreen (#8fbc8f)\n * darkslateblue (#483d8b)\n * darkslategrey (#2f4f4f)\n * darkturquoise (#00ced1)\n * darkviolet (#9400d3)\n * deeppink (#ff1493)\n * deepskyblue (#00bfff)\n * dimgray (#696969)\n * dimgrey (#696969)\n * dodgerblue (#1e90ff)\n * firebrick (#b22222)\n * floralwhite (#fffaf0)\n * forestgreen (#228b22)\n * fuchsia (#ff00ff)\n * gainsboro (#dcdcdc)\n * ghostwhite (#f8f8ff)\n * gold (#ffd700)\n * goldenrod (#daa520)\n * gray (#808080)\n * green (#008000)\n * greenyellow (#adff2f)\n * grey (#808080)\n * honeydew (#f0fff0)\n * hotpink (#ff69b4)\n * indianred (#cd5c5c)\n * indigo (#4b0082)\n * ivory (#fffff0)\n * khaki (#f0e68c)\n * lavender (#e6e6fa)\n * lavenderblush (#fff0f5)\n * lawngreen (#7cfc00)\n * lemonchiffon (#fffacd)\n * lightblue (#add8e6)\n * lightcoral (#f08080)\n * lightcyan (#e0ffff)\n * lightgoldenrodyellow (#fafad2)\n * lightgray (#d3d3d3)\n * lightgreen (#90ee90)\n * lightgrey (#d3d3d3)\n * lightpink (#ffb6c1)\n * lightsalmon (#ffa07a)\n * lightseagreen (#20b2aa)\n * lightskyblue (#87cefa)\n * lightslategrey (#778899)\n * lightsteelblue (#b0c4de)\n * lightyellow (#ffffe0)\n * lime (#00ff00)\n * limegreen (#32cd32)\n * linen (#faf0e6)\n * magenta (#ff00ff)\n * maroon (#800000)\n * mediumaquamarine (#66cdaa)\n * mediumblue (#0000cd)\n * mediumorchid (#ba55d3)\n * mediumpurple (#9370db)\n * mediumseagreen (#3cb371)\n * mediumslateblue (#7b68ee)\n * mediumspringgreen (#00fa9a)\n * mediumturquoise (#48d1cc)\n * mediumvioletred (#c71585)\n * midnightblue (#191970)\n * mintcream (#f5fffa)\n * mistyrose (#ffe4e1)\n * moccasin (#ffe4b5)\n * navajowhite (#ffdead)\n * navy (#000080)\n * oldlace (#fdf5e6)\n * olive (#808000)\n * olivedrab (#6b8e23)\n * orange (#ffa500)\n * orangered (#ff4500)\n * orchid (#da70d6)\n * palegoldenrod (#eee8aa)\n * palegreen (#98fb98)\n * paleturquoise (#afeeee)\n * palevioletred (#db7093)\n * papayawhip (#ffefd5)\n * peachpuff (#ffdab9)\n * peru (#cd853f)\n * pink (#ffc0cb)\n * plum (#dda0dd)\n * powderblue (#b0e0e6)\n * purple (#800080)\n * rebeccapurple (#663399)\n * red (#ff0000)\n * rosybrown (#bc8f8f)\n * royalblue (#4169e1)\n * saddlebrown (#8b4513)\n * salmon (#fa8072)\n * sandybrown (#f4a460)\n * seagreen (#2e8b57)\n * seashell (#fff5ee)\n * sienna (#a0522d)\n * silver (#c0c0c0)\n * skyblue (#87ceeb)\n * slateblue (#6a5acd)\n * slategray (#708090)\n * snow (#fffafa)\n * springgreen (#00ff7f)\n * steelblue (#4682b4)\n * tan (#d2b48c)\n * teal (#008080)\n * thistle (#d8bfd8)\n * tomato (#ff6347)\n * turquoise (#40e0d0)\n * violet (#ee82ee)\n * wheat (#f5deb3)\n * white (#ffffff)\n * whitesmoke (#f5f5f5)\n * yellow (#ffff00)\n * yellowgreen (#9acd32)",charsets:{}},{title:"Common Methods",frontmatter:{},regularPath:"/en/components/general/methods.html",relativePath:"en/components/general/methods.md",key:"v-034ad2d6",path:"/en/components/general/methods.html",headers:[{level:3,title:"getBoundingClientRect(Object object)",slug:"getboundingclientrect-object-object",normalizedTitle:"getboundingclientrect(object object)",charIndex:318},{level:3,title:"focus(Object object)",slug:"focus-object-object",normalizedTitle:"focus(object object)",charIndex:2013}],headersStr:"getBoundingClientRect(Object object) focus(Object object)",content:"# Common Methods\n\nCommon methods are methods that can be called by all components. After a component marks the id attribute with an id, the developer can obtain the dom node via this.$element('idName') and then call the common methods.\n\nThe dom object obtained through this.$element provides two APIs for calling:\n\n\n# getBoundingClientRect(Object object)\n\nReturns the size of the element and its position relative to the viewport. It must be called after the onShow lifecycle of the page.\n\n# Parameters\n\nObject object\n\nPROPERTY   TYPE       DEFAULT VALUE   REQUIRED   DESCRIPTION\nsuccess    function                   No         Callback function for successful API calls\nfail       function                   No         Callback function for failed API calls\ncomplete   function                   No         Callback function for completed API calls (executed for both\n                                                 success and failure)\n\n# Description of object.success callback function parameters\n\nObject rect\n\nPROPERTY   TYPE     DESCRIPTION\nleft       number   Left boundary coordinate of the element\nright      number   Right boundary coordinate of the element\ntop        number   Top boundary coordinate of the element\nbottom     number   Bottom boundary coordinate of the element\nwidth      number   Width of the element\nheight     number   Height of the element\n\n# Code Example\n\n<template>\n  <div>\n    <div id=\"box1\" class=\"box-normal\"></div>\n    <div id=\"box2\" class=\"box-normal\"></div>\n  </div>\n</template>\n<script>\n  export default {\n    onShow(){\n      this.$element('box1').getBoundingClientRect({\n        success: function(data) {\n          const { top, bottom, left, right, width, height } = data;\n          console.log(data);\n        },\n        fail: (errorData, errorCode) => {\n          console.log(`Error reason: ${JSON.stringify(errorData)}, Error code: ${errorCode}`)\n        },\n        complete: function() {\n          console.info('complete')\n        }\n      })\n    }\n  }\n<\/script>\n\n\n\n# focus(Object object)\n\nA method to make a component gain or lose focus.\n\n# Parameters\n\nPROPERTY   TYPE      DEFAULT VALUE   REQUIRED   DESCRIPTION\nfocus      boolean   true            No         Makes the component gain or lose focus. Focusing can trigger\n                                                the focus pseudo-class effect (the focus pseudo-class style\n                                                is not yet supported)\n\n# Code Example\n\n<script>\n  // Focus effect\n  this.$element('box1').focus();\n  // Focus effect\n  this.$element('box2').focus({focus:true});\n  // Blur effect\n  this.$element('box3').focus({focus:false});\n<\/script>\n",normalizedContent:"# common methods\n\ncommon methods are methods that can be called by all components. after a component marks the id attribute with an id, the developer can obtain the dom node via this.$element('idname') and then call the common methods.\n\nthe dom object obtained through this.$element provides two apis for calling:\n\n\n# getboundingclientrect(object object)\n\nreturns the size of the element and its position relative to the viewport. it must be called after the onshow lifecycle of the page.\n\n# parameters\n\nobject object\n\nproperty   type       default value   required   description\nsuccess    function                   no         callback function for successful api calls\nfail       function                   no         callback function for failed api calls\ncomplete   function                   no         callback function for completed api calls (executed for both\n                                                 success and failure)\n\n# description of object.success callback function parameters\n\nobject rect\n\nproperty   type     description\nleft       number   left boundary coordinate of the element\nright      number   right boundary coordinate of the element\ntop        number   top boundary coordinate of the element\nbottom     number   bottom boundary coordinate of the element\nwidth      number   width of the element\nheight     number   height of the element\n\n# code example\n\n<template>\n  <div>\n    <div id=\"box1\" class=\"box-normal\"></div>\n    <div id=\"box2\" class=\"box-normal\"></div>\n  </div>\n</template>\n<script>\n  export default {\n    onshow(){\n      this.$element('box1').getboundingclientrect({\n        success: function(data) {\n          const { top, bottom, left, right, width, height } = data;\n          console.log(data);\n        },\n        fail: (errordata, errorcode) => {\n          console.log(`error reason: ${json.stringify(errordata)}, error code: ${errorcode}`)\n        },\n        complete: function() {\n          console.info('complete')\n        }\n      })\n    }\n  }\n<\/script>\n\n\n\n# focus(object object)\n\na method to make a component gain or lose focus.\n\n# parameters\n\nproperty   type      default value   required   description\nfocus      boolean   true            no         makes the component gain or lose focus. focusing can trigger\n                                                the focus pseudo-class effect (the focus pseudo-class style\n                                                is not yet supported)\n\n# code example\n\n<script>\n  // focus effect\n  this.$element('box1').focus();\n  // focus effect\n  this.$element('box2').focus({focus:true});\n  // blur effect\n  this.$element('box3').focus({focus:false});\n<\/script>\n",charsets:{}},{title:"Common Attributes",frontmatter:{},regularPath:"/en/components/general/properties.html",relativePath:"en/components/general/properties.md",key:"v-714e99b0",path:"/en/components/general/properties.html",headers:[{level:2,title:"Sample Code",slug:"sample-code",normalizedTitle:"sample code",charIndex:143},{level:2,title:"Common Attributes",slug:"common-attributes-2",normalizedTitle:"common attributes",charIndex:2},{level:2,title:"Rendering Attributes",slug:"rendering-attributes",normalizedTitle:"rendering attributes",charIndex:549},{level:2,title:"data Attributes",slug:"data-attributes",normalizedTitle:"data attributes",charIndex:1224}],headersStr:"Sample Code Common Attributes Rendering Attributes data Attributes",content:'# Common Attributes\n\nCommon attributes are those supported by all components.\n\nDevelopers can use common attributes on all component tags.\n\n\n# Sample Code\n\n<template>\n  <div>\n      <text id="text1" class="text-normal">line 1</text>\n      <text id="text2" class="text-normal red">line 2</text>\n  </div>\n</template>\n\n\n\n# Common Attributes\n\nNAME    TYPE       DEFAULT VALUE   DESCRIPTION\nid      <string>   -               Unique ID\nstyle   <string>   -               Style declaration\nclass   <string>   -               Reference to a style sheet\n\n\n# Rendering Attributes\n\nNAME   TYPE        DEFAULT VALUE   DESCRIPTION\nfor    <array>     -               Expands the current tag cyclically based on a data list\nif     <boolean>   -               Adds or removes the current tag based on a data boolean\n                                   value\nshow   <boolean>   -               Shows or hides the current tag based on a data boolean\n                                   value, which is equivalent to controlling { display: flex |\n                                   none }\n\nFor details about how rendering attributes work, see template.\n\nNote\n\nAttributes and styles cannot be mixed. Do not set styles in the attribute field.\n\n\n# data Attributes\n\nBind data attributes to components and then obtain them through dataset during runtime for further judgment.\n\nExample:\n\n<template>\n  <div>\n    <div id="elNode1" data-person-name="Jack"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onReady () {\n      const el = this.$element(\'elNode1\')\n      const elData = el.dataset.personName\n      console.info(`Output data attribute: ${elData}`)\n    }\n  }\n<\/script>\n',normalizedContent:'# common attributes\n\ncommon attributes are those supported by all components.\n\ndevelopers can use common attributes on all component tags.\n\n\n# sample code\n\n<template>\n  <div>\n      <text id="text1" class="text-normal">line 1</text>\n      <text id="text2" class="text-normal red">line 2</text>\n  </div>\n</template>\n\n\n\n# common attributes\n\nname    type       default value   description\nid      <string>   -               unique id\nstyle   <string>   -               style declaration\nclass   <string>   -               reference to a style sheet\n\n\n# rendering attributes\n\nname   type        default value   description\nfor    <array>     -               expands the current tag cyclically based on a data list\nif     <boolean>   -               adds or removes the current tag based on a data boolean\n                                   value\nshow   <boolean>   -               shows or hides the current tag based on a data boolean\n                                   value, which is equivalent to controlling { display: flex |\n                                   none }\n\nfor details about how rendering attributes work, see template.\n\nnote\n\nattributes and styles cannot be mixed. do not set styles in the attribute field.\n\n\n# data attributes\n\nbind data attributes to components and then obtain them through dataset during runtime for further judgment.\n\nexample:\n\n<template>\n  <div>\n    <div id="elnode1" data-person-name="jack"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onready () {\n      const el = this.$element(\'elnode1\')\n      const eldata = el.dataset.personname\n      console.info(`output data attribute: ${eldata}`)\n    }\n  }\n<\/script>\n',charsets:{cjk:!0}},{title:"General Style",frontmatter:{},regularPath:"/en/components/general/style.html",relativePath:"en/components/general/style.md",key:"v-353fde94",path:"/en/components/general/style.html",headers:[{level:2,title:"Sample Code",slug:"sample-code",normalizedTitle:"sample code",charIndex:316},{level:2,title:"Property List",slug:"property-list",normalizedTitle:"property list",charIndex:709}],headersStr:"Sample Code Property List",content:"# General Style\n\nGeneral styles are styles that can be supported by all components.\n\nThese styles are consistent with the usage of CSS property styles. Developers can write them in inline styles or <style> tags to customize component styles.\n\nFor information on setting component styles, refer to this document.\n\n\n# Sample Code\n\n<template>\n  <div class=\"page\">\n    <div class=\"box-normal\" style=\"background-color:#f76160\"></div>\n    <div class=\"box-normal\"></div>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box-normal {\n    background-color: #09ba07;\n    width: 100px;\n    height: 100px;\n    border-radius: 8px;\n    margin-right: 10px;\n  }\n</style>\n\n\n\n\n\n# Property List\n\nNote: All general styles are optional.\n\nNAME                              TYPE                                                           DEFAULT VALUE   DESCRIPTION\nwidth                             <length> | <percentage>                                        -               Uses the width required by the component's own content when\n                                                                                                                 not set\nheight                            <length> | <percentage>                                        -               Uses the height required by the component's own content when\n                                                                                                                 not set\nmin-width                         auto | <length> | <percentage>                                 auto            Specifies the minimum width of an element. This property\n                                                                                                                 cannot be negative. The default value auto is the default\n                                                                                                                 minimum width for flexible elements. The same applies below.\nmin-height                        auto | <length> | <percentage>                                 auto            Specifies the minimum height of an element\nmax-width                         none | <length> | <percentage>                                 none            Specifies the maximum width of an element. This property\n                                                                                                                 cannot be negative. The default value none indicates no\n                                                                                                                 restriction. The same applies below.\nmax-height                        none | <length> | <percentage>                                 none            Specifies the maximum height of an element\npadding                           <length>                                                       0               Shorthand property that sets all padding properties in one\n                                                                                                                 declaration. This property can have 1 to 4 values. For\n                                                                                                                 details, refer to the MDN documentation.\npadding-[left|top|right|bottom]   <length>                                                       0               Sets the padding in a specific direction for an element. The\n                                                                                                                 padding area refers to the space between an element's\n                                                                                                                 content and its boundary. This property cannot be negative.\nmargin                            <length>                                                       0               Shorthand property that sets all margin properties in one\n                                                                                                                 declaration. This property can have 1 to 4 values. For\n                                                                                                                 details, refer to the MDN documentation.\nmargin-[left|top|right|bottom]    <length>                                                       0               Sets the margin in a specific direction for an element. This\n                                                                                                                 property cannot be negative.\nborder                            -                                                              0               Shorthand property that sets all border properties in one\n                                                                                                                 declaration. You can set the properties width, style, and\n                                                                                                                 color in sequence. Properties not set will use default\n                                                                                                                 values.\nborder-style                      solid                                                          solid           Currently supports only 1 value, setting the style for all\n                                                                                                                 borders of an element\nborder-width                      <length>                                                       0               Sets the width of all borders for an element\nborder-color                      <color>                                                        black           Sets the color of all borders for an element. For color\n                                                                                                                 value input, refer to Color Configuration\nborder-radius                     <length> | <percentage>                                        0               The border-radius property allows you to set rounded corners\n                                                                                                                 for an element's outer border. When setting, you need to set\n                                                                                                                 border-width and border-color simultaneously. The radius's\n                                                                                                                 magnitude will not exceed half of the shorter side of the\n                                                                                                                 rectangle.\nbackground-color                  <color>                                                        -               For color value input, refer to Color Configuration\ncolor                             <color>                                                        -               For color value input, refer to Color Configuration\nbackground-image                  <uri>                                                          -               Supports local and network image resources; when using the\n                                                                                                                 internal:// protocol, upgrade aiot-toolkit to version 1.1.2\n                                                                                                                 or higher\nbackground-size                   contain | cover | auto | <length> | <percentage>               auto auto       Sets the background image size. For details, see Background\n                                                                                                                 Image Styles\nbackground-repeat                 repeat | repeat-x | repeat-y | no-repeat                       repeat          [Currently unsupported] Sets whether and how background\n                                                                                                                 images are repeated. For details, see Background Image\n                                                                                                                 Styles\nbackground-position               <length> |<percentage>| left | right | top | bottom | center   0px 0px         Sets the position where the background image is drawn within\n                                                                                                                 the container. Supports 1-4 parameters. For details, see\n                                                                                                                 Background Image Styles\nbox-shadow                        <length> <length> <color> |                                    -               Sets the shadow effect for an element. This property can set\n                                  <length> <length> <length> <color> |                                           values including the X-axis offset, Y-axis offset, blur\n                                  <length> <length> <length> <length> <color>                                    radius, spread radius, and color of the shadow.\n                                                                                                                 Example:\n                                                                                                                 box-shadow: 60px -16px teal, values correspond to: x-axis\n                                                                                                                 offset, y-axis offset, shadow color;\n                                                                                                                 box-shadow: 10px 5px 5px black, values correspond to: x-axis\n                                                                                                                 offset, y-axis offset, shadow blur radius, shadow color;\n                                                                                                                 box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2), values\n                                                                                                                 correspond to: x-axis offset, y-axis offset, shadow blur\n                                                                                                                 radius, shadow spread radius, shadow color\nopacity                           <number>                                                       1               The opacity property specifies the transparency of an\n                                                                                                                 element\ndisplay                           flex | none                                                    flex            JS applications only support flex layout; setting the\n                                                                                                                 current element's display to none will prevent it from being\n                                                                                                                 rendered on JS application pages\nvisibility                        visible | hidden                                               visible         The visibility property controls the display or hiding of an\n                                                                                                                 element without changing the document's layout\nflex                              <number>                                                       -               Takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-grow                         <number>                                                       0               Takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-shrink                       <number>                                                       1               Takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-basis                        <number>                                                       -1              Takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-direction                    <string>                                                       row             Defaults to horizontal row. Takes effect when the parent\n                                                                                                                 container is <div> or <list-item>\nalign-items                       <string>                                                       flex-start      align-items defines how flex items can be aligned along the\n                                                                                                                 cross axis of the flex container's current row. flex-start\n                                                                                                                 (default): The flex item's outer margin edge at the cross\n                                                                                                                 axis start aligns with the row's edge at the cross axis\n                                                                                                                 start. flex-end: The flex item's outer margin edge at the\n                                                                                                                 cross axis end aligns with the row's edge at the cross axis\n                                                                                                                 end. center: The flex item's margin box is centered along\n                                                                                                                 the cross axis of the row. baseline: Flex items are aligned\n                                                                                                                 according to their baselines. stretch: Flex items are\n                                                                                                                 stretched to fill the entire flex container. This value\n                                                                                                                 causes the item's margin box dimensions to be as close as\n                                                                                                                 possible to the row's dimensions while respecting the\n                                                                                                                 constraints of the min/max-width/height properties.\njustify-content                   <string>                                                       flex-start      justify-content defines how flex items are aligned along the\n                                                                                                                 main axis. flex-start (default): Flex items are aligned to\n                                                                                                                 the start of a row. flex-end: Flex items are aligned to the\n                                                                                                                 end of a row. center: Flex items are aligned to the center\n                                                                                                                 of a row. space-between: Flex items are evenly distributed\n                                                                                                                 in a row. The first flex item is at the start of the row,\n                                                                                                                 and the last flex item is at the end of the row.\n                                                                                                                 space-around: Flex items are evenly distributed in a row,\n                                                                                                                 with equal space around them.\nposition                          absolute | relative                                            relative        Supports relative and absolute property values, with a\n                                                                                                                 default value of relative; does not take effect when the\n                                                                                                                 parent container is <list> or <swiper>\n[left|top|right|bottom]           <length>                                                       -               Generally used in conjunction with absolute layout. Supports\n                                                                                                                 the unit px and does not currently support percentages.",normalizedContent:"# general style\n\ngeneral styles are styles that can be supported by all components.\n\nthese styles are consistent with the usage of css property styles. developers can write them in inline styles or <style> tags to customize component styles.\n\nfor information on setting component styles, refer to this document.\n\n\n# sample code\n\n<template>\n  <div class=\"page\">\n    <div class=\"box-normal\" style=\"background-color:#f76160\"></div>\n    <div class=\"box-normal\"></div>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box-normal {\n    background-color: #09ba07;\n    width: 100px;\n    height: 100px;\n    border-radius: 8px;\n    margin-right: 10px;\n  }\n</style>\n\n\n\n\n\n# property list\n\nnote: all general styles are optional.\n\nname                              type                                                           default value   description\nwidth                             <length> | <percentage>                                        -               uses the width required by the component's own content when\n                                                                                                                 not set\nheight                            <length> | <percentage>                                        -               uses the height required by the component's own content when\n                                                                                                                 not set\nmin-width                         auto | <length> | <percentage>                                 auto            specifies the minimum width of an element. this property\n                                                                                                                 cannot be negative. the default value auto is the default\n                                                                                                                 minimum width for flexible elements. the same applies below.\nmin-height                        auto | <length> | <percentage>                                 auto            specifies the minimum height of an element\nmax-width                         none | <length> | <percentage>                                 none            specifies the maximum width of an element. this property\n                                                                                                                 cannot be negative. the default value none indicates no\n                                                                                                                 restriction. the same applies below.\nmax-height                        none | <length> | <percentage>                                 none            specifies the maximum height of an element\npadding                           <length>                                                       0               shorthand property that sets all padding properties in one\n                                                                                                                 declaration. this property can have 1 to 4 values. for\n                                                                                                                 details, refer to the mdn documentation.\npadding-[left|top|right|bottom]   <length>                                                       0               sets the padding in a specific direction for an element. the\n                                                                                                                 padding area refers to the space between an element's\n                                                                                                                 content and its boundary. this property cannot be negative.\nmargin                            <length>                                                       0               shorthand property that sets all margin properties in one\n                                                                                                                 declaration. this property can have 1 to 4 values. for\n                                                                                                                 details, refer to the mdn documentation.\nmargin-[left|top|right|bottom]    <length>                                                       0               sets the margin in a specific direction for an element. this\n                                                                                                                 property cannot be negative.\nborder                            -                                                              0               shorthand property that sets all border properties in one\n                                                                                                                 declaration. you can set the properties width, style, and\n                                                                                                                 color in sequence. properties not set will use default\n                                                                                                                 values.\nborder-style                      solid                                                          solid           currently supports only 1 value, setting the style for all\n                                                                                                                 borders of an element\nborder-width                      <length>                                                       0               sets the width of all borders for an element\nborder-color                      <color>                                                        black           sets the color of all borders for an element. for color\n                                                                                                                 value input, refer to color configuration\nborder-radius                     <length> | <percentage>                                        0               the border-radius property allows you to set rounded corners\n                                                                                                                 for an element's outer border. when setting, you need to set\n                                                                                                                 border-width and border-color simultaneously. the radius's\n                                                                                                                 magnitude will not exceed half of the shorter side of the\n                                                                                                                 rectangle.\nbackground-color                  <color>                                                        -               for color value input, refer to color configuration\ncolor                             <color>                                                        -               for color value input, refer to color configuration\nbackground-image                  <uri>                                                          -               supports local and network image resources; when using the\n                                                                                                                 internal:// protocol, upgrade aiot-toolkit to version 1.1.2\n                                                                                                                 or higher\nbackground-size                   contain | cover | auto | <length> | <percentage>               auto auto       sets the background image size. for details, see background\n                                                                                                                 image styles\nbackground-repeat                 repeat | repeat-x | repeat-y | no-repeat                       repeat          [currently unsupported] sets whether and how background\n                                                                                                                 images are repeated. for details, see background image\n                                                                                                                 styles\nbackground-position               <length> |<percentage>| left | right | top | bottom | center   0px 0px         sets the position where the background image is drawn within\n                                                                                                                 the container. supports 1-4 parameters. for details, see\n                                                                                                                 background image styles\nbox-shadow                        <length> <length> <color> |                                    -               sets the shadow effect for an element. this property can set\n                                  <length> <length> <length> <color> |                                           values including the x-axis offset, y-axis offset, blur\n                                  <length> <length> <length> <length> <color>                                    radius, spread radius, and color of the shadow.\n                                                                                                                 example:\n                                                                                                                 box-shadow: 60px -16px teal, values correspond to: x-axis\n                                                                                                                 offset, y-axis offset, shadow color;\n                                                                                                                 box-shadow: 10px 5px 5px black, values correspond to: x-axis\n                                                                                                                 offset, y-axis offset, shadow blur radius, shadow color;\n                                                                                                                 box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2), values\n                                                                                                                 correspond to: x-axis offset, y-axis offset, shadow blur\n                                                                                                                 radius, shadow spread radius, shadow color\nopacity                           <number>                                                       1               the opacity property specifies the transparency of an\n                                                                                                                 element\ndisplay                           flex | none                                                    flex            js applications only support flex layout; setting the\n                                                                                                                 current element's display to none will prevent it from being\n                                                                                                                 rendered on js application pages\nvisibility                        visible | hidden                                               visible         the visibility property controls the display or hiding of an\n                                                                                                                 element without changing the document's layout\nflex                              <number>                                                       -               takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-grow                         <number>                                                       0               takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-shrink                       <number>                                                       1               takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-basis                        <number>                                                       -1              takes effect when the parent container is <div> or\n                                                                                                                 <list-item>\nflex-direction                    <string>                                                       row             defaults to horizontal row. takes effect when the parent\n                                                                                                                 container is <div> or <list-item>\nalign-items                       <string>                                                       flex-start      align-items defines how flex items can be aligned along the\n                                                                                                                 cross axis of the flex container's current row. flex-start\n                                                                                                                 (default): the flex item's outer margin edge at the cross\n                                                                                                                 axis start aligns with the row's edge at the cross axis\n                                                                                                                 start. flex-end: the flex item's outer margin edge at the\n                                                                                                                 cross axis end aligns with the row's edge at the cross axis\n                                                                                                                 end. center: the flex item's margin box is centered along\n                                                                                                                 the cross axis of the row. baseline: flex items are aligned\n                                                                                                                 according to their baselines. stretch: flex items are\n                                                                                                                 stretched to fill the entire flex container. this value\n                                                                                                                 causes the item's margin box dimensions to be as close as\n                                                                                                                 possible to the row's dimensions while respecting the\n                                                                                                                 constraints of the min/max-width/height properties.\njustify-content                   <string>                                                       flex-start      justify-content defines how flex items are aligned along the\n                                                                                                                 main axis. flex-start (default): flex items are aligned to\n                                                                                                                 the start of a row. flex-end: flex items are aligned to the\n                                                                                                                 end of a row. center: flex items are aligned to the center\n                                                                                                                 of a row. space-between: flex items are evenly distributed\n                                                                                                                 in a row. the first flex item is at the start of the row,\n                                                                                                                 and the last flex item is at the end of the row.\n                                                                                                                 space-around: flex items are evenly distributed in a row,\n                                                                                                                 with equal space around them.\nposition                          absolute | relative                                            relative        supports relative and absolute property values, with a\n                                                                                                                 default value of relative; does not take effect when the\n                                                                                                                 parent container is <list> or <swiper>\n[left|top|right|bottom]           <length>                                                       -               generally used in conjunction with absolute layout. supports\n                                                                                                                 the unit px and does not currently support percentages.",charsets:{cjk:!0}},{title:"Interface",frontmatter:{},regularPath:"/en/features/",relativePath:"en/features/README.md",key:"v-1510df86",path:"/en/features/",headersStr:null,content:"# Interface\n\nThe framework provides several interfaces for applications to call to achieve more functions, including the following types of interfaces:\n\n * Basic function interface: used to obtain application information, platform information, device information, etc.;\n * Data file interface: used to obtain remote data, upload and download files, local data storage, etc.;\n * System capability interface: used to call system capabilities, such as obtaining network status, adjusting screen brightness, etc.;\n * Media interface: used to play and operate media files, such as playing music files, etc.;\n\nEach interface is called a feature, and each feature contains several APIs that implement specific functions.",normalizedContent:"# interface\n\nthe framework provides several interfaces for applications to call to achieve more functions, including the following types of interfaces:\n\n * basic function interface: used to obtain application information, platform information, device information, etc.;\n * data file interface: used to obtain remote data, upload and download files, local data storage, etc.;\n * system capability interface: used to call system capabilities, such as obtaining network status, adjusting screen brightness, etc.;\n * media interface: used to play and operate media files, such as playing music files, etc.;\n\neach interface is called a feature, and each feature contains several apis that implement specific functions.",charsets:{}},{title:"Basic Functions",frontmatter:{},regularPath:"/en/features/basic/",relativePath:"en/features/basic/README.md",key:"v-27fabfbf",path:"/en/features/basic/",headersStr:null,content:"# Basic Functions\n\nObtain basic information about applications, platforms, frameworks, and systems, as well as navigate through in-app pages.\n\n * Application-Context\n * Device-Information\n * Page-Routing\n * Application-Configuration",normalizedContent:"# basic functions\n\nobtain basic information about applications, platforms, frameworks, and systems, as well as navigate through in-app pages.\n\n * application-context\n * device-information\n * page-routing\n * application-configuration",charsets:{}},{title:"Application Context",frontmatter:{},regularPath:"/en/features/basic/app.html",relativePath:"en/features/basic/app.md",key:"v-59887b56",path:"/en/features/basic/app.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:26},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:81},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:174},{level:3,title:"app.getInfo()",slug:"app-getinfo",normalizedTitle:"app.getinfo()",charIndex:199},{level:3,title:"app.terminate()",slug:"app-terminate",normalizedTitle:"app.terminate()",charIndex:1471},{level:3,title:"app.canIUse()",slug:"app-caniuse",normalizedTitle:"app.caniuse()",charIndex:1598},{level:3,title:"Input Parameter Format",slug:"input-parameter-format",normalizedTitle:"input parameter format",charIndex:1797}],headersStr:"Interface Declaration Import Module Interface Definition app.getInfo() app.terminate() app.canIUse() Input Parameter Format",content:'# Application Context\n\n\n# Interface Declaration\n\nNo declaration is required.\n\n\n# Import Module\n\nimport app from \'@system.app\' \n// or \nconst app = require(\'@system.app\')\n\n\n\n# Interface Definition\n\n\n# app.getInfo()\n\nGet current application information.\n\n# Parameters:\n\nNone.\n\n# Return Value:\n\nPARAMETER NAME   TYPE      DESCRIPTION\npackageName      String    Application package name\nicon             String    Application icon path\nname             String    Application name\nversionName      String    Application version name\nversionCode      Integer   Application version number\nlogLevel         String    Log level\nsource           Object    Application source\n\n# source\n\nPARAMETER NAME   TYPE     DESCRIPTION\npackageName      String   Package name of the source app, primary source\ntype             String   Source type, secondary source, values include shortcut,\n                          push, url, barcode, nfc, bluetooth, other\n\n# Example:\n\nconsole.log(JSON.stringify(app.getInfo()))\n\n\n// console output\n{\n  // Application package name\n  "packageName": "com.example.demo",\n  // Application name\n  "name": "demo",\n  // Application version name\n  "versionName": "1.0.0",\n  // Application version number\n  "versionCode": 1,\n  // Application icon\n  "icon": "/common/logo.png",\n  // Log level\n  "logLevel": "debug",\n  // Application source\n  "source": {\n    // Package name of the source app\n    "packageName": "",\n    // Source type\n    "type": "shortcut"\n  }\n}\n\n\n\n# app.terminate()\n\nExit the current application.\n\n# Parameters:\n\nNone.\n\n# Return Value:\n\nNone.\n\n# Example:\n\napp.terminate()\n\n\n\n# app.canIUse()\n\n# Parameters:\n\nTYPE     DESCRIPTION\nString   The capability to query, format as below\n\n# Return Value:\n\nTYPE      DESCRIPTION\nBoolean   Whether the queried capability is supported\n\n\n# Input Parameter Format\n\n# Query Interface\n\n// Query if a method under a feature is supported\n\'@${featureName}.${method}\'\n// Query if a feature is supported\n\'@${featureName}\'\n\n\nExample\n\nimport app from \'@system.app\';\n\nif (app.canIUse(\'@system.router.push\')) {\n  // Can use method @system.router.push\n}\nif (app.canIUse(\'@system.router\')) {\n  // Can use @system.router interface\n}\n\n\n# Query Component\n\nThe value of type can be \'attr\', \'style\', \'method\', corresponding to component\'s attributes, styles, and methods respectively.\n\n// Query if an attribute, style, or method under a component is supported\n`${componentName}.${type}.${name}`\n// Query if a component is supported\n`${componentName}`\n\n\nExample\n\nimport app from \'@system.app\';\n\nif (app.canIUse(\'scroll\')) {\n  // Can use scroll component\n}\nif (app.canIUse(\'scroll.attr.scroll-x\')) {\n  // Can use scroll-x attribute of scroll component\n}\n',normalizedContent:'# application context\n\n\n# interface declaration\n\nno declaration is required.\n\n\n# import module\n\nimport app from \'@system.app\' \n// or \nconst app = require(\'@system.app\')\n\n\n\n# interface definition\n\n\n# app.getinfo()\n\nget current application information.\n\n# parameters:\n\nnone.\n\n# return value:\n\nparameter name   type      description\npackagename      string    application package name\nicon             string    application icon path\nname             string    application name\nversionname      string    application version name\nversioncode      integer   application version number\nloglevel         string    log level\nsource           object    application source\n\n# source\n\nparameter name   type     description\npackagename      string   package name of the source app, primary source\ntype             string   source type, secondary source, values include shortcut,\n                          push, url, barcode, nfc, bluetooth, other\n\n# example:\n\nconsole.log(json.stringify(app.getinfo()))\n\n\n// console output\n{\n  // application package name\n  "packagename": "com.example.demo",\n  // application name\n  "name": "demo",\n  // application version name\n  "versionname": "1.0.0",\n  // application version number\n  "versioncode": 1,\n  // application icon\n  "icon": "/common/logo.png",\n  // log level\n  "loglevel": "debug",\n  // application source\n  "source": {\n    // package name of the source app\n    "packagename": "",\n    // source type\n    "type": "shortcut"\n  }\n}\n\n\n\n# app.terminate()\n\nexit the current application.\n\n# parameters:\n\nnone.\n\n# return value:\n\nnone.\n\n# example:\n\napp.terminate()\n\n\n\n# app.caniuse()\n\n# parameters:\n\ntype     description\nstring   the capability to query, format as below\n\n# return value:\n\ntype      description\nboolean   whether the queried capability is supported\n\n\n# input parameter format\n\n# query interface\n\n// query if a method under a feature is supported\n\'@${featurename}.${method}\'\n// query if a feature is supported\n\'@${featurename}\'\n\n\nexample\n\nimport app from \'@system.app\';\n\nif (app.caniuse(\'@system.router.push\')) {\n  // can use method @system.router.push\n}\nif (app.caniuse(\'@system.router\')) {\n  // can use @system.router interface\n}\n\n\n# query component\n\nthe value of type can be \'attr\', \'style\', \'method\', corresponding to component\'s attributes, styles, and methods respectively.\n\n// query if an attribute, style, or method under a component is supported\n`${componentname}.${type}.${name}`\n// query if a component is supported\n`${componentname}`\n\n\nexample\n\nimport app from \'@system.app\';\n\nif (app.caniuse(\'scroll\')) {\n  // can use scroll component\n}\nif (app.caniuse(\'scroll.attr.scroll-x\')) {\n  // can use scroll-x attribute of scroll component\n}\n',charsets:{}},{title:"Application Configuration",frontmatter:{},regularPath:"/en/features/basic/configuration.html",relativePath:"en/features/basic/configuration.md",key:"v-5b9bc276",path:"/en/features/basic/configuration.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:32},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:83},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:216},{level:3,title:"configuration.getLocale()",slug:"configuration-getlocale",normalizedTitle:"configuration.getlocale()",charIndex:241}],headersStr:"Interface Declaration Import Module Interface Definition configuration.getLocale()",content:"# Application Configuration\n\n\n# Interface Declaration\n\nNo declaration required\n\n\n# Import Module\n\nimport configuration from '@system.configuration' \n// or \nconst configuration = require('@system.configuration')\n\n\n\n# Interface Definition\n\n\n# configuration.getLocale()\n\nRetrieves the current locale of the application. By default, it uses the system's locale, which may change due to settings or system locale changes.\n\n# Parameters:\n\nNone\n\n# Return Value:\n\nPARAMETER NAME    TYPE     DESCRIPTION\nlanguage          String   Language\ncountryOrRegion   String   Country or region\n\n# Example:\n\nconst locale = configuration.getLocale()\nconsole.log(locale.language)\n",normalizedContent:"# application configuration\n\n\n# interface declaration\n\nno declaration required\n\n\n# import module\n\nimport configuration from '@system.configuration' \n// or \nconst configuration = require('@system.configuration')\n\n\n\n# interface definition\n\n\n# configuration.getlocale()\n\nretrieves the current locale of the application. by default, it uses the system's locale, which may change due to settings or system locale changes.\n\n# parameters:\n\nnone\n\n# return value:\n\nparameter name    type     description\nlanguage          string   language\ncountryorregion   string   country or region\n\n# example:\n\nconst locale = configuration.getlocale()\nconsole.log(locale.language)\n",charsets:{}},{title:"Device Information",frontmatter:{},regularPath:"/en/features/basic/device.html",relativePath:"en/features/basic/device.md",key:"v-f2386108",path:"/en/features/basic/device.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:25},{level:2,title:"Importing the Module",slug:"importing-the-module",normalizedTitle:"importing the module",charIndex:81},{level:2,title:"Interface Definitions",slug:"interface-definitions",normalizedTitle:"interface definitions",charIndex:193},{level:3,title:"device.getInfo(OBJECT)",slug:"device-getinfo-object",normalizedTitle:"device.getinfo(object)",charIndex:219},{level:3,title:"device.getDeviceId(OBJECT)",slug:"device-getdeviceid-object",normalizedTitle:"device.getdeviceid(object)",charIndex:2154},{level:3,title:"device.getSerial(OBJECT)",slug:"device-getserial-object",normalizedTitle:"device.getserial(object)",charIndex:2986},{level:3,title:"device.getTotalStorage(OBJECT)",slug:"device-gettotalstorage-object",normalizedTitle:"device.gettotalstorage(object)",charIndex:3795},{level:3,title:"device.getAvailableStorage(OBJECT)",slug:"device-getavailablestorage-object",normalizedTitle:"device.getavailablestorage(object)",charIndex:4464}],headersStr:"Interface Declaration Importing the Module Interface Definitions device.getInfo(OBJECT) device.getDeviceId(OBJECT) device.getSerial(OBJECT) device.getTotalStorage(OBJECT) device.getAvailableStorage(OBJECT)",content:'# Device Information\n\n\n# Interface Declaration\n\n{ "name": "system.device" }\n\n\n\n# Importing the Module\n\nimport device from \'@system.device\' \n// or \nconst device = require(\'@system.device\')\n\n\n\n# Interface Definitions\n\n\n# device.getInfo(OBJECT)\n\nObtains device information.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback invoked when the execution is complete\n\n# Return Value of success:\n\nPARAMETER             TYPE     DESCRIPTION\nbrand                 string   Device brand\nmanufacturer          string   Device manufacturer\nmodel                 string   Device model\nproduct               string   Device code name\nosType                string   Operating system name\nosVersionName         string   Operating system version name\nosVersionCode         number   Operating system version number\nplatformVersionName   string   Runtime platform version name\nplatformVersionCode   number   Runtime platform version number\nlanguage              string   System language\nregion                string   System region\nAPILevel              number   Framework API version\nscreenWidth           number   Screen width\nscreenHeight          number   Screen height\nscreenDensity         number   Screen density, that is, the device pixel ratio (DPR), which\n                               is the ratio of the device\'s physical pixels to logical\n                               pixels (DP). The calculation formula is: DPR = device PPI /\n                               160, where PPI (pixels per inch) indicates the number of\n                               pixels per inch.\nscreenShape           string   Screen shape. The value can be: rect (rectangular screen),\n                               circle (circular screen), or pill-shaped (capsule-shaped\n                               screen).\ndeviceType            string   Device type. The value can be: watch, band, or smartspeaker.\n\n# Example:\n\ndevice.getInfo({\n  success: function(ret) {\n    console.log(`handling success， brand = ${ret.brand}`)\n  }\n})\n\n\n\n# device.getDeviceId(OBJECT)\n\nObtains the unique device identifier.\n\n# Permission Requirements\n\nObtaining device information\n\nDevelopers need to configure the permission in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.DEVICE_INFO" }\n  ]\n}\n\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback invoked when the execution is complete\n\n# Return Value of success:\n\nPARAMETER   TYPE     DESCRIPTION\ndeviceId    String   Unique device identifier\n\n# Example:\n\ndevice.getDeviceId({\n  success: function (data) {\n    console.log(`handling success: ${data.deviceId}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# device.getSerial(OBJECT)\n\nObtains the device serial number.\n\n# Permission Requirements\n\nObtaining device information\n\nDevelopers need to configure the permission in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.DEVICE_INFO" }\n  ]\n}\n\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback invoked when the execution is complete\n\n# Return Value of success:\n\nPARAMETER   TYPE     DESCRIPTION\nserial      String   Device serial number\n\ndevice.getSerial({\n    success: (data) => {\n        console.log(`handling success: ${data.serial}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.getTotalStorage(OBJECT)\n\nObtains the total size of the storage space.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback invoked when the execution is complete\n\n# Return Value of success:\n\nPARAMETER      TYPE     DESCRIPTION\ntotalStorage   Number   Total size of the storage space, in bytes\n\ndevice.getTotalStorage({\n    success: (data) => {\n        console.log(`handling success: ${data.totalStorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.getAvailableStorage(OBJECT)\n\nObtains the available size of the storage space.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback invoked when the execution is complete\n\n# Return Value of success:\n\nPARAMETER          TYPE     DESCRIPTION\navailableStorage   Number   Available size of the storage space, in bytes\n\ndevice.getAvailableStorage({\n    success: (data) => {\n        console.log(`handling success: ${data.availableStorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n',normalizedContent:'# device information\n\n\n# interface declaration\n\n{ "name": "system.device" }\n\n\n\n# importing the module\n\nimport device from \'@system.device\' \n// or \nconst device = require(\'@system.device\')\n\n\n\n# interface definitions\n\n\n# device.getinfo(object)\n\nobtains device information.\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback invoked when the execution is complete\n\n# return value of success:\n\nparameter             type     description\nbrand                 string   device brand\nmanufacturer          string   device manufacturer\nmodel                 string   device model\nproduct               string   device code name\nostype                string   operating system name\nosversionname         string   operating system version name\nosversioncode         number   operating system version number\nplatformversionname   string   runtime platform version name\nplatformversioncode   number   runtime platform version number\nlanguage              string   system language\nregion                string   system region\napilevel              number   framework api version\nscreenwidth           number   screen width\nscreenheight          number   screen height\nscreendensity         number   screen density, that is, the device pixel ratio (dpr), which\n                               is the ratio of the device\'s physical pixels to logical\n                               pixels (dp). the calculation formula is: dpr = device ppi /\n                               160, where ppi (pixels per inch) indicates the number of\n                               pixels per inch.\nscreenshape           string   screen shape. the value can be: rect (rectangular screen),\n                               circle (circular screen), or pill-shaped (capsule-shaped\n                               screen).\ndevicetype            string   device type. the value can be: watch, band, or smartspeaker.\n\n# example:\n\ndevice.getinfo({\n  success: function(ret) {\n    console.log(`handling success， brand = ${ret.brand}`)\n  }\n})\n\n\n\n# device.getdeviceid(object)\n\nobtains the unique device identifier.\n\n# permission requirements\n\nobtaining device information\n\ndevelopers need to configure the permission in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.device_info" }\n  ]\n}\n\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback invoked when the execution is complete\n\n# return value of success:\n\nparameter   type     description\ndeviceid    string   unique device identifier\n\n# example:\n\ndevice.getdeviceid({\n  success: function (data) {\n    console.log(`handling success: ${data.deviceid}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# device.getserial(object)\n\nobtains the device serial number.\n\n# permission requirements\n\nobtaining device information\n\ndevelopers need to configure the permission in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.device_info" }\n  ]\n}\n\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback invoked when the execution is complete\n\n# return value of success:\n\nparameter   type     description\nserial      string   device serial number\n\ndevice.getserial({\n    success: (data) => {\n        console.log(`handling success: ${data.serial}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.gettotalstorage(object)\n\nobtains the total size of the storage space.\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback invoked when the execution is complete\n\n# return value of success:\n\nparameter      type     description\ntotalstorage   number   total size of the storage space, in bytes\n\ndevice.gettotalstorage({\n    success: (data) => {\n        console.log(`handling success: ${data.totalstorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.getavailablestorage(object)\n\nobtains the available size of the storage space.\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback invoked when the execution is complete\n\n# return value of success:\n\nparameter          type     description\navailablestorage   number   available size of the storage space, in bytes\n\ndevice.getavailablestorage({\n    success: (data) => {\n        console.log(`handling success: ${data.availablestorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n',charsets:{}},{title:"list",frontmatter:{},regularPath:"/en/components/container/list.html",relativePath:"en/components/container/list.md",key:"v-9b4d3678",path:"/en/components/container/list.html",headers:[{level:2,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:11},{level:2,title:"Child Components",slug:"child-components",normalizedTitle:"child components",charIndex:169},{level:2,title:"Attributes",slug:"attributes",normalizedTitle:"attributes",charIndex:217},{level:2,title:"Styles",slug:"styles",normalizedTitle:"styles",charIndex:408},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:500},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:1514},{level:3,title:"Effect Display",slug:"effect-display",normalizedTitle:"effect display",charIndex:2974},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:2995}],headersStr:"Overview Child Components Attributes Styles Events Example Code Effect Display Methods",content:"# list\n\n\n# Overview\n\nA list view container that contains a series of list items with the same structure and presents similar data in a continuous, multiline format.\n\n\n# Child Components\n\nOnly supports <list-item>\n\n\n# Attributes\n\nSupports universal attributes\n\nNAME      TYPE        DEFAULT VALUE   REQUIRED   DESCRIPTION\nbounces   <boolean>   false           No         Whether to bounce at the boundary\n\n\n# Styles\n\nSupports universal styles\n\nYou need to explicitly set the height when using it.\n\n\n# Events\n\nSupports universal events\n\nNAME            PARAMETERS                                            DESCRIPTION\nscroll          {scrollX: <number>, scrollY: <number>, scrollState:   List scrolling;\n                <stateValue>}                                         Description of stateValue values:\n                                                                      0: List stops scrolling\n                                                                      1: List is scrolling via user gesture\n                                                                      2: List is scrolling, user has released hand\nscrollbottom    -                                                     List scrolls to the bottom\nscrolltop       -                                                     List scrolls to the top\nscrollend       -                                                     List scrolling ends\nscrolltouchup   -                                                     Finger lifts during list scrolling\n\n\n# Example Code\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\" bounces=\"true\" \n      onscroll=\"onScroll\" \n      onscrolltop=\"onScrollTop\" \n      onscrollbottom=\"onScrollBottom\"\n      onscrolltouchup=\"onScrollTouchup\">\n      <list-item for=\"{{productList}}\" class=\"item\" type=\"item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      productList: [\n        { name: 'Clothes', price: '100' },\n        { name: 'Pants', price: '200' },\n        { name: 'Shoes', price: '300' },\n        { name: 'Hat', price: '60' },\n        { name: 'Umbrella', price: '300' },\n        { name: 'Backpack', price: '60' },\n        { name: 'Book', price: '30' }\n      ],\n    },\n    onScroll(e) {\n      console.log('### list onScroll evt: ', e)\n    },\n    onScrollTop(e) {\n      console.log('### list onScrollTop evt: ', e)\n    },\n    onScrollBottom(e) {\n      console.log('### list onScrollBottom evt: ', e)\n    },\n    onScrollTouchup(e) {\n      console.log('### list onScrollTouchup evt: ', e)\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n    background-color: #000;\n  }\n\n  .list {\n    width: 300px;\n    height: 200px;\n    border: 1px solid #fff;\n  }\n\n  text {\n   color: #fff;\n  }\n  .item {\n    height: 40px;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #fff;\n  }\n</style>\n\n\n\n# Effect Display\n\n\n\n\n# Methods\n\nNAME       PARAMETERS   DESCRIPTION\nscrollTo   Object       Scrolls the list to the specified item position\nscrollBy   Object       Scrolls the list content by a certain distance\n\nParameter description for scrollTo:\n\nNAME       TYPE                      DEFAULT VALUE   REQUIRED   DESCRIPTION\nindex      number                    0               No         Target item position for list scrolling\nbehavior   smooth / instant / auto   auto            No         Whether to scroll smoothly. Supported parameters: smooth\n                                                                (smooth scrolling), instant (instant scrolling). The default\n                                                                value is auto, which has the same effect as instant\n\nParameter description for scrollBy:\n\nNAME       TYPE                      DEFAULT VALUE   REQUIRED   DESCRIPTION\nleft       number                    0               No         Horizontal scrolling distance from the current position, in\n                                                                px. A positive value scrolls left, and a negative value\n                                                                scrolls right. Does not take effect when flex-direction is\n                                                                column or column-reverse\ntop        number                    0               No         Vertical scrolling distance from the current position, in\n                                                                px. A positive value scrolls up, and a negative value\n                                                                scrolls down. Does not take effect when flex-direction is\n                                                                row or row-reverse\nbehavior   smooth / instant / auto   auto            No         Whether to scroll smoothly. Supported parameters: smooth\n                                                                (smooth scrolling), instant (instant scrolling). The default\n                                                                value is auto, which has the same effect as instant",normalizedContent:"# list\n\n\n# overview\n\na list view container that contains a series of list items with the same structure and presents similar data in a continuous, multiline format.\n\n\n# child components\n\nonly supports <list-item>\n\n\n# attributes\n\nsupports universal attributes\n\nname      type        default value   required   description\nbounces   <boolean>   false           no         whether to bounce at the boundary\n\n\n# styles\n\nsupports universal styles\n\nyou need to explicitly set the height when using it.\n\n\n# events\n\nsupports universal events\n\nname            parameters                                            description\nscroll          {scrollx: <number>, scrolly: <number>, scrollstate:   list scrolling;\n                <statevalue>}                                         description of statevalue values:\n                                                                      0: list stops scrolling\n                                                                      1: list is scrolling via user gesture\n                                                                      2: list is scrolling, user has released hand\nscrollbottom    -                                                     list scrolls to the bottom\nscrolltop       -                                                     list scrolls to the top\nscrollend       -                                                     list scrolling ends\nscrolltouchup   -                                                     finger lifts during list scrolling\n\n\n# example code\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\" bounces=\"true\" \n      onscroll=\"onscroll\" \n      onscrolltop=\"onscrolltop\" \n      onscrollbottom=\"onscrollbottom\"\n      onscrolltouchup=\"onscrolltouchup\">\n      <list-item for=\"{{productlist}}\" class=\"item\" type=\"item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      productlist: [\n        { name: 'clothes', price: '100' },\n        { name: 'pants', price: '200' },\n        { name: 'shoes', price: '300' },\n        { name: 'hat', price: '60' },\n        { name: 'umbrella', price: '300' },\n        { name: 'backpack', price: '60' },\n        { name: 'book', price: '30' }\n      ],\n    },\n    onscroll(e) {\n      console.log('### list onscroll evt: ', e)\n    },\n    onscrolltop(e) {\n      console.log('### list onscrolltop evt: ', e)\n    },\n    onscrollbottom(e) {\n      console.log('### list onscrollbottom evt: ', e)\n    },\n    onscrolltouchup(e) {\n      console.log('### list onscrolltouchup evt: ', e)\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n    background-color: #000;\n  }\n\n  .list {\n    width: 300px;\n    height: 200px;\n    border: 1px solid #fff;\n  }\n\n  text {\n   color: #fff;\n  }\n  .item {\n    height: 40px;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #fff;\n  }\n</style>\n\n\n\n# effect display\n\n\n\n\n# methods\n\nname       parameters   description\nscrollto   object       scrolls the list to the specified item position\nscrollby   object       scrolls the list content by a certain distance\n\nparameter description for scrollto:\n\nname       type                      default value   required   description\nindex      number                    0               no         target item position for list scrolling\nbehavior   smooth / instant / auto   auto            no         whether to scroll smoothly. supported parameters: smooth\n                                                                (smooth scrolling), instant (instant scrolling). the default\n                                                                value is auto, which has the same effect as instant\n\nparameter description for scrollby:\n\nname       type                      default value   required   description\nleft       number                    0               no         horizontal scrolling distance from the current position, in\n                                                                px. a positive value scrolls left, and a negative value\n                                                                scrolls right. does not take effect when flex-direction is\n                                                                column or column-reverse\ntop        number                    0               no         vertical scrolling distance from the current position, in\n                                                                px. a positive value scrolls up, and a negative value\n                                                                scrolls down. does not take effect when flex-direction is\n                                                                row or row-reverse\nbehavior   smooth / instant / auto   auto            no         whether to scroll smoothly. supported parameters: smooth\n                                                                (smooth scrolling), instant (instant scrolling). the default\n                                                                value is auto, which has the same effect as instant",charsets:{}},{title:"Data Files",frontmatter:{},regularPath:"/en/features/data/",relativePath:"en/features/data/README.md",key:"v-26d74295",path:"/en/features/data/",headersStr:null,content:"# Data Files\n\nProvides capabilities related to local data storage and file operations.\n\n * Data Storage\n * File Storage",normalizedContent:"# data files\n\nprovides capabilities related to local data storage and file operations.\n\n * data storage\n * file storage",charsets:{}},{title:"Page Routing",frontmatter:{},regularPath:"/en/features/basic/router.html",relativePath:"en/features/basic/router.md",key:"v-374da7d6",path:"/en/features/basic/router.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:19},{level:2,title:"Importing the Module",slug:"importing-the-module",normalizedTitle:"importing the module",charIndex:74},{level:2,title:"Interface Definitions",slug:"interface-definitions",normalizedTitle:"interface definitions",charIndex:186},{level:3,title:"router.push(OBJECT)",slug:"router-push-object",normalizedTitle:"router.push(object)",charIndex:212},{level:3,title:"router.replace(OBJECT)",slug:"router-replace-object",normalizedTitle:"router.replace(object)",charIndex:3076},{level:3,title:"router.back(OBJECT)",slug:"router-back-object",normalizedTitle:"router.back(object)",charIndex:4707},{level:3,title:"router.clear()",slug:"router-clear",normalizedTitle:"router.clear()",charIndex:6588},{level:3,title:"router.getLength()",slug:"router-getlength",normalizedTitle:"router.getlength()",charIndex:6725},{level:3,title:"router.getState()",slug:"router-getstate",normalizedTitle:"router.getstate()",charIndex:6952},{level:3,title:"router.getPages()",slug:"router-getpages",normalizedTitle:"router.getpages()",charIndex:7385}],headersStr:"Interface Declaration Importing the Module Interface Definitions router.push(OBJECT) router.replace(OBJECT) router.back(OBJECT) router.clear() router.getLength() router.getState() router.getPages()",content:"# Page Routing\n\n\n# Interface Declaration\n\nNo declaration is required.\n\n\n# Importing the Module\n\nimport router from '@system.router' \n// or \nconst router = require('@system.router')\n\n\n\n# Interface Definitions\n\n\n# router.push(OBJECT)\n\nNavigates to a page within the application.\n\n# Parameters:\n\nPARAMETER   TYPE     REQUIRED   DESCRIPTION\nuri         String   Yes        The URI to navigate to, which can be in the following\n                                formats:\n                                1. A complete URI containing the schema;\n                                2. A path to a page within the application starting with\n                                '/'; for example, /about\n                                3. The name of a page within the application not starting\n                                with '/'; for example, About\n                                4. If the URI value is \"/\", it navigates to the page with\n                                the path \"/\", or to the home page if no such page exists.\n                                \n                                Complete URIs containing the schema are supported. For URIs\n                                with a schema, the processing flow is as follows:\n                                If the schema is hap (refer to hap Links), it navigates to\n                                the type supported by the hap link.\nparams      Object   No         Data to be passed during navigation. Parameters can be used\n                                in the target page via this.param1, where param1 is the\n                                parameter name in the JSON. The value corresponding to\n                                param1 will be uniformly converted to the String type. When\n                                using the this.param1 variable, you need to define a\n                                property with the same key name under public (for parameters\n                                passed outside the application) or protected (for parameters\n                                passed within the application) in the target page.\n\n# params Parameters:\n\nPARAMETER                 TYPE     REQUIRED   DESCRIPTION\n___PARAM_LAUNCH_FLAG___   String   No         JS application launch parameter. Currently only \"clearTask\"\n                                              is supported. When launching the target page, it clears all\n                                              other pages except this one. For details, see Page Launch\n                                              Modes.\n\n# Examples:\n\n * Switching pages within the application\n   \n   * Switching by path\n     \n     router.push({\n       uri: '/about',\n       params: {\n         testId: '1'\n       }\n     })\n     \n   \n   * Switching by name\n     \n     // Open page by name\n     router.push({\n       uri: 'About',\n       params: {\n         testId: '1'\n       }\n     })\n     \n   \n   * Switching pages and clearing others\n     \n     router.push({\n       uri: '/about',\n       params: {\n         ___PARAM_LAUNCH_FLAG___: 'clearTask'\n       }\n     })\n     \n\n\n# router.replace(OBJECT)\n\nReplaces the current page with a page within the application and destroys the replaced page.\n\n# Parameters:\n\nPARAMETER   TYPE     REQUIRED   DESCRIPTION\nuri         String   Yes        The URI to navigate to, which can be in the following\n                                formats:\n                                 1. A path to a page within the application starting with\n                                    '/'; for example, /about\n                                 2. The name of a page within the application not starting\n                                    with '/'; for example, About\n                                 3. If the URI value is \"/\", it navigates to the page with\n                                    the path \"/\", or to the home page if no such page\n                                    exists.\nparams      Object   No         Data to be passed during navigation. Parameters can be used\n                                in the target page via this.param1, where param1 is the\n                                parameter name in the JSON. The value corresponding to\n                                param1 will be uniformly converted to the String type. When\n                                using the this.param1 variable, you need to define a\n                                property with the same key name under public (for parameters\n                                passed outside the application) or protected (for parameters\n                                passed within the application) in the target page.\n\n# Example:\n\nrouter.replace({\n  uri: '/test',\n  params: {\n    testId: '1'\n  }\n})\n\n\n\n# router.back(OBJECT)\n\nReturns to a specified page.\n\n# Parameters:\n\nPARAMETER   TYPE     REQUIRED   DESCRIPTION\npath        String   No         The path of the target page to return to, which can be one\n                                of the following:\n                                 1. If not provided, returns to the previous page\n                                 2. A path to an already opened page within the application\n                                    starting with '/'; for example, /about\n                                 3. If the path value is \"/\", it navigates to the page with\n                                    the name \"/\", or to the home page if no such page\n                                    exists.\n                                \n                                Notes:\n                                 1. The path must be a path to an already opened page within\n                                    the current application starting with '/', otherwise it\n                                    is considered an invalid parameter and returns to the\n                                    previous page.\n                                 2. If no page matching the path is found, returns to the\n                                    previous page.\n                                 3. If multiple pages match the path parameter, returns to\n                                    the most recently opened page.\n\n# Example:\n\n// Page A, open page by name\nrouter.push({\n  uri: 'B'\n})\n// Page B, open page by name\nrouter.push({\n  uri: 'C'\n})\n// Page C, open page by name\nrouter.push({\n  uri: 'D'\n})\n// Page D, open page by name\nrouter.push({\n  uri: 'E'\n})\n// Page E does not pass a page path, returns to Page D\nrouter.back()\n// Page D does not pass a page name, returns to Page C\nrouter.back()\n// Page C passes a page path, returns to Page A\nrouter.back({\n  path: '/A'\n})\n\n\n\n# router.clear()\n\nClears all historical page records, keeping only the current page.\n\n# Parameters:\n\nNone\n\n# Example:\n\nrouter.clear()\n\n\n\n# router.getLength()\n\nGets the number of pages in the current page stack.\n\n# Return Value:\n\nTYPE     DESCRIPTION\nNumber   Number of pages\n\n# Example:\n\nvar length = router.getLength()\nconsole.log(`page's length = ${length}`)\n\n\n\n# router.getState()\n\nGets the current page state.\n\n# Return Parameters:\n\nPARAMETER   TYPE     DESCRIPTION\nindex       Number   Position of the current page in the page stack\nname        String   Name of the current page\npath        String   Path of the current page\n\n# Example:\n\nvar page = router.getState()\nconsole.log(`page index = ${page.index}`)\nconsole.log(`page name = ${page.name}`)\nconsole.log(`page path = ${page.path}`)\n\n\n\n# router.getPages()\n\nGets the current page stack list.\n\n# Return Value:\n\nTYPE    DESCRIPTION\nArray   Page stack list. Each item in the array is of type Object.\n\nEach item in the array consists of:\n\nFIELD   TYPE     DESCRIPTION\nname    String   Name of the page\npath    String   Path of the page\n\n# Example:\n\nvar stacks = router.getPages()\nconsole.log('Name of the bottom page in the stack:', stacks[0].name) // e.g., list, detail, etc.\nconsole.log('Path of the bottom page in the stack:', stacks[0].path) // e.g., /list, /detail, /home/preview\n",normalizedContent:"# page routing\n\n\n# interface declaration\n\nno declaration is required.\n\n\n# importing the module\n\nimport router from '@system.router' \n// or \nconst router = require('@system.router')\n\n\n\n# interface definitions\n\n\n# router.push(object)\n\nnavigates to a page within the application.\n\n# parameters:\n\nparameter   type     required   description\nuri         string   yes        the uri to navigate to, which can be in the following\n                                formats:\n                                1. a complete uri containing the schema;\n                                2. a path to a page within the application starting with\n                                '/'; for example, /about\n                                3. the name of a page within the application not starting\n                                with '/'; for example, about\n                                4. if the uri value is \"/\", it navigates to the page with\n                                the path \"/\", or to the home page if no such page exists.\n                                \n                                complete uris containing the schema are supported. for uris\n                                with a schema, the processing flow is as follows:\n                                if the schema is hap (refer to hap links), it navigates to\n                                the type supported by the hap link.\nparams      object   no         data to be passed during navigation. parameters can be used\n                                in the target page via this.param1, where param1 is the\n                                parameter name in the json. the value corresponding to\n                                param1 will be uniformly converted to the string type. when\n                                using the this.param1 variable, you need to define a\n                                property with the same key name under public (for parameters\n                                passed outside the application) or protected (for parameters\n                                passed within the application) in the target page.\n\n# params parameters:\n\nparameter                 type     required   description\n___param_launch_flag___   string   no         js application launch parameter. currently only \"cleartask\"\n                                              is supported. when launching the target page, it clears all\n                                              other pages except this one. for details, see page launch\n                                              modes.\n\n# examples:\n\n * switching pages within the application\n   \n   * switching by path\n     \n     router.push({\n       uri: '/about',\n       params: {\n         testid: '1'\n       }\n     })\n     \n   \n   * switching by name\n     \n     // open page by name\n     router.push({\n       uri: 'about',\n       params: {\n         testid: '1'\n       }\n     })\n     \n   \n   * switching pages and clearing others\n     \n     router.push({\n       uri: '/about',\n       params: {\n         ___param_launch_flag___: 'cleartask'\n       }\n     })\n     \n\n\n# router.replace(object)\n\nreplaces the current page with a page within the application and destroys the replaced page.\n\n# parameters:\n\nparameter   type     required   description\nuri         string   yes        the uri to navigate to, which can be in the following\n                                formats:\n                                 1. a path to a page within the application starting with\n                                    '/'; for example, /about\n                                 2. the name of a page within the application not starting\n                                    with '/'; for example, about\n                                 3. if the uri value is \"/\", it navigates to the page with\n                                    the path \"/\", or to the home page if no such page\n                                    exists.\nparams      object   no         data to be passed during navigation. parameters can be used\n                                in the target page via this.param1, where param1 is the\n                                parameter name in the json. the value corresponding to\n                                param1 will be uniformly converted to the string type. when\n                                using the this.param1 variable, you need to define a\n                                property with the same key name under public (for parameters\n                                passed outside the application) or protected (for parameters\n                                passed within the application) in the target page.\n\n# example:\n\nrouter.replace({\n  uri: '/test',\n  params: {\n    testid: '1'\n  }\n})\n\n\n\n# router.back(object)\n\nreturns to a specified page.\n\n# parameters:\n\nparameter   type     required   description\npath        string   no         the path of the target page to return to, which can be one\n                                of the following:\n                                 1. if not provided, returns to the previous page\n                                 2. a path to an already opened page within the application\n                                    starting with '/'; for example, /about\n                                 3. if the path value is \"/\", it navigates to the page with\n                                    the name \"/\", or to the home page if no such page\n                                    exists.\n                                \n                                notes:\n                                 1. the path must be a path to an already opened page within\n                                    the current application starting with '/', otherwise it\n                                    is considered an invalid parameter and returns to the\n                                    previous page.\n                                 2. if no page matching the path is found, returns to the\n                                    previous page.\n                                 3. if multiple pages match the path parameter, returns to\n                                    the most recently opened page.\n\n# example:\n\n// page a, open page by name\nrouter.push({\n  uri: 'b'\n})\n// page b, open page by name\nrouter.push({\n  uri: 'c'\n})\n// page c, open page by name\nrouter.push({\n  uri: 'd'\n})\n// page d, open page by name\nrouter.push({\n  uri: 'e'\n})\n// page e does not pass a page path, returns to page d\nrouter.back()\n// page d does not pass a page name, returns to page c\nrouter.back()\n// page c passes a page path, returns to page a\nrouter.back({\n  path: '/a'\n})\n\n\n\n# router.clear()\n\nclears all historical page records, keeping only the current page.\n\n# parameters:\n\nnone\n\n# example:\n\nrouter.clear()\n\n\n\n# router.getlength()\n\ngets the number of pages in the current page stack.\n\n# return value:\n\ntype     description\nnumber   number of pages\n\n# example:\n\nvar length = router.getlength()\nconsole.log(`page's length = ${length}`)\n\n\n\n# router.getstate()\n\ngets the current page state.\n\n# return parameters:\n\nparameter   type     description\nindex       number   position of the current page in the page stack\nname        string   name of the current page\npath        string   path of the current page\n\n# example:\n\nvar page = router.getstate()\nconsole.log(`page index = ${page.index}`)\nconsole.log(`page name = ${page.name}`)\nconsole.log(`page path = ${page.path}`)\n\n\n\n# router.getpages()\n\ngets the current page stack list.\n\n# return value:\n\ntype    description\narray   page stack list. each item in the array is of type object.\n\neach item in the array consists of:\n\nfield   type     description\nname    string   name of the page\npath    string   path of the page\n\n# example:\n\nvar stacks = router.getpages()\nconsole.log('name of the bottom page in the stack:', stacks[0].name) // e.g., list, detail, etc.\nconsole.log('path of the bottom page in the stack:', stacks[0].path) // e.g., /list, /detail, /home/preview\n",charsets:{}},{title:"Data Storage",frontmatter:{},regularPath:"/en/features/data/storage.html",relativePath:"en/features/data/storage.md",key:"v-b992a184",path:"/en/features/data/storage.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:19},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:76},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:185},{level:3,title:"storage.get(OBJECT)",slug:"storage-get-object",normalizedTitle:"storage.get(object)",charIndex:197},{level:3,title:"storage.set(OBJECT)",slug:"storage-set-object",normalizedTitle:"storage.set(object)",charIndex:959},{level:3,title:"storage.clear(OBJECT)",slug:"storage-clear-object",normalizedTitle:"storage.clear(object)",charIndex:1661},{level:3,title:"storage.delete(OBJECT)",slug:"storage-delete-object",normalizedTitle:"storage.delete(object)",charIndex:2125}],headersStr:"Interface Declaration Import Module Methods storage.get(OBJECT) storage.set(OBJECT) storage.clear(OBJECT) storage.delete(OBJECT)",content:"# Data Storage\n\n\n# Interface Declaration\n\n{ \"name\": \"system.storage\" }\n\n\n\n# Import Module\n\nimport storage from '@system.storage' \n// or \nconst storage = require('@system.storage')\n\n\n\n# Methods\n\n\n# storage.get(OBJECT)\n\nReads stored content.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nkey         String     Yes        Index\ndefault     String     No         If the key does not exist, returns default. If default is\n                                  not specified, returns an empty string with a length of 0\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after execution ends\n\n# success Return Value:\n\nStored content corresponding to the key\n\n# Example:\n\nstorage.get({\n  key: 'A1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.set(OBJECT)\n\nModifies stored content.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nkey         String     Yes        Index\nvalue       String     No         New value. If the new value is an empty string with a length\n                                  of 0, deletes the data item indexed by key\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after execution ends\n\n# Example:\n\nstorage.set({\n  key: 'A1',\n  value: 'V1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.clear(OBJECT)\n\nClears stored content.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after execution ends\n\n# Example:\n\nstorage.clear({\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.delete(OBJECT)\n\nDeletes stored content.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nkey         String     Yes        Index\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after execution ends\n\n# Example:\n\nstorage.delete({\n  key: 'A1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# data storage\n\n\n# interface declaration\n\n{ \"name\": \"system.storage\" }\n\n\n\n# import module\n\nimport storage from '@system.storage' \n// or \nconst storage = require('@system.storage')\n\n\n\n# methods\n\n\n# storage.get(object)\n\nreads stored content.\n\n# parameters:\n\nparameter   type       required   description\nkey         string     yes        index\ndefault     string     no         if the key does not exist, returns default. if default is\n                                  not specified, returns an empty string with a length of 0\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after execution ends\n\n# success return value:\n\nstored content corresponding to the key\n\n# example:\n\nstorage.get({\n  key: 'a1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.set(object)\n\nmodifies stored content.\n\n# parameters:\n\nparameter   type       required   description\nkey         string     yes        index\nvalue       string     no         new value. if the new value is an empty string with a length\n                                  of 0, deletes the data item indexed by key\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after execution ends\n\n# example:\n\nstorage.set({\n  key: 'a1',\n  value: 'v1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.clear(object)\n\nclears stored content.\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after execution ends\n\n# example:\n\nstorage.clear({\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.delete(object)\n\ndeletes stored content.\n\n# parameters:\n\nparameter   type       required   description\nkey         string     yes        index\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after execution ends\n\n# example:\n\nstorage.delete({\n  key: 'a1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{}},{title:"Animation Styles",frontmatter:{},regularPath:"/en/components/general/animation-style.html",relativePath:"en/components/general/animation-style.md",key:"v-2a1e2616",path:"/en/components/general/animation-style.html",headers:[{level:2,title:"Animation Style List",slug:"animation-style-list",normalizedTitle:"animation style list",charIndex:464},{level:2,title:"Transform Operations",slug:"transform-operations",normalizedTitle:"transform operations",charIndex:4466},{level:2,title:"Transform-Origin Operations",slug:"transform-origin-operations",normalizedTitle:"transform-origin operations",charIndex:4829},{level:2,title:"Animation-Name Property",slug:"animation-name-property",normalizedTitle:"animation-name property",charIndex:5244},{level:2,title:"@keyframes Property",slug:"keyframes-property",normalizedTitle:"@keyframes property",charIndex:5781},{level:2,title:"Transition Animation",slug:"transition-animation",normalizedTitle:"transition animation",charIndex:6980},{level:3,title:"Transition Usage Example",slug:"transition-usage-example",normalizedTitle:"transition usage example",charIndex:7227},{level:3,title:"Generic Style Properties Supported by transition-property",slug:"generic-style-properties-supported-by-transition-property",normalizedTitle:"generic style properties supported by transition-property",charIndex:8318}],headersStr:"Animation Style List Transform Operations Transform-Origin Operations Animation-Name Property @keyframes Property Transition Animation Transition Usage Example Generic Style Properties Supported by transition-property",content:'# Animation Styles\n\nThe Vela JS application supports developers in creating animations by providing animation style properties for the transform, transform-origin, animation, and transition classes, with parameter formats aligned with CSS for easier developer adaptation.\n\nFor transform, refer to this documentation.\n\nFor transform-origin, refer to this documentation.\n\nFor animation, refer to this documentation.\n\nFor transition, refer to this documentation.\n\n\n# Animation Style List\n\nNAME                         TYPE                                                     DEFAULT VALUE   DESCRIPTION\ntransform                    <string>                                                 -               See transform operations below\ntransform-origin             <string>                                                 -               See transform-origin operations below\nanimation-name               <string>                                                 -               Corresponds to the name of @keyframes, see @keyframes\n                                                                                                      properties below\nanimation-delay              <time>                                                   0               Currently supported units: [s(seconds) | ms(milliseconds)]\nanimation-duration           <time>                                                   0               Currently supported units: [s(seconds) | ms(milliseconds)]\nanimation-iteration-count    <integer> | infinite                                     1               Defines the number of animation plays, can be set to\n                                                                                                      infinite for unlimited plays\nanimation-timing-function    linear | ease | ease-in | ease-out | ease-in-out |       ease            -\n                             cubic-bezier(<number>, <number>, <number>, <number>) |\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-property          <string>                                                 all             Specifies the generic style property name for executing the\n                                                                                                      transition effect, see details\ntransition-duration          <time>                                                   0s              Specifies the execution time of the transition\ntransition-timing-function   linear | ease | ease-in | ease-out | ease-in-out |       ease            Specifies the timing function for transition execution. The\n                             cubic-bezier(<number>, <number>, <number>, <number>) |                   parameter interpretation is the same as for animation\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-delay             <time>                                                   0s              Specifies the time when the transition starts executing,\n                                                                                                      i.e., how long after changing the element\'s property value\n                                                                                                      the transition effect begins\n\nNote:\n\n * animation-timing-function types:\n\ncubic-bezier(<number>, <number>, <number>, <number>) | step-start | step-end | steps(number_of_steps[, step-direction]?) where:\n\nsteps(number_of_steps, step-direction)\n\nNAME              TYPE                                                          DEFAULT VALUE   REQUIRED   DESCRIPTION\nnumber_of_steps   <integer>                                                     -               Yes        Positive integer representing equal interval steps\nstep-direction    jump-start | jump-end | jump-none | jump-both | start | end   end             No         Keyword indicating left-continuous or right-continuous\n                                                                                                           function\n\n * cubic-bezier(x1, y1, x2, y2):\n\nParameters x1, y1, x2, y2 are <number> type values representing the horizontal and vertical coordinates of points P1 and P2 in the currently defined cubic Bezier curve. x1 and x2 must be within the [0, 1] range; otherwise, the current value is invalid.\n\n\n# Transform Operations\n\nApply 2D transformations to elements. This property allows us to rotate, scale, and move elements.\n\nSupported style property list:\n\nNAME         TYPE\ntranslate    <length> | <percent>\ntranslateX   <length> | <percent>\ntranslateY   <length> | <percent>\nscale        <number>\nscaleX       <number>\nscaleY       <number>\nrotate       <deg>\n\n\n# Transform-Origin Operations\n\nChange the origin point of an element\'s deformation, currently supporting changes to the element\'s X and Y axes.\n\nNote:\n\n * This property must be used with the transform property first.\n\nExample code:\n\n/* Using % values */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 20% 40%;\n}\n/* Using px values */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 100px 100px;\n}\n\n\n\n# Animation-Name Property\n\nSpecifies a series of animations to be adopted. Each property value name represents a keyframe sequence defined by the @keyframes property. This property supports applying single or multiple animations (1070+) in components. When applying multiple animations, they start simultaneously.\n\nExample code:\n\n/* Single animation */\nanimation-name: Color;\nanimation-name: translate;\nanimation-name: rotate;\n\n/* Multiple animations 1070+ */\nanimation-name: Color, Opacity;\nanimation-name: Width, translate, rotate;\n\n\n\n# @keyframes Property\n\nNAME                  TYPE                                                           DEFAULT VALUE   DESCRIPTION\nbackground-color      <color>                                                        -               -\nbackground-position   <length> |<percentage>| left | right | top | bottom | center   0px 0px         Describes the position where the background image is drawn\n                                                                                                     in the container, supports 1-4 parameters, see Background\n                                                                                                     Image Styles for details\nopacity               <number>                                                       -               -\nwidth/height          <length>                                                       -               Percentage not currently supported\ntransform             <string>                                                       -               Allows rotating, scaling, and moving elements\n\nNote:\n\nCurrently does not support omitting the starting value (0%) or ending value (100%); both must be explicitly specified.\n\n\n# Transition Animation\n\nTransition animation is another way to implement animations. Transition animations can define transition effects for elements when switching between different states, such as state changes implemented through JavaScript.\n\n\n# Transition Usage Example\n\nThere are four style properties: transition-property, transition-duration, transition-timing-function, and transition-delay, written directly in the style. Example usage:\n\n<template>\n  <div class="page">\n    <div class="div {{otherClass}}"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      otherClass: ""\n    },\n    onShow() {\n      const that = this\n      setTimeout(() => {\n        that.otherClass = "new-width"\n      }, 1000);\n    }\n  };\n<\/script>\n\n<style>\n.page {\n  padding: 60px;\n  align-items: center;\n}\n.div {\n  width: 100px;\n  height: 200px;\n  background-color: red;\n  transition-property: width;\n  transition-duration: 2000ms;\n  transition-timing-function: ease-in;\n  transition-delay: 500ms;\n}\n.new-width {\n  width: 300px;\n}\n</style>\n\n\nThe four style properties above can be abbreviated into one, indicating that after triggering a width change in the div, it will change to the new width value in an accelerated manner over 0.5s, with the transition animation lasting 2s:\n\n.div {\n  transition: width 2000ms ease-in 500ms;\n}\n\n\n\n# Generic Style Properties Supported by transition-property\n\nThe list of generic style properties supported by transition-property in JS applications:\n\nSTYLE NAME                                REMARKS\nwidth                                     √\nheight                                    √\nopacity                                   √\nvisibility                                √\ncolor                                     Not currently supported\ntransform-origin                          Not currently supported\ntransform                                 Not currently supported\npadding                                   Not currently supported\npadding-[left|top|right|bottom]           Not currently supported\nmargin                                    Not currently supported\nmargin-[left|top|right|bottom]            Not currently supported\nborder                                    Not currently supported\nborder-[left|top|right|bottom]            Not currently supported\nborder-width                              √\nborder-[left|top|right|bottom]-width      Not currently supported\nborder-color                              √\nborder-[left|top|right|bottom]-color      Not currently supported\nborder-radius                             Not currently supported\nborder-[top|bottom]-[left|right]-radius   Not currently supported\nbackground                                Not currently supported\nbackground-color                          √\nbackground-size                           Not currently supported\nbackground-position                       √\nflex                                      Not currently supported\nflex-grow                                 Not currently supported\nflex-shrink                               Not currently supported\nflex-basis                                Not currently supported\n[left|top|right|bottom]                   Not currently supported',normalizedContent:'# animation styles\n\nthe vela js application supports developers in creating animations by providing animation style properties for the transform, transform-origin, animation, and transition classes, with parameter formats aligned with css for easier developer adaptation.\n\nfor transform, refer to this documentation.\n\nfor transform-origin, refer to this documentation.\n\nfor animation, refer to this documentation.\n\nfor transition, refer to this documentation.\n\n\n# animation style list\n\nname                         type                                                     default value   description\ntransform                    <string>                                                 -               see transform operations below\ntransform-origin             <string>                                                 -               see transform-origin operations below\nanimation-name               <string>                                                 -               corresponds to the name of @keyframes, see @keyframes\n                                                                                                      properties below\nanimation-delay              <time>                                                   0               currently supported units: [s(seconds) | ms(milliseconds)]\nanimation-duration           <time>                                                   0               currently supported units: [s(seconds) | ms(milliseconds)]\nanimation-iteration-count    <integer> | infinite                                     1               defines the number of animation plays, can be set to\n                                                                                                      infinite for unlimited plays\nanimation-timing-function    linear | ease | ease-in | ease-out | ease-in-out |       ease            -\n                             cubic-bezier(<number>, <number>, <number>, <number>) |\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-property          <string>                                                 all             specifies the generic style property name for executing the\n                                                                                                      transition effect, see details\ntransition-duration          <time>                                                   0s              specifies the execution time of the transition\ntransition-timing-function   linear | ease | ease-in | ease-out | ease-in-out |       ease            specifies the timing function for transition execution. the\n                             cubic-bezier(<number>, <number>, <number>, <number>) |                   parameter interpretation is the same as for animation\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-delay             <time>                                                   0s              specifies the time when the transition starts executing,\n                                                                                                      i.e., how long after changing the element\'s property value\n                                                                                                      the transition effect begins\n\nnote:\n\n * animation-timing-function types:\n\ncubic-bezier(<number>, <number>, <number>, <number>) | step-start | step-end | steps(number_of_steps[, step-direction]?) where:\n\nsteps(number_of_steps, step-direction)\n\nname              type                                                          default value   required   description\nnumber_of_steps   <integer>                                                     -               yes        positive integer representing equal interval steps\nstep-direction    jump-start | jump-end | jump-none | jump-both | start | end   end             no         keyword indicating left-continuous or right-continuous\n                                                                                                           function\n\n * cubic-bezier(x1, y1, x2, y2):\n\nparameters x1, y1, x2, y2 are <number> type values representing the horizontal and vertical coordinates of points p1 and p2 in the currently defined cubic bezier curve. x1 and x2 must be within the [0, 1] range; otherwise, the current value is invalid.\n\n\n# transform operations\n\napply 2d transformations to elements. this property allows us to rotate, scale, and move elements.\n\nsupported style property list:\n\nname         type\ntranslate    <length> | <percent>\ntranslatex   <length> | <percent>\ntranslatey   <length> | <percent>\nscale        <number>\nscalex       <number>\nscaley       <number>\nrotate       <deg>\n\n\n# transform-origin operations\n\nchange the origin point of an element\'s deformation, currently supporting changes to the element\'s x and y axes.\n\nnote:\n\n * this property must be used with the transform property first.\n\nexample code:\n\n/* using % values */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 20% 40%;\n}\n/* using px values */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 100px 100px;\n}\n\n\n\n# animation-name property\n\nspecifies a series of animations to be adopted. each property value name represents a keyframe sequence defined by the @keyframes property. this property supports applying single or multiple animations (1070+) in components. when applying multiple animations, they start simultaneously.\n\nexample code:\n\n/* single animation */\nanimation-name: color;\nanimation-name: translate;\nanimation-name: rotate;\n\n/* multiple animations 1070+ */\nanimation-name: color, opacity;\nanimation-name: width, translate, rotate;\n\n\n\n# @keyframes property\n\nname                  type                                                           default value   description\nbackground-color      <color>                                                        -               -\nbackground-position   <length> |<percentage>| left | right | top | bottom | center   0px 0px         describes the position where the background image is drawn\n                                                                                                     in the container, supports 1-4 parameters, see background\n                                                                                                     image styles for details\nopacity               <number>                                                       -               -\nwidth/height          <length>                                                       -               percentage not currently supported\ntransform             <string>                                                       -               allows rotating, scaling, and moving elements\n\nnote:\n\ncurrently does not support omitting the starting value (0%) or ending value (100%); both must be explicitly specified.\n\n\n# transition animation\n\ntransition animation is another way to implement animations. transition animations can define transition effects for elements when switching between different states, such as state changes implemented through javascript.\n\n\n# transition usage example\n\nthere are four style properties: transition-property, transition-duration, transition-timing-function, and transition-delay, written directly in the style. example usage:\n\n<template>\n  <div class="page">\n    <div class="div {{otherclass}}"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      otherclass: ""\n    },\n    onshow() {\n      const that = this\n      settimeout(() => {\n        that.otherclass = "new-width"\n      }, 1000);\n    }\n  };\n<\/script>\n\n<style>\n.page {\n  padding: 60px;\n  align-items: center;\n}\n.div {\n  width: 100px;\n  height: 200px;\n  background-color: red;\n  transition-property: width;\n  transition-duration: 2000ms;\n  transition-timing-function: ease-in;\n  transition-delay: 500ms;\n}\n.new-width {\n  width: 300px;\n}\n</style>\n\n\nthe four style properties above can be abbreviated into one, indicating that after triggering a width change in the div, it will change to the new width value in an accelerated manner over 0.5s, with the transition animation lasting 2s:\n\n.div {\n  transition: width 2000ms ease-in 500ms;\n}\n\n\n\n# generic style properties supported by transition-property\n\nthe list of generic style properties supported by transition-property in js applications:\n\nstyle name                                remarks\nwidth                                     √\nheight                                    √\nopacity                                   √\nvisibility                                √\ncolor                                     not currently supported\ntransform-origin                          not currently supported\ntransform                                 not currently supported\npadding                                   not currently supported\npadding-[left|top|right|bottom]           not currently supported\nmargin                                    not currently supported\nmargin-[left|top|right|bottom]            not currently supported\nborder                                    not currently supported\nborder-[left|top|right|bottom]            not currently supported\nborder-width                              √\nborder-[left|top|right|bottom]-width      not currently supported\nborder-color                              √\nborder-[left|top|right|bottom]-color      not currently supported\nborder-radius                             not currently supported\nborder-[top|bottom]-[left|right]-radius   not currently supported\nbackground                                not currently supported\nbackground-color                          √\nbackground-size                           not currently supported\nbackground-position                       √\nflex                                      not currently supported\nflex-grow                                 not currently supported\nflex-shrink                               not currently supported\nflex-basis                                not currently supported\n[left|top|right|bottom]                   not currently supported',charsets:{cjk:!0}},{title:"General Syntax",frontmatter:{},regularPath:"/en/features/grammar.html",relativePath:"en/features/grammar.md",key:"v-b8027794",path:"/en/features/grammar.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:349},{level:2,title:"Importing Modules",slug:"importing-modules",normalizedTitle:"importing modules",charIndex:496},{level:2,title:"Interface API Invocation",slug:"interface-api-invocation",normalizedTitle:"interface api invocation",charIndex:702},{level:3,title:"Synchronous API Invocation",slug:"synchronous-api-invocation",normalizedTitle:"synchronous api invocation",charIndex:874},{level:3,title:"Asynchronous API Invocation",slug:"asynchronous-api-invocation",normalizedTitle:"asynchronous api invocation",charIndex:1041},{level:3,title:"Subscription/Unsubscription APIs",slug:"subscription-unsubscription-apis",normalizedTitle:"subscription/unsubscription apis",charIndex:2823},{level:2,title:"General Error Codes",slug:"general-error-codes",normalizedTitle:"general error codes",charIndex:2441}],headersStr:"Interface Declaration Importing Modules Interface API Invocation Synchronous API Invocation Asynchronous API Invocation Subscription/Unsubscription APIs General Error Codes",content:'# General Syntax\n\nThe framework provides various interfaces to obtain basic application information or invoke system capabilities. Each interface includes several APIs to perform specific tasks. Before using an interface, you need to declare the interface and import the module. Then, you can call the several APIs defined under that interface.\n\n\n# Interface Declaration\n\nDeclare the interface under the features field in the manifest.json file, for example:\n\n[{ "name": "system.network" }]\n\n\n\n# Importing Modules\n\nBefore using an interface, you need to import the interface module in your code, for example:\n\nimport network from \'@system.network\'\n// or\nconst network = require(\'@system.network\')\n\n\n\n# Interface API Invocation\n\nThe APIs provided by the interface can be invoked in the following ways:\n\n * Synchronous APIs\n * Asynchronous APIs\n * Subscription-based APIs\n\n\n# Synchronous API Invocation\n\nIf an API does not return a value, it is generally defined as a synchronous API. You can call it directly, for example:\n\naudio.play()\n\n\n\n# Asynchronous API Invocation\n\nIf an API returns a value, it is generally defined as an asynchronous API. In addition to regular parameters, these APIs have three common parameters: "success", "fail", and "complete", which are callback methods triggered after the API execution is "successful", "failed", or "completed". When calling, you can pass these three parameters to obtain the return value of a successful API execution or handle the execution after a failure or completion. The descriptions of these three common parameters are as follows:\n\nNAME       METHOD PARAMETER   PARAMETER TYPE   PARAMETER VALUE                                               DESCRIPTION\nsuccess    data               any              The return value of the API execution. For details, see the   Triggered after the API execution is successful.\n                                               interface usage documentation.\nfail       data               any              The error information content of the API execution, usually   Triggered after the API execution fails.\n                                               a string, but may also be of other types. For details, see\n                                               the interface usage documentation.\n           code               number           The error code of the API execution. For details, see         \n                                               General Error Codes.\ncomplete   -                  -                -                                                             Triggered after the API execution is completed.\n\nCode example:\n\nstorage.get({\n  key: \'A1\',\n  success: function(data) {\n    console.log(\'handling success\')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# Subscription/Unsubscription APIs\n\nSubscription-based APIs do not return results immediately. These APIs require developers to pass a callback function as a parameter. This callback function is triggered when the API is completed or when an event changes, and it can be executed multiple times. The parameter descriptions of this general callback function are as follows:\n\nNAME      METHOD PARAMETER   PARAMETER TYPE   PARAMETER VALUE                                                DESCRIPTION\nsuccess   data               any              The return value of the API execution. For details, see the    Triggered when the API call is successful or when an event\n                                              interface usage documentation.                                 changes. It may be triggered multiple times.\nfail      data               any              The error information content, usually a string, but may       Triggered when the API execution fails. Once this callback\n                                              also be of other types. For details, see the interface usage   function is triggered, success will not be called again, and\n                                              documentation.                                                 the interface call ends.\n          code               number           The error code of the API execution. For details, see           \n                                              General Error Codes.\n\nCode example:\n\ngeolocation.subscribe({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# General Error Codes\n\nWhen errors occur during the execution of APIs in all interfaces, they will return uniformly defined general error codes or special error codes defined by the APIs themselves. The descriptions of the general error codes are as follows:\n\nCODE   DEFINITION\n200    General system error, thrown when all unknown system\n       exceptions occur. For example, the framework fails to apply\n       for memory space.\n202    Parameter error, occurs when the parameters are not passed\n       correctly according to the API definition during the call.\n203    The function is not supported.\n204    Request timeout.\n300    I/O error.',normalizedContent:'# general syntax\n\nthe framework provides various interfaces to obtain basic application information or invoke system capabilities. each interface includes several apis to perform specific tasks. before using an interface, you need to declare the interface and import the module. then, you can call the several apis defined under that interface.\n\n\n# interface declaration\n\ndeclare the interface under the features field in the manifest.json file, for example:\n\n[{ "name": "system.network" }]\n\n\n\n# importing modules\n\nbefore using an interface, you need to import the interface module in your code, for example:\n\nimport network from \'@system.network\'\n// or\nconst network = require(\'@system.network\')\n\n\n\n# interface api invocation\n\nthe apis provided by the interface can be invoked in the following ways:\n\n * synchronous apis\n * asynchronous apis\n * subscription-based apis\n\n\n# synchronous api invocation\n\nif an api does not return a value, it is generally defined as a synchronous api. you can call it directly, for example:\n\naudio.play()\n\n\n\n# asynchronous api invocation\n\nif an api returns a value, it is generally defined as an asynchronous api. in addition to regular parameters, these apis have three common parameters: "success", "fail", and "complete", which are callback methods triggered after the api execution is "successful", "failed", or "completed". when calling, you can pass these three parameters to obtain the return value of a successful api execution or handle the execution after a failure or completion. the descriptions of these three common parameters are as follows:\n\nname       method parameter   parameter type   parameter value                                               description\nsuccess    data               any              the return value of the api execution. for details, see the   triggered after the api execution is successful.\n                                               interface usage documentation.\nfail       data               any              the error information content of the api execution, usually   triggered after the api execution fails.\n                                               a string, but may also be of other types. for details, see\n                                               the interface usage documentation.\n           code               number           the error code of the api execution. for details, see         \n                                               general error codes.\ncomplete   -                  -                -                                                             triggered after the api execution is completed.\n\ncode example:\n\nstorage.get({\n  key: \'a1\',\n  success: function(data) {\n    console.log(\'handling success\')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# subscription/unsubscription apis\n\nsubscription-based apis do not return results immediately. these apis require developers to pass a callback function as a parameter. this callback function is triggered when the api is completed or when an event changes, and it can be executed multiple times. the parameter descriptions of this general callback function are as follows:\n\nname      method parameter   parameter type   parameter value                                                description\nsuccess   data               any              the return value of the api execution. for details, see the    triggered when the api call is successful or when an event\n                                              interface usage documentation.                                 changes. it may be triggered multiple times.\nfail      data               any              the error information content, usually a string, but may       triggered when the api execution fails. once this callback\n                                              also be of other types. for details, see the interface usage   function is triggered, success will not be called again, and\n                                              documentation.                                                 the interface call ends.\n          code               number           the error code of the api execution. for details, see           \n                                              general error codes.\n\ncode example:\n\ngeolocation.subscribe({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# general error codes\n\nwhen errors occur during the execution of apis in all interfaces, they will return uniformly defined general error codes or special error codes defined by the apis themselves. the descriptions of the general error codes are as follows:\n\ncode   definition\n200    general system error, thrown when all unknown system\n       exceptions occur. for example, the framework fails to apply\n       for memory space.\n202    parameter error, occurs when the parameters are not passed\n       correctly according to the api definition during the call.\n203    the function is not supported.\n204    request timeout.\n300    i/o error.',charsets:{}},{title:"File Storage",frontmatter:{},regularPath:"/en/features/data/file.html",relativePath:"en/features/data/file.md",key:"v-3bbc9c36",path:"/en/features/data/file.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:19},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:73},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:170},{level:3,title:"file.move(OBJECT)",slug:"file-move-object",normalizedTitle:"file.move(object)",charIndex:195},{level:3,title:"file.copy(OBJECT)",slug:"file-copy-object",normalizedTitle:"file.copy(object)",charIndex:1278},{level:3,title:"file.list(OBJECT)",slug:"file-list-object",normalizedTitle:"file.list(object)",charIndex:2292},{level:3,title:"file.get(OBJECT)",slug:"file-get-object",normalizedTitle:"file.get(object)",charIndex:3726},{level:3,title:"file.delete(OBJECT)",slug:"file-delete-object",normalizedTitle:"file.delete(object)",charIndex:5559},{level:3,title:"file.writeText(OBJECT)",slug:"file-writetext-object",normalizedTitle:"file.writetext(object)",charIndex:6402},{level:3,title:"file.writeArrayBuffer(OBJECT)",slug:"file-writearraybuffer-object",normalizedTitle:"file.writearraybuffer(object)",charIndex:7594},{level:3,title:"file.readText(OBJECT)",slug:"file-readtext-object",normalizedTitle:"file.readtext(object)",charIndex:8984},{level:3,title:"file.readArrayBuffer(OBJECT)",slug:"file-readarraybuffer-object",normalizedTitle:"file.readarraybuffer(object)",charIndex:9947},{level:3,title:"file.access(OBJECT)",slug:"file-access-object",normalizedTitle:"file.access(object)",charIndex:11186},{level:3,title:"file.mkdir(OBJECT)",slug:"file-mkdir-object",normalizedTitle:"file.mkdir(object)",charIndex:11871},{level:3,title:"file.rmdir(OBJECT)",slug:"file-rmdir-object",normalizedTitle:"file.rmdir(object)",charIndex:12780}],headersStr:"Interface Declaration Import Module Interface Definition file.move(OBJECT) file.copy(OBJECT) file.list(OBJECT) file.get(OBJECT) file.delete(OBJECT) file.writeText(OBJECT) file.writeArrayBuffer(OBJECT) file.readText(OBJECT) file.readArrayBuffer(OBJECT) file.access(OBJECT) file.mkdir(OBJECT) file.rmdir(OBJECT)",content:"# File Storage\n\n\n# Interface Declaration\n\n{ \"name\": \"system.file\" }\n\n\n\n# Import Module\n\nimport file from '@system.file' \n// or \nconst file = require('@system.file')\n\n\n\n# Interface Definition\n\n\n# file.move(OBJECT)\n\nMoves a source file to a specified location. For URI descriptions used in the interface, refer to File Organization.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsrcUri      String     Yes        URI of the source file. Cannot be an app resource path or a\n                                  tmp-type URI.\ndstUri      String     Yes        URI of the destination file. Cannot be an app resource path\n                                  or a tmp-type URI.\nsuccess     Function   No         Success callback, returns the URI of the destination file.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.move({\n  srcUri: 'internal://cache/path/to/file',\n  dstUri: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`move success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.copy(OBJECT)\n\nCopies a source file and stores it in a specified location. For URI descriptions used in the interface, refer to File Organization.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsrcUri      String     Yes        URI of the source file.\ndstUri      String     Yes        URI of the destination file. Cannot be an app resource path\n                                  or a tmp-type URI.\nsuccess     Function   No         Success callback, returns the URI of the destination file.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.copy({\n  srcUri: 'internal://cache/path/to/file',\n  dstUri: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`copy success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.list(OBJECT)\n\nGets a list of files in a specified directory. For URI descriptions used in the interface, refer to File Organization.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        Directory URI.\nsuccess     Function   No         Success callback, returns {fileList:[{uri:'file1',\n                                  lastModifiedTime:1234456, length:123456} ...]}\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Return Values of success:\n\nPARAMETER   TYPE    DESCRIPTION\nfileList    Array   List of files, each in the format {uri:'file1',\n                    lastModifiedTime:1234456, length:123456}\n\n# Metadata for Each File:\n\nPARAMETER          TYPE     DESCRIPTION\nuri                String   URI of the file, which can be accessed by other components\n                            or features.\nlength             Number   File size in bytes.\nlastModifiedTime   Number   Timestamp of when the file was saved, in milliseconds from\n                            1970/01/01 00:00:00 GMT.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.list({\n  uri: 'internal://files/movies/',\n  success: function(data) {\n    console.log(data.fileList)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.get(OBJECT)\n\nGets file information for a local file. For URI descriptions used in the interface, refer to File Organization.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        URI of the file. Cannot be an app resource path or a\n                                  tmp-type URI.\nrecursive   Boolean    No         Whether to recursively get the file list in subdirectories.\n                                  Default is false.\nsuccess     Function   No         Success callback, returns {uri:'file1', length:123456,\n                                  lastModifiedTime:1233456}\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Return Values of success:\n\nPARAMETER          TYPE     DESCRIPTION\nuri                String   URI of the file, which can be accessed by other components\n                            or features.\nlength             Number   File size in bytes. Returns 0 when type = dir.\nlastModifiedTime   Number   Timestamp of when the file was saved, in milliseconds from\n                            1970/01/01 08:00:00.\ntype               String   File type: dir for directory, file for file.\nsubFiles           Array    When type = dir, returns the list of files in the directory.\n                            When recursive is true, also returns file information in\n                            subdirectories.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.get({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log(data.uri)\n    console.log(data.length)\n    console.log(data.lastModifiedTime)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.delete(OBJECT)\n\nDeletes a locally stored file. For URI descriptions used in the interface, refer to File Organization.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        URI of the file to be deleted. Cannot be an app resource\n                                  path or a tmp-type URI.\nsuccess     Function   No         Success callback.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.delete({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writeText(OBJECT)\n\nWrites text to a file.\n\nWARNING\n\nWhen using file write interfaces, ensure to clean up unused files promptly, especially on IoT devices with limited memory, to avoid memory overload and application crashes.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        Local file path. Does not support resource file paths or tmp\n                                  partitions. Creates the file if it does not exist.\ntext        String     Yes        String to be written.\nencoding    String     No         Encoding format, default is UTF-8.\nappend      Boolean    No         Whether to append, default is false.\nsuccess     Function   No         Success callback.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.writeText({\n  uri: 'internal://files/work/demo.txt',\n  text: 'test',\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writeArrayBuffer(OBJECT)\n\nWrites a Buffer to a file.\n\nWARNING\n\nWhen using file write interfaces, ensure to clean up unused files promptly, especially on IoT devices with limited memory, to avoid memory overload and application crashes.\n\n# Parameters:\n\nPARAMETER   TYPE         REQUIRED   DESCRIPTION\nuri         String       Yes        Local file path. Does not support resource file paths or tmp\n                                    partitions. Creates the file if it does not exist.\nbuffer      Uint8Array   Yes        Buffer to be written.\nposition    Number       No         Offset from the start of the file where data begins to be\n                                    written. Default is 0.\nappend      Boolean      No         Whether to append, default is false. When true, the position\n                                    parameter is invalid.\nsuccess     Function     No         Success callback.\nfail        Function     No         Failure callback.\ncomplete    Function     No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.writeArrayBuffer({\n  uri: 'internal://files/work/demo',\n  buffer: buffer,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readText(OBJECT)\n\nReads text from a file.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        Local file path. Supports app resource paths, e.g.,\n                                  '/Common/demo.txt'.\nencoding    String     No         Encoding format, default is UTF-8.\nsuccess     Function   No         Success callback.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Return Values of success:\n\nPARAMETER   TYPE     DESCRIPTION\ntext        String   The read text.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n301          File does not exist\n\n# Example:\n\nfile.readText({\n  uri: 'internal://files/work/demo.txt',\n  success: function(data) {\n    console.log('text: ' + data.text)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readArrayBuffer(OBJECT)\n\nReads a Buffer from a file.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        Local file path. Supports app resource paths, e.g.,\n                                  '/Common/demo.txt'.\nposition    Number     No         Starting position for reading. Default is the start of the\n                                  file.\nlength      Number     No         Length to read. If not specified, reads to the end of the\n                                  file.\nsuccess     Function   No         Success callback.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Return Values of success:\n\nPARAMETER   TYPE         DESCRIPTION\nbuffer      Uint8Array   The read file content.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n301          File does not exist\n\n# Example:\n\nfile.readArrayBuffer({\n  uri: 'internal://files/work/demo',\n  position: 100,\n  length: 100,\n  success: function(data) {\n    console.log('buffer.length: ' + data.buffer.length)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.access(OBJECT)\n\nChecks if a file or directory exists.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        URI of the directory or file.\nsuccess     Function   No         Success callback.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.access({\n  uri: 'internal://files/test',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.mkdir(OBJECT)\n\nCreates a directory.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        URI of the directory. Cannot be an app resource path or a\n                                  tmp-type URI.\nrecursive   Boolean    No         Whether to recursively create parent directories before\n                                  creating this directory. Default is false.\nsuccess     Function   No         Success callback.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.mkdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.rmdir(OBJECT)\n\nDeletes a directory.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nuri         String     Yes        URI of the directory. Cannot be an app resource path or a\n                                  tmp-type URI.\nrecursive   Boolean    No         Whether to recursively delete subfiles and subdirectories.\n                                  Default is false.\nsuccess     Function   No         Success callback.\nfail        Function   No         Failure callback.\ncomplete    Function   No         Callback after execution ends.\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nfile.rmdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# file storage\n\n\n# interface declaration\n\n{ \"name\": \"system.file\" }\n\n\n\n# import module\n\nimport file from '@system.file' \n// or \nconst file = require('@system.file')\n\n\n\n# interface definition\n\n\n# file.move(object)\n\nmoves a source file to a specified location. for uri descriptions used in the interface, refer to file organization.\n\n# parameters:\n\nparameter   type       required   description\nsrcuri      string     yes        uri of the source file. cannot be an app resource path or a\n                                  tmp-type uri.\ndsturi      string     yes        uri of the destination file. cannot be an app resource path\n                                  or a tmp-type uri.\nsuccess     function   no         success callback, returns the uri of the destination file.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.move({\n  srcuri: 'internal://cache/path/to/file',\n  dsturi: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`move success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.copy(object)\n\ncopies a source file and stores it in a specified location. for uri descriptions used in the interface, refer to file organization.\n\n# parameters:\n\nparameter   type       required   description\nsrcuri      string     yes        uri of the source file.\ndsturi      string     yes        uri of the destination file. cannot be an app resource path\n                                  or a tmp-type uri.\nsuccess     function   no         success callback, returns the uri of the destination file.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.copy({\n  srcuri: 'internal://cache/path/to/file',\n  dsturi: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`copy success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.list(object)\n\ngets a list of files in a specified directory. for uri descriptions used in the interface, refer to file organization.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        directory uri.\nsuccess     function   no         success callback, returns {filelist:[{uri:'file1',\n                                  lastmodifiedtime:1234456, length:123456} ...]}\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# return values of success:\n\nparameter   type    description\nfilelist    array   list of files, each in the format {uri:'file1',\n                    lastmodifiedtime:1234456, length:123456}\n\n# metadata for each file:\n\nparameter          type     description\nuri                string   uri of the file, which can be accessed by other components\n                            or features.\nlength             number   file size in bytes.\nlastmodifiedtime   number   timestamp of when the file was saved, in milliseconds from\n                            1970/01/01 00:00:00 gmt.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.list({\n  uri: 'internal://files/movies/',\n  success: function(data) {\n    console.log(data.filelist)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.get(object)\n\ngets file information for a local file. for uri descriptions used in the interface, refer to file organization.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        uri of the file. cannot be an app resource path or a\n                                  tmp-type uri.\nrecursive   boolean    no         whether to recursively get the file list in subdirectories.\n                                  default is false.\nsuccess     function   no         success callback, returns {uri:'file1', length:123456,\n                                  lastmodifiedtime:1233456}\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# return values of success:\n\nparameter          type     description\nuri                string   uri of the file, which can be accessed by other components\n                            or features.\nlength             number   file size in bytes. returns 0 when type = dir.\nlastmodifiedtime   number   timestamp of when the file was saved, in milliseconds from\n                            1970/01/01 08:00:00.\ntype               string   file type: dir for directory, file for file.\nsubfiles           array    when type = dir, returns the list of files in the directory.\n                            when recursive is true, also returns file information in\n                            subdirectories.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.get({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log(data.uri)\n    console.log(data.length)\n    console.log(data.lastmodifiedtime)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.delete(object)\n\ndeletes a locally stored file. for uri descriptions used in the interface, refer to file organization.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        uri of the file to be deleted. cannot be an app resource\n                                  path or a tmp-type uri.\nsuccess     function   no         success callback.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.delete({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writetext(object)\n\nwrites text to a file.\n\nwarning\n\nwhen using file write interfaces, ensure to clean up unused files promptly, especially on iot devices with limited memory, to avoid memory overload and application crashes.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        local file path. does not support resource file paths or tmp\n                                  partitions. creates the file if it does not exist.\ntext        string     yes        string to be written.\nencoding    string     no         encoding format, default is utf-8.\nappend      boolean    no         whether to append, default is false.\nsuccess     function   no         success callback.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.writetext({\n  uri: 'internal://files/work/demo.txt',\n  text: 'test',\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writearraybuffer(object)\n\nwrites a buffer to a file.\n\nwarning\n\nwhen using file write interfaces, ensure to clean up unused files promptly, especially on iot devices with limited memory, to avoid memory overload and application crashes.\n\n# parameters:\n\nparameter   type         required   description\nuri         string       yes        local file path. does not support resource file paths or tmp\n                                    partitions. creates the file if it does not exist.\nbuffer      uint8array   yes        buffer to be written.\nposition    number       no         offset from the start of the file where data begins to be\n                                    written. default is 0.\nappend      boolean      no         whether to append, default is false. when true, the position\n                                    parameter is invalid.\nsuccess     function     no         success callback.\nfail        function     no         failure callback.\ncomplete    function     no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.writearraybuffer({\n  uri: 'internal://files/work/demo',\n  buffer: buffer,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readtext(object)\n\nreads text from a file.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        local file path. supports app resource paths, e.g.,\n                                  '/common/demo.txt'.\nencoding    string     no         encoding format, default is utf-8.\nsuccess     function   no         success callback.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# return values of success:\n\nparameter   type     description\ntext        string   the read text.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n301          file does not exist\n\n# example:\n\nfile.readtext({\n  uri: 'internal://files/work/demo.txt',\n  success: function(data) {\n    console.log('text: ' + data.text)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readarraybuffer(object)\n\nreads a buffer from a file.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        local file path. supports app resource paths, e.g.,\n                                  '/common/demo.txt'.\nposition    number     no         starting position for reading. default is the start of the\n                                  file.\nlength      number     no         length to read. if not specified, reads to the end of the\n                                  file.\nsuccess     function   no         success callback.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# return values of success:\n\nparameter   type         description\nbuffer      uint8array   the read file content.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n301          file does not exist\n\n# example:\n\nfile.readarraybuffer({\n  uri: 'internal://files/work/demo',\n  position: 100,\n  length: 100,\n  success: function(data) {\n    console.log('buffer.length: ' + data.buffer.length)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.access(object)\n\nchecks if a file or directory exists.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        uri of the directory or file.\nsuccess     function   no         success callback.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.access({\n  uri: 'internal://files/test',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.mkdir(object)\n\ncreates a directory.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        uri of the directory. cannot be an app resource path or a\n                                  tmp-type uri.\nrecursive   boolean    no         whether to recursively create parent directories before\n                                  creating this directory. default is false.\nsuccess     function   no         success callback.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.mkdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.rmdir(object)\n\ndeletes a directory.\n\n# parameters:\n\nparameter   type       required   description\nuri         string     yes        uri of the directory. cannot be an app resource path or a\n                                  tmp-type uri.\nrecursive   boolean    no         whether to recursively delete subfiles and subdirectories.\n                                  default is false.\nsuccess     function   no         success callback.\nfail        function   no         failure callback.\ncomplete    function   no         callback after execution ends.\n\n# error codes returned by fail:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nfile.rmdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{}},{title:"Network Access",frontmatter:{},regularPath:"/en/features/network/",relativePath:"en/features/network/README.md",key:"v-c893ac02",path:"/en/features/network/",headersStr:null,content:"# Network Access\n\nProvides the ability to communicate between remote data requests and locally Bluetooth-connected devices.\n\n * Data Request\n * Device Communication\n * Download\n * Upload",normalizedContent:"# network access\n\nprovides the ability to communicate between remote data requests and locally bluetooth-connected devices.\n\n * data request\n * device communication\n * download\n * upload",charsets:{}},{title:"Upload",frontmatter:{},regularPath:"/en/features/network/uploadtask.html",relativePath:"en/features/network/uploadtask.md",key:"v-0aa6e348",path:"/en/features/network/uploadtask.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:13},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:73},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:194},{level:3,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:219},{level:3,title:"UploadTask uploadtask.uploadFile(OBJECT)",slug:"uploadtask-uploadtask-uploadfile-object",normalizedTitle:"uploadtask uploadtask.uploadfile(object)",charIndex:231},{level:2,title:"Methods",slug:"methods-2",normalizedTitle:"methods",charIndex:219},{level:3,title:"UploadTask.abort()",slug:"uploadtask-abort",normalizedTitle:"uploadtask.abort()",charIndex:1750},{level:3,title:"UploadTask.onProgressUpdate(callback)",slug:"uploadtask-onprogressupdate-callback",normalizedTitle:"uploadtask.onprogressupdate(callback)",charIndex:1802},{level:3,title:"UploadTask.offProgressUpdate(function callback)",slug:"uploadtask-offprogressupdate-function-callback",normalizedTitle:"uploadtask.offprogressupdate(function callback)",charIndex:2348},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:3832}],headersStr:"Interface Declaration Import Module Interface Definition Methods UploadTask uploadtask.uploadFile(OBJECT) Methods UploadTask.abort() UploadTask.onProgressUpdate(callback) UploadTask.offProgressUpdate(function callback) Support Details",content:'# Upload\n\n\n# Interface Declaration\n\n{ "name": "system.uploadtask" }\n\n\n\n# Import Module\n\nimport uploadtask from \'@system.uploadtask\' \n// or \nconst uploadtask = require(\'@system.uploadtask\')\n\n\n\n# Interface Definition\n\n\n# Methods\n\n\n# UploadTask uploadtask.uploadFile(OBJECT)\n\nCreates an upload request. Each successful call to uploadtask.uploadFile returns an UploadTask instance for the current request.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\nurl              String     Yes        Developer server interface address\nfilePath         String     Yes        Path to the file resource to upload (local path)\nname             String     Yes        Key corresponding to the file. The developer can use this\n                                       key to obtain the binary content of the file on the server\n                                       side.\nheader           Object     No         Request header. All its properties will be set in the header\n                                       part of the request.\nformData         Object     No         Additional form data in the HTTP request\ntimeout          Number     No         Timeout duration in milliseconds\nsuccess          Function   No         Callback function for successful return\nfail             Function   No         Callback function for failure\ncomplete         Function   No         Callback function for completion (called on both success and\n                                       failure)\n\n# success Return Value:\n\nPARAMETER NAME   TYPE      DESCRIPTION\nstatusCode       Integer   Server status code\ndata             String    Data returned by the developer server\nheaders          Object    All headers from the server response\n\n\n# UploadTask\n\n\n# Methods\n\n\n# UploadTask.abort()\n\nInterrupts the upload task.\n\n\n# UploadTask.onProgressUpdate(callback)\n\nListens for upload progress change events.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\ncallback         Function   Yes        Callback function for upload progress change events\n\n# callback Return Value:\n\nPARAMETER NAME             TYPE     DESCRIPTION\nprogress                   Number   Upload progress percentage\ntotalBytesSent             Number   Length of data already uploaded, in Bytes\ntotalBytesExpectedToSend   Number   Expected total length of data to upload, in Bytes\n\n\n# UploadTask.offProgressUpdate(function callback)\n\nCancels listening for upload progress change events. callback is optional. If not provided, all upload progress change events listened to via onProgressUpdate will be canceled.\n\n# Example:\n\nconst retUploadTask = uploadtask.uploadFile({\n  url: \'http://www.example.com\',\n  filePath: "internal://mass/download/test.png",\n  name: "testImg",\n  success: function(res){\n    console.log("Upload success.resp = " + JSON.stringify(res))\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errMsg = ${data)}`)\n    console.log(`handling fail, errCode = ${code}`)\n  }\n})\n// Interrupt the request task\nretUploadTask.abort()\n\n// Listen for upload progress events\nretUploadTask.onProgressUpdate(res => {\n  console.log(\n    `listening upload progress update event, progressUpdate data = ${JSON.stringify(res)}`\n  )\n})\n\n// Cancel listening for upload progress events\nretUploadTask.offProgressUpdate()\n\n\nCancel a specific upload progress event\n\nfunction cb(res) {\n  console.log(\n    `listening for upload progress update event 1, progressUpdate data = ${JSON.stringify(\n      res\n    )}`\n  )\n}\n\n// This listener will be canceled\nretUploadTask.onProgressUpdate(cb)\n\n// event2 listener remains valid and will not be canceled\nretUploadTask.onProgressUpdate((res) => {\n  console.log(\n    `listening for upload progress update event 2, progressUpdate data = ${JSON.stringify(\n      res\n    )}`\n  )\n})\n\nretUploadTask.offProgressUpdate(cb)\n\n\n\n# Support Details\n\nDEVICE PRODUCT                                 DESCRIPTION\nXiaomi S1 Pro Sports Health Watch              Not supported\nXiaomi Band 8 Pro                              Not supported\nXiaomi Watch S3                                Supported\nRedmi Watch 4                                  Not supported\nXiaomi Wrist ECG and Blood Pressure Recorder   Not supported\nXiaomi Watch S4                                Supported\nREDMI Watch 5                                  Supported',normalizedContent:'# upload\n\n\n# interface declaration\n\n{ "name": "system.uploadtask" }\n\n\n\n# import module\n\nimport uploadtask from \'@system.uploadtask\' \n// or \nconst uploadtask = require(\'@system.uploadtask\')\n\n\n\n# interface definition\n\n\n# methods\n\n\n# uploadtask uploadtask.uploadfile(object)\n\ncreates an upload request. each successful call to uploadtask.uploadfile returns an uploadtask instance for the current request.\n\n# parameters:\n\nparameter name   type       required   description\nurl              string     yes        developer server interface address\nfilepath         string     yes        path to the file resource to upload (local path)\nname             string     yes        key corresponding to the file. the developer can use this\n                                       key to obtain the binary content of the file on the server\n                                       side.\nheader           object     no         request header. all its properties will be set in the header\n                                       part of the request.\nformdata         object     no         additional form data in the http request\ntimeout          number     no         timeout duration in milliseconds\nsuccess          function   no         callback function for successful return\nfail             function   no         callback function for failure\ncomplete         function   no         callback function for completion (called on both success and\n                                       failure)\n\n# success return value:\n\nparameter name   type      description\nstatuscode       integer   server status code\ndata             string    data returned by the developer server\nheaders          object    all headers from the server response\n\n\n# uploadtask\n\n\n# methods\n\n\n# uploadtask.abort()\n\ninterrupts the upload task.\n\n\n# uploadtask.onprogressupdate(callback)\n\nlistens for upload progress change events.\n\n# parameters:\n\nparameter name   type       required   description\ncallback         function   yes        callback function for upload progress change events\n\n# callback return value:\n\nparameter name             type     description\nprogress                   number   upload progress percentage\ntotalbytessent             number   length of data already uploaded, in bytes\ntotalbytesexpectedtosend   number   expected total length of data to upload, in bytes\n\n\n# uploadtask.offprogressupdate(function callback)\n\ncancels listening for upload progress change events. callback is optional. if not provided, all upload progress change events listened to via onprogressupdate will be canceled.\n\n# example:\n\nconst retuploadtask = uploadtask.uploadfile({\n  url: \'http://www.example.com\',\n  filepath: "internal://mass/download/test.png",\n  name: "testimg",\n  success: function(res){\n    console.log("upload success.resp = " + json.stringify(res))\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errmsg = ${data)}`)\n    console.log(`handling fail, errcode = ${code}`)\n  }\n})\n// interrupt the request task\nretuploadtask.abort()\n\n// listen for upload progress events\nretuploadtask.onprogressupdate(res => {\n  console.log(\n    `listening upload progress update event, progressupdate data = ${json.stringify(res)}`\n  )\n})\n\n// cancel listening for upload progress events\nretuploadtask.offprogressupdate()\n\n\ncancel a specific upload progress event\n\nfunction cb(res) {\n  console.log(\n    `listening for upload progress update event 1, progressupdate data = ${json.stringify(\n      res\n    )}`\n  )\n}\n\n// this listener will be canceled\nretuploadtask.onprogressupdate(cb)\n\n// event2 listener remains valid and will not be canceled\nretuploadtask.onprogressupdate((res) => {\n  console.log(\n    `listening for upload progress update event 2, progressupdate data = ${json.stringify(\n      res\n    )}`\n  )\n})\n\nretuploadtask.offprogressupdate(cb)\n\n\n\n# support details\n\ndevice product                                 description\nxiaomi s1 pro sports health watch              not supported\nxiaomi band 8 pro                              not supported\nxiaomi watch s3                                supported\nredmi watch 4                                  not supported\nxiaomi wrist ecg and blood pressure recorder   not supported\nxiaomi watch s4                                supported\nredmi watch 5                                  supported',charsets:{}},{title:"Data Request",frontmatter:{},regularPath:"/en/features/network/fetch.html",relativePath:"en/features/network/fetch.md",key:"v-646982b6",path:"/en/features/network/fetch.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:19},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:74},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:175},{level:3,title:"fetch.fetch(OBJECT)",slug:"fetch-fetch-object",normalizedTitle:"fetch.fetch(object)",charIndex:200},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:5675}],headersStr:"Interface Declaration Import Module Interface Definition fetch.fetch(OBJECT) Support Details",content:"# Data Request\n\n\n# Interface Declaration\n\n{ \"name\": \"system.fetch\" }\n\n\n\n# Import Module\n\nimport fetch from '@system.fetch' \n// or \nconst fetch = require('@system.fetch')\n\n\n\n# Interface Definition\n\n\n# fetch.fetch(OBJECT)\n\nFetch network data.\n\n# Parameters:\n\nPARAMETER NAME   TYPE                        REQUIRED   DESCRIPTION\nurl              String                      Yes        Resource URL\ndata             String/Object/ArrayBuffer   No         Request parameters, can be a string, or a JS object,\n                                                        arraybuffer object. Refer to the data and Content-Type\n                                                        relationship section\nheader           Object                      No         Request header, all its properties will be set to the\n                                                        request's header part. User-Agent setting example:\n                                                        {\"Accept-Encoding\": \"gzip, deflate\",\"Accept-Language\":\n                                                        \"zh-CN,en-US;q=0.8,en;q=0.6\"}\nmethod           String                      No         Default is GET, can be: OPTIONS, GET, HEAD, POST, PUT,\n                                                        DELETE, TRACE, CONNECT\nresponseType     String                      No         Supported return types are text, json, file, arraybuffer.\n                                                        Default is determined by the Content-Type in the server's\n                                                        response header. See success return value for details\nsuccess          Function                    No         Callback function for successful return\nfail             Function                    No         Callback function for failure, may fail due to permission\n                                                        issues\ncomplete         Function                    No         Callback function for completion (called whether successful\n                                                        or failed)\n\n# Relationship between data and Content-Type\n\nDATA          CONTENT-TYPE                                            DESCRIPTION\nString        Not set                                                 Content-Type defaults to text/plain, data value is used as\n                                                                      the request body\nString        Any Type                                                data value is used as the request body\nObject        Not set                                                 Content-Type defaults to application/x-www-form-urlencoded,\n                                                                      data is encoded and concatenated according to URL rules as\n                                                                      the request body\nObject        application/x-www-form-urlencoded                       data is encoded and concatenated according to URL rules as\n                                                                      the request body\nObject        Any type other than application/x-www-form-urlencoded   -\nArrayBuffer   Not set                                                 Content-Type defaults to application/octet-stream, data\n                                                                      value is used as the request body\nArrayBuffer   Any Type                                                data value is used as the request body\n\n# success Return Value:\n\nPARAMETER NAME   TYPE                         DESCRIPTION\ncode             Integer                      Server status code\ndata             String/Object /ArrayBuffer   Refer to the responseType and data relationship in success\n                                              section\nheaders          Object                       All headers from the server response\n\n# Relationship between responseType and data in success:\n\nRESPONSETYPE   DATA          DESCRIPTION\nNone           String        If the server's response header type is text/* or\n                             application/json, application/javascript, application/xml,\n                             the value is the text content; otherwise, it's the URI of a\n                             temporary file. For temporary image or video files, you can\n                             set the image to the image component\ntext           String        Returns plain text\njson           Object        Returns a JS object\nfile           String        Returns the URI of a temporary file\narraybuffer    ArrayBuffer   Returns an ArrayBuffer object\n\n# Example:\n\nfetch.fetch({\n  url: 'http://www.example.com',\n  responseType: 'text',\n  success: function(response) {\n    console.log(`the status code of the response: ${response.code}`)\n    console.log(`the data of the response: ${response.data}`)\n    console.log(\n      `the headers of the response: ${JSON.stringify(response.headers)}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errMsg = ${data}`)\n    console.log(`handling fail, errCode = ${code}`)\n  }\n})\n\n// We can also handle callbacks using promises\nfetch\n  .fetch({\n    url: 'http://www.example.com',\n    responseType: 'text'\n  })\n  .then(res => {\n    const result = res.data\n\n    console.log(`the status code of the response: ${result.code}`)\n    console.log(`the data of the response: ${result.data}`)\n    console.log(\n      `the headers of the response: ${JSON.stringify(result.headers)}`\n    )\n  })\n  .catch(error => {\n    console.log(`handling fail, errMsg = ${error.data}`)\n    console.log(`handling fail, errCode = ${error.code}`)\n  })\n\n\n\n# Support Details\n\nDEVICE PRODUCT                             DESCRIPTION\nXiaomi S1 Pro Sports Health Watch          Supported\nXiaomi Mi Band 8 Pro                       Not supported\nXiaomi Watch S3                            Supported\nRedmi Watch 4                              Not supported\nXiaomi Wrist ECG Blood Pressure Recorder   Not supported\nXiaomi Watch S4                            Supported\nREDMI Watch 5                              Supported",normalizedContent:"# data request\n\n\n# interface declaration\n\n{ \"name\": \"system.fetch\" }\n\n\n\n# import module\n\nimport fetch from '@system.fetch' \n// or \nconst fetch = require('@system.fetch')\n\n\n\n# interface definition\n\n\n# fetch.fetch(object)\n\nfetch network data.\n\n# parameters:\n\nparameter name   type                        required   description\nurl              string                      yes        resource url\ndata             string/object/arraybuffer   no         request parameters, can be a string, or a js object,\n                                                        arraybuffer object. refer to the data and content-type\n                                                        relationship section\nheader           object                      no         request header, all its properties will be set to the\n                                                        request's header part. user-agent setting example:\n                                                        {\"accept-encoding\": \"gzip, deflate\",\"accept-language\":\n                                                        \"zh-cn,en-us;q=0.8,en;q=0.6\"}\nmethod           string                      no         default is get, can be: options, get, head, post, put,\n                                                        delete, trace, connect\nresponsetype     string                      no         supported return types are text, json, file, arraybuffer.\n                                                        default is determined by the content-type in the server's\n                                                        response header. see success return value for details\nsuccess          function                    no         callback function for successful return\nfail             function                    no         callback function for failure, may fail due to permission\n                                                        issues\ncomplete         function                    no         callback function for completion (called whether successful\n                                                        or failed)\n\n# relationship between data and content-type\n\ndata          content-type                                            description\nstring        not set                                                 content-type defaults to text/plain, data value is used as\n                                                                      the request body\nstring        any type                                                data value is used as the request body\nobject        not set                                                 content-type defaults to application/x-www-form-urlencoded,\n                                                                      data is encoded and concatenated according to url rules as\n                                                                      the request body\nobject        application/x-www-form-urlencoded                       data is encoded and concatenated according to url rules as\n                                                                      the request body\nobject        any type other than application/x-www-form-urlencoded   -\narraybuffer   not set                                                 content-type defaults to application/octet-stream, data\n                                                                      value is used as the request body\narraybuffer   any type                                                data value is used as the request body\n\n# success return value:\n\nparameter name   type                         description\ncode             integer                      server status code\ndata             string/object /arraybuffer   refer to the responsetype and data relationship in success\n                                              section\nheaders          object                       all headers from the server response\n\n# relationship between responsetype and data in success:\n\nresponsetype   data          description\nnone           string        if the server's response header type is text/* or\n                             application/json, application/javascript, application/xml,\n                             the value is the text content; otherwise, it's the uri of a\n                             temporary file. for temporary image or video files, you can\n                             set the image to the image component\ntext           string        returns plain text\njson           object        returns a js object\nfile           string        returns the uri of a temporary file\narraybuffer    arraybuffer   returns an arraybuffer object\n\n# example:\n\nfetch.fetch({\n  url: 'http://www.example.com',\n  responsetype: 'text',\n  success: function(response) {\n    console.log(`the status code of the response: ${response.code}`)\n    console.log(`the data of the response: ${response.data}`)\n    console.log(\n      `the headers of the response: ${json.stringify(response.headers)}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errmsg = ${data}`)\n    console.log(`handling fail, errcode = ${code}`)\n  }\n})\n\n// we can also handle callbacks using promises\nfetch\n  .fetch({\n    url: 'http://www.example.com',\n    responsetype: 'text'\n  })\n  .then(res => {\n    const result = res.data\n\n    console.log(`the status code of the response: ${result.code}`)\n    console.log(`the data of the response: ${result.data}`)\n    console.log(\n      `the headers of the response: ${json.stringify(result.headers)}`\n    )\n  })\n  .catch(error => {\n    console.log(`handling fail, errmsg = ${error.data}`)\n    console.log(`handling fail, errcode = ${error.code}`)\n  })\n\n\n\n# support details\n\ndevice product                             description\nxiaomi s1 pro sports health watch          supported\nxiaomi mi band 8 pro                       not supported\nxiaomi watch s3                            supported\nredmi watch 4                              not supported\nxiaomi wrist ecg blood pressure recorder   not supported\nxiaomi watch s4                            supported\nredmi watch 5                              supported",charsets:{}},{title:"Others",frontmatter:{},regularPath:"/en/features/other/",relativePath:"en/features/other/README.md",key:"v-e58eed0a",path:"/en/features/other/",headersStr:null,content:"# Others\n\nOther abilities.\n\n * Audio\n * Prompt",normalizedContent:"# others\n\nother abilities.\n\n * audio\n * prompt",charsets:{}},{title:"Audio",frontmatter:{},regularPath:"/en/features/other/audio.html",relativePath:"en/features/other/audio.md",key:"v-3aefc694",path:"/en/features/other/audio.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:12},{level:2,title:"Importing the Module",slug:"importing-the-module",normalizedTitle:"importing the module",charIndex:67},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:175},{level:3,title:"audio.play()",slug:"audio-play",normalizedTitle:"audio.play()",charIndex:187},{level:3,title:"audio.pause()",slug:"audio-pause",normalizedTitle:"audio.pause()",charIndex:275},{level:3,title:"audio.stop()",slug:"audio-stop",normalizedTitle:"audio.stop()",charIndex:365},{level:3,title:"audio.getPlayState(OBJECT)",slug:"audio-getplaystate-object",normalizedTitle:"audio.getplaystate(object)",charIndex:489},{level:2,title:"Properties",slug:"properties",normalizedTitle:"properties",charIndex:1948},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:3919}],headersStr:"Interface Declaration Importing the Module Methods audio.play() audio.pause() audio.stop() audio.getPlayState(OBJECT) Properties Events",content:"# Audio\n\n\n# Interface Declaration\n\n{ \"name\": \"system.audio\" }\n\n\n\n# Importing the Module\n\nimport audio from '@system.audio' \n// or \nconst audio = require('@system.audio')\n\n\n\n# Methods\n\n\n# audio.play()\n\nStarts audio playback.\n\n# Parameters\n\nNone\n\n# Example:\n\naudio.play()\n\n\n\n# audio.pause()\n\nPauses audio playback.\n\n# Parameters\n\nNone\n\n# Example:\n\naudio.pause()\n\n\n\n# audio.stop()\n\nStops audio playback. Playback can be restarted with play.\n\n# Parameters\n\nNone\n\n# Example:\n\naudio.stop()\n\n\n\n# audio.getPlayState(OBJECT)\n\nRetrieves the current playback state data.\n\n# Parameters\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Completion callback\n\n# success Return Value:\n\nPARAMETER VALUE   TYPE     DESCRIPTION\nstate             String   Playback state: 'play', 'pause', 'stop'\nsrc               String   URI of the currently playing audio media; empty string when\n                           stopped\ncurrentTime       Number   Current progress of the audio in seconds; -1 when stopped\npercent           Number   Current playback progress percentage (0-100)\nautoplay          Boolen   Whether the audio is autoplaying\nloop              Boolen   Whether the audio is looping\nvolume            Number   Audio volume (default: system media volume; range:\n                           [0.0,1.0])\nmuted             Boolen   Whether the audio is muted\nduration          Number   Duration of the audio in seconds; NaN if unknown\n\n# Example:\n\naudio.getPlayState({\n  success: function(data) {\n    console.log(`handling success: state: ${data.state},src:${data.src},currentTime:${data.currentTime},autoplay:${data.autoplay},loop:${data.loop},volume: ${data.volume},muted:${data.muted},notificationVisible:${data.notificationVisible}`)\n  },\n  fail: function(data, code) {\n    console.log('handling fail, code=' + code)\n  }\n})\n\n\n\n# Properties\n\nNAME          TYPE                                                     READABLE   WRITABLE   REQUIRED   DESCRIPTION\nsrc           String                                                   Yes        Yes        Yes        URI of the audio media to play\ncurrentTime   Number                                                   Yes        Yes        No         Current progress of the audio in seconds; setting this\n                                                                                                        adjusts playback position\nduration      Number                                                   Yes        No         No         Duration of the audio in seconds; NaN if unknown\nautoplay      Boolean                                                  Yes        Yes        No         Whether the audio autoplays (default: false)\nloop          Boolean                                                  Yes        Yes        No         Whether the audio loops (default: false)\nvolume        Number                                                   Yes        Yes        No         Audio volume (default: system media volume; range:\n                                                                                                        [0.0,1.0])\nmuted         Boolean                                                  Yes        Yes        No         Whether the audio is muted (default: false)\nstreamType    String                                                   Yes        No         No         Audio stream type: 'music' (speaker) or 'voicecall'\n                                                                                                        (earpiece; not supported on watches/bands); default: 'music'\nmeta          Object<{title: string, artist: string, album: string}>   No         Yes        No         Audio metadata including title, artist, and album\n\n# Example:\n\n// let currentTime = audio.currentTime\naudio.currentTime = 5\n\n\n\n# Events\n\nNAME             DESCRIPTION\nplay             Triggered after play() is called or when autoplay is true.\n                 Passive trigger examples: 1. Bluetooth headset control to\n                 play audio\npause            Triggered after pause() is called. Passive trigger examples:\n                 1. Audio focus lost (e.g., incoming call); 2. Bluetooth\n                 headset control to pause audio\nstop             Triggered after stop() is called. Passive trigger example:\n                 1. Playing audio during a call\nloadeddata       Triggered when audio data is first loaded\nended            Triggered when playback ends\ndurationchange   Triggered when the duration changes\nerror            Triggered when a playback error occurs\n\n# Example:\n\naudio.onplay = function() {\n  console.log(`audio starts to play`)\n}\naudio.onplay = null\n",normalizedContent:"# audio\n\n\n# interface declaration\n\n{ \"name\": \"system.audio\" }\n\n\n\n# importing the module\n\nimport audio from '@system.audio' \n// or \nconst audio = require('@system.audio')\n\n\n\n# methods\n\n\n# audio.play()\n\nstarts audio playback.\n\n# parameters\n\nnone\n\n# example:\n\naudio.play()\n\n\n\n# audio.pause()\n\npauses audio playback.\n\n# parameters\n\nnone\n\n# example:\n\naudio.pause()\n\n\n\n# audio.stop()\n\nstops audio playback. playback can be restarted with play.\n\n# parameters\n\nnone\n\n# example:\n\naudio.stop()\n\n\n\n# audio.getplaystate(object)\n\nretrieves the current playback state data.\n\n# parameters\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         completion callback\n\n# success return value:\n\nparameter value   type     description\nstate             string   playback state: 'play', 'pause', 'stop'\nsrc               string   uri of the currently playing audio media; empty string when\n                           stopped\ncurrenttime       number   current progress of the audio in seconds; -1 when stopped\npercent           number   current playback progress percentage (0-100)\nautoplay          boolen   whether the audio is autoplaying\nloop              boolen   whether the audio is looping\nvolume            number   audio volume (default: system media volume; range:\n                           [0.0,1.0])\nmuted             boolen   whether the audio is muted\nduration          number   duration of the audio in seconds; nan if unknown\n\n# example:\n\naudio.getplaystate({\n  success: function(data) {\n    console.log(`handling success: state: ${data.state},src:${data.src},currenttime:${data.currenttime},autoplay:${data.autoplay},loop:${data.loop},volume: ${data.volume},muted:${data.muted},notificationvisible:${data.notificationvisible}`)\n  },\n  fail: function(data, code) {\n    console.log('handling fail, code=' + code)\n  }\n})\n\n\n\n# properties\n\nname          type                                                     readable   writable   required   description\nsrc           string                                                   yes        yes        yes        uri of the audio media to play\ncurrenttime   number                                                   yes        yes        no         current progress of the audio in seconds; setting this\n                                                                                                        adjusts playback position\nduration      number                                                   yes        no         no         duration of the audio in seconds; nan if unknown\nautoplay      boolean                                                  yes        yes        no         whether the audio autoplays (default: false)\nloop          boolean                                                  yes        yes        no         whether the audio loops (default: false)\nvolume        number                                                   yes        yes        no         audio volume (default: system media volume; range:\n                                                                                                        [0.0,1.0])\nmuted         boolean                                                  yes        yes        no         whether the audio is muted (default: false)\nstreamtype    string                                                   yes        no         no         audio stream type: 'music' (speaker) or 'voicecall'\n                                                                                                        (earpiece; not supported on watches/bands); default: 'music'\nmeta          object<{title: string, artist: string, album: string}>   no         yes        no         audio metadata including title, artist, and album\n\n# example:\n\n// let currenttime = audio.currenttime\naudio.currenttime = 5\n\n\n\n# events\n\nname             description\nplay             triggered after play() is called or when autoplay is true.\n                 passive trigger examples: 1. bluetooth headset control to\n                 play audio\npause            triggered after pause() is called. passive trigger examples:\n                 1. audio focus lost (e.g., incoming call); 2. bluetooth\n                 headset control to pause audio\nstop             triggered after stop() is called. passive trigger example:\n                 1. playing audio during a call\nloadeddata       triggered when audio data is first loaded\nended            triggered when playback ends\ndurationchange   triggered when the duration changes\nerror            triggered when a playback error occurs\n\n# example:\n\naudio.onplay = function() {\n  console.log(`audio starts to play`)\n}\naudio.onplay = null\n",charsets:{}},{title:"Popup",frontmatter:{},regularPath:"/en/features/other/prompt.html",relativePath:"en/features/other/prompt.md",key:"v-8a8f96b8",path:"/en/features/other/prompt.html",headers:[{level:2,title:"Interface declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:12},{level:2,title:"Import module",slug:"import-module",normalizedTitle:"import module",charIndex:68},{level:2,title:"Interface definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:173},{level:3,title:"prompt.showToast(OBJECT)",slug:"prompt-showtoast-object",normalizedTitle:"prompt.showtoast(object)",charIndex:198}],headersStr:"Interface declaration Import module Interface definition prompt.showToast(OBJECT)",content:"# Popup\n\n\n# Interface declaration\n\n{ \"name\": \"system.prompt\" }\n\n\n\n# Import module\n\nimport prompt from '@system.prompt' \n// or \nconst prompt = require('@system.prompt')\n\n\n\n# Interface definition\n\n\n# prompt.showToast(OBJECT)\n\nDisplays Toast prompt information\n\n# Parameters\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\nmessage          String   Yes        The text information to be displayed\nduration         Number   No         The display duration in milliseconds. The default value is\n                                     1500. The recommended range is 1500-10000.\n\n# Example:\n\nprompt.showToast({\n  message: 'Message Info',\n  duration: 2000\n})\n",normalizedContent:"# popup\n\n\n# interface declaration\n\n{ \"name\": \"system.prompt\" }\n\n\n\n# import module\n\nimport prompt from '@system.prompt' \n// or \nconst prompt = require('@system.prompt')\n\n\n\n# interface definition\n\n\n# prompt.showtoast(object)\n\ndisplays toast prompt information\n\n# parameters\n\nparameter name   type     required   description\nmessage          string   yes        the text information to be displayed\nduration         number   no         the display duration in milliseconds. the default value is\n                                     1500. the recommended range is 1500-10000.\n\n# example:\n\nprompt.showtoast({\n  message: 'message info',\n  duration: 2000\n})\n",charsets:{}},{title:"Permission Definition",frontmatter:{},regularPath:"/en/features/permission.html",relativePath:"en/features/permission.md",key:"v-3b708a68",path:"/en/features/permission.html",headersStr:null,content:"# Permission Definition\n\nCertain interfaces require users to grant corresponding permissions during the call, such as the recording function. Therefore, a permission declaration is needed before use.",normalizedContent:"# permission definition\n\ncertain interfaces require users to grant corresponding permissions during the call, such as the recording function. therefore, a permission declaration is needed before use.",charsets:{}},{title:"Security",frontmatter:{},regularPath:"/en/features/security/",relativePath:"en/features/security/README.md",key:"v-aaedfe56",path:"/en/features/security/",headersStr:null,content:"# Security\n\nProvides security and encryption-related capabilities.\n\n * Cryptographic-Algorithm",normalizedContent:"# security\n\nprovides security and encryption-related capabilities.\n\n * cryptographic-algorithm",charsets:{}},{title:"Device Communication Interconnect",frontmatter:{},regularPath:"/en/features/network/interconnect.html",relativePath:"en/features/network/interconnect.md",key:"v-853d4ce8",path:"/en/features/network/interconnect.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:450},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:512},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:639},{level:3,title:"interconnect.instance()",slug:"interconnect-instance",normalizedTitle:"interconnect.instance()",charIndex:664},{level:3,title:"connect.getReadyState(OBJECT)",slug:"connect-getreadystate-object",normalizedTitle:"connect.getreadystate(object)",charIndex:985},{level:3,title:"connect.diagnosis(OBJECT)",slug:"connect-diagnosis-object",normalizedTitle:"connect.diagnosis(object)",charIndex:1940},{level:3,title:"connect.send(OBJECT)",slug:"connect-send-object",normalizedTitle:"connect.send(object)",charIndex:3317},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:4129},{level:3,title:"connect.onmessage",slug:"connect-onmessage",normalizedTitle:"connect.onmessage",charIndex:4140},{level:3,title:"connect.onopen",slug:"connect-onopen",normalizedTitle:"connect.onopen",charIndex:4387},{level:3,title:"connect.onclose",slug:"connect-onclose",normalizedTitle:"connect.onclose",charIndex:4696},{level:3,title:"connect.onerror",slug:"connect-onerror",normalizedTitle:"connect.onerror",charIndex:5060},{level:2,title:"Development Considerations",slug:"development-considerations",normalizedTitle:"development considerations",charIndex:5596}],headersStr:"Interface Declaration Import Module Interface Definition interconnect.instance() connect.getReadyState(OBJECT) connect.diagnosis(OBJECT) connect.send(OBJECT) Events connect.onmessage connect.onopen connect.onclose connect.onerror Development Considerations",content:"# Device Communication Interconnect\n\nUsed for communication with the paired mobile app and for sending and receiving data from the mobile app. The communication connection will be automatically established. There is no need to manage the creation and destruction of connections within the app, but callback functions can be registered to receive notifications about connection status changes for appropriate handling, such as notifying the user.\n\n\n# Interface Declaration\n\n{ \"name\": \"system.interconnect\" }\n\n\n\n# Import Module\n\nimport interconnect from '@system.interconnect'\n// or\nconst interconnect = require('@system.interconnect')\n\n\n\n# Interface Definition\n\n\n# interconnect.instance()\n\nObtains a connection object that exists as a singleton in the app. Subsequent data sending and receiving are based on this connection object.\n\n# Parameters:\n\nNone\n\n# Return Value:\n\nAn interconnect connection instance, the connect object.\n\n# Example:\n\nconst connect = interconnect.instance()\n\n\n\n# connect.getReadyState(OBJECT)\n\nObtains the connection status of the app.\n\n# OBJECT Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\n\n# success Return Value:\n\nPROPERTY VALUE   TYPE     DESCRIPTION\nstatus           Number   1: Connected successfully, 2: Connection disconnected\n\n# fail Return Value:\n\nPARAMETER VALUE   TYPE     DESCRIPTION\ndata              String   Error message\ncode              Number   Error code\n\n# Error Code Descriptions:\n\nSupports common error codes\n\nERROR CODE   DESCRIPTION\n1006         Connection disconnected\n\n# Example:\n\nconnect.getReadyState({\n  success: (data) => {\n    if (data.status === 1) {\n      console.log('Connected successfully')\n    } else if (data.status === 2) {\n      console.log('Connection failed')\n    }\n  },\n  fail: (data, code) => {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# connect.diagnosis(OBJECT)\n\nDiagnoses the connection between the watch app and the counterpart app. Returns \"ok\" if the connection is successful, or the reason for failure if the connection fails. If a connection is in progress when called, it waits for the connection to end before returning the final status.\n\n# Object Parameters:\n\nPROPERTY   TYPE       REQUIRED   DESCRIPTION\ntimeout    Number     No         Timeout duration for waiting for diagnosis, in milliseconds\n                                 Default value: 10000ms\nsuccess    Function   No         Success callback\nfail       Function   No         Failure callback\n\n# success Return Value:\n\nPROPERTY VALUE   TYPE     DESCRIPTION\nstatus           Number   0: OK, connection successful\n                          204: CONNECT_TIMEOUT, connection timeout\n                          1001: APP_UNINSTALLED, counterpart app not installed\n                          1000: OTHERS, other connection errors\n\n# fail Return Value:\n\nPARAMETER VALUE   TYPE     DESCRIPTION\ndata              String   Error message\ncode              Number   Error code\n\n# Error Code Descriptions:\n\nSupports common error codes\n\n# Example:\n\nconnect.diagnosis({\n  success: function (data) {\n    console.log(`handling success, version = ${data.status}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# connect.send(OBJECT)\n\nSends data to the mobile app.\n\n# Object Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\ndata        Object     No         Data to be sent\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\n\n# success Return Value:\n\nNone\n\n# fail Return Value:\n\nPARAMETER VALUE   TYPE     DESCRIPTION\ndata              String   Error message\ncode              Number   Error code\n\n# Error Code Descriptions:\n\nSupports common error codes\n\nERROR CODE   DESCRIPTION\n204          Connection timeout\n1006         Connection disconnected\n\n# Example:\n\nconnect.send({\n  data: {},\n  success: ()=>{\n    console.log(`handling success`)\n  },\n  fail: (data, code)=> {\n    console.log(`handling fail, errMsg = ${data.data}, errCode = ${data.code}`)\n  }\n})\n\n\n\n# Events\n\n\n# connect.onmessage\n\nReceives data from the mobile app.\n\n# Callback Parameters:\n\nPARAMETER   TYPE     DESCRIPTION\ndata        String   Received data\n\n# Example:\n\nconnect.onmessage = (data) => {\n  console.log(`received message: ${data.data}`)\n}\n\n\n\n# connect.onopen\n\nCallback function when the connection is opened.\n\n# Callback Parameters:\n\nPARAMETER       TYPE      DESCRIPTION\nisReconnected   Boolean   Whether it is a reconnection\n\n# Example:\n\nconnect.onOpen = function (data) {\n  console.log('connection opened isReconnected: ', data.isReconnected)\n}\n\n\n\n# connect.onclose\n\nCallback function when the connection is closed.\n\n# Callback Parameters:\n\nPARAMETER   TYPE     DESCRIPTION\ncode        Number   Connection closure status code\ndata        String   Data returned upon connection closure\n\n# Example:\n\nconnect.onclose = (data) => {\n  console.log(`connection closed, reason = ${data.data}, code = ${data.code}`)\n}\n\n\n\n# connect.onerror\n\nCallback function when a connection error occurs.\n\n# Callback Parameters:\n\nPARAMETER   TYPE     DESCRIPTION\ncode        Number   Error code, see error code descriptions\ndata        String   Error message\n\n# Error Code Descriptions:\n\nSupports common error codes\n\nERROR CODE   DESCRIPTION\n1000         Unknown error\n1001         Mobile app not installed\n1006         Connection disconnected\n\n# Example:\n\nconnect.onerror = (data)=> {\n  console.log(`connection error, errMsg = ${data.data}, errCode = ${data.code}`)\n}\n\n\n\n# Development Considerations\n\nFor interconnect communication, ensure that the package names and signatures of both the Quick App and the Android version of the third-party app are consistent.\n\n * Ensure that the package field in the Quick App's manifest.json matches the package name of the third-party Android app to be integrated.\n * The Quick App signature must use the signature of the third-party Android app. The certificate and private key can be extracted from the .jks file as follows:\n\n 1. Convert the jks to p12 by executing the following command. After entering the corresponding password, a p12 format file will be generated in the same directory.\n\nkeytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype jks -deststoretype pkcs12\n\n\n 2. Convert the p12 to pem by executing the following command. After entering the password set for the p12 file in the previous step, a pem format file will be generated in the same directory.\n\nopenssl pkcs12 -nodes -in keystore.p12 -out keystore.pem\n\n\n 3. Copy the private key and certificate from the pem format file:\n    Copy the content from -----BEGIN PRIVATE KEY----- to -----END PRIVATE KEY----- into private.pem.\n    Copy the content from -----BEGIN CERTIFICATE----- to -----END CERTIFICATE----- into certificate.pem.\n\n * If OpenSSL is not installed locally or a simpler operation process is desired, we provide an online signature generation tool. This tool is a web application written in WebAssembly that can directly generate pem format private keys and certificates in the browser environment without uploading signature files and passwords to a remote server, fully ensuring user privacy and security. The steps for using the online signature generation tool are as follows:\n   \n   1. Upload the p12 file and enter the corresponding password;\n   \n   2. Click the \"Generate Signature\" button and wait for the signature generation success popup to appear;\n   \n   3. Click the \"Download Signature\" button to download the pem format private key and certificate;\n\n * The Quick App needs to place the generated private key private.pem and certificate certificate.pem in the root directory of the Quick App under /sign/debug and /sign/release for packaging and testing.\n\n * When testing on a real device, it is recommended to first enter the package name to uninstall the old package and then install the new package. Observing the desktop icon for uninstallation will ensure that the app icon is deleted, guaranteeing a complete replacement.\n\nReference Appendix\n\n 1. Xiaomi Wear Third-Party App Capability Open Interface Documentation: Click to Download\n 2. Interconnect Development and Testing Demo: Click to Download",normalizedContent:"# device communication interconnect\n\nused for communication with the paired mobile app and for sending and receiving data from the mobile app. the communication connection will be automatically established. there is no need to manage the creation and destruction of connections within the app, but callback functions can be registered to receive notifications about connection status changes for appropriate handling, such as notifying the user.\n\n\n# interface declaration\n\n{ \"name\": \"system.interconnect\" }\n\n\n\n# import module\n\nimport interconnect from '@system.interconnect'\n// or\nconst interconnect = require('@system.interconnect')\n\n\n\n# interface definition\n\n\n# interconnect.instance()\n\nobtains a connection object that exists as a singleton in the app. subsequent data sending and receiving are based on this connection object.\n\n# parameters:\n\nnone\n\n# return value:\n\nan interconnect connection instance, the connect object.\n\n# example:\n\nconst connect = interconnect.instance()\n\n\n\n# connect.getreadystate(object)\n\nobtains the connection status of the app.\n\n# object parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\n\n# success return value:\n\nproperty value   type     description\nstatus           number   1: connected successfully, 2: connection disconnected\n\n# fail return value:\n\nparameter value   type     description\ndata              string   error message\ncode              number   error code\n\n# error code descriptions:\n\nsupports common error codes\n\nerror code   description\n1006         connection disconnected\n\n# example:\n\nconnect.getreadystate({\n  success: (data) => {\n    if (data.status === 1) {\n      console.log('connected successfully')\n    } else if (data.status === 2) {\n      console.log('connection failed')\n    }\n  },\n  fail: (data, code) => {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# connect.diagnosis(object)\n\ndiagnoses the connection between the watch app and the counterpart app. returns \"ok\" if the connection is successful, or the reason for failure if the connection fails. if a connection is in progress when called, it waits for the connection to end before returning the final status.\n\n# object parameters:\n\nproperty   type       required   description\ntimeout    number     no         timeout duration for waiting for diagnosis, in milliseconds\n                                 default value: 10000ms\nsuccess    function   no         success callback\nfail       function   no         failure callback\n\n# success return value:\n\nproperty value   type     description\nstatus           number   0: ok, connection successful\n                          204: connect_timeout, connection timeout\n                          1001: app_uninstalled, counterpart app not installed\n                          1000: others, other connection errors\n\n# fail return value:\n\nparameter value   type     description\ndata              string   error message\ncode              number   error code\n\n# error code descriptions:\n\nsupports common error codes\n\n# example:\n\nconnect.diagnosis({\n  success: function (data) {\n    console.log(`handling success, version = ${data.status}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# connect.send(object)\n\nsends data to the mobile app.\n\n# object parameters:\n\nparameter   type       required   description\ndata        object     no         data to be sent\nsuccess     function   no         success callback\nfail        function   no         failure callback\n\n# success return value:\n\nnone\n\n# fail return value:\n\nparameter value   type     description\ndata              string   error message\ncode              number   error code\n\n# error code descriptions:\n\nsupports common error codes\n\nerror code   description\n204          connection timeout\n1006         connection disconnected\n\n# example:\n\nconnect.send({\n  data: {},\n  success: ()=>{\n    console.log(`handling success`)\n  },\n  fail: (data, code)=> {\n    console.log(`handling fail, errmsg = ${data.data}, errcode = ${data.code}`)\n  }\n})\n\n\n\n# events\n\n\n# connect.onmessage\n\nreceives data from the mobile app.\n\n# callback parameters:\n\nparameter   type     description\ndata        string   received data\n\n# example:\n\nconnect.onmessage = (data) => {\n  console.log(`received message: ${data.data}`)\n}\n\n\n\n# connect.onopen\n\ncallback function when the connection is opened.\n\n# callback parameters:\n\nparameter       type      description\nisreconnected   boolean   whether it is a reconnection\n\n# example:\n\nconnect.onopen = function (data) {\n  console.log('connection opened isreconnected: ', data.isreconnected)\n}\n\n\n\n# connect.onclose\n\ncallback function when the connection is closed.\n\n# callback parameters:\n\nparameter   type     description\ncode        number   connection closure status code\ndata        string   data returned upon connection closure\n\n# example:\n\nconnect.onclose = (data) => {\n  console.log(`connection closed, reason = ${data.data}, code = ${data.code}`)\n}\n\n\n\n# connect.onerror\n\ncallback function when a connection error occurs.\n\n# callback parameters:\n\nparameter   type     description\ncode        number   error code, see error code descriptions\ndata        string   error message\n\n# error code descriptions:\n\nsupports common error codes\n\nerror code   description\n1000         unknown error\n1001         mobile app not installed\n1006         connection disconnected\n\n# example:\n\nconnect.onerror = (data)=> {\n  console.log(`connection error, errmsg = ${data.data}, errcode = ${data.code}`)\n}\n\n\n\n# development considerations\n\nfor interconnect communication, ensure that the package names and signatures of both the quick app and the android version of the third-party app are consistent.\n\n * ensure that the package field in the quick app's manifest.json matches the package name of the third-party android app to be integrated.\n * the quick app signature must use the signature of the third-party android app. the certificate and private key can be extracted from the .jks file as follows:\n\n 1. convert the jks to p12 by executing the following command. after entering the corresponding password, a p12 format file will be generated in the same directory.\n\nkeytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype jks -deststoretype pkcs12\n\n\n 2. convert the p12 to pem by executing the following command. after entering the password set for the p12 file in the previous step, a pem format file will be generated in the same directory.\n\nopenssl pkcs12 -nodes -in keystore.p12 -out keystore.pem\n\n\n 3. copy the private key and certificate from the pem format file:\n    copy the content from -----begin private key----- to -----end private key----- into private.pem.\n    copy the content from -----begin certificate----- to -----end certificate----- into certificate.pem.\n\n * if openssl is not installed locally or a simpler operation process is desired, we provide an online signature generation tool. this tool is a web application written in webassembly that can directly generate pem format private keys and certificates in the browser environment without uploading signature files and passwords to a remote server, fully ensuring user privacy and security. the steps for using the online signature generation tool are as follows:\n   \n   1. upload the p12 file and enter the corresponding password;\n   \n   2. click the \"generate signature\" button and wait for the signature generation success popup to appear;\n   \n   3. click the \"download signature\" button to download the pem format private key and certificate;\n\n * the quick app needs to place the generated private key private.pem and certificate certificate.pem in the root directory of the quick app under /sign/debug and /sign/release for packaging and testing.\n\n * when testing on a real device, it is recommended to first enter the package name to uninstall the old package and then install the new package. observing the desktop icon for uninstallation will ensure that the app icon is deleted, guaranteeing a complete replacement.\n\nreference appendix\n\n 1. xiaomi wear third-party app capability open interface documentation: click to download\n 2. interconnect development and testing demo: click to download",charsets:{}},{title:"Crypto Algorithm",frontmatter:{},regularPath:"/en/features/security/crypto.html",relativePath:"en/features/security/crypto.md",key:"v-76d30e56",path:"/en/features/security/crypto.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:23},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:79},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:184},{level:3,title:"crypto.hashDigest(OBJECT)",slug:"crypto-hashdigest-object",normalizedTitle:"crypto.hashdigest(object)",charIndex:209},{level:3,title:"crypto.hmacDigest(OBJECT)",slug:"crypto-hmacdigest-object",normalizedTitle:"crypto.hmacdigest(object)",charIndex:941},{level:3,title:"crypto.sign(OBJECT)",slug:"crypto-sign-object",normalizedTitle:"crypto.sign(object)",charIndex:1874},{level:3,title:"crypto.verify(OBJECT)",slug:"crypto-verify-object",normalizedTitle:"crypto.verify(object)",charIndex:3313},{level:3,title:"crypto.encrypt(OBJECT)",slug:"crypto-encrypt-object",normalizedTitle:"crypto.encrypt(object)",charIndex:4648},{level:3,title:"crypto.decrypt(OBJECT)",slug:"crypto-decrypt-object",normalizedTitle:"crypto.decrypt(object)",charIndex:6824},{level:3,title:"crypto.btoa(STRING)",slug:"crypto-btoa-string",normalizedTitle:"crypto.btoa(string)",charIndex:9014},{level:3,title:"crypto.atob(STRING)",slug:"crypto-atob-string",normalizedTitle:"crypto.atob(string)",charIndex:9386},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:9702}],headersStr:"Interface Declaration Import Module Interface Definition crypto.hashDigest(OBJECT) crypto.hmacDigest(OBJECT) crypto.sign(OBJECT) crypto.verify(OBJECT) crypto.encrypt(OBJECT) crypto.decrypt(OBJECT) crypto.btoa(STRING) crypto.atob(STRING) Support Details",content:"# Crypto Algorithm\n\n\n# Interface Declaration\n\n{ \"name\": \"system.crypto\" }\n\n\n\n# Import Module\n\nimport crypto from '@system.crypto' \n// or \nconst crypto = require('@system.crypto')\n\n\n\n# Interface Definition\n\n\n# crypto.hashDigest(OBJECT)\n\nCreates a hash digest of the data.\n\n# Parameters:\n\nPARAMETER NAME   TYPE                REQUIRED   DESCRIPTION\ndata             String/Uint8Array   No         Content to be computed. Either this or uri must be provided.\nuri              String              No         File address to be computed. Either this or data must be\n                                                provided.\nalgo             String              No         Algorithm. Default: SHA256\n                                                Options: MD5, SHA1, SHA256, SHA512\n\n# Return Value:\n\nTYPE     DESCRIPTION\nString   The computed digest content.\n\n# Example:\n\nconst digest = crypto.hashDigest({\n  data: 'hello',\n  algo: 'MD5'\n})\n\n\n\n# crypto.hmacDigest(OBJECT)\n\nCreates a cryptographic HMAC digest.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\ndata             String     Yes        Data to be computed.\nalgo             String     No         Algorithm. Default: SHA256\n                                       Options: MD5, SHA1, SHA256, SHA512\nkey              String     Yes        Key.\nsuccess          Function   No         Success callback.\nfail             Function   No         Failure callback.\ncomplete         Function   No         Completion callback.\n\n# success Return Value Object:\n\nPARAMETER   TYPE     DESCRIPTION\ndata        String   Digest.\n\n# Example:\n\ncrypto.hmacDigest({\n  data: 'hello',\n  algo: 'SHA256',\n  key: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.hmacDigest success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.hmacDigest fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.sign(OBJECT)\n\nUsed to generate a signature.\n\n# Parameters:\n\nPARAMETER NAME   TYPE                REQUIRED   DESCRIPTION\ndata             String/Uint8Array   No         Text to be signed. Either this or uri must be provided.\nuri              String              No         File address to be signed. Either this or data must be\n                                                provided.\nalgo             String              No         Signature algorithm. Default: 'RSA-SHA256'\n                                                Options: RSA-MD5, RSA-SHA1, RSA-SHA256, RSA-SHA512\nprivateKey       String              Yes        Private key.\nsuccess          Function            No         Success callback.\nfail             Function            No         Failure callback.\ncomplete         Function            No         Completion callback.\n\n# success Return Value Object:\n\nPARAMETER   TYPE                DESCRIPTION\ndata        String/Uint8Array   If input is a string, returns a base64-encoded string;\n                                otherwise returns Uint8Array; if only uri is provided,\n                                defaults to returning string.\n\n# Example:\n\ncrypto.sign({\n  data: 'hello',\n  algo: 'RSA-SHA256',\n  privateKey: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.sign success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.sign fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.verify(OBJECT)\n\nUsed to verify a signature.\n\n# Parameters:\n\nPARAMETER NAME   TYPE                REQUIRED   DESCRIPTION\ndata             String/Uint8Array   No         Text to be verified. Either this or uri must be provided.\nuri              String              No         File address to be verified. Either this or data must be\n                                                provided.\nalgo             String              No         Signature algorithm. Default: 'RSA-SHA256'\n                                                Options: RSA-MD5, RSA-SHA1, RSA-SHA256, RSA-SHA512\nsignature        String/Uint8Array   Yes        Signature.\npublicKey        String              Yes        Public key.\nsuccess          Function            No         Success callback.\nfail             Function            No         Failure callback.\ncomplete         Function            No         Completion callback.\n\n# success Return Value Boolean:\n\nTYPE      DESCRIPTION\nBoolean   Verification result. True if passed, false if not.\n\n# Example:\n\ncrypto.verify({\n  data: 'hello',\n  algo: 'RSA-SHA256',\n  publicKey: 'public key',\n  signature: 'signature',\n  success: function(data) {\n    console.log(`### crypto.verify success:`, data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.verify fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.encrypt(OBJECT)\n\nEncrypts data.\n\n# Parameters:\n\nPARAMETER NAME   TYPE                REQUIRED   DESCRIPTION\ndata             String/Uint8Array   Yes        Data to be encrypted.\nalgo             String              No         Encryption algorithm. Default: RSA\n                                                Options: RSA, AES\nkey              String              Yes        Key used for encryption, as a base64-encoded string.\noptions          Object              No         Encryption parameters.\nsuccess          Function            No         Success callback.\nfail             Function            No         Failure callback.\ncomplete         Function            No         Completion callback.\n\n# RSA Parameters options:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\ntransformation   String   No         Encryption mode and padding for RSA algorithm. Default:\n                                     \"RSA/None/PKCS1Padding\"\n\n# AES Parameters options:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\ntransformation   String   No         Encryption mode and padding for AES algorithm. Default:\n                                     \"AES/CBC/PKCS7Padding\"\niv               String   No         Initialization vector for AES encryption/decryption, as a\n                                     base64-encoded string. Default: key value.\nivOffset         Number   No         Offset for the initialization vector in AES. Default: 0.\nivLen            Number   No         Byte length of the initialization vector in AES. Default:\n                                     16.\n\n# success Return Value Object:\n\nPARAMETER   TYPE                DESCRIPTION\ndata        String/Uint8Array   If input is a string, returns a base64-encoded string;\n                                otherwise returns Uint8Array.\n\n# Example:\n\ncrypto.encrypt({\n  // Text content to be encrypted\n  data: 'hello',\n  // Encryption public key encoded in base64\n  key: crypto.btoa('KEYKEYKEYKEYKEYK'),\n  algo: 'AES',\n  success: function(res) {\n    console.log(`### crypto.encrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.encrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.decrypt(OBJECT)\n\nDecrypts data.\n\n# Parameters:\n\nPARAMETER NAME   TYPE                REQUIRED   DESCRIPTION\ndata             String/Uint8Array   Yes        Data to be decrypted.\nalgo             String              No         Decryption algorithm. Default: RSA\n                                                Options: RSA, AES\nkey              String              Yes        Key used for decryption, as a base64-encoded string.\noptions          Object              No         Decryption parameters.\nsuccess          Function            No         Success callback.\nfail             Function            No         Failure callback.\ncomplete         Function            No         Completion callback.\n\n# RSA Parameters options:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\ntransformation   String   No         Encryption mode and padding for RSA algorithm. Default:\n                                     \"RSA/None/PKCS1Padding\"\n\n# AES Parameters options:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\ntransformation   String   No         Encryption mode and padding for AES algorithm. Default:\n                                     \"AES/CBC/PKCS7Padding\"\niv               String   No         Initialization vector for AES encryption/decryption, as a\n                                     base64-encoded string. Default: key value.\nivOffset         Number   No         Offset for the initialization vector in AES. Default: 0.\nivLen            Number   No         Byte length of the initialization vector in AES. Default:\n                                     16.\n\n# success Return Value Object:\n\nPARAMETER   TYPE                DESCRIPTION\ndata        String/Uint8Array   If input is a string, returns a base64-encoded string;\n                                otherwise returns Uint8Array.\n\n# Example:\n\ncrypto.decrypt({\n  // Content to be decrypted\n  data: 'WB96uM08PfYIHu5G1p6YwA==',\n  // Encryption public key encoded in base64\n  key: crypto.btoa('KEYKEYKEYKEYKEYK'),\n  algo: 'AES',\n  success: function(res) {\n    console.log(`### crypto.decrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.decrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.btoa(STRING)\n\nCreates a base-64 encoded ASCII string from a String object, where each character in the string is treated as a binary data byte.\n\n# Parameters:\n\nTYPE     REQUIRED   DESCRIPTION\nString   Yes        Text to be encoded.\n\n# Return Value String:\n\nTYPE     DESCRIPTION\nString   The encoded result.\n\n# Example:\n\nconst encodeData = crypto.btoa('hello')\n\n\n\n# crypto.atob(STRING)\n\nDecodes a base-64 encoded string.\n\n# Parameters:\n\nTYPE     REQUIRED   DESCRIPTION\nString   Yes        Text to be decoded.\n\n# Return Value String:\n\nTYPE     DESCRIPTION\nString   The decoded result.\n\n# Example:\n\nconst encodeString = crypto.btoa('hello')\nconst res = crypto.atob(encodeString)\n\n\n\n# Support Details\n\nDEVICE PRODUCT                            DESCRIPTION\nXiaomi S1 Pro Sports Health Watch         Not supported\nXiaomi Band 8 Pro                         Not supported\nXiaomi Watch S3                           Supported\nRedmi Watch 4                             Not supported\nXiaomi Wrist ECG Blood Pressure Monitor   Not supported\nXiaomi Watch S4                           Supported\nREDMI Watch 5                             Supported",normalizedContent:"# crypto algorithm\n\n\n# interface declaration\n\n{ \"name\": \"system.crypto\" }\n\n\n\n# import module\n\nimport crypto from '@system.crypto' \n// or \nconst crypto = require('@system.crypto')\n\n\n\n# interface definition\n\n\n# crypto.hashdigest(object)\n\ncreates a hash digest of the data.\n\n# parameters:\n\nparameter name   type                required   description\ndata             string/uint8array   no         content to be computed. either this or uri must be provided.\nuri              string              no         file address to be computed. either this or data must be\n                                                provided.\nalgo             string              no         algorithm. default: sha256\n                                                options: md5, sha1, sha256, sha512\n\n# return value:\n\ntype     description\nstring   the computed digest content.\n\n# example:\n\nconst digest = crypto.hashdigest({\n  data: 'hello',\n  algo: 'md5'\n})\n\n\n\n# crypto.hmacdigest(object)\n\ncreates a cryptographic hmac digest.\n\n# parameters:\n\nparameter name   type       required   description\ndata             string     yes        data to be computed.\nalgo             string     no         algorithm. default: sha256\n                                       options: md5, sha1, sha256, sha512\nkey              string     yes        key.\nsuccess          function   no         success callback.\nfail             function   no         failure callback.\ncomplete         function   no         completion callback.\n\n# success return value object:\n\nparameter   type     description\ndata        string   digest.\n\n# example:\n\ncrypto.hmacdigest({\n  data: 'hello',\n  algo: 'sha256',\n  key: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.hmacdigest success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.hmacdigest fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.sign(object)\n\nused to generate a signature.\n\n# parameters:\n\nparameter name   type                required   description\ndata             string/uint8array   no         text to be signed. either this or uri must be provided.\nuri              string              no         file address to be signed. either this or data must be\n                                                provided.\nalgo             string              no         signature algorithm. default: 'rsa-sha256'\n                                                options: rsa-md5, rsa-sha1, rsa-sha256, rsa-sha512\nprivatekey       string              yes        private key.\nsuccess          function            no         success callback.\nfail             function            no         failure callback.\ncomplete         function            no         completion callback.\n\n# success return value object:\n\nparameter   type                description\ndata        string/uint8array   if input is a string, returns a base64-encoded string;\n                                otherwise returns uint8array; if only uri is provided,\n                                defaults to returning string.\n\n# example:\n\ncrypto.sign({\n  data: 'hello',\n  algo: 'rsa-sha256',\n  privatekey: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.sign success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.sign fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.verify(object)\n\nused to verify a signature.\n\n# parameters:\n\nparameter name   type                required   description\ndata             string/uint8array   no         text to be verified. either this or uri must be provided.\nuri              string              no         file address to be verified. either this or data must be\n                                                provided.\nalgo             string              no         signature algorithm. default: 'rsa-sha256'\n                                                options: rsa-md5, rsa-sha1, rsa-sha256, rsa-sha512\nsignature        string/uint8array   yes        signature.\npublickey        string              yes        public key.\nsuccess          function            no         success callback.\nfail             function            no         failure callback.\ncomplete         function            no         completion callback.\n\n# success return value boolean:\n\ntype      description\nboolean   verification result. true if passed, false if not.\n\n# example:\n\ncrypto.verify({\n  data: 'hello',\n  algo: 'rsa-sha256',\n  publickey: 'public key',\n  signature: 'signature',\n  success: function(data) {\n    console.log(`### crypto.verify success:`, data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.verify fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.encrypt(object)\n\nencrypts data.\n\n# parameters:\n\nparameter name   type                required   description\ndata             string/uint8array   yes        data to be encrypted.\nalgo             string              no         encryption algorithm. default: rsa\n                                                options: rsa, aes\nkey              string              yes        key used for encryption, as a base64-encoded string.\noptions          object              no         encryption parameters.\nsuccess          function            no         success callback.\nfail             function            no         failure callback.\ncomplete         function            no         completion callback.\n\n# rsa parameters options:\n\nparameter name   type     required   description\ntransformation   string   no         encryption mode and padding for rsa algorithm. default:\n                                     \"rsa/none/pkcs1padding\"\n\n# aes parameters options:\n\nparameter name   type     required   description\ntransformation   string   no         encryption mode and padding for aes algorithm. default:\n                                     \"aes/cbc/pkcs7padding\"\niv               string   no         initialization vector for aes encryption/decryption, as a\n                                     base64-encoded string. default: key value.\nivoffset         number   no         offset for the initialization vector in aes. default: 0.\nivlen            number   no         byte length of the initialization vector in aes. default:\n                                     16.\n\n# success return value object:\n\nparameter   type                description\ndata        string/uint8array   if input is a string, returns a base64-encoded string;\n                                otherwise returns uint8array.\n\n# example:\n\ncrypto.encrypt({\n  // text content to be encrypted\n  data: 'hello',\n  // encryption public key encoded in base64\n  key: crypto.btoa('keykeykeykeykeyk'),\n  algo: 'aes',\n  success: function(res) {\n    console.log(`### crypto.encrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.encrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.decrypt(object)\n\ndecrypts data.\n\n# parameters:\n\nparameter name   type                required   description\ndata             string/uint8array   yes        data to be decrypted.\nalgo             string              no         decryption algorithm. default: rsa\n                                                options: rsa, aes\nkey              string              yes        key used for decryption, as a base64-encoded string.\noptions          object              no         decryption parameters.\nsuccess          function            no         success callback.\nfail             function            no         failure callback.\ncomplete         function            no         completion callback.\n\n# rsa parameters options:\n\nparameter name   type     required   description\ntransformation   string   no         encryption mode and padding for rsa algorithm. default:\n                                     \"rsa/none/pkcs1padding\"\n\n# aes parameters options:\n\nparameter name   type     required   description\ntransformation   string   no         encryption mode and padding for aes algorithm. default:\n                                     \"aes/cbc/pkcs7padding\"\niv               string   no         initialization vector for aes encryption/decryption, as a\n                                     base64-encoded string. default: key value.\nivoffset         number   no         offset for the initialization vector in aes. default: 0.\nivlen            number   no         byte length of the initialization vector in aes. default:\n                                     16.\n\n# success return value object:\n\nparameter   type                description\ndata        string/uint8array   if input is a string, returns a base64-encoded string;\n                                otherwise returns uint8array.\n\n# example:\n\ncrypto.decrypt({\n  // content to be decrypted\n  data: 'wb96um08pfyihu5g1p6ywa==',\n  // encryption public key encoded in base64\n  key: crypto.btoa('keykeykeykeykeyk'),\n  algo: 'aes',\n  success: function(res) {\n    console.log(`### crypto.decrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.decrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.btoa(string)\n\ncreates a base-64 encoded ascii string from a string object, where each character in the string is treated as a binary data byte.\n\n# parameters:\n\ntype     required   description\nstring   yes        text to be encoded.\n\n# return value string:\n\ntype     description\nstring   the encoded result.\n\n# example:\n\nconst encodedata = crypto.btoa('hello')\n\n\n\n# crypto.atob(string)\n\ndecodes a base-64 encoded string.\n\n# parameters:\n\ntype     required   description\nstring   yes        text to be decoded.\n\n# return value string:\n\ntype     description\nstring   the decoded result.\n\n# example:\n\nconst encodestring = crypto.btoa('hello')\nconst res = crypto.atob(encodestring)\n\n\n\n# support details\n\ndevice product                            description\nxiaomi s1 pro sports health watch         not supported\nxiaomi band 8 pro                         not supported\nxiaomi watch s3                           supported\nredmi watch 4                             not supported\nxiaomi wrist ecg blood pressure monitor   not supported\nxiaomi watch s4                           supported\nredmi watch 5                             supported",charsets:{}},{title:"System Capabilities",frontmatter:{},regularPath:"/en/features/system/",relativePath:"en/features/system/README.md",key:"v-25149635",path:"/en/features/system/",headersStr:null,content:"# System Capabilities\n\nProvide some system capabilities.\n\n * Network Information\n * Vibration\n * Screen Brightness\n * Audio Recording\n * Geolocation\n * Sensors\n * Events\n * Battery Information\n * System Volume\n * Decompression",normalizedContent:"# system capabilities\n\nprovide some system capabilities.\n\n * network information\n * vibration\n * screen brightness\n * audio recording\n * geolocation\n * sensors\n * events\n * battery information\n * system volume\n * decompression",charsets:{}},{title:"Alarm",frontmatter:{},regularPath:"/en/features/system/alarm.html",relativePath:"en/features/system/alarm.md",key:"v-64b84cc8",path:"/en/features/system/alarm.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:12},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:67},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:168},{level:3,title:"alarm.setAlarm (OBJECT)",slug:"alarm-setalarm-object",normalizedTitle:"alarm.setalarm (object)",charIndex:193},{level:3,title:"alarm.getProvider()",slug:"alarm-getprovider",normalizedTitle:"alarm.getprovider()",charIndex:2085}],headersStr:"Interface Declaration Import Module Interface Definition alarm.setAlarm (OBJECT) alarm.getProvider()",content:"# Alarm\n\n\n# Interface Declaration\n\n{ \"name\": \"system.alarm\" }\n\n\n\n# Import Module\n\nimport alarm from '@system.alarm' \n// or \nconst alarm = require('@system.alarm')\n\n\n\n# Interface Definition\n\n\n# alarm.setAlarm (OBJECT)\n\nSets an alarm. A pop-up prompt box is displayed each time an alarm is added. The interface is called after the user agrees.\n\n# Parameters\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nhour        Number     Yes        Hour of the alarm [0, 23]\nminute      Number     Yes        Minute of the alarm [0, 59]\nmessage     String     No         Alarm name. It is recommended that the length does not\n                                  exceed 10 characters for the best display effect.\nvibrate     Boolean    No         Whether to vibrate. The default value is true.\ndays        Array      No         Repeat cycle\n                                  The default value is a one-time alarm.\n                                  [0,1,2,3,4,5,6] Every day\n                                  [0,1,2,3,4] Monday to Friday\n                                  [0,6] (0 indicates Monday and 6 indicates Sunday)\nringtone    String     No         The default ringtone is set by the system. The file path is\n                                  a data file or a resource in the application.\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after the execution is complete (both successful\n                                  and failed calls will trigger this callback)\n\n# Error Codes Returned by fail:\n\nERROR CODE   DESCRIPTION\n201          User rejection\n202          Parameter error\n300          I/O error\n\n# Example\n\nalarm.setAlarm({\n    hour: 18,\n    minute: 20,\n    message: 'Alarm 1',\n    days: [4],\n    ringtone: 'internal://mass/test/test.mp3',\n    success: function() {\n        console.log('handling success')\n    },\n    fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n    },\n    complete: function() {\n        console.log('handling complete')\n    }\n})\n\n\n\n# alarm.getProvider()\n\nObtains the service provider.\n\n# Parameters:\n\nNone\n\n# Return Value:\n\nString, the code of the service provider, such as the English brand name of the manufacturer. If this service is unavailable, an empty string is returned.\n\n# Example\n\nconsole.log(alarm.getProvider())\n",normalizedContent:"# alarm\n\n\n# interface declaration\n\n{ \"name\": \"system.alarm\" }\n\n\n\n# import module\n\nimport alarm from '@system.alarm' \n// or \nconst alarm = require('@system.alarm')\n\n\n\n# interface definition\n\n\n# alarm.setalarm (object)\n\nsets an alarm. a pop-up prompt box is displayed each time an alarm is added. the interface is called after the user agrees.\n\n# parameters\n\nparameter   type       required   description\nhour        number     yes        hour of the alarm [0, 23]\nminute      number     yes        minute of the alarm [0, 59]\nmessage     string     no         alarm name. it is recommended that the length does not\n                                  exceed 10 characters for the best display effect.\nvibrate     boolean    no         whether to vibrate. the default value is true.\ndays        array      no         repeat cycle\n                                  the default value is a one-time alarm.\n                                  [0,1,2,3,4,5,6] every day\n                                  [0,1,2,3,4] monday to friday\n                                  [0,6] (0 indicates monday and 6 indicates sunday)\nringtone    string     no         the default ringtone is set by the system. the file path is\n                                  a data file or a resource in the application.\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after the execution is complete (both successful\n                                  and failed calls will trigger this callback)\n\n# error codes returned by fail:\n\nerror code   description\n201          user rejection\n202          parameter error\n300          i/o error\n\n# example\n\nalarm.setalarm({\n    hour: 18,\n    minute: 20,\n    message: 'alarm 1',\n    days: [4],\n    ringtone: 'internal://mass/test/test.mp3',\n    success: function() {\n        console.log('handling success')\n    },\n    fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n    },\n    complete: function() {\n        console.log('handling complete')\n    }\n})\n\n\n\n# alarm.getprovider()\n\nobtains the service provider.\n\n# parameters:\n\nnone\n\n# return value:\n\nstring, the code of the service provider, such as the english brand name of the manufacturer. if this service is unavailable, an empty string is returned.\n\n# example\n\nconsole.log(alarm.getprovider())\n",charsets:{}},{title:"Screen Brightness",frontmatter:{},regularPath:"/en/features/system/brightness.html",relativePath:"en/features/system/brightness.md",key:"v-d7c2cd94",path:"/en/features/system/brightness.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:24},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:84},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:205},{level:3,title:"brightness.getValue(OBJECT)",slug:"brightness-getvalue-object",normalizedTitle:"brightness.getvalue(object)",charIndex:230},{level:3,title:"brightness.setValue(OBJECT)",slug:"brightness-setvalue-object",normalizedTitle:"brightness.setvalue(object)",charIndex:853},{level:3,title:"brightness.getMode(OBJECT)",slug:"brightness-getmode-object",normalizedTitle:"brightness.getmode(object)",charIndex:1415},{level:3,title:"brightness.setMode(OBJECT)",slug:"brightness-setmode-object",normalizedTitle:"brightness.setmode(object)",charIndex:2085},{level:3,title:"brightness.setKeepScreenOn(OBJECT)",slug:"brightness-setkeepscreenon-object",normalizedTitle:"brightness.setkeepscreenon(object)",charIndex:2705}],headersStr:"Interface Declaration Import Module Interface Definition brightness.getValue(OBJECT) brightness.setValue(OBJECT) brightness.getMode(OBJECT) brightness.setMode(OBJECT) brightness.setKeepScreenOn(OBJECT)",content:"# Screen Brightness\n\n\n# Interface Declaration\n\n{ \"name\": \"system.brightness\" }\n\n\n\n# Import Module\n\nimport brightness from '@system.brightness' \n// or \nconst brightness = require('@system.brightness')\n\n\n\n# Interface Definition\n\n\n# brightness.getValue(OBJECT)\n\nGets the current screen brightness value.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Completion callback\n\n# Success Return Value:\n\nPARAMETER   TYPE      DESCRIPTION\nvalue       Integer   Screen brightness (range: 0-255)\n\n# Example:\n\nbrightness.getValue({\n  success: function(data) {\n    console.log(`handling success, value = ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setValue(OBJECT)\n\nSets the current screen brightness value.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nvalue       Integer    Yes        Screen brightness (range: 0-255)\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Completion callback\n\n# Example:\n\nbrightness.setValue({\n  value: 100,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.getMode(OBJECT)\n\nGets the current screen brightness mode.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Completion callback\n\n# Success Return Value:\n\nPARAMETER   TYPE      DESCRIPTION\nmode        Integer   0: manual brightness adjustment, 1: auto brightness\n                      adjustment\n\n# Example:\n\nbrightness.getMode({\n  success: function(data) {\n    console.log(`handling success, mode = ${data.mode}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setMode(OBJECT)\n\nSets the current screen brightness mode.\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nmode        Integer    Yes        0: manual brightness adjustment, 1: auto brightness\n                                  adjustment\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Completion callback\n\n# Example:\n\nbrightness.setMode({\n  mode: 1,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setKeepScreenOn(OBJECT)\n\nSets whether to keep the screen on.\n\n# Parameters:\n\nPARAMETER      TYPE       REQUIRED   DESCRIPTION\nkeepScreenOn   Boolean    Yes        Whether to keep the screen on\nsuccess        Function   No         Success callback\nfail           Function   No         Failure callback\ncomplete       Function   No         Completion callback\n\n# Example:\n\nbrightness.setKeepScreenOn({\n  keepScreenOn: true,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# screen brightness\n\n\n# interface declaration\n\n{ \"name\": \"system.brightness\" }\n\n\n\n# import module\n\nimport brightness from '@system.brightness' \n// or \nconst brightness = require('@system.brightness')\n\n\n\n# interface definition\n\n\n# brightness.getvalue(object)\n\ngets the current screen brightness value.\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         completion callback\n\n# success return value:\n\nparameter   type      description\nvalue       integer   screen brightness (range: 0-255)\n\n# example:\n\nbrightness.getvalue({\n  success: function(data) {\n    console.log(`handling success, value = ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setvalue(object)\n\nsets the current screen brightness value.\n\n# parameters:\n\nparameter   type       required   description\nvalue       integer    yes        screen brightness (range: 0-255)\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         completion callback\n\n# example:\n\nbrightness.setvalue({\n  value: 100,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.getmode(object)\n\ngets the current screen brightness mode.\n\n# parameters:\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         completion callback\n\n# success return value:\n\nparameter   type      description\nmode        integer   0: manual brightness adjustment, 1: auto brightness\n                      adjustment\n\n# example:\n\nbrightness.getmode({\n  success: function(data) {\n    console.log(`handling success, mode = ${data.mode}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setmode(object)\n\nsets the current screen brightness mode.\n\n# parameters:\n\nparameter   type       required   description\nmode        integer    yes        0: manual brightness adjustment, 1: auto brightness\n                                  adjustment\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         completion callback\n\n# example:\n\nbrightness.setmode({\n  mode: 1,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setkeepscreenon(object)\n\nsets whether to keep the screen on.\n\n# parameters:\n\nparameter      type       required   description\nkeepscreenon   boolean    yes        whether to keep the screen on\nsuccess        function   no         success callback\nfail           function   no         failure callback\ncomplete       function   no         completion callback\n\n# example:\n\nbrightness.setkeepscreenon({\n  keepscreenon: true,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{}},{title:"Event",frontmatter:{},regularPath:"/en/features/system/event.html",relativePath:"en/features/system/event.md",key:"v-03b90ef6",path:"/en/features/system/event.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:12},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:67},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:168},{level:3,title:"event.publish (OBJECT)",slug:"event-publish-object",normalizedTitle:"event.publish (object)",charIndex:193},{level:3,title:"event.subscribe(OBJECT)",slug:"event-subscribe-object",normalizedTitle:"event.subscribe(object)",charIndex:1421},{level:3,title:"event.unsubscribe(OBJECT)",slug:"event-unsubscribe-object",normalizedTitle:"event.unsubscribe(object)",charIndex:2182},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:2589}],headersStr:"Interface Declaration Import Module Interface Definition event.publish (OBJECT) event.subscribe(OBJECT) event.unsubscribe(OBJECT) Support Details",content:"# Event\n\n\n# Interface Declaration\n\n{ \"name\": \"system.event\" }\n\n\n\n# Import Module\n\nimport event from '@system.event' \n// or \nconst event = require('@system.event')\n\n\n\n# Interface Definition\n\n\n# event.publish (OBJECT)\n\nPublish a public event.\n\n# Parameters:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\neventName        String   Yes        Event name. Reserved names for public events are occupied by\n                                     the system. Do not use them.\noptions          Object   No         Event parameters\n\n# options Parameters:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\nparams           Object   No         Event parameters\npermissions      Array    No         Permissions of subscribers. Only packages with permissions\n                                     can receive the sent event.\n\n# Public Events Supported by the System:\n\nSYSTEM INTERNAL EVENT NAME    PERMISSIONS REQUIRED FOR SUBSCRIBERS   DESCRIPTION\nusual.event.BATTERY_CHANGED   None                                   Battery level changed. Parameter: level: between 0.0 and 1.0\nusual.event.DISCHARGING       None                                   Charging stopped\nusual.event.CHARGING          None                                   Charging started\n\n# Return Value:\n\nNone\n\n# Example:\n\nevent.publish({\n  eventName: 'myEventName',\n  options: {\n    params: { age: 10, name: 'peter' },\n    permissions: ['com.example.demo']\n  }\n})\n\n\n\n# event.subscribe(OBJECT)\n\nSubscribe to a public event.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\neventName        String     Yes        Event name\ncallback         Function   Yes        Callback function\n\n# Callback Parameters:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\nparams           Object   No         Event parameters\npackage          String   No         Package name of the event sender\n\n# Return Value:\n\nTYPE     REQUIRED   DESCRIPTION\nNumber   Yes        Event ID. Returns undefined if subscription fails.\n\n# Example:\n\nconst evtId = event.subscribe({\n  eventName: 'myEventName',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\nconsole.log(evtId)\n\n\n\n# event.unsubscribe(OBJECT)\n\nUnsubscribe from a public event.\n\n# Parameters:\n\nPARAMETER NAME   TYPE     REQUIRED   DESCRIPTION\nid               Number   Yes        Subscription ID\n\n# Example:\n\nconst evtId = event.subscribe({\n  eventName: 'myEventName',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\n\nevent.unsubscribe({ id: evtId })\n\n\n\n# Support Details\n\nDEVICE PRODUCT                                DESCRIPTION\nXiaomi S1 Pro Sports Health Watch             Not supported\nXiaomi Band 8 Pro                             Not supported\nXiaomi Watch S3                               Not supported\nRedmi Watch 4                                 Not supported\nXiaomi Wrist ECG and Blood Pressure Monitor   Not supported\nXiaomi Watch S4                               Supported\nREDMI Watch 5                                 Supported",normalizedContent:"# event\n\n\n# interface declaration\n\n{ \"name\": \"system.event\" }\n\n\n\n# import module\n\nimport event from '@system.event' \n// or \nconst event = require('@system.event')\n\n\n\n# interface definition\n\n\n# event.publish (object)\n\npublish a public event.\n\n# parameters:\n\nparameter name   type     required   description\neventname        string   yes        event name. reserved names for public events are occupied by\n                                     the system. do not use them.\noptions          object   no         event parameters\n\n# options parameters:\n\nparameter name   type     required   description\nparams           object   no         event parameters\npermissions      array    no         permissions of subscribers. only packages with permissions\n                                     can receive the sent event.\n\n# public events supported by the system:\n\nsystem internal event name    permissions required for subscribers   description\nusual.event.battery_changed   none                                   battery level changed. parameter: level: between 0.0 and 1.0\nusual.event.discharging       none                                   charging stopped\nusual.event.charging          none                                   charging started\n\n# return value:\n\nnone\n\n# example:\n\nevent.publish({\n  eventname: 'myeventname',\n  options: {\n    params: { age: 10, name: 'peter' },\n    permissions: ['com.example.demo']\n  }\n})\n\n\n\n# event.subscribe(object)\n\nsubscribe to a public event.\n\n# parameters:\n\nparameter name   type       required   description\neventname        string     yes        event name\ncallback         function   yes        callback function\n\n# callback parameters:\n\nparameter name   type     required   description\nparams           object   no         event parameters\npackage          string   no         package name of the event sender\n\n# return value:\n\ntype     required   description\nnumber   yes        event id. returns undefined if subscription fails.\n\n# example:\n\nconst evtid = event.subscribe({\n  eventname: 'myeventname',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\nconsole.log(evtid)\n\n\n\n# event.unsubscribe(object)\n\nunsubscribe from a public event.\n\n# parameters:\n\nparameter name   type     required   description\nid               number   yes        subscription id\n\n# example:\n\nconst evtid = event.subscribe({\n  eventname: 'myeventname',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\n\nevent.unsubscribe({ id: evtid })\n\n\n\n# support details\n\ndevice product                                description\nxiaomi s1 pro sports health watch             not supported\nxiaomi band 8 pro                             not supported\nxiaomi watch s3                               not supported\nredmi watch 4                                 not supported\nxiaomi wrist ecg and blood pressure monitor   not supported\nxiaomi watch s4                               supported\nredmi watch 5                                 supported",charsets:{}},{title:"Network Information",frontmatter:{},regularPath:"/en/features/system/network.html",relativePath:"en/features/system/network.md",key:"v-7cb77764",path:"/en/features/system/network.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:26},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:83},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:192},{level:3,title:"network.getType(OBJECT)",slug:"network-gettype-object",normalizedTitle:"network.gettype(object)",charIndex:217},{level:3,title:"network.subscribe(OBJECT)",slug:"network-subscribe-object",normalizedTitle:"network.subscribe(object)",charIndex:883},{level:3,title:"network.unsubscribe()",slug:"network-unsubscribe",normalizedTitle:"network.unsubscribe()",charIndex:1778},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:1912}],headersStr:"Interface Declaration Import Module Interface Definition network.getType(OBJECT) network.subscribe(OBJECT) network.unsubscribe() Support Details",content:"# Network Information\n\n\n# Interface Declaration\n\n{ \"name\": \"system.network\" }\n\n\n\n# Import Module\n\nimport network from '@system.network' \n// or \nconst network = require('@system.network')\n\n\n\n# Interface Definition\n\n\n# network.getType(OBJECT)\n\nObtain the network type.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\nsuccess          Function   No         Callback for success\nfail             Function   No         Callback for failure, possibly due to lack of permissions\ncomplete         Function   No         Callback after execution completion\n\n# Return Value of success:\n\nPARAMETER NAME   TYPE     DESCRIPTION\ntype             String   Network type, possible values: 2g, 3g, 4g, wifi, none, 5g,\n                          bluetooth, others\n\n# Example:\n\nnetwork.getType({\n  success: function(data) {\n    console.log(`handling success: ${data.type}`)\n  }\n})\n\n\n\n# network.subscribe(OBJECT)\n\nListen for changes in the network type. If called multiple times, only the last call will take effect.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\ncallback         Function   No         Callback triggered each time the network changes\nfail             Function   No         Callback for failure, possibly due to lack of permissions\n\n# Return Value of callback:\n\nPARAMETER NAME   TYPE     DESCRIPTION\ntype             String   Network type, possible values: 2g, 3g, 4g, wifi, none, 5g,\n                          bluetooth, others. Note: A network type other than none does\n                          not guarantee that the device can access the target server.\n                          A request interface is required for verification.\n\n# Example:\n\nnetwork.subscribe({\n  callback: function(data) {\n    console.log('handling callback')\n  }\n})\n\n\n\n# network.unsubscribe()\n\nCancel listening for changes in the network type.\n\n# Parameters:\n\nNone\n\n# Example:\n\nnetwork.unsubscribe()\n\n\n\n# Support Details\n\nDEVICE PRODUCT                                DESCRIPTION\nXiaomi S1 Pro Sports and Health Watch         Supported\nXiaomi Band 8 Pro                             Not Supported\nXiaomi Watch S3                               Supported\nRedmi Watch 4                                 Not Supported\nXiaomi Wrist ECG and Blood Pressure Monitor   Not Supported\nXiaomi Watch S4                               Supported\nREDMI Watch 5                                 Supported",normalizedContent:"# network information\n\n\n# interface declaration\n\n{ \"name\": \"system.network\" }\n\n\n\n# import module\n\nimport network from '@system.network' \n// or \nconst network = require('@system.network')\n\n\n\n# interface definition\n\n\n# network.gettype(object)\n\nobtain the network type.\n\n# parameters:\n\nparameter name   type       required   description\nsuccess          function   no         callback for success\nfail             function   no         callback for failure, possibly due to lack of permissions\ncomplete         function   no         callback after execution completion\n\n# return value of success:\n\nparameter name   type     description\ntype             string   network type, possible values: 2g, 3g, 4g, wifi, none, 5g,\n                          bluetooth, others\n\n# example:\n\nnetwork.gettype({\n  success: function(data) {\n    console.log(`handling success: ${data.type}`)\n  }\n})\n\n\n\n# network.subscribe(object)\n\nlisten for changes in the network type. if called multiple times, only the last call will take effect.\n\n# parameters:\n\nparameter name   type       required   description\ncallback         function   no         callback triggered each time the network changes\nfail             function   no         callback for failure, possibly due to lack of permissions\n\n# return value of callback:\n\nparameter name   type     description\ntype             string   network type, possible values: 2g, 3g, 4g, wifi, none, 5g,\n                          bluetooth, others. note: a network type other than none does\n                          not guarantee that the device can access the target server.\n                          a request interface is required for verification.\n\n# example:\n\nnetwork.subscribe({\n  callback: function(data) {\n    console.log('handling callback')\n  }\n})\n\n\n\n# network.unsubscribe()\n\ncancel listening for changes in the network type.\n\n# parameters:\n\nnone\n\n# example:\n\nnetwork.unsubscribe()\n\n\n\n# support details\n\ndevice product                                description\nxiaomi s1 pro sports and health watch         supported\nxiaomi band 8 pro                             not supported\nxiaomi watch s3                               supported\nredmi watch 4                                 not supported\nxiaomi wrist ecg and blood pressure monitor   not supported\nxiaomi watch s4                               supported\nredmi watch 5                                 supported",charsets:{}},{title:"Battery Information",frontmatter:{},regularPath:"/en/features/system/battery.html",relativePath:"en/features/system/battery.md",key:"v-06016b90",path:"/en/features/system/battery.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:26},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:83},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:192},{level:3,title:"battery.getStatus(OBJECT)",slug:"battery-getstatus-object",normalizedTitle:"battery.getstatus(object)",charIndex:217},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:958}],headersStr:"Interface Declaration Import Module Interface Definition battery.getStatus(OBJECT) Support Details",content:"# Battery Information\n\n\n# Interface Declaration\n\n{ \"name\": \"system.battery\" }\n\n\n\n# Import Module\n\nimport battery from '@system.battery' \n// or \nconst battery = require('@system.battery')\n\n\n\n# Interface Definition\n\n\n# battery.getStatus(OBJECT)\n\nObtain the battery information of the current device.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\nsuccess          Function   No         Success callback\nfail             Function   No         Failure callback\ncomplete         Function   No         Callback after execution ends\n\n# Return Values for success:\n\nPARAMETER NAME   TYPE      DESCRIPTION\ncharging         Boolean   Whether it is currently charging\nlevel            Number    Current battery level, between 0.0 and 1.0\n\n# Example\n\nbattery.getStatus({\n  success: function(data) {\n      console.log(`handling success: ${data.level}`)\n  },\n  fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# Support Details\n\nDEVICE PRODUCT                                 DESCRIPTION\nXiaomi S1 Pro Sports Health Watch              Not supported\nXiaomi Band 8 Pro                              Not supported\nXiaomi Watch S3                                Not supported\nRedmi Watch 4                                  Not supported\nXiaomi Wrist ECG and Blood Pressure Recorder   Not supported\nXiaomi Watch S4                                Supported\nREDMI Watch 5                                  Supported",normalizedContent:"# battery information\n\n\n# interface declaration\n\n{ \"name\": \"system.battery\" }\n\n\n\n# import module\n\nimport battery from '@system.battery' \n// or \nconst battery = require('@system.battery')\n\n\n\n# interface definition\n\n\n# battery.getstatus(object)\n\nobtain the battery information of the current device.\n\n# parameters:\n\nparameter name   type       required   description\nsuccess          function   no         success callback\nfail             function   no         failure callback\ncomplete         function   no         callback after execution ends\n\n# return values for success:\n\nparameter name   type      description\ncharging         boolean   whether it is currently charging\nlevel            number    current battery level, between 0.0 and 1.0\n\n# example\n\nbattery.getstatus({\n  success: function(data) {\n      console.log(`handling success: ${data.level}`)\n  },\n  fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# support details\n\ndevice product                                 description\nxiaomi s1 pro sports health watch              not supported\nxiaomi band 8 pro                              not supported\nxiaomi watch s3                                not supported\nredmi watch 4                                  not supported\nxiaomi wrist ecg and blood pressure recorder   not supported\nxiaomi watch s4                                supported\nredmi watch 5                                  supported",charsets:{}},{title:"Geolocation",frontmatter:{},regularPath:"/en/features/system/geolocation.html",relativePath:"en/features/system/geolocation.md",key:"v-82aca8c4",path:"/en/features/system/geolocation.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:18},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:79},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:204},{level:3,title:"geolocation.getLocation(OBJECT)",slug:"geolocation-getlocation-object",normalizedTitle:"geolocation.getlocation(object)",charIndex:229},{level:3,title:"geolocation.subscribe(OBJECT)",slug:"geolocation-subscribe-object",normalizedTitle:"geolocation.subscribe(object)",charIndex:2071},{level:3,title:"geolocation.unsubscribe()",slug:"geolocation-unsubscribe",normalizedTitle:"geolocation.unsubscribe()",charIndex:3399},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:3717}],headersStr:"Interface Declaration Import Module Interface Definition geolocation.getLocation(OBJECT) geolocation.subscribe(OBJECT) geolocation.unsubscribe() Support Details",content:'# Geolocation\n\n\n# Interface Declaration\n\n{ "name": "system.geolocation" }\n\n\n\n# Import Module\n\nimport geolocation from \'@system.geolocation\' \n// or \nconst geolocation = require(\'@system.geolocation\')\n\n\n\n# Interface Definition\n\n\n# geolocation.getLocation(OBJECT)\n\nObtain the geolocation\n\n# Permission Requirements\n\nPrecise device location\n\nDevelopers need to configure permissions in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.LOCATION" }\n  ]\n}\n\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\ntimeout          Number     No         Set timeout in ms. Default is 30000\nsuccess          Function   Yes        Success callback\nfail             Function   No         Failure callback, possibly due to lack of permissions\ncomplete         Function   No         Callback after execution ends\n\n# Return Values for success:\n\nPARAMETER NAME   TYPE                                       DESCRIPTION\nlongitude        Number                                     Longitude, floating-point number\nlatitude         Number                                     Latitude, floating-point number\naltitude         Number                                     Altitude/height in meters, floating-point number\nspeed            Number                                     Speed in m/s, floating-point number\naccuracy         Number                                     Accuracy, positive integer\naccuracyInfo     { horizontal: Number, vertical: Number }   Accuracy information, including horizontal and vertical\n                                                            precision\n\n# Error Codes for fail:\n\nERROR CODE   DESCRIPTION\n203          Function not supported\n204          Timeout occurred\n\n# Example:\n\ngeolocation.getLocation({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  }\n})\n\n\n\n# geolocation.subscribe(OBJECT)\n\nListen for geolocation changes. If called multiple times, only the last call takes effect.\n\n# Permission Requirements\n\nPrecise device location\n\nDevelopers need to configure permissions in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.LOCATION" }\n  ]\n}\n\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\ncallback         Function   Yes        Called back whenever location changes\nfail             Function   No         Failure callback\n\n# Return Values for callback:\n\nPARAMETER NAME   TYPE     DESCRIPTION\nlongitude        Number   Longitude, floating-point number\nlatitude         Number   Latitude, floating-point number\naltitude         Number   Altitude/height in meters, floating-point number\nspeed            Number   Speed in m/s, floating-point number\naccuracy         Number   Accuracy, positive integer\n\n# Error Codes for fail:\n\nERROR CODE   DESCRIPTION\n203          Function not supported\n\n# Example:\n\ngeolocation.subscribe({\n  callback: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  }\n})\n\n\n\n# geolocation.unsubscribe()\n\nCancel listening for geolocation changes\n\n# Permission Requirements\n\nPrecise device location\n\nDevelopers need to configure permissions in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.LOCATION" }\n  ]\n}\n\n\n# Parameters:\n\nNone\n\n# Example:\n\ngeolocation.unsubscribe()\n\n\n\n# Support Details\n\nDEVICE PRODUCT                            DESCRIPTION\nXiaomi S1 Pro Sports Health Watch         Not supported\nXiaomi Band 8 Pro                         Not supported\nXiaomi Watch S3                           Supported\nRedmi Watch 4                             Not supported\nXiaomi Wrist ECG Blood Pressure Monitor   Not supported\nXiaomi Watch S4                           Supported\nREDMI Watch 5                             Supported',normalizedContent:'# geolocation\n\n\n# interface declaration\n\n{ "name": "system.geolocation" }\n\n\n\n# import module\n\nimport geolocation from \'@system.geolocation\' \n// or \nconst geolocation = require(\'@system.geolocation\')\n\n\n\n# interface definition\n\n\n# geolocation.getlocation(object)\n\nobtain the geolocation\n\n# permission requirements\n\nprecise device location\n\ndevelopers need to configure permissions in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.location" }\n  ]\n}\n\n\n# parameters:\n\nparameter name   type       required   description\ntimeout          number     no         set timeout in ms. default is 30000\nsuccess          function   yes        success callback\nfail             function   no         failure callback, possibly due to lack of permissions\ncomplete         function   no         callback after execution ends\n\n# return values for success:\n\nparameter name   type                                       description\nlongitude        number                                     longitude, floating-point number\nlatitude         number                                     latitude, floating-point number\naltitude         number                                     altitude/height in meters, floating-point number\nspeed            number                                     speed in m/s, floating-point number\naccuracy         number                                     accuracy, positive integer\naccuracyinfo     { horizontal: number, vertical: number }   accuracy information, including horizontal and vertical\n                                                            precision\n\n# error codes for fail:\n\nerror code   description\n203          function not supported\n204          timeout occurred\n\n# example:\n\ngeolocation.getlocation({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  }\n})\n\n\n\n# geolocation.subscribe(object)\n\nlisten for geolocation changes. if called multiple times, only the last call takes effect.\n\n# permission requirements\n\nprecise device location\n\ndevelopers need to configure permissions in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.location" }\n  ]\n}\n\n\n# parameters:\n\nparameter name   type       required   description\ncallback         function   yes        called back whenever location changes\nfail             function   no         failure callback\n\n# return values for callback:\n\nparameter name   type     description\nlongitude        number   longitude, floating-point number\nlatitude         number   latitude, floating-point number\naltitude         number   altitude/height in meters, floating-point number\nspeed            number   speed in m/s, floating-point number\naccuracy         number   accuracy, positive integer\n\n# error codes for fail:\n\nerror code   description\n203          function not supported\n\n# example:\n\ngeolocation.subscribe({\n  callback: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  }\n})\n\n\n\n# geolocation.unsubscribe()\n\ncancel listening for geolocation changes\n\n# permission requirements\n\nprecise device location\n\ndevelopers need to configure permissions in manifest.json:\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.location" }\n  ]\n}\n\n\n# parameters:\n\nnone\n\n# example:\n\ngeolocation.unsubscribe()\n\n\n\n# support details\n\ndevice product                            description\nxiaomi s1 pro sports health watch         not supported\nxiaomi band 8 pro                         not supported\nxiaomi watch s3                           supported\nredmi watch 4                             not supported\nxiaomi wrist ecg blood pressure monitor   not supported\nxiaomi watch s4                           supported\nredmi watch 5                             supported',charsets:{}},{title:"Sensor",frontmatter:{},regularPath:"/en/features/system/sensor.html",relativePath:"en/features/system/sensor.md",key:"v-44429b16",path:"/en/features/system/sensor.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:13},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:69},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:174},{level:3,title:"sensor.subscribePressure(OBJECT)",slug:"sensor-subscribepressure-object",normalizedTitle:"sensor.subscribepressure(object)",charIndex:199},{level:3,title:"sensor.unsubscribePressure()",slug:"sensor-unsubscribepressure",normalizedTitle:"sensor.unsubscribepressure()",charIndex:817},{level:3,title:"sensor.subscribeAccelerometer(OBJECT)",slug:"sensor-subscribeaccelerometer-object",normalizedTitle:"sensor.subscribeaccelerometer(object)",charIndex:955},{level:3,title:"sensor.unsubscribeAccelerometer(OBJECT)",slug:"sensor-unsubscribeaccelerometer-object",normalizedTitle:"sensor.unsubscribeaccelerometer(object)",charIndex:2236},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:2399}],headersStr:"Interface Declaration Import Module Interface Definition sensor.subscribePressure(OBJECT) sensor.unsubscribePressure() sensor.subscribeAccelerometer(OBJECT) sensor.unsubscribeAccelerometer(OBJECT) Support Details",content:"# Sensor\n\n\n# Interface Declaration\n\n{ \"name\": \"system.sensor\" }\n\n\n\n# Import Module\n\nimport sensor from '@system.sensor' \n// or \nconst sensor = require('@system.sensor')\n\n\n\n# Interface Definition\n\n\n# sensor.subscribePressure(OBJECT)\n\nListens for pressure sensor data. If called multiple times, only the last call will take effect.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\ncallback         Function   Yes        Called back each time the position information changes\n\n# Callback Return Value:\n\nPARAMETER NAME   TYPE     DESCRIPTION\npressure         Number   Pressure, in hpa (hectopascals). Rounded to five decimal\n                          places\n\n# Example:\n\nsensor.subscribePressure({\n  callback: function(ret) {\n    console.log(`handling callback, pressure = ${ret.pressure}`)\n  }\n})\n\n\n\n# sensor.unsubscribePressure()\n\nCancels pressure sensor data listening.\n\n# Parameters:\n\nNone\n\n# Example:\n\nsensor.unsubscribePressure()\n\n\n\n# sensor.subscribeAccelerometer(OBJECT)\n\nListens for accelerometer sensor data.\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\ninterval         String     No         The execution frequency of the callback function for\n                                       listening to accelerometer data. Default is normal.\ncallback         Function   Yes        This function is called back when gravity sensor data\n                                       changes.\nfail             Function   No         Callback for subscription errors.\n\n# Valid Values for interval:\n\nVALUE    DESCRIPTION\ngame     Suitable callback frequency for updating games, around 20ms\n         per call.\nui       Suitable callback frequency for updating UI, around 60ms per\n         call.\nnormal   Normal callback frequency, around 200ms per call.\n\n# Callback Return Value:\n\nPARAMETER NAME   TYPE      DESCRIPTION\nx                Integer   X-axis coordinate\ny                Integer   Y-axis coordinate\nz                Integer   Z-axis coordinate\n\n# Example:\n\nsensor.subscribeAccelerometer({\n  callback: function(ret) {\n    console.log(`handling callback, x = ${ret.x}, y = ${ret.y}, z = ${ret.z}`)\n  },\n  fail: function(msg, code) {\n    console.log(`handling callback, fail:`, msg, code)\n  }\n})\n\n\n\n# sensor.unsubscribeAccelerometer(OBJECT)\n\nCancels listening for accelerometer sensor data.\n\n# Parameters:\n\nNone\n\n# Example:\n\nsensor.unsubscribeAccelerometer()\n\n\n\n# Support Details\n\nINTERFACE                  SUPPORTED DEVICE PRODUCTS                             UNSUPPORTED DEVICE PRODUCTS\nsubscribePressure          Xiaomi Watch S3, Xiaomi Band 9 Pro, Xiaomi Watch S4   Xiaomi S1 Pro Sports Health Watch, Xiaomi Band 8 Pro, Xiaomi\n                                                                                 Band 9, Redmi Watch 4, Xiaomi Watch H1, REDMI Watch 5\nunsubscribePressure        Xiaomi Watch S3, Xiaomi Band 9 Pro, Xiaomi Watch S4   Xiaomi S1 Pro Sports Health Watch, Xiaomi Band 8 Pro, Xiaomi\n                                                                                 Band 9, Redmi Watch 4, Xiaomi Watch H1, REDMI Watch 5\nsubscribeAccelerometer     Xiaomi Band 9, Xiaomi Band 9 Pro                      Xiaomi Watch S3, Xiaomi S1 Pro Sports Health Watch, Xiaomi\n                                                                                 Band 8 Pro, Redmi Watch 4, Xiaomi Watch H1, Xiaomi Watch S4,\n                                                                                 REDMI Watch 5\nunsubscribeAccelerometer   Xiaomi Band 9, Xiaomi Band 9 Pro                      Xiaomi Watch S3, Xiaomi S1 Pro Sports Health Watch, Xiaomi\n                                                                                 Band 8 Pro, Redmi Watch 4, Xiaomi Watch H1, Xiaomi Watch S4,\n                                                                                 REDMI Watch 5",normalizedContent:"# sensor\n\n\n# interface declaration\n\n{ \"name\": \"system.sensor\" }\n\n\n\n# import module\n\nimport sensor from '@system.sensor' \n// or \nconst sensor = require('@system.sensor')\n\n\n\n# interface definition\n\n\n# sensor.subscribepressure(object)\n\nlistens for pressure sensor data. if called multiple times, only the last call will take effect.\n\n# parameters:\n\nparameter name   type       required   description\ncallback         function   yes        called back each time the position information changes\n\n# callback return value:\n\nparameter name   type     description\npressure         number   pressure, in hpa (hectopascals). rounded to five decimal\n                          places\n\n# example:\n\nsensor.subscribepressure({\n  callback: function(ret) {\n    console.log(`handling callback, pressure = ${ret.pressure}`)\n  }\n})\n\n\n\n# sensor.unsubscribepressure()\n\ncancels pressure sensor data listening.\n\n# parameters:\n\nnone\n\n# example:\n\nsensor.unsubscribepressure()\n\n\n\n# sensor.subscribeaccelerometer(object)\n\nlistens for accelerometer sensor data.\n\n# parameters:\n\nparameter name   type       required   description\ninterval         string     no         the execution frequency of the callback function for\n                                       listening to accelerometer data. default is normal.\ncallback         function   yes        this function is called back when gravity sensor data\n                                       changes.\nfail             function   no         callback for subscription errors.\n\n# valid values for interval:\n\nvalue    description\ngame     suitable callback frequency for updating games, around 20ms\n         per call.\nui       suitable callback frequency for updating ui, around 60ms per\n         call.\nnormal   normal callback frequency, around 200ms per call.\n\n# callback return value:\n\nparameter name   type      description\nx                integer   x-axis coordinate\ny                integer   y-axis coordinate\nz                integer   z-axis coordinate\n\n# example:\n\nsensor.subscribeaccelerometer({\n  callback: function(ret) {\n    console.log(`handling callback, x = ${ret.x}, y = ${ret.y}, z = ${ret.z}`)\n  },\n  fail: function(msg, code) {\n    console.log(`handling callback, fail:`, msg, code)\n  }\n})\n\n\n\n# sensor.unsubscribeaccelerometer(object)\n\ncancels listening for accelerometer sensor data.\n\n# parameters:\n\nnone\n\n# example:\n\nsensor.unsubscribeaccelerometer()\n\n\n\n# support details\n\ninterface                  supported device products                             unsupported device products\nsubscribepressure          xiaomi watch s3, xiaomi band 9 pro, xiaomi watch s4   xiaomi s1 pro sports health watch, xiaomi band 8 pro, xiaomi\n                                                                                 band 9, redmi watch 4, xiaomi watch h1, redmi watch 5\nunsubscribepressure        xiaomi watch s3, xiaomi band 9 pro, xiaomi watch s4   xiaomi s1 pro sports health watch, xiaomi band 8 pro, xiaomi\n                                                                                 band 9, redmi watch 4, xiaomi watch h1, redmi watch 5\nsubscribeaccelerometer     xiaomi band 9, xiaomi band 9 pro                      xiaomi watch s3, xiaomi s1 pro sports health watch, xiaomi\n                                                                                 band 8 pro, redmi watch 4, xiaomi watch h1, xiaomi watch s4,\n                                                                                 redmi watch 5\nunsubscribeaccelerometer   xiaomi band 9, xiaomi band 9 pro                      xiaomi watch s3, xiaomi s1 pro sports health watch, xiaomi\n                                                                                 band 8 pro, redmi watch 4, xiaomi watch h1, xiaomi watch s4,\n                                                                                 redmi watch 5",charsets:{}},{title:"Record",frontmatter:{},regularPath:"/en/features/system/record.html",relativePath:"en/features/system/record.md",key:"v-20507bb6",path:"/en/features/system/record.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:13},{level:2,title:"Importing the Module",slug:"importing-the-module",normalizedTitle:"importing the module",charIndex:69},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:181},{level:3,title:"record.start(OBJECT)",slug:"record-start-object",normalizedTitle:"record.start(object)",charIndex:206},{level:3,title:"record.stop()",slug:"record-stop",normalizedTitle:"record.stop()",charIndex:2074}],headersStr:"Interface Declaration Importing the Module Interface Definition record.start(OBJECT) record.stop()",content:"# Record\n\n\n# Interface Declaration\n\n{ \"name\": \"system.record\" }\n\n\n\n# Importing the Module\n\nimport record from '@system.record' \n// or \nconst record = require('@system.record')\n\n\n\n# Interface Definition\n\n\n# record.start(OBJECT)\n\nStarts recording\n\n# Parameters:\n\nPARAMETER NAME     TYPE       REQUIRED   DESCRIPTION\nduration           Number     No         Recording duration in ms. If duration is a valid value,\n                                         recording will stop when the specified value is reached\nsampleRate         Number     No         Sampling rate. The supported sampling rate ranges vary for\n                                         different audio formats. The default is 8000, and it is\n                                         recommended to use 8000/16000/32000/44100/48000\nnumberOfChannels   Number     No         Number of recording channels, valid values are 1/2\nencodeBitRate      Number     No         Encoding bitrate. The encoding bitrate value depends on the\n                                         sampling rate and audio format\nformat             String     No         Audio format, valid values are pcm/opus/wav. Defaults to pcm\nsuccess            Function   No         Success callback\nfail               Function   No         Failure callback\ncomplete           Function   No         Callback after execution is completed\n\n# success Return Value:\n\nPARAMETER NAME   TYPE     DESCRIPTION\nuri              String   Storage path of the recording file, located in the\n                          application's cache directory\n\n# fail Return Error Codes:\n\nERROR CODE   DESCRIPTION\n205          Recording is already in progress\n202          Parameter error\n\n# Example:\n\nrecord.start({\n  duration: 10000,\n  sampleRate: 8000,\n  numberOfChannels: 1,\n  encodeBitRate: 128000,\n  format: 'pcm',\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# record.stop()\n\nStops recording\n\n# Parameters:\n\nNone\n\n# Example:\n\nrecord.stop()\n",normalizedContent:"# record\n\n\n# interface declaration\n\n{ \"name\": \"system.record\" }\n\n\n\n# importing the module\n\nimport record from '@system.record' \n// or \nconst record = require('@system.record')\n\n\n\n# interface definition\n\n\n# record.start(object)\n\nstarts recording\n\n# parameters:\n\nparameter name     type       required   description\nduration           number     no         recording duration in ms. if duration is a valid value,\n                                         recording will stop when the specified value is reached\nsamplerate         number     no         sampling rate. the supported sampling rate ranges vary for\n                                         different audio formats. the default is 8000, and it is\n                                         recommended to use 8000/16000/32000/44100/48000\nnumberofchannels   number     no         number of recording channels, valid values are 1/2\nencodebitrate      number     no         encoding bitrate. the encoding bitrate value depends on the\n                                         sampling rate and audio format\nformat             string     no         audio format, valid values are pcm/opus/wav. defaults to pcm\nsuccess            function   no         success callback\nfail               function   no         failure callback\ncomplete           function   no         callback after execution is completed\n\n# success return value:\n\nparameter name   type     description\nuri              string   storage path of the recording file, located in the\n                          application's cache directory\n\n# fail return error codes:\n\nerror code   description\n205          recording is already in progress\n202          parameter error\n\n# example:\n\nrecord.start({\n  duration: 10000,\n  samplerate: 8000,\n  numberofchannels: 1,\n  encodebitrate: 128000,\n  format: 'pcm',\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# record.stop()\n\nstops recording\n\n# parameters:\n\nnone\n\n# example:\n\nrecord.stop()\n",charsets:{}},{title:"Download",frontmatter:{},regularPath:"/en/features/network/request.html",relativePath:"en/features/network/request.md",key:"v-ff2c43d4",path:"/en/features/network/request.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:15},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:72},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:181},{level:3,title:"request.download(OBJECT)",slug:"request-download-object",normalizedTitle:"request.download(object)",charIndex:206},{level:3,title:"request.onDownloadComplete(OBJECT)",slug:"request-ondownloadcomplete-object",normalizedTitle:"request.ondownloadcomplete(object)",charIndex:1293},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:2634}],headersStr:"Interface Declaration Import Module Interface Definition request.download(OBJECT) request.onDownloadComplete(OBJECT) Support Details",content:"# Download\n\n\n# Interface Declaration\n\n{ \"name\": \"system.request\" }\n\n\n\n# Import Module\n\nimport request from '@system.request' \n// or \nconst request = require('@system.request')\n\n\n\n# Interface Definition\n\n\n# request.download(OBJECT)\n\nDownload files\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nurl         String     Yes        Resource URL\nheader      String     No         Request header, all properties will be set to the header\n                                  part of the request\nfilename    String     No         Download filename. Default is obtained from the network\n                                  request or URL\nsuccess     Function   No         Callback function for successful response\nfail        Function   No         Callback function for failed response\ncomplete    Function   No         Callback function for completion (called on both success and\n                                  failure)\n\n# success Return Value:\n\nPARAMETER   TYPE     DESCRIPTION\ntoken       String   Download token, used to get the download status\n\n# Example:\n\nrequest.download({\n  url: 'http://www.example.com',\n  success: function(data) {\n    console.log(`handling success${data.token}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# request.onDownloadComplete(OBJECT)\n\nListen for download tasks\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\ntoken       String     Yes        Token returned by the download interface\nsuccess     Function   No         Callback function for successful response\nfail        Function   No         Callback function for failed response\ncomplete    Function   No         Callback function for completion (called on both success and\n                                  failure)\n\n# success Return Value:\n\nPARAMETER   TYPE     DESCRIPTION\nuri         String   URI of the downloaded file (by default, this file is in the\n                     application cache directory. If the file type is an image or\n                     video and it is required for the user to view it in\n                     applications like the gallery, the file needs to be\n                     transferred to a public directory. This can be achieved\n                     using the methods in the media interface)\n\n# fail Error Codes:\n\nERROR CODE   DESCRIPTION\n1000         Download failed\n1001         Download task does not exist\n\n# Example:\n\nrequest.onDownloadComplete({\n  token: '123',\n  success: function(data) {\n    console.log(`handling success${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# Support Details\n\nDEVICE PRODUCT                             DESCRIPTION\nXiaomi S1 Pro Sports Health Watch          Supported\nXiaomi Band 8 Pro                          Not supported\nXiaomi Watch S3                            Supported\nRedmi Watch 4                              Not supported\nXiaomi Wrist ECG Blood Pressure Recorder   Not supported\nXiaomi Watch S4                            Supported\nREDMI Watch 5                              Supported",normalizedContent:"# download\n\n\n# interface declaration\n\n{ \"name\": \"system.request\" }\n\n\n\n# import module\n\nimport request from '@system.request' \n// or \nconst request = require('@system.request')\n\n\n\n# interface definition\n\n\n# request.download(object)\n\ndownload files\n\n# parameters:\n\nparameter   type       required   description\nurl         string     yes        resource url\nheader      string     no         request header, all properties will be set to the header\n                                  part of the request\nfilename    string     no         download filename. default is obtained from the network\n                                  request or url\nsuccess     function   no         callback function for successful response\nfail        function   no         callback function for failed response\ncomplete    function   no         callback function for completion (called on both success and\n                                  failure)\n\n# success return value:\n\nparameter   type     description\ntoken       string   download token, used to get the download status\n\n# example:\n\nrequest.download({\n  url: 'http://www.example.com',\n  success: function(data) {\n    console.log(`handling success${data.token}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# request.ondownloadcomplete(object)\n\nlisten for download tasks\n\n# parameters:\n\nparameter   type       required   description\ntoken       string     yes        token returned by the download interface\nsuccess     function   no         callback function for successful response\nfail        function   no         callback function for failed response\ncomplete    function   no         callback function for completion (called on both success and\n                                  failure)\n\n# success return value:\n\nparameter   type     description\nuri         string   uri of the downloaded file (by default, this file is in the\n                     application cache directory. if the file type is an image or\n                     video and it is required for the user to view it in\n                     applications like the gallery, the file needs to be\n                     transferred to a public directory. this can be achieved\n                     using the methods in the media interface)\n\n# fail error codes:\n\nerror code   description\n1000         download failed\n1001         download task does not exist\n\n# example:\n\nrequest.ondownloadcomplete({\n  token: '123',\n  success: function(data) {\n    console.log(`handling success${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# support details\n\ndevice product                             description\nxiaomi s1 pro sports health watch          supported\nxiaomi band 8 pro                          not supported\nxiaomi watch s3                            supported\nredmi watch 4                              not supported\nxiaomi wrist ecg blood pressure recorder   not supported\nxiaomi watch s4                            supported\nredmi watch 5                              supported",charsets:{}},{title:"Vibration",frontmatter:{},regularPath:"/en/features/system/vibrator.html",relativePath:"en/features/system/vibrator.md",key:"v-75fe8b76",path:"/en/features/system/vibrator.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:16},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:74},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:187},{level:3,title:"vibrator.vibrate(OBJECT)",slug:"vibrator-vibrate-object",normalizedTitle:"vibrator.vibrate(object)",charIndex:212},{level:3,title:"vibrator.start(OBJECT)",slug:"vibrator-start-object",normalizedTitle:"vibrator.start(object)",charIndex:524},{level:3,title:"vibrator.stop(Number)",slug:"vibrator-stop-number",normalizedTitle:"vibrator.stop(number)",charIndex:1638},{level:3,title:"vibrator.getSystemDefaultMode()",slug:"vibrator-getsystemdefaultmode",normalizedTitle:"vibrator.getsystemdefaultmode()",charIndex:1877},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:2135}],headersStr:"Interface Declaration Import Module Interface Definition vibrator.vibrate(OBJECT) vibrator.start(OBJECT) vibrator.stop(Number) vibrator.getSystemDefaultMode() Support Details",content:'# Vibration\n\n\n# Interface Declaration\n\n{ "name": "system.vibrator" }\n\n\n\n# Import Module\n\nimport vibrator from \'@system.vibrator\' \n// or \nconst vibrator = require(\'@system.vibrator\')\n\n\n\n# Interface Definition\n\n\n# vibrator.vibrate(OBJECT)\n\nTrigger vibration\n\n# Parameters:\n\nPARAMETER   TYPE     REQUIRED   DESCRIPTION\nmode        String   No         Vibration mode, "long" for long vibration, "short" for short\n                                vibration. Defaults to long\n\n# Example:\n\nvibrator.vibrate({\n  mode: \'long\'\n})\n\n\n\n# vibrator.start(OBJECT)\n\nStart vibration\n\n# Parameters:\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nduration    Number     Yes        Vibration duration (in ms), must be a positive integer\ninterval    Number     Yes        Vibration interval (in ms), must be a positive integer\ncount       Number     Yes        Number of vibrations, must be a positive integer\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after execution ends\n\n# success Return Value:\n\nPARAMETER NAME   TYPE     DESCRIPTION\nid               Number   Unique ID identifying the vibration task\n\n# fail Return Value:\n\nERROR CODE   DESCRIPTION\n205          Task already exists\n202          Parameter error\n\n# Example:\n\nvibrator.start({\n  duration: 1000,\n  interval: 1000,\n  count: 10,\n  success: function (data) {\n    console.log(`handling success, id = ${data.id}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# vibrator.stop(Number)\n\nStop vibration\n\n# Parameters:\n\nTYPE     REQUIRED   DESCRIPTION\nNumber   Yes        Vibration task ID\n\n# Return Value:\n\nTYPE      DESCRIPTION\nBoolean   true: Success; false: Failure\n\n# Example:\n\nvibrator.stop(1)\n\n\n\n# vibrator.getSystemDefaultMode()\n\nGet system default vibration mode\n\n# Parameters:\n\nNone\n\n# Return Value:\n\nTYPE     DESCRIPTION\nNumber   0: Vibration off; 1: Standard vibration; 2: Enhanced\n         vibration\n\n# Example:\n\nvibrator.getSystemDefaultMode()\n\n\n\n# Support Details\n\nINTERFACE              SUPPORTED DEVICE PRODUCTS                                      UNSUPPORTED DEVICE PRODUCTS\nvibrate                Xiaomi S1 Pro Sports Health Watch, Xiaomi Band 8 Pro, Xiaomi   -\n                       Band 9, Redmi Watch 4, Xiaomi Watch H1, Xiaomi Watch S3,\n                       Xiaomi Band 9 Pro, Xiaomi Watch S4, REDMI Watch 5\nstart                  -                                                              Xiaomi Watch S3, Xiaomi Band 9 Pro, Xiaomi Watch S4, REDMI\n                                                                                      Watch 5, Xiaomi S1 Pro Sports Health Watch, Xiaomi Band 8\n                                                                                      Pro, Xiaomi Band 9, Redmi Watch 4, Xiaomi Watch H1\nstop                   -                                                              Xiaomi Watch S3, Xiaomi Band 9 Pro, Xiaomi Watch S4, REDMI\n                                                                                      Watch 5, Xiaomi S1 Pro Sports Health Watch, Xiaomi Band 8\n                                                                                      Pro, Xiaomi Band 9, Redmi Watch 4, Xiaomi Watch H1\ngetSystemDefaultMode   -                                                              Xiaomi Watch S3, Xiaomi Band 9 Pro, Xiaomi Watch S4, REDMI\n                                                                                      Watch 5, Xiaomi S1 Pro Sports Health Watch, Xiaomi Band 8\n                                                                                      Pro, Xiaomi Band 9, Redmi Watch 4, Xiaomi Watch H1',normalizedContent:'# vibration\n\n\n# interface declaration\n\n{ "name": "system.vibrator" }\n\n\n\n# import module\n\nimport vibrator from \'@system.vibrator\' \n// or \nconst vibrator = require(\'@system.vibrator\')\n\n\n\n# interface definition\n\n\n# vibrator.vibrate(object)\n\ntrigger vibration\n\n# parameters:\n\nparameter   type     required   description\nmode        string   no         vibration mode, "long" for long vibration, "short" for short\n                                vibration. defaults to long\n\n# example:\n\nvibrator.vibrate({\n  mode: \'long\'\n})\n\n\n\n# vibrator.start(object)\n\nstart vibration\n\n# parameters:\n\nparameter   type       required   description\nduration    number     yes        vibration duration (in ms), must be a positive integer\ninterval    number     yes        vibration interval (in ms), must be a positive integer\ncount       number     yes        number of vibrations, must be a positive integer\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after execution ends\n\n# success return value:\n\nparameter name   type     description\nid               number   unique id identifying the vibration task\n\n# fail return value:\n\nerror code   description\n205          task already exists\n202          parameter error\n\n# example:\n\nvibrator.start({\n  duration: 1000,\n  interval: 1000,\n  count: 10,\n  success: function (data) {\n    console.log(`handling success, id = ${data.id}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# vibrator.stop(number)\n\nstop vibration\n\n# parameters:\n\ntype     required   description\nnumber   yes        vibration task id\n\n# return value:\n\ntype      description\nboolean   true: success; false: failure\n\n# example:\n\nvibrator.stop(1)\n\n\n\n# vibrator.getsystemdefaultmode()\n\nget system default vibration mode\n\n# parameters:\n\nnone\n\n# return value:\n\ntype     description\nnumber   0: vibration off; 1: standard vibration; 2: enhanced\n         vibration\n\n# example:\n\nvibrator.getsystemdefaultmode()\n\n\n\n# support details\n\ninterface              supported device products                                      unsupported device products\nvibrate                xiaomi s1 pro sports health watch, xiaomi band 8 pro, xiaomi   -\n                       band 9, redmi watch 4, xiaomi watch h1, xiaomi watch s3,\n                       xiaomi band 9 pro, xiaomi watch s4, redmi watch 5\nstart                  -                                                              xiaomi watch s3, xiaomi band 9 pro, xiaomi watch s4, redmi\n                                                                                      watch 5, xiaomi s1 pro sports health watch, xiaomi band 8\n                                                                                      pro, xiaomi band 9, redmi watch 4, xiaomi watch h1\nstop                   -                                                              xiaomi watch s3, xiaomi band 9 pro, xiaomi watch s4, redmi\n                                                                                      watch 5, xiaomi s1 pro sports health watch, xiaomi band 8\n                                                                                      pro, xiaomi band 9, redmi watch 4, xiaomi watch h1\ngetsystemdefaultmode   -                                                              xiaomi watch s3, xiaomi band 9 pro, xiaomi watch s4, redmi\n                                                                                      watch 5, xiaomi s1 pro sports health watch, xiaomi band 8\n                                                                                      pro, xiaomi band 9, redmi watch 4, xiaomi watch h1',charsets:{}},{title:"System Volume",frontmatter:{},regularPath:"/en/features/system/volume.html",relativePath:"en/features/system/volume.md",key:"v-50ca41d4",path:"/en/features/system/volume.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:20},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:76},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:181},{level:3,title:"volume.getMediaValue (OBJECT)",slug:"volume-getmediavalue-object",normalizedTitle:"volume.getmediavalue (object)",charIndex:206},{level:3,title:"volume.setMediaValue (OBJECT)",slug:"volume-setmediavalue-object",normalizedTitle:"volume.setmediavalue (object)",charIndex:835},{level:2,title:"Events",slug:"events",normalizedTitle:"events",charIndex:1450},{level:3,title:"volume.onMediaValueChanged",slug:"volume-onmediavaluechanged",normalizedTitle:"volume.onmediavaluechanged",charIndex:1461}],headersStr:"Interface Declaration Import Module Interface Definition volume.getMediaValue (OBJECT) volume.setMediaValue (OBJECT) Events volume.onMediaValueChanged",content:"# System Volume\n\n\n# Interface Declaration\n\n{ \"name\": \"system.volume\" }\n\n\n\n# Import Module\n\nimport volume from '@system.volume' \n// or \nconst volume = require('@system.volume')\n\n\n\n# Interface Definition\n\n\n# volume.getMediaValue (OBJECT)\n\nGets the current media volume.\n\n# Parameters\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after execution ends\n\n# success Return Value:\n\nPARAMETER   TYPE     DESCRIPTION\nvalue       Number   Current system media volume, between 0.0 and 1.0\n\n# Example\n\nvolume.getMediaValue({\n  success: function(data) {\n    console.log(`handling success: ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# volume.setMediaValue (OBJECT)\n\nSets the current media volume.\n\n# Parameters\n\nPARAMETER   TYPE       REQUIRED   DESCRIPTION\nvalue       Number     Yes        Volume to set, between 0.0 and 1.0\nsuccess     Function   No         Success callback\nfail        Function   No         Failure callback\ncomplete    Function   No         Callback after execution ends\n\n# fail Return Value:\n\nSupports common error codes\n\n# Example\n\nvolume.setMediaValue({\n  value: 0.5,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# Events\n\n\n# volume.onMediaValueChanged\n\nTriggered when the media volume changes.\n\n# Callback Object Parameters:\n\nPARAMETER   TYPE     REQUIRED   DESCRIPTION\nvalue       Number   Yes        Current system media volume, range: between 0.0 and 1.0\n\n# Example\n\nvolume.onMediaValueChanged = function(res) {\n  console.log('volume media value changed:', res.value)\n}\n",normalizedContent:"# system volume\n\n\n# interface declaration\n\n{ \"name\": \"system.volume\" }\n\n\n\n# import module\n\nimport volume from '@system.volume' \n// or \nconst volume = require('@system.volume')\n\n\n\n# interface definition\n\n\n# volume.getmediavalue (object)\n\ngets the current media volume.\n\n# parameters\n\nparameter   type       required   description\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after execution ends\n\n# success return value:\n\nparameter   type     description\nvalue       number   current system media volume, between 0.0 and 1.0\n\n# example\n\nvolume.getmediavalue({\n  success: function(data) {\n    console.log(`handling success: ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# volume.setmediavalue (object)\n\nsets the current media volume.\n\n# parameters\n\nparameter   type       required   description\nvalue       number     yes        volume to set, between 0.0 and 1.0\nsuccess     function   no         success callback\nfail        function   no         failure callback\ncomplete    function   no         callback after execution ends\n\n# fail return value:\n\nsupports common error codes\n\n# example\n\nvolume.setmediavalue({\n  value: 0.5,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# events\n\n\n# volume.onmediavaluechanged\n\ntriggered when the media volume changes.\n\n# callback object parameters:\n\nparameter   type     required   description\nvalue       number   yes        current system media volume, range: between 0.0 and 1.0\n\n# example\n\nvolume.onmediavaluechanged = function(res) {\n  console.log('volume media value changed:', res.value)\n}\n",charsets:{}},{title:"Unzip",frontmatter:{},regularPath:"/en/features/system/zip.html",relativePath:"en/features/system/zip.md",key:"v-a1727e30",path:"/en/features/system/zip.html",headers:[{level:2,title:"Interface Declaration",slug:"interface-declaration",normalizedTitle:"interface declaration",charIndex:12},{level:2,title:"Import Module",slug:"import-module",normalizedTitle:"import module",charIndex:65},{level:2,title:"Interface Definition",slug:"interface-definition",normalizedTitle:"interface definition",charIndex:156},{level:3,title:"zip.decompress(OBJECT)",slug:"zip-decompress-object",normalizedTitle:"zip.decompress(object)",charIndex:181}],headersStr:"Interface Declaration Import Module Interface Definition zip.decompress(OBJECT)",content:"# Unzip\n\n\n# Interface Declaration\n\n{ \"name\": \"system.zip\" }\n\n\n\n# Import Module\n\nimport zip from '@system.zip'\n// or\nconst zip = require('@system.zip')\n\n\n\n# Interface Definition\n\n\n# zip.decompress(OBJECT)\n\nUnzip file\n\n# Parameters:\n\nPARAMETER NAME   TYPE       REQUIRED   DESCRIPTION\nsrcUri           String     Yes        URI of the source file, cannot be a tmp type URI\ndstUri           String     Yes        URI of the target directory, cannot be an application\n                                       resource path or a tmp type URI\nsuccess          Function   No         Success callback\nfail             Function   No         Failure callback\ncomplete         Function   No         Callback after execution ends\n\n# success Return Value:\n\nNone\n\n# fail Return Value:\n\nERROR CODE   DESCRIPTION\n202          Parameter error\n300          I/O error\n\n# Example:\n\nzip.decompress({\n  srcUri: 'internal://cache/test.zip',\n  dstUri: 'internal://files/unzip/',\n  success: function() {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# unzip\n\n\n# interface declaration\n\n{ \"name\": \"system.zip\" }\n\n\n\n# import module\n\nimport zip from '@system.zip'\n// or\nconst zip = require('@system.zip')\n\n\n\n# interface definition\n\n\n# zip.decompress(object)\n\nunzip file\n\n# parameters:\n\nparameter name   type       required   description\nsrcuri           string     yes        uri of the source file, cannot be a tmp type uri\ndsturi           string     yes        uri of the target directory, cannot be an application\n                                       resource path or a tmp type uri\nsuccess          function   no         success callback\nfail             function   no         failure callback\ncomplete         function   no         callback after execution ends\n\n# success return value:\n\nnone\n\n# fail return value:\n\nerror code   description\n202          parameter error\n300          i/o error\n\n# example:\n\nzip.decompress({\n  srcuri: 'internal://cache/test.zip',\n  dsturi: 'internal://files/unzip/',\n  success: function() {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{}},{title:"Overview",frontmatter:{},regularPath:"/en/guide/",relativePath:"en/guide/README.md",key:"v-19f13395",path:"/en/guide/",headers:[{level:2,title:"Application Features",slug:"application-features",normalizedTitle:"application features",charIndex:503},{level:2,title:"Application Scenarios",slug:"application-scenarios",normalizedTitle:"application scenarios",charIndex:2074},{level:2,title:"Technical Advantages",slug:"technical-advantages",normalizedTitle:"technical advantages",charIndex:3198},{level:3,title:"Front-End Development Paradigm",slug:"front-end-development-paradigm",normalizedTitle:"front-end development paradigm",charIndex:3341},{level:3,title:"Unified APIs and Components",slug:"unified-apis-and-components",normalizedTitle:"unified apis and components",charIndex:3878},{level:3,title:"High-Performance Rendering",slug:"high-performance-rendering",normalizedTitle:"high-performance rendering",charIndex:1310},{level:3,title:"Multi-Screen Adaptation",slug:"multi-screen-adaptation",normalizedTitle:"multi-screen adaptation",charIndex:4864},{level:2,title:"Application Development Process",slug:"application-development-process",normalizedTitle:"application development process",charIndex:5763},{level:3,title:"Environment Setup",slug:"environment-setup",normalizedTitle:"environment setup",charIndex:5799},{level:3,title:"Application Development",slug:"application-development",normalizedTitle:"application development",charIndex:5763},{level:3,title:"Running and Debugging",slug:"running-and-debugging",normalizedTitle:"running and debugging",charIndex:7256},{level:3,title:"Packaging and Publishing",slug:"packaging-and-publishing",normalizedTitle:"packaging and publishing",charIndex:7549}],headersStr:"Application Features Application Scenarios Technical Advantages Front-End Development Paradigm Unified APIs and Components High-Performance Rendering Multi-Screen Adaptation Application Development Process Environment Setup Application Development Running and Debugging Packaging and Publishing",content:"# Overview\n\nThe Xiaomi Vela JS application is a type of application developed by Xiaomi Inc., based on Xiaomi's IoT embedded software platform, Xiaomi Vela OS. This article will introduce the features, application scenarios, and development support of Xiaomi Vela JS applications, helping developers better understand and utilize this application type.\n\nIf you want to quickly learn how to develop Xiaomi Vela JS applications and get started promptly, please directly visit the Quick Start section.\n\n\n# Application Features\n\nXiaomi Vela JS applications are lightweight application models based on the Xiaomi Vela OS operating system, designed to provide a smoother and more convenient user experience for smart wearable devices. They possess the following notable features:\n\n * Lightweight: Xiaomi Vela JS applications adopt a lightweight architectural design. Compared to traditional applications, Xiaomi Vela JS applications have a smaller footprint, enabling them to load and run quickly, especially suitable for wearable devices with limited memory and processing capabilities.\n * Cross-Platform Compatibility: Xiaomi Vela JS applications support cross-device operation. Developers can develop once and run on multiple devices, significantly improving development efficiency and application popularity.\n * High-Performance Rendering: The system optimizes rendering capabilities, making application animations and interactions smoother and enhancing the user experience.\n * Security Performance: Xiaomi Vela OS ensures application security through a triple-isolation mechanism, protecting user data and device security.\n * Development Support: Xiaomi provides comprehensive development support. The development tools and documentation for Xiaomi Vela JS applications are complete, allowing developers to easily get started and quickly build high-quality applications. Xiaomi offers a range of development tools, including AIoT-IDE, supporting developers in developing and debugging Xiaomi Vela JS applications on operating systems such as Ubuntu, Windows, and MacOS.\n\n\n# Application Scenarios\n\nXiaomi Vela JS applications have a wide range of application scenarios and have been implemented in multiple products, covering various usage scenarios on smart wearable devices:\n\n * Health Monitoring: Applications can monitor users' health data such as heart rate and sleep quality in real-time, providing health advice and early warnings.\n * Sports Assistance: During user exercise, applications can record exercise data, providing exercise guidance and health management.\n * Message Reminders: Applications can display message reminders from devices such as mobile phones, allowing users to view important information without taking out their phones.\n * Mobile Payments: Applications can integrate payment functions, enabling users to complete payment operations directly on wearable devices, enhancing payment convenience.\n * Smart Control: As a control center for smart homes, applications can remotely operate smart devices at home, such as lights and air conditioners.\n * Daily Tools: Provide daily tool functions such as weather forecasts, alarms, and timers to meet users' diverse needs.\n\n\n# Technical Advantages\n\nCompared to traditional application frameworks, Xiaomi Vela JS applications have the following technical advantages:\n\n\n# Front-End Development Paradigm\n\nXiaomi Vela JS applications are developed using the JavaScript language and support the efficient front-end MVVM development paradigm and responsive UI framework, which are easy to learn and use. This allows developers to reduce the learning curve and shorten development cycles. This model aligns with the thinking habits of mainstream front-end developers, enabling them to quickly build feature-rich and interactive-friendly applications while reducing learning costs. Refer to Development Syntax.\n\n\n# Unified APIs and Components\n\nXiaomi Vela JS applications provide unified JS interfaces and UI components, allowing developers to not worry about differences in underlying hardware and operating systems, simplifying the development process while ensuring application quality and user experience.\n\n\n# High-Performance Rendering\n\n * Through architectural optimization, complex calculations are offloaded to the native layer, addressing the performance bottlenecks of the JS language, thereby achieving native-like operational efficiency and a smooth experience.\n * Provides rich animation capabilities, including over 30 interpolation and physical animations, which can be used for transition and scene-changing effects, making the user interface more vivid, interesting, and expressive.\n * Fully leverages hardware performance, maximizing the use of GPU and CPU hardware acceleration capabilities to make complex UI interfaces and animations smoother, achieving a full 60 fps effect.\n\n\n# Multi-Screen Adaptation\n\nMulti-screen adaptation is another major feature of the Xiaomi Vela JS application framework, specifically manifested in:\n\n * Adaptation Specifications: The framework supports adaptive screens of different shapes, sizes, and resolutions, ensuring that applications provide a good visual experience on various devices.\n * Design Specifications: Vela provides a set of technical specifications for multi-screen design, helping developers complete multi-screen adaptation of applications according to design drafts.\n * Multi-Screen UI Simulator: AIoT-IDE provides a multi-screen UI simulator, allowing developers to quickly preview the effects of applications on different screens and make necessary adjustments.\n * Adaptation Cases: Provides code examples and whole-site cases for multi-screen adaptation of common page elements for developers to refer to and learn from.\n\n\n# Application Development Process\n\n\n# Environment Setup\n\nXiaomi provides a range of development tools, including AIoT-IDE, supporting developers in developing and debugging Xiaomi Vela JS applications on operating systems such as Ubuntu, Windows, and MacOS. AIoT-IDE is an integrated development environment for Xiaomi Vela JS applications, providing a series of functions such as project initialization, coding, and debugging. Please refer to Install Environment to initialize the project.\n\n\n# Application Development\n\nAfter initializing the project, please refer to Project Structure to understand the roles of various files and directories in the project. The project consists of configuration files (manifest.json), template code (ux files), style code (css files), logic code (js files), and resource files (images, audio, etc.). Please refer to Project Configuration to configure project-related information.\n\nThe application development paradigm follows a declarative UI, similar to traditional web development paradigms. Pages and components in the project are all written in files with the ux suffix, which are composed of three parts: template, style, and script. Developers can use UI components, custom components, and styles to describe page structure and presentation effects by writing ux files, and use js scripts to define page data, implement lifecycle interfaces, general methods, event handling, etc. Please refer to Writing Page UI to learn more about page development.\n\n\n# Running and Debugging\n\nAIoT-IDE provides a built-in simulator that supports developers in launching the simulator to run and debug applications directly in the IDE, viewing the running effects in real-time. Please refer to Running and Debugging to learn how to run and debug applications.\n\n\n# Packaging and Publishing\n\nAfter completing the application development, developers can use the packaging function provided by AIoT-IDE to package the application into an installation package. Please refer to Packaging Projects to learn how to package applications. After successful project packaging, please refer to Publishing to publish the application.",normalizedContent:"# overview\n\nthe xiaomi vela js application is a type of application developed by xiaomi inc., based on xiaomi's iot embedded software platform, xiaomi vela os. this article will introduce the features, application scenarios, and development support of xiaomi vela js applications, helping developers better understand and utilize this application type.\n\nif you want to quickly learn how to develop xiaomi vela js applications and get started promptly, please directly visit the quick start section.\n\n\n# application features\n\nxiaomi vela js applications are lightweight application models based on the xiaomi vela os operating system, designed to provide a smoother and more convenient user experience for smart wearable devices. they possess the following notable features:\n\n * lightweight: xiaomi vela js applications adopt a lightweight architectural design. compared to traditional applications, xiaomi vela js applications have a smaller footprint, enabling them to load and run quickly, especially suitable for wearable devices with limited memory and processing capabilities.\n * cross-platform compatibility: xiaomi vela js applications support cross-device operation. developers can develop once and run on multiple devices, significantly improving development efficiency and application popularity.\n * high-performance rendering: the system optimizes rendering capabilities, making application animations and interactions smoother and enhancing the user experience.\n * security performance: xiaomi vela os ensures application security through a triple-isolation mechanism, protecting user data and device security.\n * development support: xiaomi provides comprehensive development support. the development tools and documentation for xiaomi vela js applications are complete, allowing developers to easily get started and quickly build high-quality applications. xiaomi offers a range of development tools, including aiot-ide, supporting developers in developing and debugging xiaomi vela js applications on operating systems such as ubuntu, windows, and macos.\n\n\n# application scenarios\n\nxiaomi vela js applications have a wide range of application scenarios and have been implemented in multiple products, covering various usage scenarios on smart wearable devices:\n\n * health monitoring: applications can monitor users' health data such as heart rate and sleep quality in real-time, providing health advice and early warnings.\n * sports assistance: during user exercise, applications can record exercise data, providing exercise guidance and health management.\n * message reminders: applications can display message reminders from devices such as mobile phones, allowing users to view important information without taking out their phones.\n * mobile payments: applications can integrate payment functions, enabling users to complete payment operations directly on wearable devices, enhancing payment convenience.\n * smart control: as a control center for smart homes, applications can remotely operate smart devices at home, such as lights and air conditioners.\n * daily tools: provide daily tool functions such as weather forecasts, alarms, and timers to meet users' diverse needs.\n\n\n# technical advantages\n\ncompared to traditional application frameworks, xiaomi vela js applications have the following technical advantages:\n\n\n# front-end development paradigm\n\nxiaomi vela js applications are developed using the javascript language and support the efficient front-end mvvm development paradigm and responsive ui framework, which are easy to learn and use. this allows developers to reduce the learning curve and shorten development cycles. this model aligns with the thinking habits of mainstream front-end developers, enabling them to quickly build feature-rich and interactive-friendly applications while reducing learning costs. refer to development syntax.\n\n\n# unified apis and components\n\nxiaomi vela js applications provide unified js interfaces and ui components, allowing developers to not worry about differences in underlying hardware and operating systems, simplifying the development process while ensuring application quality and user experience.\n\n\n# high-performance rendering\n\n * through architectural optimization, complex calculations are offloaded to the native layer, addressing the performance bottlenecks of the js language, thereby achieving native-like operational efficiency and a smooth experience.\n * provides rich animation capabilities, including over 30 interpolation and physical animations, which can be used for transition and scene-changing effects, making the user interface more vivid, interesting, and expressive.\n * fully leverages hardware performance, maximizing the use of gpu and cpu hardware acceleration capabilities to make complex ui interfaces and animations smoother, achieving a full 60 fps effect.\n\n\n# multi-screen adaptation\n\nmulti-screen adaptation is another major feature of the xiaomi vela js application framework, specifically manifested in:\n\n * adaptation specifications: the framework supports adaptive screens of different shapes, sizes, and resolutions, ensuring that applications provide a good visual experience on various devices.\n * design specifications: vela provides a set of technical specifications for multi-screen design, helping developers complete multi-screen adaptation of applications according to design drafts.\n * multi-screen ui simulator: aiot-ide provides a multi-screen ui simulator, allowing developers to quickly preview the effects of applications on different screens and make necessary adjustments.\n * adaptation cases: provides code examples and whole-site cases for multi-screen adaptation of common page elements for developers to refer to and learn from.\n\n\n# application development process\n\n\n# environment setup\n\nxiaomi provides a range of development tools, including aiot-ide, supporting developers in developing and debugging xiaomi vela js applications on operating systems such as ubuntu, windows, and macos. aiot-ide is an integrated development environment for xiaomi vela js applications, providing a series of functions such as project initialization, coding, and debugging. please refer to install environment to initialize the project.\n\n\n# application development\n\nafter initializing the project, please refer to project structure to understand the roles of various files and directories in the project. the project consists of configuration files (manifest.json), template code (ux files), style code (css files), logic code (js files), and resource files (images, audio, etc.). please refer to project configuration to configure project-related information.\n\nthe application development paradigm follows a declarative ui, similar to traditional web development paradigms. pages and components in the project are all written in files with the ux suffix, which are composed of three parts: template, style, and script. developers can use ui components, custom components, and styles to describe page structure and presentation effects by writing ux files, and use js scripts to define page data, implement lifecycle interfaces, general methods, event handling, etc. please refer to writing page ui to learn more about page development.\n\n\n# running and debugging\n\naiot-ide provides a built-in simulator that supports developers in launching the simulator to run and debug applications directly in the ide, viewing the running effects in real-time. please refer to running and debugging to learn how to run and debug applications.\n\n\n# packaging and publishing\n\nafter completing the application development, developers can use the packaging function provided by aiot-ide to package the application into an installation package. please refer to packaging projects to learn how to package applications. after successful project packaging, please refer to publishing to publish the application.",charsets:{}},{title:"Memory Optimization",frontmatter:{},regularPath:"/en/guide/best-practice/memory.html",relativePath:"en/guide/best-practice/memory.md",key:"v-ee2ffd94",path:"/en/guide/best-practice/memory.html",headers:[{level:2,title:"Code Considerations",slug:"code-considerations",normalizedTitle:"code considerations",charIndex:385},{level:2,title:"Reduce Package Size",slug:"reduce-package-size",normalizedTitle:"reduce package size",charIndex:5304}],headersStr:"Code Considerations Reduce Package Size",content:"# Memory Optimization\n\nDue to the limited memory of sports watches, third-party applications are required to have a relatively low memory footprint. Based on previous issues encountered, here is a checklist of considerations for third-party application development to help developers minimize the application's memory usage and meet the acceptance criteria for watch applications.\n\n\n# Code Considerations\n\n 1. For data unrelated to the UI that does not need to be bound, do not declare it in the viewModel's data to reduce observers or data proxies.\n\n<template>\n  <div>\n    <text>{{name}}</text>     \n  </div>\n</template>\n\n<script>\n  const someObj = { a: 1 } // Recommended\n  export default {\n    protected: {\n      name: 'aaa',\n      someObj: { // Not recommended\n        a: 1\n      }\n    }\n  }\n<\/script>\n\n\n 2. When updating page objects, try to update them in place instead of reassigning them to avoid allocating new memory space.\n\nexport default {\n  protected: {\n    list: [{\n      name: 'aa',\n      age: 22\n    }]\n  },\n  \n  onClick() {\n    // Not recommended\n    this.list = [{\n      name: 'bb',\n      age: 21\n    }]\n    // Recommended\n    this.list[0].name = 'bb',\n    this.list[0].age = 21\n  }\n}\n\n\n 3. Do not cache properties and methods declared in the page to the global scope.\n\nWhen the page is destroyed, properties and methods related to the page object are dereferenced to clean up memory. If they are referenced globally, the memory they occupy cannot be cleaned up, and calling these cached properties and methods elsewhere may cause errors.\n\nexport default {\n  protected: {\n    list: [{\n      name: 'aa',\n      age: 22\n    }]\n  },\n  \n  onShow() {\n    this.$app.$def.somearray.push(this.foo) // Not recommended\n  }，\n  \n  foo() {\n    this.list.push({\n      name: 'bb',\n      age: 21\n    })\n  }\n}\n\n\n 4. Clear unfinished timers when the page is destroyed.\n\nexport default {\n  protected: {\n    timer: null\n  }\n  \n  onShow() {\n    this.timer = setTimeout(()=>{}, 1000000)\n  }\n  \n  onDestroy() {\n    if(this.timer){\n      clearTimeout(this.timer)\n    }\n  }\n}\n\n\n 5. Release file data promptly after use.\n\nlet foo = await storage.getItem('key')\nlet bar = await file.readText('path')\n\nlet fooObj = JSON.parse(foo)\nlet barObj = JSON.parse(bar)\n\n// Release promptly after use\nfoo = null\nbar = null\n\nfooObj = null\nbarObj = null\n\n\n 6. Call the runGC method.\n\nBy calling the runGC method on the global global object, perform garbage collection in a timely manner to avoid memory leaks. Do not call it frequently to prevent page stuttering.\n\nglobal.runGC()\n\n\n 7. static property.\n\nThe template supports the static property. If the bound variable will not change later, adding the static marker helps the framework reduce dynamic nodes, thereby reducing memory usage and the time taken to delete objects when the page is destroyed.\n\n<template>\n  <div>\n    <text static >{{name}}</text>\n    <image static src=\"/assets/icon/a.png\"/>   \n  </div>\n</template>\n\n<script>\n  export default {\n    protected: {\n      name: 'aaa'\n    }\n  }\n<\/script>\n\n\nAdditionally, the .static modifier is supported on the template to mark a static attribute of a node. This is applicable when the attribute value of a node is assigned only once during initialization and does not change afterward. Usage syntax: attr.static=\"{{ attrValue }}\"\n\nNote\n\n * The if / for static attributes of nodes can only be modified using the .static modifier.\n * The static attribute of nodes has higher priority than .static. For nodes declared with the static attribute, there is no need to additionally declare the static modifier attr.static for a specific attribute.\n\n<template>\n  <div>\n    <div if.static=\"{{ bool }}\">\n      <text style=\"{{ styl }}\" someattr=\"{{ some }}\" class=\"{{ cls }}\" static>{{name}}</text>\n\n      <input style=\"{{ styl }}\" name=\"{{ some }}\" class=\"{{ cls }}\" value=\"{{ name }}\" static />\n    </div>\n\n    <text\n      if.static=\"{{ bool }}\"\n      style.static=\"{{ styl }}\"\n      someattr.static=\"{{ some }}\"\n      class.static=\"{{ cls }}\"\n      value.static\n    >{{name}}</text>\n\n    <input\n      if.static=\"{{ bool }}\"\n      style.static=\"{{ styl }}\"\n      someattr.static=\"{{ some }}\"\n      class.static=\"{{ cls }}\"\n      value.static=\"{{name}}\"\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      name: 'aaa',\n      bool: true,\n      cls: 'basic-text',\n      some: 'someattr',\n      styl: {\n        backgroundColor: '#d1d1d1'\n      }\n    }\n  }\n<\/script>\n\n\nThe block component is a logical block node. If the static attribute is added, it indicates that all nodes contained within the block have static data bindings, and the bound data is calculated only once and does not change afterward. This is suitable for binding enumerated values or immutable list data, effectively reducing memory usage.\n\n<template>\n  \x3c!-- Data within the block is calculated and rendered only once --\x3e\n  <block static>\n    <text class=\"{{cls}}\">Title: {{title}}</text>\n    <text>Conditional rendering</text>\n    <list>\n      <list-item for=\"{{list}}\" type=\"item\">\n        <text>{{$item}}</text>\n      </list-item>\n    </list>\n  </block>\n</template>\n<script>\n  export default {\n    private: {\n      title: 'I am title 1',\n      cls: 'txt-cls',\n      display: true,\n      list: ['a', 'b', 'c']\n    }\n  }\n<\/script>\n\n\n\n# Reduce Package Size\n\n 1. Reduce unnecessary third-party dependencies and choose lightweight alternatives.\n\nFor third-party dependencies in package.json, remove unused dependencies and replace necessary large dependencies with lightweight alternatives.\n\n 2. Use global methods.\n\nHang common methods, constants, and object instances on the global object to avoid importing them in pages. Access them directly from global when needed.\n\n// global.js\nimport foo from './foo'\nimport bar from './bar'\n\nglobal.foo = foo\nglobal.bar = bar\n\n// app.ux\nimport './global'\n\n\n// pages/xxx/index.js\nconst {foo, bar} = global\n\nexport default {\n    // Call foo and bar\n    //......\n}\n\n\nTaking QQ Music as an example, the following is a comparison of optimization effects before and after:\n\n                 BEFORE OPTIMIZATION   REPLACE WITH LIGHTWEIGHT DEPENDENCIES   USE GLOBAL METHODS\nLines of Code    21965                 13156                                   6807\nMaximum Memory   4842844               3295928                                 1872528\n\n 3. Use low-resolution images while ensuring image quality.\n\nLarge images consume more memory when loaded. Resize large images to smaller dimensions and then compress them (https://tinypng.com) to reduce their size.\n\n 4. Remove unused CSS and JS.\n\nDelete or comment out unused styles in CSS and unused variables and functions in JS to streamline the code.\n\n 5. Minimize the number of pages.\n\nImplement the application with the fewest pages possible without affecting business requirements to reduce code size and simplify application logic.",normalizedContent:"# memory optimization\n\ndue to the limited memory of sports watches, third-party applications are required to have a relatively low memory footprint. based on previous issues encountered, here is a checklist of considerations for third-party application development to help developers minimize the application's memory usage and meet the acceptance criteria for watch applications.\n\n\n# code considerations\n\n 1. for data unrelated to the ui that does not need to be bound, do not declare it in the viewmodel's data to reduce observers or data proxies.\n\n<template>\n  <div>\n    <text>{{name}}</text>     \n  </div>\n</template>\n\n<script>\n  const someobj = { a: 1 } // recommended\n  export default {\n    protected: {\n      name: 'aaa',\n      someobj: { // not recommended\n        a: 1\n      }\n    }\n  }\n<\/script>\n\n\n 2. when updating page objects, try to update them in place instead of reassigning them to avoid allocating new memory space.\n\nexport default {\n  protected: {\n    list: [{\n      name: 'aa',\n      age: 22\n    }]\n  },\n  \n  onclick() {\n    // not recommended\n    this.list = [{\n      name: 'bb',\n      age: 21\n    }]\n    // recommended\n    this.list[0].name = 'bb',\n    this.list[0].age = 21\n  }\n}\n\n\n 3. do not cache properties and methods declared in the page to the global scope.\n\nwhen the page is destroyed, properties and methods related to the page object are dereferenced to clean up memory. if they are referenced globally, the memory they occupy cannot be cleaned up, and calling these cached properties and methods elsewhere may cause errors.\n\nexport default {\n  protected: {\n    list: [{\n      name: 'aa',\n      age: 22\n    }]\n  },\n  \n  onshow() {\n    this.$app.$def.somearray.push(this.foo) // not recommended\n  }，\n  \n  foo() {\n    this.list.push({\n      name: 'bb',\n      age: 21\n    })\n  }\n}\n\n\n 4. clear unfinished timers when the page is destroyed.\n\nexport default {\n  protected: {\n    timer: null\n  }\n  \n  onshow() {\n    this.timer = settimeout(()=>{}, 1000000)\n  }\n  \n  ondestroy() {\n    if(this.timer){\n      cleartimeout(this.timer)\n    }\n  }\n}\n\n\n 5. release file data promptly after use.\n\nlet foo = await storage.getitem('key')\nlet bar = await file.readtext('path')\n\nlet fooobj = json.parse(foo)\nlet barobj = json.parse(bar)\n\n// release promptly after use\nfoo = null\nbar = null\n\nfooobj = null\nbarobj = null\n\n\n 6. call the rungc method.\n\nby calling the rungc method on the global global object, perform garbage collection in a timely manner to avoid memory leaks. do not call it frequently to prevent page stuttering.\n\nglobal.rungc()\n\n\n 7. static property.\n\nthe template supports the static property. if the bound variable will not change later, adding the static marker helps the framework reduce dynamic nodes, thereby reducing memory usage and the time taken to delete objects when the page is destroyed.\n\n<template>\n  <div>\n    <text static >{{name}}</text>\n    <image static src=\"/assets/icon/a.png\"/>   \n  </div>\n</template>\n\n<script>\n  export default {\n    protected: {\n      name: 'aaa'\n    }\n  }\n<\/script>\n\n\nadditionally, the .static modifier is supported on the template to mark a static attribute of a node. this is applicable when the attribute value of a node is assigned only once during initialization and does not change afterward. usage syntax: attr.static=\"{{ attrvalue }}\"\n\nnote\n\n * the if / for static attributes of nodes can only be modified using the .static modifier.\n * the static attribute of nodes has higher priority than .static. for nodes declared with the static attribute, there is no need to additionally declare the static modifier attr.static for a specific attribute.\n\n<template>\n  <div>\n    <div if.static=\"{{ bool }}\">\n      <text style=\"{{ styl }}\" someattr=\"{{ some }}\" class=\"{{ cls }}\" static>{{name}}</text>\n\n      <input style=\"{{ styl }}\" name=\"{{ some }}\" class=\"{{ cls }}\" value=\"{{ name }}\" static />\n    </div>\n\n    <text\n      if.static=\"{{ bool }}\"\n      style.static=\"{{ styl }}\"\n      someattr.static=\"{{ some }}\"\n      class.static=\"{{ cls }}\"\n      value.static\n    >{{name}}</text>\n\n    <input\n      if.static=\"{{ bool }}\"\n      style.static=\"{{ styl }}\"\n      someattr.static=\"{{ some }}\"\n      class.static=\"{{ cls }}\"\n      value.static=\"{{name}}\"\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      name: 'aaa',\n      bool: true,\n      cls: 'basic-text',\n      some: 'someattr',\n      styl: {\n        backgroundcolor: '#d1d1d1'\n      }\n    }\n  }\n<\/script>\n\n\nthe block component is a logical block node. if the static attribute is added, it indicates that all nodes contained within the block have static data bindings, and the bound data is calculated only once and does not change afterward. this is suitable for binding enumerated values or immutable list data, effectively reducing memory usage.\n\n<template>\n  \x3c!-- data within the block is calculated and rendered only once --\x3e\n  <block static>\n    <text class=\"{{cls}}\">title: {{title}}</text>\n    <text>conditional rendering</text>\n    <list>\n      <list-item for=\"{{list}}\" type=\"item\">\n        <text>{{$item}}</text>\n      </list-item>\n    </list>\n  </block>\n</template>\n<script>\n  export default {\n    private: {\n      title: 'i am title 1',\n      cls: 'txt-cls',\n      display: true,\n      list: ['a', 'b', 'c']\n    }\n  }\n<\/script>\n\n\n\n# reduce package size\n\n 1. reduce unnecessary third-party dependencies and choose lightweight alternatives.\n\nfor third-party dependencies in package.json, remove unused dependencies and replace necessary large dependencies with lightweight alternatives.\n\n 2. use global methods.\n\nhang common methods, constants, and object instances on the global object to avoid importing them in pages. access them directly from global when needed.\n\n// global.js\nimport foo from './foo'\nimport bar from './bar'\n\nglobal.foo = foo\nglobal.bar = bar\n\n// app.ux\nimport './global'\n\n\n// pages/xxx/index.js\nconst {foo, bar} = global\n\nexport default {\n    // call foo and bar\n    //......\n}\n\n\ntaking qq music as an example, the following is a comparison of optimization effects before and after:\n\n                 before optimization   replace with lightweight dependencies   use global methods\nlines of code    21965                 13156                                   6807\nmaximum memory   4842844               3295928                                 1872528\n\n 3. use low-resolution images while ensuring image quality.\n\nlarge images consume more memory when loaded. resize large images to smaller dimensions and then compress them (https://tinypng.com) to reduce their size.\n\n 4. remove unused css and js.\n\ndelete or comment out unused styles in css and unused variables and functions in js to streamline the code.\n\n 5. minimize the number of pages.\n\nimplement the application with the fewest pages possible without affecting business requirements to reduce code size and simplify application logic.",charsets:{}},{title:"Best Practices",frontmatter:{},regularPath:"/en/guide/best-practice/",relativePath:"en/guide/best-practice/README.md",key:"v-61711d96",path:"/en/guide/best-practice/",headersStr:null,content:"# Best Practices\n\nThis section primarily introduces some application development norms and best practices on how to reduce application latency and memory usage. It helps developers develop more concise, high-performance, and highly scalable applications.",normalizedContent:"# best practices\n\nthis section primarily introduces some application development norms and best practices on how to reduce application latency and memory usage. it helps developers develop more concise, high-performance, and highly scalable applications.",charsets:{}},{title:"Startup Latency Optimization",frontmatter:{},regularPath:"/en/guide/best-practice/start.html",relativePath:"en/guide/best-practice/start.md",key:"v-05f71e86",path:"/en/guide/best-practice/start.html",headers:[{level:2,title:"Avoid setTimeout Delay",slug:"avoid-settimeout-delay",normalizedTitle:"avoid settimeout delay",charIndex:35},{level:2,title:"Homepage Data Caching",slug:"homepage-data-caching",normalizedTitle:"homepage data caching",charIndex:3132},{level:2,title:"Avoid HTTP Requests on Logo Page",slug:"avoid-http-requests-on-logo-page",normalizedTitle:"avoid http requests on logo page",charIndex:3500},{level:2,title:"UI First",slug:"ui-first",normalizedTitle:"ui first",charIndex:3720},{level:2,title:"Use Static Data for Privacy Page Information",slug:"use-static-data-for-privacy-page-information",normalizedTitle:"use static data for privacy page information",charIndex:4015},{level:2,title:"Minimize Console Logging",slug:"minimize-console-logging",normalizedTitle:"minimize console logging",charIndex:4311},{level:2,title:"Image Caching/Cropping",slug:"image-caching-cropping",normalizedTitle:"image caching/cropping",charIndex:5124},{level:2,title:"Use diagnosis Method for Connection Status Before Communication in Communication Apps",slug:"use-diagnosis-method-for-connection-status-before-communication-in-communication-apps",normalizedTitle:"use diagnosis method for connection status before communication in communication apps",charIndex:7095},{level:2,title:"Use interconnect to Transfer Multiple Data Items",slug:"use-interconnect-to-transfer-multiple-data-items",normalizedTitle:"use interconnect to transfer multiple data items",charIndex:8109}],headersStr:"Avoid setTimeout Delay Homepage Data Caching Avoid HTTP Requests on Logo Page UI First Use Static Data for Privacy Page Information Minimize Console Logging Image Caching/Cropping Use diagnosis Method for Connection Status Before Communication in Communication Apps Use interconnect to Transfer Multiple Data Items",content:"# Startup Latency Optimization\n\n\n# Avoid setTimeout Delay\n\nWhen performing page redirects from the logo page, avoid adding setTimeout delays for the redirect unless absolutely necessary. If you need to wait for asynchronous results, such as determining the next page to redirect to after retrieving data from storage, it is recommended to encapsulate the asynchronous method as synchronous using await, and execute the redirect immediately after the results are returned. Taking storage as an example:\n\n// ❌ Not Recommended\nonInit(){\n  this.checkifHome()\n  setTimeout(() => {\n    if(!this.ifHome){\n      router.push({uri:'pages/home'})\n    }\n  },1000)\n}\ncheckifHome(){\n  const that = this \n  storage.get({\n    key: 'ifHome',\n    success: function(data) {\n      that.ifHome = data\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅ Recommended Approach 1\nonInit(){\n  storage.get({\n    key: 'ifHome',\n    success: function(data) {\n      if(!data){\n        router.push({uri:'pages/home'})\n      }\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅ Recommended Approach 2\nasync onInit(){\n  const ifHome = await checkifHome()\n  if(!ifHome){\n    router.push({uri:'pages/home'})\n  }\n}\ncheckifHome(){\n  return new Promise((resolve, reject) => {\n    storage.get({\n      key: 'ifHome',\n      success: function(data) {\n        resolve(data) \n      },\n      fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n        reject(code)\n      }\n    })\n  })\n}\n\n\n// ✅ Recommended Approach 3\n// You can encapsulate a unified promise.js for reuse with other asynchronous interfaces\nexport function promisify(fn) {\n  if (typeof fn !== 'function') {\n    throw Error('[promisify] the type of `fn` should be function');\n  }\n\n  return (opts={}) => {\n    let { success, fail, complete, ...args } = opts;\n\n    if (typeof success === 'function' || typeof fail === 'function' || typeof complete === 'function') {\n      console.warn('[promisify] [WARN] The `success`, `fail` and `complete` callback will be ignored');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        fn({\n          ...args,\n          success: data => resolve(data),\n          fail: (data, code) => {\n            let err = new Error(data);\n            err.code = code;\n            reject(err);\n          }\n        });\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n}\n\n// Unified encapsulation of storage methods\nimport storage from '@system.storage';\nimport {promisify} from './promise';\n\nconst _get = promisify(storage.get);\nconst _set = promisify(storage.set);\nconst _clear = promisify(storage.clear);\nconst _delete = promisify(storage.delete);\nexport default {\n  getItem(key) {\n    return _get({key});\n  },\n\n  setItem(key, value) {\n    return _set({key, value});\n  },\n\n  deleteItem(key) {\n    return _delete({key});\n  },\n\n  clear() {\n    return _clear();\n  },\n}\n\n// logo.ux\nasync onInit(){\n   const ifHome = await storage.getItem('ifHome')\n  if(!ifHome){\n     router.push({uri:'pages/home'})\n  }\n}\n\n\n\n# Homepage Data Caching\n\nIf the homepage data needs to be displayed again upon second entry, consider adding caching when the application (or homepage) exits. The next time you enter, read the cache from the logo page and store the data globally. The homepage page can read it directly during onInit and simultaneously initiate an asynchronous request to update it;\n\n\n# Avoid HTTP Requests on Logo Page\n\nIt is recommended not to introduce HTTP requests on the logo page; try to perform them on the homepage to prevent page redirects from being blocked in weak or no network conditions;\n\n\n# UI First\n\nFor applications like music apps, it is suggested to have a default state of not playing upon entering the app. The UI can be displayed first, and if song information is successfully retrieved, it can be shown immediately without waiting for the audio resource to load completely;\n\n\n# Use Static Data for Privacy Page Information\n\nUse static data in the code for the privacy page instead of dynamic fetching. For long text that needs to be displayed, it can be viewed via QR code scanning. The QR code can directly link to a local H5 page and should not be fetched via an API;\n\n\n# Minimize Console Logging\n\nMinimize console logging, especially long logs, as they significantly impact performance. Avoid very long (>10 lines) console logs and minimize printing JSON objects. If logging is necessary during debugging, use console.debug and configure quickapp.config.js (as shown below) to filter out console.debug logs when building the release package;\n\nconst TerserPlugin = require(\"terser-webpack-plugin\")\nconst webpack = require(\"webpack\")\n\nmodule.exports = {\n  postHook: (config) => {\n    if (config.mode === \"production\") {\n      config.optimization.minimize = true\n      config.optimization.minimizer = [\n        new TerserPlugin({\n          terserOptions: {\n            compress: {\n              pure_funcs: [\"console.debug\"]\n            }\n          }\n        })\n      ]\n    }\n  }\n}\n\n\n\n# Image Caching/Cropping\n\nFor large (>100kb) dynamic images, it is recommended to add a loading page during the first load, download and cache them locally, and then load them via internal://files/XXX.png for subsequent uses (Important: Generally, it is not recommended to introduce large online images unless necessary. The dimensions of introduced large images should not exceed the screen size, and the size should not exceed 200kb. Try to use local images instead of online images, or support resize cropping for online images).\n\n// login.ux\nexport function downloadFile(url) { // Download image\n  return new Promise((resolve, reject) => {\n    if(!url){\n      resolve('')\n    }\n    request.download({\n      url,\n      success: function (ret) {\n        const token = ret.token\n        request.onDownloadComplete({\n          token: token,\n          success: function (ret) {\n            console.info(`### request.download ### ret`,ret)\n            resolve(ret.uri)\n          },\n          fail: function (msg, code) {\n            console.info(`### request.onDownloadComplete ### ${code}: ${msg}`)\n            resolve(null)\n          }\n        })\n      }\n    })\n  })\n}\nconst formUrl = 'http://XXX.cdn.homeBg.png'\ndownloadFile(formUrl).then(url => {\n  global.homeBgUrl = url; // url => 'internal://files/homeBg.png'\n})\n \n// home.ux\n<image class=\"w-466 h-466\" src=\"{{bgImage}}\" alt=\"../../common/images/homeBg.png\"></image>\n//....\n  computed:{\n    bgImage() {\n      const img =  global.homeBgUrl || 'http://XXX.cdn.homeBg.png'\n      return img\n    }\n  }\n//....\n \n // logo page\n global.homeBgUrl = await storage.getItem('homeBgUrl')\n \n // Clean up images promptly based on condition changes\n logoOut(){\n   file.delete({\n    uri:global.homeBgUrl,\n    success: function(data) {\n      console.info(`###delFile sucess ${data}`)\n      resolve(true)\n    },\n    fail: function(data, code) {\n      resolve(false)\n      console.log(`###delFile fail, code = ${code}`)\n    }\n  })\n}\n\n\n\n# Use diagnosis Method for Connection Status Before Communication in Communication Apps\n\nWhen using interconnect for communication between the watch app and the phone app, abandon the previous polling method of calling getApkStatus and switch to the new API diagnosis.\n\ndata: {\n   status: '',\n   connectNum: 3,\n   conn: null\n},\nonInit() {\n   this.conn = interconnect.instance();\n   this.connectStatus();\n}, \n\n\n// ❌ Not Recommended\nconnectStatus() {\n  let status = this.conn.getApkStatus();\n  if (status === 'CONNECTED' || this.connectNum === 0){\n    this.status = status;\n    // do something\n  } else if (this.connectNum > 0) {\n    this.connectNum --;\n    setTimeout(() => {\n      this.connectStatus()\n    },500)\n  }\n}\n\n\n// ✅ Recommended\nconnectStatus() {\n  this.conn.diagnosis({\n    success: (data) => {\n      console.log(`handling success, status= ${data.status}`)\n      // do something\n    },\n    fail: (data,code) => {\n      console.log(`handling fail, code = ${code}`)\n      // do something\n    }\n  })\n}  \n\n\n\n# Use interconnect to Transfer Multiple Data Items\n\nWhen transferring multiple data items from the watch app to the phone app, if the number of items is not large, it is recommended to send them all at once without adding delays.\n\n// ❌ Not Recommended\nsendMsg(list) {\n  for (let x in list) { \n    setTimeout(() => {\n      this.conn.send({\n        data: list[x],\n        success: ()=>{ },\n        fail: (data: {data, code})=> { }\n      })\n    },x*500) \n  }\n}\n\n\n// ✅ Recommended\nsendMsg(list) {\n  for (let x in list) {            \n    this.conn.send({\n      data: list[x],\n      success: ()=>{ },\n      fail: (data: {data, code})=> { }\n    })\n  }\n}\n",normalizedContent:"# startup latency optimization\n\n\n# avoid settimeout delay\n\nwhen performing page redirects from the logo page, avoid adding settimeout delays for the redirect unless absolutely necessary. if you need to wait for asynchronous results, such as determining the next page to redirect to after retrieving data from storage, it is recommended to encapsulate the asynchronous method as synchronous using await, and execute the redirect immediately after the results are returned. taking storage as an example:\n\n// ❌ not recommended\noninit(){\n  this.checkifhome()\n  settimeout(() => {\n    if(!this.ifhome){\n      router.push({uri:'pages/home'})\n    }\n  },1000)\n}\ncheckifhome(){\n  const that = this \n  storage.get({\n    key: 'ifhome',\n    success: function(data) {\n      that.ifhome = data\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅ recommended approach 1\noninit(){\n  storage.get({\n    key: 'ifhome',\n    success: function(data) {\n      if(!data){\n        router.push({uri:'pages/home'})\n      }\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅ recommended approach 2\nasync oninit(){\n  const ifhome = await checkifhome()\n  if(!ifhome){\n    router.push({uri:'pages/home'})\n  }\n}\ncheckifhome(){\n  return new promise((resolve, reject) => {\n    storage.get({\n      key: 'ifhome',\n      success: function(data) {\n        resolve(data) \n      },\n      fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n        reject(code)\n      }\n    })\n  })\n}\n\n\n// ✅ recommended approach 3\n// you can encapsulate a unified promise.js for reuse with other asynchronous interfaces\nexport function promisify(fn) {\n  if (typeof fn !== 'function') {\n    throw error('[promisify] the type of `fn` should be function');\n  }\n\n  return (opts={}) => {\n    let { success, fail, complete, ...args } = opts;\n\n    if (typeof success === 'function' || typeof fail === 'function' || typeof complete === 'function') {\n      console.warn('[promisify] [warn] the `success`, `fail` and `complete` callback will be ignored');\n    }\n\n    return new promise((resolve, reject) => {\n      try {\n        fn({\n          ...args,\n          success: data => resolve(data),\n          fail: (data, code) => {\n            let err = new error(data);\n            err.code = code;\n            reject(err);\n          }\n        });\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n}\n\n// unified encapsulation of storage methods\nimport storage from '@system.storage';\nimport {promisify} from './promise';\n\nconst _get = promisify(storage.get);\nconst _set = promisify(storage.set);\nconst _clear = promisify(storage.clear);\nconst _delete = promisify(storage.delete);\nexport default {\n  getitem(key) {\n    return _get({key});\n  },\n\n  setitem(key, value) {\n    return _set({key, value});\n  },\n\n  deleteitem(key) {\n    return _delete({key});\n  },\n\n  clear() {\n    return _clear();\n  },\n}\n\n// logo.ux\nasync oninit(){\n   const ifhome = await storage.getitem('ifhome')\n  if(!ifhome){\n     router.push({uri:'pages/home'})\n  }\n}\n\n\n\n# homepage data caching\n\nif the homepage data needs to be displayed again upon second entry, consider adding caching when the application (or homepage) exits. the next time you enter, read the cache from the logo page and store the data globally. the homepage page can read it directly during oninit and simultaneously initiate an asynchronous request to update it;\n\n\n# avoid http requests on logo page\n\nit is recommended not to introduce http requests on the logo page; try to perform them on the homepage to prevent page redirects from being blocked in weak or no network conditions;\n\n\n# ui first\n\nfor applications like music apps, it is suggested to have a default state of not playing upon entering the app. the ui can be displayed first, and if song information is successfully retrieved, it can be shown immediately without waiting for the audio resource to load completely;\n\n\n# use static data for privacy page information\n\nuse static data in the code for the privacy page instead of dynamic fetching. for long text that needs to be displayed, it can be viewed via qr code scanning. the qr code can directly link to a local h5 page and should not be fetched via an api;\n\n\n# minimize console logging\n\nminimize console logging, especially long logs, as they significantly impact performance. avoid very long (>10 lines) console logs and minimize printing json objects. if logging is necessary during debugging, use console.debug and configure quickapp.config.js (as shown below) to filter out console.debug logs when building the release package;\n\nconst terserplugin = require(\"terser-webpack-plugin\")\nconst webpack = require(\"webpack\")\n\nmodule.exports = {\n  posthook: (config) => {\n    if (config.mode === \"production\") {\n      config.optimization.minimize = true\n      config.optimization.minimizer = [\n        new terserplugin({\n          terseroptions: {\n            compress: {\n              pure_funcs: [\"console.debug\"]\n            }\n          }\n        })\n      ]\n    }\n  }\n}\n\n\n\n# image caching/cropping\n\nfor large (>100kb) dynamic images, it is recommended to add a loading page during the first load, download and cache them locally, and then load them via internal://files/xxx.png for subsequent uses (important: generally, it is not recommended to introduce large online images unless necessary. the dimensions of introduced large images should not exceed the screen size, and the size should not exceed 200kb. try to use local images instead of online images, or support resize cropping for online images).\n\n// login.ux\nexport function downloadfile(url) { // download image\n  return new promise((resolve, reject) => {\n    if(!url){\n      resolve('')\n    }\n    request.download({\n      url,\n      success: function (ret) {\n        const token = ret.token\n        request.ondownloadcomplete({\n          token: token,\n          success: function (ret) {\n            console.info(`### request.download ### ret`,ret)\n            resolve(ret.uri)\n          },\n          fail: function (msg, code) {\n            console.info(`### request.ondownloadcomplete ### ${code}: ${msg}`)\n            resolve(null)\n          }\n        })\n      }\n    })\n  })\n}\nconst formurl = 'http://xxx.cdn.homebg.png'\ndownloadfile(formurl).then(url => {\n  global.homebgurl = url; // url => 'internal://files/homebg.png'\n})\n \n// home.ux\n<image class=\"w-466 h-466\" src=\"{{bgimage}}\" alt=\"../../common/images/homebg.png\"></image>\n//....\n  computed:{\n    bgimage() {\n      const img =  global.homebgurl || 'http://xxx.cdn.homebg.png'\n      return img\n    }\n  }\n//....\n \n // logo page\n global.homebgurl = await storage.getitem('homebgurl')\n \n // clean up images promptly based on condition changes\n logoout(){\n   file.delete({\n    uri:global.homebgurl,\n    success: function(data) {\n      console.info(`###delfile sucess ${data}`)\n      resolve(true)\n    },\n    fail: function(data, code) {\n      resolve(false)\n      console.log(`###delfile fail, code = ${code}`)\n    }\n  })\n}\n\n\n\n# use diagnosis method for connection status before communication in communication apps\n\nwhen using interconnect for communication between the watch app and the phone app, abandon the previous polling method of calling getapkstatus and switch to the new api diagnosis.\n\ndata: {\n   status: '',\n   connectnum: 3,\n   conn: null\n},\noninit() {\n   this.conn = interconnect.instance();\n   this.connectstatus();\n}, \n\n\n// ❌ not recommended\nconnectstatus() {\n  let status = this.conn.getapkstatus();\n  if (status === 'connected' || this.connectnum === 0){\n    this.status = status;\n    // do something\n  } else if (this.connectnum > 0) {\n    this.connectnum --;\n    settimeout(() => {\n      this.connectstatus()\n    },500)\n  }\n}\n\n\n// ✅ recommended\nconnectstatus() {\n  this.conn.diagnosis({\n    success: (data) => {\n      console.log(`handling success, status= ${data.status}`)\n      // do something\n    },\n    fail: (data,code) => {\n      console.log(`handling fail, code = ${code}`)\n      // do something\n    }\n  })\n}  \n\n\n\n# use interconnect to transfer multiple data items\n\nwhen transferring multiple data items from the watch app to the phone app, if the number of items is not large, it is recommended to send them all at once without adding delays.\n\n// ❌ not recommended\nsendmsg(list) {\n  for (let x in list) { \n    settimeout(() => {\n      this.conn.send({\n        data: list[x],\n        success: ()=>{ },\n        fail: (data: {data, code})=> { }\n      })\n    },x*500) \n  }\n}\n\n\n// ✅ recommended\nsendmsg(list) {\n  for (let x in list) {            \n    this.conn.send({\n      data: list[x],\n      success: ()=>{ },\n      fail: (data: {data, code})=> { }\n    })\n  }\n}\n",charsets:{cjk:!0}},{title:"Common Business Optimization",frontmatter:{},regularPath:"/en/guide/best-practice/business.html",relativePath:"en/guide/best-practice/business.md",key:"v-1c129c56",path:"/en/guide/best-practice/business.html",headers:[{level:2,title:"List and Long Copy Optimization",slug:"list-and-long-copy-optimization",normalizedTitle:"list and long copy optimization",charIndex:35},{level:2,title:"Swiper Multi-Image Optimization",slug:"swiper-multi-image-optimization",normalizedTitle:"swiper multi-image optimization",charIndex:2689},{level:2,title:"Device Frame Rate Optimization Suggestions",slug:"device-frame-rate-optimization-suggestions",normalizedTitle:"device frame rate optimization suggestions",charIndex:6365},{level:2,title:"Other Optimization Suggestions",slug:"other-optimization-suggestions",normalizedTitle:"other optimization suggestions",charIndex:6743}],headersStr:"List and Long Copy Optimization Swiper Multi-Image Optimization Device Frame Rate Optimization Suggestions Other Optimization Suggestions",content:'# Common Business Optimization\n\n\n# List and Long Copy Optimization\n\nDescription\n\nOptimization methods for long lists and long copy (e.g., lengthy privacy agreements, user agreements) during display\n\n * List\n   \n   When rendering a list initially, if the content exceeds 10 items, it is recommended to use pagination or trigger new data requests upon reaching the bottom. Avoid rendering a large amount of data initially, as it can cause page rendering lag.\n\n * Long Copy\n   \n   Long copy typically involves displaying a large amount of text on small device screens, such as "User Agreement," "Privacy Agreement," "Minor Protection Agreement," etc.\n   \n   * It is usually recommended to display the agreement link via a QR code. Scanning the code to view on a mobile device is a common design practice.\n   * If the product requires full rendering at once, it may cause page rendering lag and affect the initial user experience. Here, chunked rendering of the copy is recommended. Below is a code example:\n\n\x3c!-- Area for rendering the copy, with handleScroll scroll listener bound --\x3e\n<template>\n  <scroll id="scroll" scroll-y="true" class="scroll" onscroll="handleScroll">\n    <div id="content" class="connent">\n      <block if="{{currentKey >= 0}}">\n        <text class="header-1">{{contentArray[0]}}</text>\n      </block>\n        <block if="{{currentKey >= 1}}">\n        <text class="header-1">{{contentArray[1]}}</text>\n      </block>\n        <block if="{{currentKey >= 2}}">\n        <text class="header-1">{{contentArray[2]}}</text>\n      </block>\n    </div>\n  </scroll>\n</template>\n\x3c!-- Save the copy content as an array and record the sequence number of the currently rendered copy --\x3e\n<script>\nexport default {\n  data:{\n    contentArray:[\n      {\n        content:\'Copy one..........\'\n      },\n      {\n        content:\'Copy two..........\'\n      },\n      {\n        content:\'Copy three..........\'\n      }\n    ],\n    // Current sequence number of the rendered copy\n    currentKey:0,\n    // Current total height\n    currentTHEight:0,\n  }\n  // Assign initial value to current total height onReady\n  onReady(){\n    this.$element(\'content\').getBoundingClientRect({\n      success: (data) => {\n        const { height } = data;\n        this.currentTHEight = height\n      }\n    })\n  }\n  // Real-time judgment of scroll height vs. total height; load next copy if near bottom, and reassign total height\n  handleScroll(e) {\n    if(currentTHEight - e.scrollY <40){\n        this.currentKey = currentKey + 1\n    }\n    this.$element(\'content\').getBoundingClientRect({\n      success: (data) => {\n        const { height } = data;\n        this.currentTHEight = height\n      }\n    })\n  }\n}\n\n<\/script>\n\n\n\n# Swiper Multi-Image Optimization\n\nDescription\n\nWhen using the swiper carousel, if there are many images, avoid rendering multiple images simultaneously. Ensure only images within and around the visible area are rendered.\n\nSuppose an album has 200 images to display, creating 200 sub-components in the swiper is not performance-friendly. Therefore, consider displaying only 3 sub-components in the swiper and dynamically updating the images in the sub-components during swiping to achieve lazy loading in the Swiper. The main process for right-swipe lazy loading is as follows:\n\n * Right-Swipe Lazy Loading Process Assume an array of 5 images data=[0,1,2,3,4] needs to be displayed in a swiper with 3 sub-components.\n   \n   1. When the user clicks the first image, the swiper data is data[0], data[1], data[2]\n   2. When swiping from the first to the second image, the swiper array remains data[0], data[1], data[2]\n   3. When swiping from the second to the third image, modify the first component\'s data in the swiper to the next data of the third image data[3], and set the loop property of the swiper to true. At this point, the swiper data is data[3], data[1], data[2];\n   4. When swiping from data[3] to data[4], note that data[4] is the last data. If the last data is not in the last component of the swiper, reset all data in the swiper to data[len-3], data[len-2], data[len-1] to ensure the last image is in the last component of the swiper, and set loop to false to prevent swiping from the last to the first image.\n\nSwiper Lazy Loading Example\n * Specific Implementation Idea\n\nMonitor the swiper\'s swiping via the @change event in the code. The logic for judging left and right swipes is as follows:\n\n// Judge right swipe\nif (\n  (!(this.currentIndex === 0 && index === length - 1) && index > this.currentIndex) ||\n  (index === 0 && this.currentIndex === length - 1)\n) {\n}else{\n}\n\n\nThe logic for right swiping is as follows:\n\n// Update data index\nthis.dataIndex = this.dataIndex + 1\n// Update next right swipe index\nconst updateIndex = this.dataIndex + 1\nif (updateIndex < this.bigThumbnailInfo.length) {\n  // Update next right swipe to the next image\n  updateItem = this.bigThumbnailInfo[updateIndex]\n  // If swiping from the first image\n  if (this.currentIndex === 0) {\n    // Before swiping, it\'s the first image; update the last in swiper after right swipe\n    this.data[length - 1] = updateItem\n    resIndex = length - 1\n  } else {\n    // console.info("Right swipe: update left")\n    this.data[this.currentIndex - 1] = updateItem\n    resIndex = this.currentIndex - 1\n  }\n}\n\n\nThe logic for left swiping is as follows:\n\n// Update data index\nthis.dataIndex = this.dataIndex - 1\n// Update next right swipe index\nconst updateIndex = this.dataIndex - 1\n// Update next left swipe to the previous image\nupdateItem = this.bigThumbnailInfo[updateIndex]\nif (this.currentIndex === length - 1) {\n  // Before swiping, it\'s the last image; update the first in swiper after left swipe\n  this.data[0] = updateItem\n  resIndex = 0\n} else {\n  this.data[this.currentIndex + 1] = updateItem\n  resIndex = this.currentIndex + 1\n}\n\n\nJudge if the current image is the last one:\n\nthis.data = [\n  this.bigThumbnailInfo[len - 3],\n  this.bigThumbnailInfo[len - 2],\n  this.bigThumbnailInfo[len - 1]\n]\nindexTemp = 2\nthis.swiperIndex = this.currentIndex\nthis.isloop = false\n\n\nJudge if the upcoming image is the first one:\n\nthis.data = [\n  this.bigThumbnailInfo[0],\n  this.bigThumbnailInfo[1],\n  this.bigThumbnailInfo[2]\n]\nindexTemp = 0\nthis.swiperIndex = this.currentIndex\nthis.isloop = false\n\n\nIf it\'s neither the first nor the last image, set the swiper\'s loop to true:\n\nthis.isloop = true\n\n\n\n# Device Frame Rate Optimization Suggestions\n\n * When there are background images or images, minimize the use of border-radius and use images with rounded corners instead.\n * Ensure the image size matches the size of the div or image component to avoid scaling.\n * Reduce modifications to dynamic styles.\n * Minimize the nesting level of tags.\n * Reduce reflows and repaints.\n\n\n# Other Optimization Suggestions\n\n * Add try-catch blocks to catch exceptions.\n * For scenarios with slow data requests, consider adding a loading indicator.',normalizedContent:'# common business optimization\n\n\n# list and long copy optimization\n\ndescription\n\noptimization methods for long lists and long copy (e.g., lengthy privacy agreements, user agreements) during display\n\n * list\n   \n   when rendering a list initially, if the content exceeds 10 items, it is recommended to use pagination or trigger new data requests upon reaching the bottom. avoid rendering a large amount of data initially, as it can cause page rendering lag.\n\n * long copy\n   \n   long copy typically involves displaying a large amount of text on small device screens, such as "user agreement," "privacy agreement," "minor protection agreement," etc.\n   \n   * it is usually recommended to display the agreement link via a qr code. scanning the code to view on a mobile device is a common design practice.\n   * if the product requires full rendering at once, it may cause page rendering lag and affect the initial user experience. here, chunked rendering of the copy is recommended. below is a code example:\n\n\x3c!-- area for rendering the copy, with handlescroll scroll listener bound --\x3e\n<template>\n  <scroll id="scroll" scroll-y="true" class="scroll" onscroll="handlescroll">\n    <div id="content" class="connent">\n      <block if="{{currentkey >= 0}}">\n        <text class="header-1">{{contentarray[0]}}</text>\n      </block>\n        <block if="{{currentkey >= 1}}">\n        <text class="header-1">{{contentarray[1]}}</text>\n      </block>\n        <block if="{{currentkey >= 2}}">\n        <text class="header-1">{{contentarray[2]}}</text>\n      </block>\n    </div>\n  </scroll>\n</template>\n\x3c!-- save the copy content as an array and record the sequence number of the currently rendered copy --\x3e\n<script>\nexport default {\n  data:{\n    contentarray:[\n      {\n        content:\'copy one..........\'\n      },\n      {\n        content:\'copy two..........\'\n      },\n      {\n        content:\'copy three..........\'\n      }\n    ],\n    // current sequence number of the rendered copy\n    currentkey:0,\n    // current total height\n    currenttheight:0,\n  }\n  // assign initial value to current total height onready\n  onready(){\n    this.$element(\'content\').getboundingclientrect({\n      success: (data) => {\n        const { height } = data;\n        this.currenttheight = height\n      }\n    })\n  }\n  // real-time judgment of scroll height vs. total height; load next copy if near bottom, and reassign total height\n  handlescroll(e) {\n    if(currenttheight - e.scrolly <40){\n        this.currentkey = currentkey + 1\n    }\n    this.$element(\'content\').getboundingclientrect({\n      success: (data) => {\n        const { height } = data;\n        this.currenttheight = height\n      }\n    })\n  }\n}\n\n<\/script>\n\n\n\n# swiper multi-image optimization\n\ndescription\n\nwhen using the swiper carousel, if there are many images, avoid rendering multiple images simultaneously. ensure only images within and around the visible area are rendered.\n\nsuppose an album has 200 images to display, creating 200 sub-components in the swiper is not performance-friendly. therefore, consider displaying only 3 sub-components in the swiper and dynamically updating the images in the sub-components during swiping to achieve lazy loading in the swiper. the main process for right-swipe lazy loading is as follows:\n\n * right-swipe lazy loading process assume an array of 5 images data=[0,1,2,3,4] needs to be displayed in a swiper with 3 sub-components.\n   \n   1. when the user clicks the first image, the swiper data is data[0], data[1], data[2]\n   2. when swiping from the first to the second image, the swiper array remains data[0], data[1], data[2]\n   3. when swiping from the second to the third image, modify the first component\'s data in the swiper to the next data of the third image data[3], and set the loop property of the swiper to true. at this point, the swiper data is data[3], data[1], data[2];\n   4. when swiping from data[3] to data[4], note that data[4] is the last data. if the last data is not in the last component of the swiper, reset all data in the swiper to data[len-3], data[len-2], data[len-1] to ensure the last image is in the last component of the swiper, and set loop to false to prevent swiping from the last to the first image.\n\nswiper lazy loading example\n * specific implementation idea\n\nmonitor the swiper\'s swiping via the @change event in the code. the logic for judging left and right swipes is as follows:\n\n// judge right swipe\nif (\n  (!(this.currentindex === 0 && index === length - 1) && index > this.currentindex) ||\n  (index === 0 && this.currentindex === length - 1)\n) {\n}else{\n}\n\n\nthe logic for right swiping is as follows:\n\n// update data index\nthis.dataindex = this.dataindex + 1\n// update next right swipe index\nconst updateindex = this.dataindex + 1\nif (updateindex < this.bigthumbnailinfo.length) {\n  // update next right swipe to the next image\n  updateitem = this.bigthumbnailinfo[updateindex]\n  // if swiping from the first image\n  if (this.currentindex === 0) {\n    // before swiping, it\'s the first image; update the last in swiper after right swipe\n    this.data[length - 1] = updateitem\n    resindex = length - 1\n  } else {\n    // console.info("right swipe: update left")\n    this.data[this.currentindex - 1] = updateitem\n    resindex = this.currentindex - 1\n  }\n}\n\n\nthe logic for left swiping is as follows:\n\n// update data index\nthis.dataindex = this.dataindex - 1\n// update next right swipe index\nconst updateindex = this.dataindex - 1\n// update next left swipe to the previous image\nupdateitem = this.bigthumbnailinfo[updateindex]\nif (this.currentindex === length - 1) {\n  // before swiping, it\'s the last image; update the first in swiper after left swipe\n  this.data[0] = updateitem\n  resindex = 0\n} else {\n  this.data[this.currentindex + 1] = updateitem\n  resindex = this.currentindex + 1\n}\n\n\njudge if the current image is the last one:\n\nthis.data = [\n  this.bigthumbnailinfo[len - 3],\n  this.bigthumbnailinfo[len - 2],\n  this.bigthumbnailinfo[len - 1]\n]\nindextemp = 2\nthis.swiperindex = this.currentindex\nthis.isloop = false\n\n\njudge if the upcoming image is the first one:\n\nthis.data = [\n  this.bigthumbnailinfo[0],\n  this.bigthumbnailinfo[1],\n  this.bigthumbnailinfo[2]\n]\nindextemp = 0\nthis.swiperindex = this.currentindex\nthis.isloop = false\n\n\nif it\'s neither the first nor the last image, set the swiper\'s loop to true:\n\nthis.isloop = true\n\n\n\n# device frame rate optimization suggestions\n\n * when there are background images or images, minimize the use of border-radius and use images with rounded corners instead.\n * ensure the image size matches the size of the div or image component to avoid scaling.\n * reduce modifications to dynamic styles.\n * minimize the nesting level of tags.\n * reduce reflows and repaints.\n\n\n# other optimization suggestions\n\n * add try-catch blocks to catch exceptions.\n * for scenarios with slow data requests, consider adding a loading indicator.',charsets:{cjk:!0}},{title:"Design Guidelines",frontmatter:{},regularPath:"/en/guide/design/",relativePath:"en/guide/design/README.md",key:"v-1154cd55",path:"/en/guide/design/",headersStr:null,content:"# Design Guidelines\n\nNotes on VELA device design.\n\n * Multi-Screen Design",normalizedContent:"# design guidelines\n\nnotes on vela device design.\n\n * multi-screen design",charsets:{}},{title:"Multi-screen Design",frontmatter:{},regularPath:"/en/guide/design/multi-screens.html",relativePath:"en/guide/design/multi-screens.md",key:"v-2d7e6276",path:"/en/guide/design/multi-screens.html",headers:[{level:2,title:"Xiaomi Smart Wearable Devices",slug:"xiaomi-smart-wearable-devices",normalizedTitle:"xiaomi smart wearable devices",charIndex:26},{level:2,title:"Design Recommendations",slug:"design-recommendations",normalizedTitle:"design recommendations",charIndex:1414},{level:2,title:"Safe Area Adaptation for Curved Screens",slug:"safe-area-adaptation-for-curved-screens",normalizedTitle:"safe area adaptation for curved screens",charIndex:2446}],headersStr:"Xiaomi Smart Wearable Devices Design Recommendations Safe Area Adaptation for Curved Screens",content:"# Multi-screen Design\n\n\n# Xiaomi Smart Wearable Devices\n\nCurrently, Xiaomi wearable devices equipped with the Vela system are primarily smartwatches and smart bands. The watch screens are circular or rectangular, while the band screens are mainly rectangular and capsule-shaped.\n\nData reference for released Vela wearable devices:\n\nDEVICE TYPE   DEVICE MODEL              SCREEN SHAPE                   SCREEN SIZE   RESOLUTION   PPI   DPR\nWatch         Xiaomi Watch S1 Pro       Circular                       1.47 inches   480x480      326   2.0\nWatch         Xiaomi Watch H1           Circular                       1.43 inches   466x466      326   2.0\nWatch         Xiaomi Watch S3           Circular                       1.43 inches   466x466      326   2.0\nWatch         Xiaomi Watch S4 sport     Circular                       1.43 inches   466x466      326   2.0\nWatch         Xiaomi Watch S4           Circular                       1.43 inches   466x466      326   2.0\nWatch         REDMI Watch 5             Rectangular                    2.07 inches   432x514      324   2.0\nBand          Xiaomi Smart Band 8 Pro   Rectangular                    1.74 inches   336x480      336   2.1\nBand          Xiaomi Smart Band 9       Capsule-shaped (track-style)   1.62 inches   192x490      325   2\nBand          Xiaomi Smart Band 9 Pro   Rectangular                    1.74 inches   336x480      336   2.1\n\n\n# Design Recommendations\n\nWhen integrating products, design decisions can be made based on the application scenarios and the adaptable product forms. If the product scenario allows for good interaction across various screen forms such as smart bands and watches, it is recommended to create three types of design drafts to accommodate the interaction schemes for capsule-shaped, circular, and rectangular screens.\n\nData reference for different screen shapes:\n\nSCREEN SHAPE               CIRCULAR SCREEN   RECTANGULAR SCREEN   CAPSULE SCREEN\nAspect Ratio Range         W/H=1             0.5<=W/H<1           0.3<W/H<0.5\nRecommended Aspect Ratio   1                 0.7                  0.39\nRecommended Resolution     466x466           336x480              192x490\n\nIt is recommended to design three sets of UI interactions to adapt to the three main screen types. If the designs for circular and rectangular screens can be reused, one set can be designed for circular and rectangular screens, and another set for capsule screens.\n\n\n# Safe Area Adaptation for Curved Screens\n\nFor circular and capsule-shaped screens, the curved screen edges can cause some display issues. When designing the UI, it is necessary to consider the safe area of the screen and design the main functions within the safe area.\n\nFor example, when displaying text or content lists, it is important to consider the completeness and interactivity of the display at the edges.\n\nThe gray areas in the illustration represent the safe areas for circular and capsule screens, respectively.",normalizedContent:"# multi-screen design\n\n\n# xiaomi smart wearable devices\n\ncurrently, xiaomi wearable devices equipped with the vela system are primarily smartwatches and smart bands. the watch screens are circular or rectangular, while the band screens are mainly rectangular and capsule-shaped.\n\ndata reference for released vela wearable devices:\n\ndevice type   device model              screen shape                   screen size   resolution   ppi   dpr\nwatch         xiaomi watch s1 pro       circular                       1.47 inches   480x480      326   2.0\nwatch         xiaomi watch h1           circular                       1.43 inches   466x466      326   2.0\nwatch         xiaomi watch s3           circular                       1.43 inches   466x466      326   2.0\nwatch         xiaomi watch s4 sport     circular                       1.43 inches   466x466      326   2.0\nwatch         xiaomi watch s4           circular                       1.43 inches   466x466      326   2.0\nwatch         redmi watch 5             rectangular                    2.07 inches   432x514      324   2.0\nband          xiaomi smart band 8 pro   rectangular                    1.74 inches   336x480      336   2.1\nband          xiaomi smart band 9       capsule-shaped (track-style)   1.62 inches   192x490      325   2\nband          xiaomi smart band 9 pro   rectangular                    1.74 inches   336x480      336   2.1\n\n\n# design recommendations\n\nwhen integrating products, design decisions can be made based on the application scenarios and the adaptable product forms. if the product scenario allows for good interaction across various screen forms such as smart bands and watches, it is recommended to create three types of design drafts to accommodate the interaction schemes for capsule-shaped, circular, and rectangular screens.\n\ndata reference for different screen shapes:\n\nscreen shape               circular screen   rectangular screen   capsule screen\naspect ratio range         w/h=1             0.5<=w/h<1           0.3<w/h<0.5\nrecommended aspect ratio   1                 0.7                  0.39\nrecommended resolution     466x466           336x480              192x490\n\nit is recommended to design three sets of ui interactions to adapt to the three main screen types. if the designs for circular and rectangular screens can be reused, one set can be designed for circular and rectangular screens, and another set for capsule screens.\n\n\n# safe area adaptation for curved screens\n\nfor circular and capsule-shaped screens, the curved screen edges can cause some display issues. when designing the ui, it is necessary to consider the safe area of the screen and design the main functions within the safe area.\n\nfor example, when displaying text or content lists, it is important to consider the completeness and interactivity of the display at the edges.\n\nthe gray areas in the illustration represent the safe areas for circular and capsule screens, respectively.",charsets:{}},{title:"Extension Components",frontmatter:{},regularPath:"/en/guide/developer-materials/extension-components.html",relativePath:"en/guide/developer-materials/extension-components.md",key:"v-ccfcc414",path:"/en/guide/developer-materials/extension-components.html",headers:[{level:2,title:"input-method",slug:"input-method",normalizedTitle:"input-method",charIndex:27},{level:3,title:"Overview",slug:"overview",normalizedTitle:"overview",charIndex:44},{level:3,title:"Example Previews",slug:"example-previews",normalizedTitle:"example previews",charIndex:236},{level:3,title:"Project Address",slug:"project-address",normalizedTitle:"project address",charIndex:384}],headersStr:"input-method Overview Example Previews Project Address",content:"# Extension Components\n\n\n# input-method\n\n\n# Overview\n\nAn input method component that adapts to different screen shapes and supports two mainstream keyboard layouts: full-keyboard mode and T9 mode for both Chinese and English input.\n\n\n# Example Previews\n\n# Full-Keyboard Mode\n\n * Circular Screen\n\n\n\n * Rectangular Screen\n\n\n\n * Pill-Shaped Screen\n\n\n\n# T9 Mode\n\n * Circular Screen\n\n\n\n\n# Project Address\n\n * Github",normalizedContent:"# extension components\n\n\n# input-method\n\n\n# overview\n\nan input method component that adapts to different screen shapes and supports two mainstream keyboard layouts: full-keyboard mode and t9 mode for both chinese and english input.\n\n\n# example previews\n\n# full-keyboard mode\n\n * circular screen\n\n\n\n * rectangular screen\n\n\n\n * pill-shaped screen\n\n\n\n# t9 mode\n\n * circular screen\n\n\n\n\n# project address\n\n * github",charsets:{}},{title:"Framework Introduction",frontmatter:{},regularPath:"/en/guide/framework/",relativePath:"en/guide/framework/README.md",key:"v-4511cdf5",path:"/en/guide/framework/",headers:[{level:2,title:"File Structure",slug:"file-structure",normalizedTitle:"file structure",charIndex:522},{level:2,title:"Application Framework",slug:"application-framework",normalizedTitle:"application framework",charIndex:967},{level:3,title:"Routing Management",slug:"routing-management",normalizedTitle:"routing management",charIndex:993},{level:3,title:"Data Binding",slug:"data-binding",normalizedTitle:"data binding",charIndex:1405},{level:3,title:"UI Components",slug:"ui-components",normalizedTitle:"ui components",charIndex:1705},{level:3,title:"Native Interfaces",slug:"native-interfaces",normalizedTitle:"native interfaces",charIndex:1993}],headersStr:"File Structure Application Framework Routing Management Data Binding UI Components Native Interfaces",content:"# Framework Introduction\n\nThis application framework is a set of tools for application development, primarily utilizing a front-end development technology stack. It adopts a popular front-end development model that aligns with the thinking habits of mainstream front-end developers. Additionally, it significantly enhances application performance, provides access to a range of system capabilities that are unavailable in front-end environments, and offers integration capabilities with numerous third-party services.\n\n\n# File Structure\n\nThe application consists of a manifest.json file and multiple page ux files. The manifest.json file defines information such as application description, functional permission declarations, system configurations, and page routing. The page ux files implement the specifics of individual pages, including UI templates, stylesheets, data definitions, and callback event handling. For detailed usage, refer to Project Structure.\n\n\n# Application Framework\n\n\n# Routing Management\n\nThe framework manages the page routing of the entire application, enabling seamless transitions between pages and overseeing the complete lifecycle of each page. Developers are required to register pages in the manifest.json file and implement page transitions using the interface methods provided by the framework. For detailed usage, refer to Project Configuration and Page Transition.\n\n\n# Data Binding\n\nData binding simplifies the synchronization between data and views. When data modifications occur, developers only need to update the data in the logic layer, and the view layer will automatically reflect these changes. For detailed usage of data binding, refer to Template Syntax.\n\n\n# UI Components\n\nThe framework provides a set of basic UI components. In addition to supporting common HTML5 tags, such as <div> and <input>, the framework also offers component tags related to native UI, such as <switch>, <slider>, and <list>. For detailed usage, refer to Components.\n\n\n# Native Interfaces\n\nThe framework also offers a rich set of native interfaces, encompassing both general system functionalities and integrations with third-party services, such as network requests and local storage. These APIs can significantly reduce the workload for developers and facilitate rapid application development. For detailed usage, refer to Interfaces.",normalizedContent:"# framework introduction\n\nthis application framework is a set of tools for application development, primarily utilizing a front-end development technology stack. it adopts a popular front-end development model that aligns with the thinking habits of mainstream front-end developers. additionally, it significantly enhances application performance, provides access to a range of system capabilities that are unavailable in front-end environments, and offers integration capabilities with numerous third-party services.\n\n\n# file structure\n\nthe application consists of a manifest.json file and multiple page ux files. the manifest.json file defines information such as application description, functional permission declarations, system configurations, and page routing. the page ux files implement the specifics of individual pages, including ui templates, stylesheets, data definitions, and callback event handling. for detailed usage, refer to project structure.\n\n\n# application framework\n\n\n# routing management\n\nthe framework manages the page routing of the entire application, enabling seamless transitions between pages and overseeing the complete lifecycle of each page. developers are required to register pages in the manifest.json file and implement page transitions using the interface methods provided by the framework. for detailed usage, refer to project configuration and page transition.\n\n\n# data binding\n\ndata binding simplifies the synchronization between data and views. when data modifications occur, developers only need to update the data in the logic layer, and the view layer will automatically reflect these changes. for detailed usage of data binding, refer to template syntax.\n\n\n# ui components\n\nthe framework provides a set of basic ui components. in addition to supporting common html5 tags, such as <div> and <input>, the framework also offers component tags related to native ui, such as <switch>, <slider>, and <list>. for detailed usage, refer to components.\n\n\n# native interfaces\n\nthe framework also offers a rich set of native interfaces, encompassing both general system functionalities and integrations with third-party services, such as network requests and local storage. these apis can significantly reduce the workload for developers and facilitate rapid application development. for detailed usage, refer to interfaces.",charsets:{}},{title:"Project Configuration",frontmatter:{},regularPath:"/en/guide/framework/manifest.html",relativePath:"en/guide/framework/manifest.md",key:"v-2935b8f6",path:"/en/guide/framework/manifest.html",headers:[{level:2,title:"manifest",slug:"manifest",normalizedTitle:"manifest",charIndex:29},{level:3,title:"config",slug:"config",normalizedTitle:"config",charIndex:2202},{level:3,title:"minAPILevel",slug:"minapilevel",normalizedTitle:"minapilevel",charIndex:1445},{level:3,title:"router",slug:"router",normalizedTitle:"router",charIndex:2323},{level:3,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:7514},{level:3,title:"display",slug:"display",normalizedTitle:"display",charIndex:803},{level:3,title:"Permission Descriptions",slug:"permission-descriptions",normalizedTitle:"permission descriptions",charIndex:8198}],headersStr:"manifest config minAPILevel router Example Code display Permission Descriptions",content:'# Project Configuration\n\nThe manifest.json file contains application descriptions, interface declarations, and page routing information.\n\n\n# manifest\n\nPROPERTY         TYPE            DEFAULT VALUE   REQUIRED   DESCRIPTION\npackage          String          -               Yes        Application package name. Ensure it is different from the\n                                                            native application\'s package name. It is recommended to use\n                                                            the format com.company.module, e.g., com.example.demo.\nname             String          -               Yes        Application name. Within 6 Chinese characters and consistent\n                                                            with the name saved in the app store. Used to display the\n                                                            application name on desktop icons, pop-ups, etc.\nicon             String          -               Yes        Application icon. A 192x192 size is sufficient.\nversionName      String          -               No         Application version name, e.g., "1.0".\nversionCode      Integer         -               Yes        Application version number, incremented from 1. It is\n                                                            recommended to increment versionCode by 1 each time the\n                                                            package is re-uploaded.\nminAPILevel      Integer         1               No         Minimum supported API standard version number. Compatibility\n                                                            check to avoid running on low-version platforms and causing\n                                                            incompatibility. If not filled, it will be treated as a beta\n                                                            version.\nfeatures         Array           -               No         Interface list. Most interfaces need to be declared here;\n                                                            otherwise, they cannot be called. See the documentation for\n                                                            each interface for details.\nconfig           Object          -               Yes        System configuration information. See the description below.\nrouter           Object          -               Yes        Routing information. See the description below.\ndisplay          Object          -               No         UI display-related configuration. See the description below.\ndeviceTypeList   Array<String>   watch           No         Optional values: watch, tv, car, phone. Currently, only\n                                                            watch is supported.\npermissions      Array           -               No         Permission requests. Example: [{"name":\n                                                            "hapjs.permission.LOCATION"}]\n\n\n# config\n\nUsed to define system configurations and global data.\n\nPROPERTY      TYPE      DEFAULT VALUE   DESCRIPTION\nlogLevel      String    log             Log printing level, divided into off, error, warn, info,\n                                        log, debug.\ndesignWidth   Integer   -               Page design reference width. Scales element sizes based on\n                                        the actual device width.\nbackground    Object    -               Background running configuration information. Use the\n                                        features field to request interfaces that need to be used in\n                                        the background (while still declaring them in the top-level\n                                        features field). Requestable interfaces include:\n                                        system.audio\n                                        system.geolocation\n                                        system.request, etc.\n                                        See Background Running for detailed usage.\n\n\n# minAPILevel\n\nThe minimum supported API standard version number, indicating that the developer\'s rpk package can be compatible and run on devices that implement at least this version of the API standard. The default value is 1. When using features added in API standard version 1 or higher, ensure that minAPILevel is at least this version number to avoid errors when running on devices that implement lower API standard versions.\n\nExample:\n\n{\n  "minAPILevel": 1\n}\n\n\n\n# router\n\nUsed to define the composition of pages and related configuration information. If a page does not have routing information configured, it will be skipped during compilation and packaging.\n\nPROPERTY   TYPE     DEFAULT VALUE   REQUIRED   DESCRIPTION\nentry      String   -               Yes        Homepage name. When using the sub-package feature, it is\n                                               recommended to define the homepage in the base package.\npages      Object   -               Yes        Page configuration list. The key value is the page name\n                                               (corresponding to the page directory name, e.g., Hello\n                                               corresponds to the \'Hello\' directory), and the value is the\n                                               detailed page configuration page. See the description below.\n\nExample code:\n\n"router": {\n  "entry": "Demo",\n  "pages": {\n    "Demo": {\n      "component": "index"\n    }\n  }\n}\n\n\n# router.pages\n\nUsed to define routing information for a single page.\n\nPROPERTY     TYPE     DEFAULT VALUE   REQUIRED   DESCRIPTION\ncomponent    String   -               Yes        The component name corresponding to the page, consistent\n                                                 with the ux file name, e.g., "hello" corresponds to\n                                                 "hello.ux".\npath         String   /<page-name>    No         Page path, e.g., "/user". If not filled, it defaults to\n                                                 /<page-name>.\n                                                 The path must be unique and cannot be the same as another\n                                                 page\'s path.\n                                                 The path of the following page will be set to "/Index" due\n                                                 to its absence:\n                                                 "Index": {"component": "index"}\nlaunchMode   String   standard        No         Declares the page\'s launch mode. Supports two page launch\n                                                 modes: "singleTask" and "standard".\n                                                 When set to "singleTask" mode, each time the target page is\n                                                 opened, the existing target page will be opened, and the\n                                                 onRefresh lifecycle function will be called, clearing other\n                                                 pages opened on this page. If this page has not been opened\n                                                 before, a new target page instance will be created.\n                                                 When set to "standard" mode, a new target page will be\n                                                 opened each time (multiple identical pages will exist when\n                                                 the target page address is opened multiple times).\n\n\n# Example Code\n\n{\n  "package": "com.company.unit",\n  "name": "appName",\n  "icon": "/Common/icon.png",\n  "versionName": "1.0",\n  "versionCode": 1,\n  "minPlatformVersion": 1000,\n  "features": [{"name": "system.network"}],\n  "router": {\n    "entry": "Hello",\n    "pages": {\n      "Hello": {\n        "component": "hello",\n        "path": "/"\n      }\n    }\n  }\n}\n\n\n\n# display\n\nUsed to define UI display-related configurations.\n\nIf the following property values are defined under the display object, their scope of effect will be all pages of this JS application.\n\nPROPERTY          TYPE     DEFAULT VALUE   DESCRIPTION\nbackgroundColor   String   #ffffff         Window background color.\n\n\n# Permission Descriptions\n\nPERMISSION NAME                FEATURE              API           DESCRIPTION              PERMISSION ERROR CODES\nhapjs.permission.LOCATION      system.geolocation   getLocation   Geolocation              400: Permission denied\n                                                    subscribe                              402: Permission error (permission not declared)\n                                                    unsubscribe\nhapjs.permission.DEVICE_INFO   system.device        getSerial     Get device information   400: Permission denied\n                                                    getDeviceId                            402: Permission error (permission not declared)',normalizedContent:'# project configuration\n\nthe manifest.json file contains application descriptions, interface declarations, and page routing information.\n\n\n# manifest\n\nproperty         type            default value   required   description\npackage          string          -               yes        application package name. ensure it is different from the\n                                                            native application\'s package name. it is recommended to use\n                                                            the format com.company.module, e.g., com.example.demo.\nname             string          -               yes        application name. within 6 chinese characters and consistent\n                                                            with the name saved in the app store. used to display the\n                                                            application name on desktop icons, pop-ups, etc.\nicon             string          -               yes        application icon. a 192x192 size is sufficient.\nversionname      string          -               no         application version name, e.g., "1.0".\nversioncode      integer         -               yes        application version number, incremented from 1. it is\n                                                            recommended to increment versioncode by 1 each time the\n                                                            package is re-uploaded.\nminapilevel      integer         1               no         minimum supported api standard version number. compatibility\n                                                            check to avoid running on low-version platforms and causing\n                                                            incompatibility. if not filled, it will be treated as a beta\n                                                            version.\nfeatures         array           -               no         interface list. most interfaces need to be declared here;\n                                                            otherwise, they cannot be called. see the documentation for\n                                                            each interface for details.\nconfig           object          -               yes        system configuration information. see the description below.\nrouter           object          -               yes        routing information. see the description below.\ndisplay          object          -               no         ui display-related configuration. see the description below.\ndevicetypelist   array<string>   watch           no         optional values: watch, tv, car, phone. currently, only\n                                                            watch is supported.\npermissions      array           -               no         permission requests. example: [{"name":\n                                                            "hapjs.permission.location"}]\n\n\n# config\n\nused to define system configurations and global data.\n\nproperty      type      default value   description\nloglevel      string    log             log printing level, divided into off, error, warn, info,\n                                        log, debug.\ndesignwidth   integer   -               page design reference width. scales element sizes based on\n                                        the actual device width.\nbackground    object    -               background running configuration information. use the\n                                        features field to request interfaces that need to be used in\n                                        the background (while still declaring them in the top-level\n                                        features field). requestable interfaces include:\n                                        system.audio\n                                        system.geolocation\n                                        system.request, etc.\n                                        see background running for detailed usage.\n\n\n# minapilevel\n\nthe minimum supported api standard version number, indicating that the developer\'s rpk package can be compatible and run on devices that implement at least this version of the api standard. the default value is 1. when using features added in api standard version 1 or higher, ensure that minapilevel is at least this version number to avoid errors when running on devices that implement lower api standard versions.\n\nexample:\n\n{\n  "minapilevel": 1\n}\n\n\n\n# router\n\nused to define the composition of pages and related configuration information. if a page does not have routing information configured, it will be skipped during compilation and packaging.\n\nproperty   type     default value   required   description\nentry      string   -               yes        homepage name. when using the sub-package feature, it is\n                                               recommended to define the homepage in the base package.\npages      object   -               yes        page configuration list. the key value is the page name\n                                               (corresponding to the page directory name, e.g., hello\n                                               corresponds to the \'hello\' directory), and the value is the\n                                               detailed page configuration page. see the description below.\n\nexample code:\n\n"router": {\n  "entry": "demo",\n  "pages": {\n    "demo": {\n      "component": "index"\n    }\n  }\n}\n\n\n# router.pages\n\nused to define routing information for a single page.\n\nproperty     type     default value   required   description\ncomponent    string   -               yes        the component name corresponding to the page, consistent\n                                                 with the ux file name, e.g., "hello" corresponds to\n                                                 "hello.ux".\npath         string   /<page-name>    no         page path, e.g., "/user". if not filled, it defaults to\n                                                 /<page-name>.\n                                                 the path must be unique and cannot be the same as another\n                                                 page\'s path.\n                                                 the path of the following page will be set to "/index" due\n                                                 to its absence:\n                                                 "index": {"component": "index"}\nlaunchmode   string   standard        no         declares the page\'s launch mode. supports two page launch\n                                                 modes: "singletask" and "standard".\n                                                 when set to "singletask" mode, each time the target page is\n                                                 opened, the existing target page will be opened, and the\n                                                 onrefresh lifecycle function will be called, clearing other\n                                                 pages opened on this page. if this page has not been opened\n                                                 before, a new target page instance will be created.\n                                                 when set to "standard" mode, a new target page will be\n                                                 opened each time (multiple identical pages will exist when\n                                                 the target page address is opened multiple times).\n\n\n# example code\n\n{\n  "package": "com.company.unit",\n  "name": "appname",\n  "icon": "/common/icon.png",\n  "versionname": "1.0",\n  "versioncode": 1,\n  "minplatformversion": 1000,\n  "features": [{"name": "system.network"}],\n  "router": {\n    "entry": "hello",\n    "pages": {\n      "hello": {\n        "component": "hello",\n        "path": "/"\n      }\n    }\n  }\n}\n\n\n\n# display\n\nused to define ui display-related configurations.\n\nif the following property values are defined under the display object, their scope of effect will be all pages of this js application.\n\nproperty          type     default value   description\nbackgroundcolor   string   #ffffff         window background color.\n\n\n# permission descriptions\n\npermission name                feature              api           description              permission error codes\nhapjs.permission.location      system.geolocation   getlocation   geolocation              400: permission denied\n                                                    subscribe                              402: permission error (permission not declared)\n                                                    unsubscribe\nhapjs.permission.device_info   system.device        getserial     get device information   400: permission denied\n                                                    getdeviceid                            402: permission error (permission not declared)',charsets:{}},{title:"Framework Expansion Capabilities",frontmatter:{},regularPath:"/en/guide/framework/other/",relativePath:"en/guide/framework/other/README.md",key:"v-4270c0d6",path:"/en/guide/framework/other/",headersStr:null,content:"# Framework Expansion Capabilities\n\nOther expansion capabilities of the framework.\n\n * Multilingual Coverage\n * Background Running\n * HAP Link\n * Page Launch Modes\n * Multi-screen Adaptation",normalizedContent:"# framework expansion capabilities\n\nother expansion capabilities of the framework.\n\n * multilingual coverage\n * background running\n * hap link\n * page launch modes\n * multi-screen adaptation",charsets:{}},{title:"Background Running",frontmatter:{},regularPath:"/en/guide/framework/other/background-running.html",relativePath:"en/guide/framework/other/background-running.md",key:"v-381950f6",path:"/en/guide/framework/other/background-running.html",headers:[{level:2,title:"Configuration Method",slug:"configuration-method",normalizedTitle:"configuration method",charIndex:1252}],headersStr:"Configuration Method",content:'# Background Running\n\nTo save system resources, applications usually stop running after switching to the background and restart when switching back to the foreground. However, some applications such as music and sports applications may need to continue running in the background. To meet such requirements, background running is supported. The working principle of the background running mode is as follows:\n\nWhen an application switches to the background, the system checks whether the conditions for background running are met. If so, the application continues to run; otherwise, it stops. The conditions include:\n\n 1. The background running interface is declared in manifest.json.\n 2. At least one background running interface (declared in manifest.json) is currently running.\n\nPractical suggestions:\n\n * Background running consumes a lot of system resources, so applications should use it cautiously based on their own needs. Applications that apply for background running will be reviewed during the launch review to determine whether their background running needs are reasonable.\n * Import the background running interface and perform background execution in app.ux instead of in pages to avoid the impact of page switching and destruction.\n\n\n# Configuration Method\n\nDeclare the required background running interface in manifest.json. The background running interfaces include:\n\n 1. Audio playback: system.audio\n 2. Upload and download: system.request\n 3. Geolocation: system.geolocation\n\n{\n  "package": "com.hybrid.demo.sample",\n  //  ......\n\n  "config": {\n    "logLevel": "trace",\n    "background": {\n      "features":[\n        "system.audio",\n        "system.request"\n      ]\n    }\n  }\n  //  ......\n}\n',normalizedContent:'# background running\n\nto save system resources, applications usually stop running after switching to the background and restart when switching back to the foreground. however, some applications such as music and sports applications may need to continue running in the background. to meet such requirements, background running is supported. the working principle of the background running mode is as follows:\n\nwhen an application switches to the background, the system checks whether the conditions for background running are met. if so, the application continues to run; otherwise, it stops. the conditions include:\n\n 1. the background running interface is declared in manifest.json.\n 2. at least one background running interface (declared in manifest.json) is currently running.\n\npractical suggestions:\n\n * background running consumes a lot of system resources, so applications should use it cautiously based on their own needs. applications that apply for background running will be reviewed during the launch review to determine whether their background running needs are reasonable.\n * import the background running interface and perform background execution in app.ux instead of in pages to avoid the impact of page switching and destruction.\n\n\n# configuration method\n\ndeclare the required background running interface in manifest.json. the background running interfaces include:\n\n 1. audio playback: system.audio\n 2. upload and download: system.request\n 3. geolocation: system.geolocation\n\n{\n  "package": "com.hybrid.demo.sample",\n  //  ......\n\n  "config": {\n    "loglevel": "trace",\n    "background": {\n      "features":[\n        "system.audio",\n        "system.request"\n      ]\n    }\n  }\n  //  ......\n}\n',charsets:{}},{title:"hap link",frontmatter:{},regularPath:"/en/guide/framework/other/hap-schema.html",relativePath:"en/guide/framework/other/hap-schema.md",key:"v-ea959454",path:"/en/guide/framework/other/hap-schema.html",headersStr:null,content:"# hap link\n\nAn hap link refers to a URI starting with hap:// supported in the router module. For usage scenarios, refer to Page Routing.\n\nCurrently, supported hap links start with hap://app/ and support opening specified JS applications. The format is as follows:\n\nhap://app/<package>/[path][?key=value]\n\nParameter description:\n\n * package: The application package name (required)\n * path: The path to the page within the application (optional, defaults to the homepage)\n * key-value: Parameters to be passed to the page (optional, multiple parameters can be included)",normalizedContent:"# hap link\n\nan hap link refers to a uri starting with hap:// supported in the router module. for usage scenarios, refer to page routing.\n\ncurrently, supported hap links start with hap://app/ and support opening specified js applications. the format is as follows:\n\nhap://app/<package>/[path][?key=value]\n\nparameter description:\n\n * package: the application package name (required)\n * path: the path to the page within the application (optional, defaults to the homepage)\n * key-value: parameters to be passed to the page (optional, multiple parameters can be included)",charsets:{}},{title:"Multilingual Support",frontmatter:{},regularPath:"/en/guide/framework/other/i18n.html",relativePath:"en/guide/framework/other/i18n.md",key:"v-43e6a0f6",path:"/en/guide/framework/other/i18n.html",headers:[{level:2,title:"Defining Resource Files",slug:"defining-resource-files",normalizedTitle:"defining resource files",charIndex:533},{level:3,title:"Resource File Naming, Lookup Rules, and Recommendations",slug:"resource-file-naming-lookup-rules-and-recommendations",normalizedTitle:"resource file naming, lookup rules, and recommendations",charIndex:936},{level:3,title:"Resource File Supported Configuration Syntax",slug:"resource-file-supported-configuration-syntax",normalizedTitle:"resource file supported configuration syntax",charIndex:2161},{level:2,title:"Referencing Resources in Pages",slug:"referencing-resources-in-pages",normalizedTitle:"referencing resources in pages",charIndex:3225},{level:3,title:"Simple Formatting Method",slug:"simple-formatting-method",normalizedTitle:"simple formatting method",charIndex:3432},{level:3,title:"Singular/Plural Formatting Method",slug:"singular-plural-formatting-method",normalizedTitle:"singular/plural formatting method",charIndex:5797},{level:2,title:"Getting System Language",slug:"getting-system-language",normalizedTitle:"getting system language",charIndex:9291},{level:2,title:"Callback After Modifying Locale Language",slug:"callback-after-modifying-locale-language",normalizedTitle:"callback after modifying locale language",charIndex:9798}],headersStr:"Defining Resource Files Resource File Naming, Lookup Rules, and Recommendations Resource File Supported Configuration Syntax Referencing Resources in Pages Simple Formatting Method Singular/Plural Formatting Method Getting System Language Callback After Modifying Locale Language",content:"# Multilingual Support\n\nVela's capabilities cover multiple countries and regions. After the framework supports multilingual capabilities, a single JS application product (one RPK file) can support switching between multiple language versions. Developers do not need to develop multiple source code projects for different languages, avoiding difficulties in project maintenance.\n\nUsing the system's default language, developers can configure multilingual support with just two steps: defining resources and referencing resources.\n\n\n# Defining Resource Files\n\nResource files are used to store business information definitions for multiple languages. Similar to other technical platforms (which use properties files or xml files), the JS application platform uses JSON files to save resource definitions.\n\nDefine an i18n folder under the project's src directory, and place resource definition files for each language region inside it.\n\n\n# Resource File Naming, Lookup Rules, and Recommendations\n\nFile names can use the language and country information obtained from the current system. For example, file names can be defined as: zh-CN.json, zh.json.\n\nIf the developer's product only plans to support one language but still wants to use multilingual capabilities, simply declare a file named defaults.json.\n\nJSON file name matching priority: matching stops when a higher priority match is found; otherwise, it continues to the next level.\n\nPriority Matching Rules:\n\n<language code>-<country code>\n\n<language code>\n\ndefaults\n\nThe default i18n configuration file is the first one.\n\nNaming Recommendations:\n\n * For precise multilingual configuration matching both language and region, use <language code>-<country code>.json for resource file naming.\n\n * For configurations not needing region matching, use <language code>.json for resource file naming.\n\n * defaults.json can be used as a default option alone or in combination with the above two methods.\n\n * It is not recommended to use the system's final fallback default first option, as it may cause unexpected display results.\n\nReminder\n\n<language code>-<country code> can refer to: Supported Language List.\n\n\n# Resource File Supported Configuration Syntax\n\n# Basic Text Configuration\n\n{\n  \"message\": {\n    \"hello\": \"hello world\"\n  }\n}\n\n\n# Array Configuration\n\nWhen matched, the data content will be serialized and converted to text output. This configuration does not support mixing with interpolation syntax.\n\n{\n  \"message\": {\n    \"array\": [\"a\", 2, {\"c\": 3}]\n  }\n}\n\n\n# Named Interpolation Configuration\n\nSupports using {} placeholders for named interpolation. When called, pass the placeholder content through named parameters.\n\n{\n  \"message\": {\n    \"hello\": \"{msg} world\"\n  }\n}\n\n\n# List Interpolation Configuration\n\nSupports using {} placeholders for list interpolation. By configuring the list value index, pass the alternative list during the call to replace the placeholder content with the indexed value.\n\n{\n  \"message\": {\n    \"hello\": \"{0} world\"\n  }\n}\n\n\n# Singular/Plural Syntax Configuration\n\nSupports using | placeholders for singular/plural syntax configuration. Different options are separated by placeholders.\n\n{\n  \"message\": {\n    car: 'car | cars',\n  }\n}\n\n\n\n# Referencing Resources in Pages\n\nThe use of multilingual configurations is mainly achieved through the $t and $tc functions on the ViewModel instance. These methods can be used in <template> or <script>.\n\n\n# Simple Formatting Method\n\nthis.$t(path, opts)\n\nParameter Description:\n\nPARAMETER   TYPE             REQUIRED   DESCRIPTION\npath        String           Yes        The resource path to get multilingual configuration, object\n                                        values are accessed via dots, e.g., \"message.hello\"\nopts        Array | Object   No         Configuration items for interpolation replacement. Can pass\n                                        an object or array. Used in conjunction with the\n                                        interpolation configuration in the settings.\n                                        If passing an object, specify the named key of the\n                                        configuration for parameter passing.\n                                        If passing an array, use the index value corresponding to\n                                        the list interpolation configuration in the passed list.\n\nUsage Example:\n\nExample using basic text configuration:\n\n<template>\n  <div>\n    \x3c!-- Display result: hello world --\x3e\n    <text>{{ $t('message.hello') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // Simple formatting:\n      console.log(this.$t('message.hello')) // hello world\n    }\n  }\n<\/script>\n\n\nExample using array configuration:\n\n<template>\n  <div>\n    \x3c!-- Directly display the array, result: [\"a\", 2, {\"c\": 3}] --\x3e\n    <text>{{ $t('message.array') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // Simple formatting:\n      console.log(this.$t('message.array')) // [\"a\", 2, {\"c\": 3}]\n    }\n  }\n<\/script>\n\n\nExample using named interpolation configuration:\n\n<template>\n  <div>\n    \x3c!-- Display result: hello world --\x3e\n    <text>{{ $t('message.hello', { msg: 'hello' }) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // Simple formatting:\n      console.log(this.$t('message.hello', { msg: 'hello' }))  // hello world\n    }\n  }\n<\/script>\n\n\nExample using list interpolation configuration:\n\n<template>\n  <div>\n    \x3c!-- Display result: hello world --\x3e\n    <text>{{ $t('message.hello', ['hello', 'hi']) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // Simple formatting:\n      console.log(this.$t('message.hello', ['hello', 'hi'])) // hello world\n    }\n  }\n<\/script>\n\n\n\n# Singular/Plural Formatting Method\n\nthis.$tc(path, choice, opts)\n\nParameter Description:\n\nPARAMETER   TYPE             REQUIRED   DESCRIPTION\npath        String           Yes        The resource path to get multilingual configuration, object\n                                        values are accessed via dots, e.g., \"message.hello\"\nchoice      Number           No         Used to determine which option's value to use. Can also be\n                                        used for interpolation display when the third parameter is\n                                        not passed.\n                                        Special Value Description:\n                                        Value must be an integer; errors in parameters result in no\n                                        display and return an empty string.\n                                        Singular/plural determination ignores positive/negative\n                                        signs.\n                                        0 is treated as an even number.\nopts        Array | Object   No         Configuration items for interpolation replacement. Can pass\n                                        an object or array. Used in conjunction with the\n                                        interpolation configuration in the settings.\n                                        If passing an object, specify the named key of the\n                                        configuration for parameter passing.\n                                        If passing an array, use the index value corresponding to\n                                        the list interpolation configuration in the passed list.\n\nSingular/Plural Configuration Description:\n\nCurrently, the resource file supports two writing methods for singular/plural and supports mixing with interpolation syntax.\n\nTwo-segment configuration: singular|plural;\n\nThree-segment configuration: empty|singular|plural.\n\nConfiguration Example:\n\n{\n  \"message\": {\n    car: 'car | cars', // Two-segment configuration\n    apple: 'no apples | one apple | {count} apples' // Three-segment configuration\n  }\n}\n\n\nUsage Example:\n\n<template>\n  <div>\n    \x3c!-- Two-segment singular/plural --\x3e\n    \x3c!-- Display result: cars --\x3e\n    <text>{{ $tc('message.car', 0) }}</text>\n    \x3c!-- Display result: car --\x3e\n    <text>{{ $tc('message.car', 1) }}</text>\n    \x3c!-- Display result: cars --\x3e\n    <text>{{ $tc('message.car', 2) }}</text>\n\n    \x3c!-- Three-segment singular/plural --\x3e\n    \x3c!-- Display result: no apples --\x3e\n    <text>{{ $tc('message.apple', 0) }}</text>\n    \x3c!-- Display result: one apple --\x3e\n    <text>{{ $tc('message.apple', 1) }}</text>\n    \x3c!-- Display result: 2 apples --\x3e\n    <text>{{ $tc('message.apple', 2) }}</text>\n    \x3c!-- Three-segment singular/plural mixed with interpolation --\x3e\n    \x3c!-- Display result: 6 apples --\x3e\n    <text>{{ $tc('message.apple', 2, {count: 6}) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // Two-segment singular/plural:\n      console.log(this.$tc('message.car', 0)) // cars\n      console.log(this.$tc('message.car', 1)) // car\n      console.log(this.$tc('message.car', 2)) // cars\n\n      // Three-segment singular/plural:\n      console.log(this.$tc('message.apple', 0)) // no apples\n      console.log(this.$tc('message.apple', 1)) // one apple\n      console.log(this.$tc('message.apple', 2)) // 2 apples\n      console.log(this.$tc('message.apple', 2, {count: 6})) // 6 apples\n    }\n  }\n<\/script>\n\n\n\n# Getting System Language\n\nThe above capabilities are used for formatting resource content. In some scenarios, developers may need to get the current system's locale and change it to complete different logical processing. For example:\n\n * Different locales correspond to different page layouts;\n\n * Developers provide users with the ability to set a certain language.\n\nThe framework's system.configuration provides relevant functions. For documentation, refer to: Application Configuration configuration.\n\n\n# Callback After Modifying Locale Language\n\nWhen the user switches the locale language in the system settings, the onConfigurationChanged callback will be triggered, and the returned event.type value will be locale.\n\nFor details, refer to the documentation.\n\nExample code:\n\n// Listen for language changes\nonConfigurationChanged(event) {\n  if (event && event.type && event.type === 'locale') {\n    console.log('locale or language changed!')\n  }\n}\n",normalizedContent:"# multilingual support\n\nvela's capabilities cover multiple countries and regions. after the framework supports multilingual capabilities, a single js application product (one rpk file) can support switching between multiple language versions. developers do not need to develop multiple source code projects for different languages, avoiding difficulties in project maintenance.\n\nusing the system's default language, developers can configure multilingual support with just two steps: defining resources and referencing resources.\n\n\n# defining resource files\n\nresource files are used to store business information definitions for multiple languages. similar to other technical platforms (which use properties files or xml files), the js application platform uses json files to save resource definitions.\n\ndefine an i18n folder under the project's src directory, and place resource definition files for each language region inside it.\n\n\n# resource file naming, lookup rules, and recommendations\n\nfile names can use the language and country information obtained from the current system. for example, file names can be defined as: zh-cn.json, zh.json.\n\nif the developer's product only plans to support one language but still wants to use multilingual capabilities, simply declare a file named defaults.json.\n\njson file name matching priority: matching stops when a higher priority match is found; otherwise, it continues to the next level.\n\npriority matching rules:\n\n<language code>-<country code>\n\n<language code>\n\ndefaults\n\nthe default i18n configuration file is the first one.\n\nnaming recommendations:\n\n * for precise multilingual configuration matching both language and region, use <language code>-<country code>.json for resource file naming.\n\n * for configurations not needing region matching, use <language code>.json for resource file naming.\n\n * defaults.json can be used as a default option alone or in combination with the above two methods.\n\n * it is not recommended to use the system's final fallback default first option, as it may cause unexpected display results.\n\nreminder\n\n<language code>-<country code> can refer to: supported language list.\n\n\n# resource file supported configuration syntax\n\n# basic text configuration\n\n{\n  \"message\": {\n    \"hello\": \"hello world\"\n  }\n}\n\n\n# array configuration\n\nwhen matched, the data content will be serialized and converted to text output. this configuration does not support mixing with interpolation syntax.\n\n{\n  \"message\": {\n    \"array\": [\"a\", 2, {\"c\": 3}]\n  }\n}\n\n\n# named interpolation configuration\n\nsupports using {} placeholders for named interpolation. when called, pass the placeholder content through named parameters.\n\n{\n  \"message\": {\n    \"hello\": \"{msg} world\"\n  }\n}\n\n\n# list interpolation configuration\n\nsupports using {} placeholders for list interpolation. by configuring the list value index, pass the alternative list during the call to replace the placeholder content with the indexed value.\n\n{\n  \"message\": {\n    \"hello\": \"{0} world\"\n  }\n}\n\n\n# singular/plural syntax configuration\n\nsupports using | placeholders for singular/plural syntax configuration. different options are separated by placeholders.\n\n{\n  \"message\": {\n    car: 'car | cars',\n  }\n}\n\n\n\n# referencing resources in pages\n\nthe use of multilingual configurations is mainly achieved through the $t and $tc functions on the viewmodel instance. these methods can be used in <template> or <script>.\n\n\n# simple formatting method\n\nthis.$t(path, opts)\n\nparameter description:\n\nparameter   type             required   description\npath        string           yes        the resource path to get multilingual configuration, object\n                                        values are accessed via dots, e.g., \"message.hello\"\nopts        array | object   no         configuration items for interpolation replacement. can pass\n                                        an object or array. used in conjunction with the\n                                        interpolation configuration in the settings.\n                                        if passing an object, specify the named key of the\n                                        configuration for parameter passing.\n                                        if passing an array, use the index value corresponding to\n                                        the list interpolation configuration in the passed list.\n\nusage example:\n\nexample using basic text configuration:\n\n<template>\n  <div>\n    \x3c!-- display result: hello world --\x3e\n    <text>{{ $t('message.hello') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // simple formatting:\n      console.log(this.$t('message.hello')) // hello world\n    }\n  }\n<\/script>\n\n\nexample using array configuration:\n\n<template>\n  <div>\n    \x3c!-- directly display the array, result: [\"a\", 2, {\"c\": 3}] --\x3e\n    <text>{{ $t('message.array') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // simple formatting:\n      console.log(this.$t('message.array')) // [\"a\", 2, {\"c\": 3}]\n    }\n  }\n<\/script>\n\n\nexample using named interpolation configuration:\n\n<template>\n  <div>\n    \x3c!-- display result: hello world --\x3e\n    <text>{{ $t('message.hello', { msg: 'hello' }) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // simple formatting:\n      console.log(this.$t('message.hello', { msg: 'hello' }))  // hello world\n    }\n  }\n<\/script>\n\n\nexample using list interpolation configuration:\n\n<template>\n  <div>\n    \x3c!-- display result: hello world --\x3e\n    <text>{{ $t('message.hello', ['hello', 'hi']) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // simple formatting:\n      console.log(this.$t('message.hello', ['hello', 'hi'])) // hello world\n    }\n  }\n<\/script>\n\n\n\n# singular/plural formatting method\n\nthis.$tc(path, choice, opts)\n\nparameter description:\n\nparameter   type             required   description\npath        string           yes        the resource path to get multilingual configuration, object\n                                        values are accessed via dots, e.g., \"message.hello\"\nchoice      number           no         used to determine which option's value to use. can also be\n                                        used for interpolation display when the third parameter is\n                                        not passed.\n                                        special value description:\n                                        value must be an integer; errors in parameters result in no\n                                        display and return an empty string.\n                                        singular/plural determination ignores positive/negative\n                                        signs.\n                                        0 is treated as an even number.\nopts        array | object   no         configuration items for interpolation replacement. can pass\n                                        an object or array. used in conjunction with the\n                                        interpolation configuration in the settings.\n                                        if passing an object, specify the named key of the\n                                        configuration for parameter passing.\n                                        if passing an array, use the index value corresponding to\n                                        the list interpolation configuration in the passed list.\n\nsingular/plural configuration description:\n\ncurrently, the resource file supports two writing methods for singular/plural and supports mixing with interpolation syntax.\n\ntwo-segment configuration: singular|plural;\n\nthree-segment configuration: empty|singular|plural.\n\nconfiguration example:\n\n{\n  \"message\": {\n    car: 'car | cars', // two-segment configuration\n    apple: 'no apples | one apple | {count} apples' // three-segment configuration\n  }\n}\n\n\nusage example:\n\n<template>\n  <div>\n    \x3c!-- two-segment singular/plural --\x3e\n    \x3c!-- display result: cars --\x3e\n    <text>{{ $tc('message.car', 0) }}</text>\n    \x3c!-- display result: car --\x3e\n    <text>{{ $tc('message.car', 1) }}</text>\n    \x3c!-- display result: cars --\x3e\n    <text>{{ $tc('message.car', 2) }}</text>\n\n    \x3c!-- three-segment singular/plural --\x3e\n    \x3c!-- display result: no apples --\x3e\n    <text>{{ $tc('message.apple', 0) }}</text>\n    \x3c!-- display result: one apple --\x3e\n    <text>{{ $tc('message.apple', 1) }}</text>\n    \x3c!-- display result: 2 apples --\x3e\n    <text>{{ $tc('message.apple', 2) }}</text>\n    \x3c!-- three-segment singular/plural mixed with interpolation --\x3e\n    \x3c!-- display result: 6 apples --\x3e\n    <text>{{ $tc('message.apple', 2, {count: 6}) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // two-segment singular/plural:\n      console.log(this.$tc('message.car', 0)) // cars\n      console.log(this.$tc('message.car', 1)) // car\n      console.log(this.$tc('message.car', 2)) // cars\n\n      // three-segment singular/plural:\n      console.log(this.$tc('message.apple', 0)) // no apples\n      console.log(this.$tc('message.apple', 1)) // one apple\n      console.log(this.$tc('message.apple', 2)) // 2 apples\n      console.log(this.$tc('message.apple', 2, {count: 6})) // 6 apples\n    }\n  }\n<\/script>\n\n\n\n# getting system language\n\nthe above capabilities are used for formatting resource content. in some scenarios, developers may need to get the current system's locale and change it to complete different logical processing. for example:\n\n * different locales correspond to different page layouts;\n\n * developers provide users with the ability to set a certain language.\n\nthe framework's system.configuration provides relevant functions. for documentation, refer to: application configuration configuration.\n\n\n# callback after modifying locale language\n\nwhen the user switches the locale language in the system settings, the onconfigurationchanged callback will be triggered, and the returned event.type value will be locale.\n\nfor details, refer to the documentation.\n\nexample code:\n\n// listen for language changes\nonconfigurationchanged(event) {\n  if (event && event.type && event.type === 'locale') {\n    console.log('locale or language changed!')\n  }\n}\n",charsets:{cjk:!0}},{title:"JS Independent Packaging",frontmatter:{},regularPath:"/en/guide/framework/other/js-chunk.html",relativePath:"en/guide/framework/other/js-chunk.md",key:"v-7ab512d4",path:"/en/guide/framework/other/js-chunk.html",headers:[{level:2,title:"Configuration Method",slug:"configuration-method",normalizedTitle:"configuration method",charIndex:562},{level:2,title:"Extraction Object",slug:"extraction-object",normalizedTitle:"extraction object",charIndex:726}],headersStr:"Configuration Method Extraction Object",content:"# JS Independent Packaging\n\nWhen different pages introduce the same JS resource at the same time, the compilation tool will package the JS resource code into the page file by default. Since the relevant page files after packaging all contain duplicate JS code, the final packaged rpk package will be larger.\n\nWhen the app.ux or page file refers to the same JS resource twice or more, the JS resource will be extracted to an independent file, so that the relevant files share the same JS code, which can effectively reduce the size of the entire rpk package.\n\n\n# Configuration Method\n\nThis feature is used in conjunction with the compilation tool. When compiling the project, carry the parameter: --split-chunks-mode=smart\n\n\n# Extraction Object\n\nAll JS resources that are referenced twice or more will be extracted to an independent file, including:\n\n * Ordinary JS files\n\n * Subcomponents\n\n * External libraries referenced in node_modules",normalizedContent:"# js independent packaging\n\nwhen different pages introduce the same js resource at the same time, the compilation tool will package the js resource code into the page file by default. since the relevant page files after packaging all contain duplicate js code, the final packaged rpk package will be larger.\n\nwhen the app.ux or page file refers to the same js resource twice or more, the js resource will be extracted to an independent file, so that the relevant files share the same js code, which can effectively reduce the size of the entire rpk package.\n\n\n# configuration method\n\nthis feature is used in conjunction with the compilation tool. when compiling the project, carry the parameter: --split-chunks-mode=smart\n\n\n# extraction object\n\nall js resources that are referenced twice or more will be extracted to an independent file, including:\n\n * ordinary js files\n\n * subcomponents\n\n * external libraries referenced in node_modules",charsets:{}},{title:"Developer Materials",frontmatter:{},regularPath:"/en/guide/developer-materials/",relativePath:"en/guide/developer-materials/index.md",key:"v-798a3855",path:"/en/guide/developer-materials/",headersStr:null,content:"# Developer Materials\n\nDeveloper materials refer to the various resources and tools provided by the Quick App Platform for developers. Currently, they include extended components, and in the future, will offer more support such as page templates, functional interfaces, development tools, etc. Every developer is welcome to contact us at vela-appframework@xiaomi.com to share your needs or contribute your material resources, jointly promoting technological progress and innovation, and building a more prosperous Quick App ecosystem.\n\nExtended components are essentially custom components written by developers. If other developers want to use extended components, they only need to copy the component folder from the project address into their own project directory and import it into the page for use via the <import> method. Meanwhile, extended components provide developers with rich property configurations and callback events.\n\nThis design approach of extended components ensures the page's management capabilities over components while preventing unnecessary coupling between the page and components. It helps developers better organize logic and code, enhancing the maintainability of the project.",normalizedContent:"# developer materials\n\ndeveloper materials refer to the various resources and tools provided by the quick app platform for developers. currently, they include extended components, and in the future, will offer more support such as page templates, functional interfaces, development tools, etc. every developer is welcome to contact us at vela-appframework@xiaomi.com to share your needs or contribute your material resources, jointly promoting technological progress and innovation, and building a more prosperous quick app ecosystem.\n\nextended components are essentially custom components written by developers. if other developers want to use extended components, they only need to copy the component folder from the project address into their own project directory and import it into the page for use via the <import> method. meanwhile, extended components provide developers with rich property configurations and callback events.\n\nthis design approach of extended components ensures the page's management capabilities over components while preventing unnecessary coupling between the page and components. it helps developers better organize logic and code, enhancing the maintainability of the project.",charsets:{}},{title:"Page Launch Mode",frontmatter:{},regularPath:"/en/guide/framework/other/launch-mode.html",relativePath:"en/guide/framework/other/launch-mode.md",key:"v-aad94e4c",path:"/en/guide/framework/other/launch-mode.html",headers:[{level:2,title:"Static Declaration",slug:"static-declaration",normalizedTitle:"static declaration",charIndex:70},{level:3,title:"Page Launch Mode Parameters:",slug:"page-launch-mode-parameters",normalizedTitle:"page launch mode parameters:",charIndex:244},{level:3,title:"Example:",slug:"example",normalizedTitle:"example:",charIndex:1513},{level:2,title:"Dynamic Declaration",slug:"dynamic-declaration",normalizedTitle:"dynamic declaration",charIndex:3117},{level:3,title:"Page Launch Mode Parameters:",slug:"page-launch-mode-parameters-2",normalizedTitle:"page launch mode parameters:",charIndex:244},{level:3,title:"Example:",slug:"example-2",normalizedTitle:"example:",charIndex:1513}],headersStr:"Static Declaration Page Launch Mode Parameters: Example: Dynamic Declaration Page Launch Mode Parameters: Example:",content:'# Page Launch Mode\n\nUsed to define the launch behavior of a page.\n\n\n# Static Declaration\n\nIn the manifest file, the launch mode field launchMode can be added to the page route information router.page to declare the launch mode of the page.\n\n\n# Page Launch Mode Parameters:\n\nPROPERTY     TYPE     DEFAULT VALUE   REQUIRED   DESCRIPTION\nlaunchMode   String   standard        No         Declares the launch mode of the page. Supports two page\n                                                 launch modes: "singleTask" and "standard".\n                                                 When identified as the "singleTask" mode, each time the\n                                                 target page is opened, the existing target page will be\n                                                 opened and the onRefresh lifecycle function will be called\n                                                 back. Other pages opened on this page will be cleared. If\n                                                 this page has not been opened before, a new target page\n                                                 instance will be created.\n                                                 When identified as the "standard" mode, a new target page\n                                                 will be opened each time (multiple identical pages will\n                                                 exist when the target page address is opened multiple\n                                                 times).\n\n\n# Example:\n\n"router": {\n    "entry": "PageA",\n    "pages": {\n      "PageA": {\n        "launchMode": "singleTask",\n        "component": "index"\n      },\n      "PageB": {\n        "launchMode": "standard",\n        "component": "index"\n      },\n      "PageC": {\n        "launchMode": "singleTask",\n        "component": "index"\n      }\n    }\n  }\n\n\nBehavior logic for opening pages:\n\nIf the pages are launched in the order of PageA -> PageB -> PageC -> PageB -> PageC -> PageA:\n\n * Open PageA. When it is opened for the first time, the page stack is empty. The page stack is PageA.\n * Open PageB. The launch mode of PageB is standard. A new PageB page instance is created on top of PageA and displayed. The page stack is PageA, PageB.\n * Open PageC. When it is opened for the first time, a new PageC page instance is created on top of PageB and displayed. The page stack is PageA, PageB, PageC.\n * Open PageB. The launch mode of PageB is standard. A new PageB page instance is created on top of PageC and displayed. The page stack is PageA, PageB, PageC, PageB.\n * Open PageC. The PageC page instance already exists. The page instances on top of PageC (PageB) are destroyed. The previously opened PageC page instance is returned to, and the onRefresh function of the page lifecycle is called back. The page stack is PageA, PageB, PageC.\n * Open PageA. The PageA page instance already exists. The page instances on top of PageA (PageB and PageC) are destroyed. The previously opened PageA page instance is returned to, and the onRefresh function of the page lifecycle is called back. The page stack is PageA.\n\n\n# Dynamic Declaration\n\nThere are two ways to dynamically declare. One is to carry the launch flag parameter in router.push, and the other is to carry the launch flag parameter in the link to open the page. The launch flag parameter can control the page opening behavior.\n\n\n# Page Launch Mode Parameters:\n\nPARAMETER                 TYPE     REQUIRED   DESCRIPTION\n___PARAM_LAUNCH_FLAG___   String   No         The page parameter passed when jumping to a JS application\n                                              page. When carrying clearTask, opening the target page will\n                                              clear other pages outside this page. When there are multiple\n                                              target pages, only the earliest opened target page will be\n                                              retained, and the onRefresh lifecycle will be called back.\n                                              If the target page does not exist, all pages will be\n                                              cleared, and a new target page instance will be created.\n\n\n# Example:\n\nrouter.push({\n  uri: \'/PageB\',\n  params: {\n    ___PARAM_LAUNCH_FLAG___: \'clearTask\'\n  }\n})\n\n\nBehavior logic for opening pages:\n\nIf the page stack that has already been opened is PageA -> PageB -> PageC, and PageB is launched with the clearTask flag at this time:\n\n * The PageC page instance is destroyed.\n * The PageA page instance is destroyed.\n * The PageB page instance already exists. Return to this page instance and call back the onRefresh function of the page lifecycle.\n\nIf the page stack that has already been opened is PageA -> PageC, and PageB is launched with the clearTask flag at this time:\n\n * The PageC page instance is destroyed.\n * The PageA page instance is destroyed.\n * The PageB page instance does not exist. Create and display a new PageB page instance.',normalizedContent:'# page launch mode\n\nused to define the launch behavior of a page.\n\n\n# static declaration\n\nin the manifest file, the launch mode field launchmode can be added to the page route information router.page to declare the launch mode of the page.\n\n\n# page launch mode parameters:\n\nproperty     type     default value   required   description\nlaunchmode   string   standard        no         declares the launch mode of the page. supports two page\n                                                 launch modes: "singletask" and "standard".\n                                                 when identified as the "singletask" mode, each time the\n                                                 target page is opened, the existing target page will be\n                                                 opened and the onrefresh lifecycle function will be called\n                                                 back. other pages opened on this page will be cleared. if\n                                                 this page has not been opened before, a new target page\n                                                 instance will be created.\n                                                 when identified as the "standard" mode, a new target page\n                                                 will be opened each time (multiple identical pages will\n                                                 exist when the target page address is opened multiple\n                                                 times).\n\n\n# example:\n\n"router": {\n    "entry": "pagea",\n    "pages": {\n      "pagea": {\n        "launchmode": "singletask",\n        "component": "index"\n      },\n      "pageb": {\n        "launchmode": "standard",\n        "component": "index"\n      },\n      "pagec": {\n        "launchmode": "singletask",\n        "component": "index"\n      }\n    }\n  }\n\n\nbehavior logic for opening pages:\n\nif the pages are launched in the order of pagea -> pageb -> pagec -> pageb -> pagec -> pagea:\n\n * open pagea. when it is opened for the first time, the page stack is empty. the page stack is pagea.\n * open pageb. the launch mode of pageb is standard. a new pageb page instance is created on top of pagea and displayed. the page stack is pagea, pageb.\n * open pagec. when it is opened for the first time, a new pagec page instance is created on top of pageb and displayed. the page stack is pagea, pageb, pagec.\n * open pageb. the launch mode of pageb is standard. a new pageb page instance is created on top of pagec and displayed. the page stack is pagea, pageb, pagec, pageb.\n * open pagec. the pagec page instance already exists. the page instances on top of pagec (pageb) are destroyed. the previously opened pagec page instance is returned to, and the onrefresh function of the page lifecycle is called back. the page stack is pagea, pageb, pagec.\n * open pagea. the pagea page instance already exists. the page instances on top of pagea (pageb and pagec) are destroyed. the previously opened pagea page instance is returned to, and the onrefresh function of the page lifecycle is called back. the page stack is pagea.\n\n\n# dynamic declaration\n\nthere are two ways to dynamically declare. one is to carry the launch flag parameter in router.push, and the other is to carry the launch flag parameter in the link to open the page. the launch flag parameter can control the page opening behavior.\n\n\n# page launch mode parameters:\n\nparameter                 type     required   description\n___param_launch_flag___   string   no         the page parameter passed when jumping to a js application\n                                              page. when carrying cleartask, opening the target page will\n                                              clear other pages outside this page. when there are multiple\n                                              target pages, only the earliest opened target page will be\n                                              retained, and the onrefresh lifecycle will be called back.\n                                              if the target page does not exist, all pages will be\n                                              cleared, and a new target page instance will be created.\n\n\n# example:\n\nrouter.push({\n  uri: \'/pageb\',\n  params: {\n    ___param_launch_flag___: \'cleartask\'\n  }\n})\n\n\nbehavior logic for opening pages:\n\nif the page stack that has already been opened is pagea -> pageb -> pagec, and pageb is launched with the cleartask flag at this time:\n\n * the pagec page instance is destroyed.\n * the pagea page instance is destroyed.\n * the pageb page instance already exists. return to this page instance and call back the onrefresh function of the page lifecycle.\n\nif the page stack that has already been opened is pagea -> pagec, and pageb is launched with the cleartask flag at this time:\n\n * the pagec page instance is destroyed.\n * the pagea page instance is destroyed.\n * the pageb page instance does not exist. create and display a new pageb page instance.',charsets:{}},{title:"Page Switching",frontmatter:{},regularPath:"/en/guide/framework/page-switch.html",relativePath:"en/guide/framework/page-switch.md",key:"v-28d1c972",path:"/en/guide/framework/page-switch.html",headers:[{level:2,title:"Switching Pages and Passing Parameters via the Router Interface",slug:"switching-pages-and-passing-parameters-via-the-router-interface",normalizedTitle:"switching pages and passing parameters via the router interface",charIndex:21},{level:3,title:"Switching Pages",slug:"switching-pages",normalizedTitle:"switching pages",charIndex:21},{level:3,title:"Passing Parameters",slug:"passing-parameters",normalizedTitle:"passing parameters",charIndex:41},{level:2,title:"Receiving Parameters",slug:"receiving-parameters",normalizedTitle:"receiving parameters",charIndex:2067}],headersStr:"Switching Pages and Passing Parameters via the Router Interface Switching Pages Passing Parameters Receiving Parameters",content:'# Page Switching\n\n\n# Switching Pages and Passing Parameters via the Router Interface\n\n\n# Switching Pages\n\nBefore using the router interface, you need to import the module first.\n\nYou can switch pages using router.push(OBJECT). For details about the uri parameter format supported by this method, refer to Page Routing.\n\nExample:\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="Jump to New Page" onclick="routePage"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // Import module\n  import router from \'@system.router\'\n\n  export default {\n    routePage () {\n      // Jump to a page within the app; cannot return to the current page\n      router.replace({\n        uri: \'/Pages/newPage\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# Passing Parameters\n\nThe params parameter of the router interface can be used to configure parameters to be passed during page jumps.\n\nExample:\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="Jump with Parameters" onclick="routePageReplaceWithParams"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // Import module\n  import router from \'@system.router\'\n\n  export default {\n    private: {\n      title: \'Hello, world!\'\n    },\n\n    onInit () {\n      console.info(\'Switch pages and pass parameters via the router interface\')\n    },\n\n    routePageReplaceWithParams () {\n      // Jump to a page within the app\n      router.replace({\n        uri: \'/PageParams/receiveparams\',\n        params: { key: this.title }\n      })\n    }\n  }\n<\/script>\n\n\n\n# Receiving Parameters\n\nNow that you know how to pass parameters between pages using the router interface, how do you receive them?\n\nIt\'s actually very simple: the method for receiving parameters passed by the router interface is consistent: declare the properties to be used in the protected attribute of the page\'s ViewModel.\n\nNote\n\n * Properties defined in protected can be overwritten by data passed from internal page requests within the app but not by data passed from external requests.\n * If you want parameters to be overwriteable by data passed from external requests, declare the properties in the public attribute of the page\'s ViewModel.\n\nExample:\n\n<template>\n  <div class="page">\n    <text>page</text>\n    \x3c!-- Display parameters passed to the page in the template --\x3e\n    <text>{{key}}</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n</style>\n\n<script>\n  export default {\n    protected: {\n      key: \'\'\n    },\n    onInit () {\n      // Output parameters passed to the page in JavaScript\n      console.info(\'key: \' + this.key)\n    }\n  }\n<\/script>\n',normalizedContent:'# page switching\n\n\n# switching pages and passing parameters via the router interface\n\n\n# switching pages\n\nbefore using the router interface, you need to import the module first.\n\nyou can switch pages using router.push(object). for details about the uri parameter format supported by this method, refer to page routing.\n\nexample:\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="jump to new page" onclick="routepage"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // import module\n  import router from \'@system.router\'\n\n  export default {\n    routepage () {\n      // jump to a page within the app; cannot return to the current page\n      router.replace({\n        uri: \'/pages/newpage\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# passing parameters\n\nthe params parameter of the router interface can be used to configure parameters to be passed during page jumps.\n\nexample:\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="jump with parameters" onclick="routepagereplacewithparams"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // import module\n  import router from \'@system.router\'\n\n  export default {\n    private: {\n      title: \'hello, world!\'\n    },\n\n    oninit () {\n      console.info(\'switch pages and pass parameters via the router interface\')\n    },\n\n    routepagereplacewithparams () {\n      // jump to a page within the app\n      router.replace({\n        uri: \'/pageparams/receiveparams\',\n        params: { key: this.title }\n      })\n    }\n  }\n<\/script>\n\n\n\n# receiving parameters\n\nnow that you know how to pass parameters between pages using the router interface, how do you receive them?\n\nit\'s actually very simple: the method for receiving parameters passed by the router interface is consistent: declare the properties to be used in the protected attribute of the page\'s viewmodel.\n\nnote\n\n * properties defined in protected can be overwritten by data passed from internal page requests within the app but not by data passed from external requests.\n * if you want parameters to be overwriteable by data passed from external requests, declare the properties in the public attribute of the page\'s viewmodel.\n\nexample:\n\n<template>\n  <div class="page">\n    <text>page</text>\n    \x3c!-- display parameters passed to the page in the template --\x3e\n    <text>{{key}}</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n</style>\n\n<script>\n  export default {\n    protected: {\n      key: \'\'\n    },\n    oninit () {\n      // output parameters passed to the page in javascript\n      console.info(\'key: \' + this.key)\n    }\n  }\n<\/script>\n',charsets:{}},{title:"Project Structure",frontmatter:{},regularPath:"/en/guide/framework/project-structure.html",relativePath:"en/guide/framework/project-structure.md",key:"v-16cdf598",path:"/en/guide/framework/project-structure.html",headers:[{level:2,title:"App Resources",slug:"app-resources",normalizedTitle:"app resources",charIndex:24},{level:2,title:"ux Template",slug:"ux-template",normalizedTitle:"ux template",charIndex:524},{level:2,title:"File Storage",slug:"file-storage",normalizedTitle:"file storage",charIndex:1786},{level:2,title:"URI",slug:"uri",normalizedTitle:"uri",charIndex:2754},{level:2,title:"Resource and File Access Rules",slug:"resource-and-file-access-rules",normalizedTitle:"resource and file access rules",charIndex:3847}],headersStr:"App Resources ux Template File Storage URI Resource and File Access Rules",content:'# Project Structure\n\n\n# App Resources\n\nAn app contains: a manifest file describing project configuration information, an app.ux file for placing public resource scripts of the project, multiple ux files describing pages. A typical example is as follows:\n\nApp root directory:\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-CN.json\n|   └── en-US.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# ux Template\n\nA page usually consists of three parts: page structure, style, and logical interaction. These three parts can be placed in one ux file or as separate files.\n\nIf placed in one ux file, the ux file needs to contain three tags: template, style, and script.\n\nExample:\n\n<template>\n  <div class="page">\n    <text class="title">Welcome to open {{title}}</text>\n    <input class="btn" type="button" value="Jump to detail page" onclick="routeDetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // Page data object\n    private: {\n      title: \'Example Page\'\n    },\n    // Callback after button click\n    routeDetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\nIf the page structure, style, and logical interaction are separated into independent files, the following directory structure can be used:\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\nNote\n\nIf separated into independent files, after splitting the ux/css/js files, the ux file cannot contain the template tag.\n\n\n# File Storage\n\nFiles are stored by partition in the app platform. The following partitions are currently supported:\n\n 1. Cache, generally used for storing cached files, such as files downloaded through the fetch interface, which may be deleted by the system due to insufficient storage space;\n 2. Files, generally used for storing relatively small permanent files, which are managed by the app itself;\n 3. Mass, generally used for storing relatively large files, but this partition does not guarantee continuous availability;\n 4. Temp, represents temporary files mapped from external sources. For security reasons, temporary files are read-only and can only be accessed by calling specific APIs, such as the file.readText method. Additionally, access to temporary files is temporary, and they cannot be accessed after the app restarts. They need to be re-acquired using specific APIs.\n\nAdditionally, app resources are also treated as a special read-only partition.\n\n\n# URI\n\nURIs are used to identify app resources and files. Components and interfaces access app resources and files through URIs.\n\nRESOURCE TYPE   URI                     READ-ONLY   EXAMPLE                             DESCRIPTION\nApp Resources   /path                   Yes         /Common/header.png                  -\nCache           internal://cache/path   No          internal://cache/fetch-123456.png   -\nFiles           internal://files/path   No          internal://files/image/demo.png     -\nMass            internal://mass/path    No          internal://mass/video/demo.mp4      -\nTemp            internal://tmp/path     Yes         internal://tmp/xxxxx                Dynamically generated by the system\n\nThe allowed characters in a URI are 0-9a-zA-Z_-./%: (excluding quotes). The URI cannot contain .. and supports directory structures, with directories separated by slashes \'/\'.\n\nAn internal URI represents private app files. When specifying an internal URI, there is no need to specify the app identifier. The same internal URI will point to different files for different apps.\n\n\n# Resource and File Access Rules\n\nApp resource paths are divided into absolute paths and relative paths. A path starting with "/" indicates an absolute path, such as /Common/a.png. A path not starting with "/" is a relative path, such as a.png and ../Common/a.png.\n\nApp resource files are divided into code files and resource files. Code files refer to files containing code, such as .js/.css/.ux files, while other files are resource files, which are generally used only as data, such as images and videos.\n\n 1. In code files, when importing other code files, use relative paths, such as: ../Common/component.ux;\n 2. In code files, when referencing resource files (e.g., images, videos), generally use relative paths, such as: ./abc.png;\n 3. When a code file needs to be imported, if the importing file and the imported file are in the same directory, the imported file can use relative paths when referencing resource files. However, if they are not in the same directory, absolute paths must be used because the imported file will be copied to the importing file during compilation, and the directory will change after compilation. For example, if the a.css file is imported by b.ux, and a.css and b.ux are in the same directory, a.css can use a relative path when referencing resource files: abc.png. If they are not in the same directory, an absolute path must be used: /Common/abc.png. Similarly, when the a.ux file is imported by the b.ux file, if a.ux and b.ux are in the same directory, a.ux can use a relative path when referencing resource files: a.png. If they are not in the same directory, a.ux must use an absolute path when referencing resources: /Common/abc.png;\n 4. In CSS, consistent with front-end development, resource files are accessed using the url(PATH) method, such as: url(/Common/abc.png).',normalizedContent:'# project structure\n\n\n# app resources\n\nan app contains: a manifest file describing project configuration information, an app.ux file for placing public resource scripts of the project, multiple ux files describing pages. a typical example is as follows:\n\napp root directory:\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-cn.json\n|   └── en-us.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# ux template\n\na page usually consists of three parts: page structure, style, and logical interaction. these three parts can be placed in one ux file or as separate files.\n\nif placed in one ux file, the ux file needs to contain three tags: template, style, and script.\n\nexample:\n\n<template>\n  <div class="page">\n    <text class="title">welcome to open {{title}}</text>\n    <input class="btn" type="button" value="jump to detail page" onclick="routedetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // page data object\n    private: {\n      title: \'example page\'\n    },\n    // callback after button click\n    routedetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\nif the page structure, style, and logical interaction are separated into independent files, the following directory structure can be used:\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\nnote\n\nif separated into independent files, after splitting the ux/css/js files, the ux file cannot contain the template tag.\n\n\n# file storage\n\nfiles are stored by partition in the app platform. the following partitions are currently supported:\n\n 1. cache, generally used for storing cached files, such as files downloaded through the fetch interface, which may be deleted by the system due to insufficient storage space;\n 2. files, generally used for storing relatively small permanent files, which are managed by the app itself;\n 3. mass, generally used for storing relatively large files, but this partition does not guarantee continuous availability;\n 4. temp, represents temporary files mapped from external sources. for security reasons, temporary files are read-only and can only be accessed by calling specific apis, such as the file.readtext method. additionally, access to temporary files is temporary, and they cannot be accessed after the app restarts. they need to be re-acquired using specific apis.\n\nadditionally, app resources are also treated as a special read-only partition.\n\n\n# uri\n\nuris are used to identify app resources and files. components and interfaces access app resources and files through uris.\n\nresource type   uri                     read-only   example                             description\napp resources   /path                   yes         /common/header.png                  -\ncache           internal://cache/path   no          internal://cache/fetch-123456.png   -\nfiles           internal://files/path   no          internal://files/image/demo.png     -\nmass            internal://mass/path    no          internal://mass/video/demo.mp4      -\ntemp            internal://tmp/path     yes         internal://tmp/xxxxx                dynamically generated by the system\n\nthe allowed characters in a uri are 0-9a-za-z_-./%: (excluding quotes). the uri cannot contain .. and supports directory structures, with directories separated by slashes \'/\'.\n\nan internal uri represents private app files. when specifying an internal uri, there is no need to specify the app identifier. the same internal uri will point to different files for different apps.\n\n\n# resource and file access rules\n\napp resource paths are divided into absolute paths and relative paths. a path starting with "/" indicates an absolute path, such as /common/a.png. a path not starting with "/" is a relative path, such as a.png and ../common/a.png.\n\napp resource files are divided into code files and resource files. code files refer to files containing code, such as .js/.css/.ux files, while other files are resource files, which are generally used only as data, such as images and videos.\n\n 1. in code files, when importing other code files, use relative paths, such as: ../common/component.ux;\n 2. in code files, when referencing resource files (e.g., images, videos), generally use relative paths, such as: ./abc.png;\n 3. when a code file needs to be imported, if the importing file and the imported file are in the same directory, the imported file can use relative paths when referencing resource files. however, if they are not in the same directory, absolute paths must be used because the imported file will be copied to the importing file during compilation, and the directory will change after compilation. for example, if the a.css file is imported by b.ux, and a.css and b.ux are in the same directory, a.css can use a relative path when referencing resource files: abc.png. if they are not in the same directory, an absolute path must be used: /common/abc.png. similarly, when the a.ux file is imported by the b.ux file, if a.ux and b.ux are in the same directory, a.ux can use a relative path when referencing resource files: a.png. if they are not in the same directory, a.ux must use an absolute path when referencing resources: /common/abc.png;\n 4. in css, consistent with front-end development, resource files are accessed using the url(path) method, such as: url(/common/abc.png).',charsets:{cjk:!0}},{title:"script",frontmatter:{},regularPath:"/en/guide/framework/script/",relativePath:"en/guide/framework/script/README.md",key:"v-508a854e",path:"/en/guide/framework/script/",headers:[{level:2,title:"Syntax",slug:"syntax",normalizedTitle:"syntax",charIndex:164},{level:3,title:"Module Declaration",slug:"module-declaration",normalizedTitle:"module declaration",charIndex:202},{level:3,title:"Code Reference",slug:"code-reference",normalizedTitle:"code reference",charIndex:398},{level:2,title:"Page Data Object",slug:"page-data-object",normalizedTitle:"page data object",charIndex:660},{level:2,title:"Lifecycle Interfaces",slug:"lifecycle-interfaces",normalizedTitle:"lifecycle interfaces",charIndex:1137},{level:2,title:"Custom Methods",slug:"custom-methods",normalizedTitle:"custom methods",charIndex:1560},{level:2,title:"Global Objects and Methods",slug:"global-objects-and-methods",normalizedTitle:"global objects and methods",charIndex:1781},{level:2,title:"General Methods",slug:"general-methods",normalizedTitle:"general methods",charIndex:1998}],headersStr:"Syntax Module Declaration Code Reference Page Data Object Lifecycle Interfaces Custom Methods Global Objects and Methods General Methods",content:"# script\n\nLogical code used in the ux file to define the behavior of a page, including data objects, lifecycle interfaces, custom methods, and general methods.\n\n\n# Syntax\n\nSupports ES5 / ES6 syntax\n\n\n# Module Declaration\n\nYou can import functional modules using import and call module methods in your code (refer to the interface documentation for details):\n\nimport fetch from '@system.fetch'\n\n\n\n# Code Reference\n\nIt is recommended to use import to import JS code, for example:\n\nimport utils from '../common/utils.js'\n\n\nNote\n\nThe JS application environment is not a Node.js environment, so do not import native Node.js modules such as import fs from 'fs'.\n\n\n# Page Data Object\n\nYou can define page-level data objects in the page file for binding in the template and manipulation in page methods. For example:\n\n<template>\n  <div>\n    <text>{{a}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // Page data object, affects the override mechanism of incoming data: properties defined in private cannot be overridden\n    private: {\n      a: 1\n    }\n  }\n<\/script>\n\n\nFor more detailed information, refer to Page Data Object.\n\n\n# Lifecycle Interfaces\n\nBoth applications and pages have a predefined series of lifecycles. You can declare lifecycle hook functions in the script, which will be called when the application/page reaches a specific lifecycle stage. For example:\n\n// This function will be executed when the application/page is initialized\nonInit() {\n  console.log('page initialized！')\n}\n\n\nFor more detailed information, refer to Lifecycle.\n\n\n# Custom Methods\n\nDevelopers can declare custom methods as needed in the application/page ux file, including utility methods, event callback methods, etc. For example:\n\nonBtnClick(){\n  console.log('button clicked!')\n}\n\n\n\n# Global Objects and Methods\n\nProperties and methods declared by developers in the application ux file (app.ux) can be accessed in any page via this.$app.$def. For more details, refer to Global Objects and Methods.\n\n\n# General Methods\n\nThe framework provides some predefined general methods that can be called by pages/components. For more details, refer to General Methods.",normalizedContent:"# script\n\nlogical code used in the ux file to define the behavior of a page, including data objects, lifecycle interfaces, custom methods, and general methods.\n\n\n# syntax\n\nsupports es5 / es6 syntax\n\n\n# module declaration\n\nyou can import functional modules using import and call module methods in your code (refer to the interface documentation for details):\n\nimport fetch from '@system.fetch'\n\n\n\n# code reference\n\nit is recommended to use import to import js code, for example:\n\nimport utils from '../common/utils.js'\n\n\nnote\n\nthe js application environment is not a node.js environment, so do not import native node.js modules such as import fs from 'fs'.\n\n\n# page data object\n\nyou can define page-level data objects in the page file for binding in the template and manipulation in page methods. for example:\n\n<template>\n  <div>\n    <text>{{a}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // page data object, affects the override mechanism of incoming data: properties defined in private cannot be overridden\n    private: {\n      a: 1\n    }\n  }\n<\/script>\n\n\nfor more detailed information, refer to page data object.\n\n\n# lifecycle interfaces\n\nboth applications and pages have a predefined series of lifecycles. you can declare lifecycle hook functions in the script, which will be called when the application/page reaches a specific lifecycle stage. for example:\n\n// this function will be executed when the application/page is initialized\noninit() {\n  console.log('page initialized！')\n}\n\n\nfor more detailed information, refer to lifecycle.\n\n\n# custom methods\n\ndevelopers can declare custom methods as needed in the application/page ux file, including utility methods, event callback methods, etc. for example:\n\nonbtnclick(){\n  console.log('button clicked!')\n}\n\n\n\n# global objects and methods\n\nproperties and methods declared by developers in the application ux file (app.ux) can be accessed in any page via this.$app.$def. for more details, refer to global objects and methods.\n\n\n# general methods\n\nthe framework provides some predefined general methods that can be called by pages/components. for more details, refer to general methods.",charsets:{}},{title:"Global Attributes and Methods",frontmatter:{},regularPath:"/en/guide/framework/script/global-data-method.html",relativePath:"en/guide/framework/script/global-data-method.md",key:"v-fc6abe4c",path:"/en/guide/framework/script/global-data-method.html",headers:[{level:2,title:"Objects",slug:"objects",normalizedTitle:"objects",charIndex:36},{level:3,title:"Common Objects",slug:"common-objects",normalizedTitle:"common objects",charIndex:48},{level:2,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:24},{level:3,title:"this.$canIUse",slug:"this-caniuse",normalizedTitle:"this.$caniuse",charIndex:1800},{level:3,title:"this.$watch",slug:"this-watch",normalizedTitle:"this.$watch",charIndex:2973},{level:3,title:"this.$element",slug:"this-element",normalizedTitle:"this.$element",charIndex:4300},{level:3,title:"this.$nextTick",slug:"this-nexttick",normalizedTitle:"this.$nexttick",charIndex:4979}],headersStr:"Objects Common Objects Methods this.$canIUse this.$watch this.$element this.$nextTick",content:"# Global Attributes and Methods\n\n\n# Objects\n\n\n# Common Objects\n\nATTRIBUTE   TYPE      DESCRIPTION\n$app        Object    Application object\n$page       Object    Page object\n$valid      Boolean   Whether the page object is valid\n\n# Application Object\n\nIn a page, the global application object can be accessed via $app.\n\nIn the app.ux file, developers can define globally accessible data and methods, which can be accessed in the page via this.$app.$def, and directly via this in the app.ux file. For example, define the following in the app.ux file:\n\n<script>\n/**\n * Application-level configuration for all pages\n */\nexport default {\n  data: {\n    a: 1\n  },\n  func: function() {\n    console.log(this.data.a)\n    console.log(`function executed!`)\n  }\n}\n<\/script>\n\n\nIn other pages, you can call them like this:\n\nthis.$app.$def.data\nthis.$app.$def.func()\n\n\nThe following built-in methods can be accessed via $app:\n\nATTRIBUTE   TYPE       DESCRIPTION\nexit        Function   Exit the JS application and end the application lifecycle.\n                       Usage: this.$app.exit()\n\n# Page Object\n\nIn a page, the current page object can be accessed via this.$page. The following attributes can be accessed on this object:\n\nATTRIBUTE   TYPE     DESCRIPTION\nname        String   Get the name of the current page route, consistent with the\n                     corresponding property name in router.pages in the manifest\n                     file\npath        String   Get the path of the current page route, consistent with the\n                     corresponding path in router.pages in the manifest file\ncomponent   String   Get the component of the current page route, consistent with\n                     the corresponding component in router.pages in the manifest\n                     file\n\n\n# Methods\n\n\n# this.$canIUse\n\nIn a page, you can use this.$canIUse to query available capabilities, including interfaces and components.\n\n# Parameters:\n\nTYPE     DESCRIPTION\nString   The capability to query, see the format below\n\n# Return Value:\n\nTYPE      DESCRIPTION\nBoolean   Whether the queried capability is supported\n\n# Parameter Format\n\n# Querying Interfaces\n\n// Query if a method under a feature is supported\n`@${featureName}.${method}`\n// Query if a feature is supported\n`@${featureName}`\n\n\nExample\n\nif (this.$canIUse('@system.router.push')) {\n  // Can use the method @system.router.push\n}\nif (this.$canIUse('@system.router')) {\n  // Can use the @system.router interface\n}\n\n\n# Querying Components\n\nThe type can be 'attr', 'style', or 'method', corresponding to the component's attributes, styles, and methods respectively.\n\n// Query if an attribute, style, or method under a component is supported\n`${componentName}.${type}.${name}`\n// Query if a component is supported\n`${componentName}`\n\n\nExample\n\nif (this.$canIUse('scroll')) {\n  // Can use the scroll component\n}\nif (this.$canIUse('scroll.attr.scroll-x')) {\n  // Can use the scroll-x attribute of the scroll component\n}\n\n\n\n# this.$watch\n\nMonitor data changes. Dynamically add properties/event bindings. The property must be defined in data, and the handler function must be defined in <script>. The event is triggered when the property value changes.\nIf monitoring a property in an object, use dots to separate parameters, e.g., $watch(xxx.xxx.xxx, methodName).\n\n# Parameters\n\nATTRIBUTE   TYPE     DESCRIPTION\ndata        String   Property name, supports 'a.b.c' format, does not support\n                     array indices\nhandler     String   Event handler function name. The first parameter is the new\n                     property value, the second is the old property value\n\n# Code Example\n\n<script>\n  export default {\n    props: ['propObject'],\n    data {\n      say: '',\n      propSay: ''\n    },\n    onInit() {\n      // Monitor data changes\n      this.$watch('say', 'watchDataChange')\n      this.$watch('propObject.name', 'watchPropsChange')\n    },\n    /**\n     * Monitor data changes, you can process the data and set values to data\n     * @param newV\n     * @param oldV\n     */\n    watchPropsChange(newV, oldV) {\n      console.info(`Monitoring data changes:`, newV, oldV)\n      this.propSay = newV && newV.toUpperCase()\n    },\n    watchDataChange(newV, oldV) {\n      console.info(`Monitoring data changes:`, newV, oldV)\n    }\n  }\n<\/script>\n\n\n\n# this.$element\n\nGet the DOM object of a component with the specified ID. If no ID is specified, return the root component DOM object.\n\n# Parameters\n\nTYPE     DESCRIPTION\nString   this.$element('idName') to get the DOM node\n\n# Code Example\n\n<template>\n  <div>\n    <div id='xxx'></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onReady() {\n      const el = this.$element('xxx')\n      console.log(`Output xxx node information: ${el}`)\n    }\n  }\n<\/script>\n\n\nthis.$element('xxx') gets the div component instance object with ID xxx, and this.$element() gets the root component instance object in the template.\n\nThe id property assignment can be viewed in this document.\n\n\n# this.$nextTick\n\nExecute a delayed callback after the next DOM update cycle. Using this method immediately after modifying data allows you to get the updated DOM.\n\n# Parameters\n\nTYPE       DESCRIPTION\nFunction   The callback function that performs operations on the DOM\n\n# Code Example\n\n<template>\n  <div class=\"page\">\n    <text @click=\"onAddClick\">Add Item</text>\n    <div class=\"list\" id=\"list\">\n      <div class=\"item\" for=\"{{list}}\">\n        <text>{{ $item }}</text>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list: [\"Item 1\", \"Item 2\"]\n    },\n    onAddClick() {\n      this.list.push(Math.random())\n      // After updating data, the DOM does not change immediately.\n      this.$element(\"list\").getBoundingClientRect({\n        success: (rect) => {\n          console.log(\"getBoundingClientRect.height=\", rect.height)\n        }\n      })\n      this.$nextTick(() => {\n        // After updating data, the DOM changes.\n        this.$element(\"list\").getBoundingClientRect({\n          success: (rect) => {\n            console.log(\"$nextTick getBoundingClientRect.height=\", rect.height)\n          }\n        })\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    padding-top: 20px;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  .list {\n    width: 200px;\n    flex-direction: column;\n    align-items: center;\n    border: 2px solid red;\n  }\n</style>\n\n\nIn addition to the above common methods, there are event methods such as this.$on, this.$off, this.$dispatch, this.$broadcast, and this.$emit for parent-child component communication. The method descriptions are as follows:\n\nMETHOD            PARAMETERS                                 DESCRIPTION\nthis.$on          type: String Event name                    Add an event handler. Usage: this.$on('xxxx', this.fn),\n                  handler: Function Event handler function   where fn is a function defined in <script>\nthis.$off         type: String Event name                    Remove an event handler. Usage: this.$off('xxxx', this.fn)\n                  handler: Function Event handler function   or this.$off('xxx') to remove all handlers for the specified\n                                                             event\nthis.$dispatch    type: String Event name                    Send an event notification to the parent component. Usage:\n                                                             this.$dispatch('xxx'). Normally, the event will bubble up.\n                                                             To stop bubbling, call evt.stop() in the event handler\n                                                             function\nthis.$broadcast   type: String Event name                    Send an event notification to child components. Usage:\n                                                             this.$broadcast('xxx'). Normally, the event will propagate\n                                                             down. To stop propagation, call evt.stop() in the event\n                                                             handler function\nthis.$emit        type: String Event name                    Trigger an event, and the corresponding handler function\n                  data: Object Event parameters              will be called. Usage: this.$emit('xxx') or\n                                                             this.$emit('xxx', {a:1}). The passed event parameters can be\n                                                             accessed in the event callback function via evt.detail,\n                                                             e.g., evt.detail.a\n\nFor examples of using event methods, refer to the documentation.",normalizedContent:"# global attributes and methods\n\n\n# objects\n\n\n# common objects\n\nattribute   type      description\n$app        object    application object\n$page       object    page object\n$valid      boolean   whether the page object is valid\n\n# application object\n\nin a page, the global application object can be accessed via $app.\n\nin the app.ux file, developers can define globally accessible data and methods, which can be accessed in the page via this.$app.$def, and directly via this in the app.ux file. for example, define the following in the app.ux file:\n\n<script>\n/**\n * application-level configuration for all pages\n */\nexport default {\n  data: {\n    a: 1\n  },\n  func: function() {\n    console.log(this.data.a)\n    console.log(`function executed!`)\n  }\n}\n<\/script>\n\n\nin other pages, you can call them like this:\n\nthis.$app.$def.data\nthis.$app.$def.func()\n\n\nthe following built-in methods can be accessed via $app:\n\nattribute   type       description\nexit        function   exit the js application and end the application lifecycle.\n                       usage: this.$app.exit()\n\n# page object\n\nin a page, the current page object can be accessed via this.$page. the following attributes can be accessed on this object:\n\nattribute   type     description\nname        string   get the name of the current page route, consistent with the\n                     corresponding property name in router.pages in the manifest\n                     file\npath        string   get the path of the current page route, consistent with the\n                     corresponding path in router.pages in the manifest file\ncomponent   string   get the component of the current page route, consistent with\n                     the corresponding component in router.pages in the manifest\n                     file\n\n\n# methods\n\n\n# this.$caniuse\n\nin a page, you can use this.$caniuse to query available capabilities, including interfaces and components.\n\n# parameters:\n\ntype     description\nstring   the capability to query, see the format below\n\n# return value:\n\ntype      description\nboolean   whether the queried capability is supported\n\n# parameter format\n\n# querying interfaces\n\n// query if a method under a feature is supported\n`@${featurename}.${method}`\n// query if a feature is supported\n`@${featurename}`\n\n\nexample\n\nif (this.$caniuse('@system.router.push')) {\n  // can use the method @system.router.push\n}\nif (this.$caniuse('@system.router')) {\n  // can use the @system.router interface\n}\n\n\n# querying components\n\nthe type can be 'attr', 'style', or 'method', corresponding to the component's attributes, styles, and methods respectively.\n\n// query if an attribute, style, or method under a component is supported\n`${componentname}.${type}.${name}`\n// query if a component is supported\n`${componentname}`\n\n\nexample\n\nif (this.$caniuse('scroll')) {\n  // can use the scroll component\n}\nif (this.$caniuse('scroll.attr.scroll-x')) {\n  // can use the scroll-x attribute of the scroll component\n}\n\n\n\n# this.$watch\n\nmonitor data changes. dynamically add properties/event bindings. the property must be defined in data, and the handler function must be defined in <script>. the event is triggered when the property value changes.\nif monitoring a property in an object, use dots to separate parameters, e.g., $watch(xxx.xxx.xxx, methodname).\n\n# parameters\n\nattribute   type     description\ndata        string   property name, supports 'a.b.c' format, does not support\n                     array indices\nhandler     string   event handler function name. the first parameter is the new\n                     property value, the second is the old property value\n\n# code example\n\n<script>\n  export default {\n    props: ['propobject'],\n    data {\n      say: '',\n      propsay: ''\n    },\n    oninit() {\n      // monitor data changes\n      this.$watch('say', 'watchdatachange')\n      this.$watch('propobject.name', 'watchpropschange')\n    },\n    /**\n     * monitor data changes, you can process the data and set values to data\n     * @param newv\n     * @param oldv\n     */\n    watchpropschange(newv, oldv) {\n      console.info(`monitoring data changes:`, newv, oldv)\n      this.propsay = newv && newv.touppercase()\n    },\n    watchdatachange(newv, oldv) {\n      console.info(`monitoring data changes:`, newv, oldv)\n    }\n  }\n<\/script>\n\n\n\n# this.$element\n\nget the dom object of a component with the specified id. if no id is specified, return the root component dom object.\n\n# parameters\n\ntype     description\nstring   this.$element('idname') to get the dom node\n\n# code example\n\n<template>\n  <div>\n    <div id='xxx'></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onready() {\n      const el = this.$element('xxx')\n      console.log(`output xxx node information: ${el}`)\n    }\n  }\n<\/script>\n\n\nthis.$element('xxx') gets the div component instance object with id xxx, and this.$element() gets the root component instance object in the template.\n\nthe id property assignment can be viewed in this document.\n\n\n# this.$nexttick\n\nexecute a delayed callback after the next dom update cycle. using this method immediately after modifying data allows you to get the updated dom.\n\n# parameters\n\ntype       description\nfunction   the callback function that performs operations on the dom\n\n# code example\n\n<template>\n  <div class=\"page\">\n    <text @click=\"onaddclick\">add item</text>\n    <div class=\"list\" id=\"list\">\n      <div class=\"item\" for=\"{{list}}\">\n        <text>{{ $item }}</text>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list: [\"item 1\", \"item 2\"]\n    },\n    onaddclick() {\n      this.list.push(math.random())\n      // after updating data, the dom does not change immediately.\n      this.$element(\"list\").getboundingclientrect({\n        success: (rect) => {\n          console.log(\"getboundingclientrect.height=\", rect.height)\n        }\n      })\n      this.$nexttick(() => {\n        // after updating data, the dom changes.\n        this.$element(\"list\").getboundingclientrect({\n          success: (rect) => {\n            console.log(\"$nexttick getboundingclientrect.height=\", rect.height)\n          }\n        })\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    padding-top: 20px;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  .list {\n    width: 200px;\n    flex-direction: column;\n    align-items: center;\n    border: 2px solid red;\n  }\n</style>\n\n\nin addition to the above common methods, there are event methods such as this.$on, this.$off, this.$dispatch, this.$broadcast, and this.$emit for parent-child component communication. the method descriptions are as follows:\n\nmethod            parameters                                 description\nthis.$on          type: string event name                    add an event handler. usage: this.$on('xxxx', this.fn),\n                  handler: function event handler function   where fn is a function defined in <script>\nthis.$off         type: string event name                    remove an event handler. usage: this.$off('xxxx', this.fn)\n                  handler: function event handler function   or this.$off('xxx') to remove all handlers for the specified\n                                                             event\nthis.$dispatch    type: string event name                    send an event notification to the parent component. usage:\n                                                             this.$dispatch('xxx'). normally, the event will bubble up.\n                                                             to stop bubbling, call evt.stop() in the event handler\n                                                             function\nthis.$broadcast   type: string event name                    send an event notification to child components. usage:\n                                                             this.$broadcast('xxx'). normally, the event will propagate\n                                                             down. to stop propagation, call evt.stop() in the event\n                                                             handler function\nthis.$emit        type: string event name                    trigger an event, and the corresponding handler function\n                  data: object event parameters              will be called. usage: this.$emit('xxx') or\n                                                             this.$emit('xxx', {a:1}). the passed event parameters can be\n                                                             accessed in the event callback function via evt.detail,\n                                                             e.g., evt.detail.a\n\nfor examples of using event methods, refer to the documentation.",charsets:{}},{title:"Page Data Object",frontmatter:{},regularPath:"/en/guide/framework/script/page-data.html",relativePath:"en/guide/framework/script/page-data.md",key:"v-14cde4d4",path:"/en/guide/framework/script/page-data.html",headersStr:null,content:"# Page Data Object\n\nPROPERTY    TYPE     DESCRIPTION\ndata        Object   Component-level data model. Property names must not start\n                     with $ or _. Do not use reserved words such as for, if,\n                     show, tid.\npublic      Object   Page-level component data model. It affects the override\n                     mechanism of incoming data: Properties defined within public\n                     can be overridden by incoming data. If an external incoming\n                     data property is not declared in public, it will not be\n                     added.\nprotected   Object   Page-level component data model. It affects the override\n                     mechanism of incoming data: Properties defined within\n                     protected can be overridden by data passed from internal\n                     page requests within the application, but not by data passed\n                     from external requests.\nprivate     Object   Page-level component data model. It affects the override\n                     mechanism of incoming data: Properties defined within\n                     private cannot be overridden.\ncomputed    Object   Computed properties. Property names must not start with $ or\n                     _. Do not use reserved words such as for, if, show, tid.\n\nHelpful Tip\n\nNote that public, protected, and private cannot be used simultaneously with data.",normalizedContent:"# page data object\n\nproperty    type     description\ndata        object   component-level data model. property names must not start\n                     with $ or _. do not use reserved words such as for, if,\n                     show, tid.\npublic      object   page-level component data model. it affects the override\n                     mechanism of incoming data: properties defined within public\n                     can be overridden by incoming data. if an external incoming\n                     data property is not declared in public, it will not be\n                     added.\nprotected   object   page-level component data model. it affects the override\n                     mechanism of incoming data: properties defined within\n                     protected can be overridden by data passed from internal\n                     page requests within the application, but not by data passed\n                     from external requests.\nprivate     object   page-level component data model. it affects the override\n                     mechanism of incoming data: properties defined within\n                     private cannot be overridden.\ncomputed    object   computed properties. property names must not start with $ or\n                     _. do not use reserved words such as for, if, show, tid.\n\nhelpful tip\n\nnote that public, protected, and private cannot be used simultaneously with data.",charsets:{}},{title:"Style",frontmatter:{},regularPath:"/en/guide/framework/style/",relativePath:"en/guide/framework/style/README.md",key:"v-1af07735",path:"/en/guide/framework/style/",headers:[{level:2,title:"File Import",slug:"file-import",normalizedTitle:"file import",charIndex:500},{level:2,title:"Internal Template Style",slug:"internal-template-style",normalizedTitle:"internal template style",charIndex:741},{level:2,title:"Selectors",slug:"selectors",normalizedTitle:"selectors",charIndex:967},{level:2,title:"Selector Priority",slug:"selector-priority",normalizedTitle:"selector priority",charIndex:1472},{level:2,title:"Style Precompilation",slug:"style-precompilation",normalizedTitle:"style precompilation",charIndex:2385}],headersStr:"File Import Internal Template Style Selectors Selector Priority Style Precompilation",content:'# Style\n\nThe style is used to describe the component style of the template and determine how the component should be displayed.\n\nThe style layout adopts the CSS Flexbox style, which expands and modifies CSS for some native components.\n\nTo solve the screen adaptation problem, all size-related styles (such as width and font-size) are based on the reference width (default 480px) and scaled according to the actual screen width. For example, width:100px is actually 200px on a 960px width screen.\n\n\n# File Import\n\nTwo ways to import external files are supported:\n\n\x3c!-- Import external file to replace internal style --\x3e\n<style src="./style.css"></style>\n\n\x3c!-- Merge external file --\x3e\n<style>\n  @import \'./style.css\';\n  .a {\n  }\n</style>\n\n\n\n# Internal Template Style\n\nThe style and class attributes are supported to control the component style:\n\n\x3c!-- Inline style --\x3e\n<div style="color:red; margin: 10px;"/>\n\x3c!-- Class declaration --\x3e\n<div class="normal append"/>\n\n\n\n# Selectors\n\nSupported selectors include:\n\nSELECTOR   EXAMPLE      DESCRIPTION\n.class     .intro       Select all components with class="intro"\n#id        #firstname   Select the component with id="firstname"\ntag        div          Select all div components\n,          .a, .b       Select all components with class="a" and class="b"\n\n<style>\n  /* Single selector */\n  text {\n  }\n  .class-abc {\n  }\n  #idAbc {\n  }\n  /* Multiple selectors with the same style */\n  .font-text, .font-comma {\n  }\n</style>\n\n\n\n# Selector Priority\n\nThe priority calculation of the current style selector is consistent with the browser, which is a subset of browser CSS rendering (only supports: inline, id, class, tag).\n\nMultiple CSS declarations can match the same element, such as div. The overall priority of CSS declarations applied to this element is: inline > #id > .class > tag. These four categories match multiple CSS declarations of the element, such as: <div id="sample" style="width: 200px;" class="class-div"></div>. The priority is compared based on the sum of the weight values of each selector. The priority weight values of selectors are as follows:\n\n * ID selector (e.g., #hello) has a weight value of 10000\n\n * Class selector (e.g., .example) has a weight value of 100\n\n * Type selector (e.g., h1) has a weight value of 1\n\nThe CSS priority calculation document can also be viewed in the MDN documentation for beginners.\n\n\n# Style Precompilation\n\nCurrently, JS applications support precompilation of less and sass. For specific tutorials, please refer to here.\n\n\x3c!-- Import external file to replace internal style --\x3e\n<style lang="less" src="./lessFile.less"></style>\n\n\x3c!-- Merge external file --\x3e\n<style lang="less">\n  @import \'./lessFile.less\';\n  .less-font-text, .less-font-comma {\n    font-size: 60px;\n  }\n</style>\n',normalizedContent:'# style\n\nthe style is used to describe the component style of the template and determine how the component should be displayed.\n\nthe style layout adopts the css flexbox style, which expands and modifies css for some native components.\n\nto solve the screen adaptation problem, all size-related styles (such as width and font-size) are based on the reference width (default 480px) and scaled according to the actual screen width. for example, width:100px is actually 200px on a 960px width screen.\n\n\n# file import\n\ntwo ways to import external files are supported:\n\n\x3c!-- import external file to replace internal style --\x3e\n<style src="./style.css"></style>\n\n\x3c!-- merge external file --\x3e\n<style>\n  @import \'./style.css\';\n  .a {\n  }\n</style>\n\n\n\n# internal template style\n\nthe style and class attributes are supported to control the component style:\n\n\x3c!-- inline style --\x3e\n<div style="color:red; margin: 10px;"/>\n\x3c!-- class declaration --\x3e\n<div class="normal append"/>\n\n\n\n# selectors\n\nsupported selectors include:\n\nselector   example      description\n.class     .intro       select all components with class="intro"\n#id        #firstname   select the component with id="firstname"\ntag        div          select all div components\n,          .a, .b       select all components with class="a" and class="b"\n\n<style>\n  /* single selector */\n  text {\n  }\n  .class-abc {\n  }\n  #idabc {\n  }\n  /* multiple selectors with the same style */\n  .font-text, .font-comma {\n  }\n</style>\n\n\n\n# selector priority\n\nthe priority calculation of the current style selector is consistent with the browser, which is a subset of browser css rendering (only supports: inline, id, class, tag).\n\nmultiple css declarations can match the same element, such as div. the overall priority of css declarations applied to this element is: inline > #id > .class > tag. these four categories match multiple css declarations of the element, such as: <div id="sample" style="width: 200px;" class="class-div"></div>. the priority is compared based on the sum of the weight values of each selector. the priority weight values of selectors are as follows:\n\n * id selector (e.g., #hello) has a weight value of 10000\n\n * class selector (e.g., .example) has a weight value of 100\n\n * type selector (e.g., h1) has a weight value of 1\n\nthe css priority calculation document can also be viewed in the mdn documentation for beginners.\n\n\n# style precompilation\n\ncurrently, js applications support precompilation of less and sass. for specific tutorials, please refer to here.\n\n\x3c!-- import external file to replace internal style --\x3e\n<style lang="less" src="./lessfile.less"></style>\n\n\x3c!-- merge external file --\x3e\n<style lang="less">\n  @import \'./lessfile.less\';\n  .less-font-text, .less-font-comma {\n    font-size: 60px;\n  }\n</style>\n',charsets:{}},{title:"Media Queries",frontmatter:{},regularPath:"/en/guide/framework/style/media-query.html",relativePath:"en/guide/framework/style/media-query.md",key:"v-c37165d8",path:"/en/guide/framework/style/media-query.html",headers:[{level:2,title:"Syntax",slug:"syntax",normalizedTitle:"syntax",charIndex:458},{level:3,title:"Introducing media queries using @media",slug:"introducing-media-queries-using-media",normalizedTitle:"introducing media queries using @media",charIndex:749},{level:3,title:"Examples",slug:"examples",normalizedTitle:"examples",charIndex:863},{level:3,title:"Introducing media queries using @import",slug:"introducing-media-queries-using-import",normalizedTitle:"introducing media queries using @import",charIndex:1189},{level:2,title:"Media Types",slug:"media-types",normalizedTitle:"media types",charIndex:1312},{level:2,title:"Media Features",slug:"media-features",normalizedTitle:"media features",charIndex:1649},{level:3,title:"Notes",slug:"notes",normalizedTitle:"notes",charIndex:3798},{level:2,title:"Logical Operators",slug:"logical-operators",normalizedTitle:"logical operators",charIndex:5451},{level:2,title:"Example Code",slug:"example-code",normalizedTitle:"example code",charIndex:7493},{level:2,title:"Support Details",slug:"support-details",normalizedTitle:"support details",charIndex:8065}],headersStr:"Syntax Introducing media queries using @media Examples Introducing media queries using @import Media Types Media Features Notes Logical Operators Example Code Support Details",content:"# Media Queries\n\nThrough media queries, developers can adjust the styles of JS applications based on the values or existence of various device characteristics and parameters.\n\nMedia queries are part of responsive design. Similar to CSS, you can use the @media at-rule to conditionally apply a portion of a stylesheet based on media query results; you can also use @import to conditionally apply an entire stylesheet.\n\nMinimum aiot-toolkit version: 1.1.3\n\n\n# Syntax\n\nEach media query statement consists of an optional media type and any number of media feature expressions. Multiple media query statements can be combined using various logical operators. Media query statements are case-insensitive.\n\nThere are two ways to perform media queries:\n\n\n# Introducing media queries using @media\n\n@media [media type] [and|not|only] [(media feature)] {\n  CSS-Code;\n}\n\n\n\n# Examples\n\n * @media (max-width: 30) { ... } // Level 3 syntax.\n * @media (width <= 30) { ... } // Level 4 syntax, clearer and more concise than Level 3.\n * @media screen and (min-width: 400) and (max-width: 700) { ... } // Multi-condition syntax.\n * @media (400 <= width <= 700) { ... } // Multi-condition Level 4 syntax.\n\n\n# Introducing media queries using @import\n\n@import './css_file_name.css' [media type] [and|not|only] [(media feature)];\n\n\n\n# Media Types\n\nMedia types describe the category of the device. Except when using the not or only logical operators, where the media type must be included, the media type is optional at other times. The currently supported media types for JS applications are as follows:\n\nMEDIA TYPE   DESCRIPTION\nscreen       Mainly used for screens.\n\n\n# Media Features\n\nMedia feature expressions are entirely optional and are responsible for testing whether these features or characteristics exist and what their values are.\n\nEach media feature expression must be enclosed in parentheses.\n\nThe currently supported media features for JS applications are as follows:\n\nTYPE               DESCRIPTION                                                    UNIT REQUIRED FOR QUERY   SUPPORTED UNITS\nheight             Defines the visible page area height on the output device.     No                        dp\nmin-height         Defines the minimum visible page area height on the output     No                        dp\n                   device.\nmax-height         Defines the maximum visible page area height on the output     No                        dp\n                   device.\nwidth              Defines the visible page area width on the output device.      No                        dp\nmin-width          Defines the minimum visible page area width on the output      No                        dp\n                   device.\nmax-width          Defines the maximum visible page area width on the output      No                        dp\n                   device.\naspect-ratio       Defines the aspect ratio of the visible page area on the       No                        None\n                   output device. The ratio value should be in the format x/y,\n                   e.g., 1/2.\nmin-aspect-ratio   Defines the minimum aspect ratio of the visible page area on   No                        None\n                   the output device. Parameter requirements are the same as\n                   above.\nmax-aspect-ratio   Defines the maximum aspect ratio of the visible page area on   No                        None\n                   the output device. Parameter requirements are the same as\n                   above.\ndevice-type        Possible values for device-type are: watch, band,              No                        None\n                   smartspeaker. Default value: watch.\nshape              Screen shape. Possible values: circle, rect, pill-shaped.      No                        None\n\n\n# Notes\n\n 1. In the media feature list, media features marked as \"no unit required for query,\" such as width and height, should not include length units, and the length unit can only be dp.\n\ndp value = physical resolution / device pixel ratio (DPR)\n\nExample: For a device with a resolution of 480*480 and a DPR of 2, the screen width = 480 pixels = 240dp.\n\nDevice data reference:\n\nDEVICE TYPE   DEVICE MODEL          SCREEN SHAPE   SCREEN SIZE   RESOLUTION   PPI   DPR   HORIZONTAL DP VALUE\nWatch         Xiaomi Watch S1 Pro   Circle         1.47 inches   480x480      326   2.0   240\nWatch         Xiaomi Watch H1       Circle         1.43 inches   466x466      326   2.0   233\nWatch         Xiaomi Watch S3       Circle         1.43 inches   466x466      326   2.0   233\nBand          Xiaomi Band 8 Pro     Rectangle      1.74 inches   336x480      336   2.1   168\nBand          Xiaomi Band 9         Pill-shaped    1.62 inches   192x490      325   2.0   96\n\nExample code:\n\n// The following media query will take effect on Xiaomi Band 9, which has a resolution of 192*490 and a horizontal DP value of 96.\n@media (min-width: 80) and (max-width: 160) {\n  .box {\n    background-color: green;\n  }\n}\n\n// The following media query will take effect on Xiaomi Band 8 Pro, which has a resolution of 336*480 and a horizontal DP value of 168.\n@media (min-width: 160) and (max-width: 200) {\n  .box {\n    background-color: yellow;\n  }\n}\n\n// The following media query will take effect on Xiaomi Watch S3, which has a resolution of 466*466 and a horizontal DP value of 233.\n@media (min-width: 200) and (max-width: 300) {\n  .box {\n    background-color: red;\n  }\n}\n\n\n\n# Logical Operators\n\nDevelopers can use logical operators to combine multiple media feature query conditions and write complex media queries.\n\nTYPE        DESCRIPTION\nand         The and operator is used to combine multiple media features\n            into a single media query. The query is true if each linked\n            feature returns true.\nnot         The not operator is used to negate a media query. If the\n            query does not return false, it returns true. If it appears\n            in a comma-separated list, it only negates the specific\n            query to which it is applied. If using the not operator, an\n            explicit media type must be specified. Example: not screen\n            and (min-width: 400) and (max-width: 700). Note: The not\n            keyword cannot be used to negate a single feature\n            expression; it applies to the entire media query.\nonly        The only operator is used to apply styles only when the\n            entire query matches. Watch applications will ignore the\n            only keyword when processing keywords starting with only. If\n            using the only operator, a media type must be specified.\n            Example: only screen and (min-width: 400) and (max-width:\n            700).\n, (comma)   The comma-separated effect is equivalent to the or logical\n            operator. When using comma-separated media queries, if any\n            media query returns true, the styles are valid. Example:\n            (width >= 192), (height >= 490).\nor          The or operator is used to combine multiple media feature\n            comparison statements into a single media query statement.\n            The query is true if any of the media feature comparison\n            statements return true. Example: (min-width: 400) or\n            (max-width: 700).\n<=          Less than or equal to. Example: (400 <= width).\n>=          Greater than or equal to. Example: (500 >= height).\n<           Less than. Example: (400 < width).\n>           Greater than. Example: (500 > height).\n\n\n# Example Code\n\n * Query for circular or pill-shaped screens:\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (shape: circle) or (shape: pill-shaped) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n\n * Query for devices of type watch with circular screens:\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (device-type: watch) and (shape: circle) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n\n\n# Support Details\n\nDEVICE PRODUCT                            DESCRIPTION\nXiaomi S1 Pro Sports Health Watch         Not supported\nXiaomi Band 8 Pro                         Not supported\nXiaomi Watch S3                           Supports 2+ features\nRedmi Watch 4                             Not supported\nXiaomi Wrist ECG Blood Pressure Monitor   Not supported\nXiaomi Watch S4                           Supported\nREDMI Watch 5                             Supported",normalizedContent:"# media queries\n\nthrough media queries, developers can adjust the styles of js applications based on the values or existence of various device characteristics and parameters.\n\nmedia queries are part of responsive design. similar to css, you can use the @media at-rule to conditionally apply a portion of a stylesheet based on media query results; you can also use @import to conditionally apply an entire stylesheet.\n\nminimum aiot-toolkit version: 1.1.3\n\n\n# syntax\n\neach media query statement consists of an optional media type and any number of media feature expressions. multiple media query statements can be combined using various logical operators. media query statements are case-insensitive.\n\nthere are two ways to perform media queries:\n\n\n# introducing media queries using @media\n\n@media [media type] [and|not|only] [(media feature)] {\n  css-code;\n}\n\n\n\n# examples\n\n * @media (max-width: 30) { ... } // level 3 syntax.\n * @media (width <= 30) { ... } // level 4 syntax, clearer and more concise than level 3.\n * @media screen and (min-width: 400) and (max-width: 700) { ... } // multi-condition syntax.\n * @media (400 <= width <= 700) { ... } // multi-condition level 4 syntax.\n\n\n# introducing media queries using @import\n\n@import './css_file_name.css' [media type] [and|not|only] [(media feature)];\n\n\n\n# media types\n\nmedia types describe the category of the device. except when using the not or only logical operators, where the media type must be included, the media type is optional at other times. the currently supported media types for js applications are as follows:\n\nmedia type   description\nscreen       mainly used for screens.\n\n\n# media features\n\nmedia feature expressions are entirely optional and are responsible for testing whether these features or characteristics exist and what their values are.\n\neach media feature expression must be enclosed in parentheses.\n\nthe currently supported media features for js applications are as follows:\n\ntype               description                                                    unit required for query   supported units\nheight             defines the visible page area height on the output device.     no                        dp\nmin-height         defines the minimum visible page area height on the output     no                        dp\n                   device.\nmax-height         defines the maximum visible page area height on the output     no                        dp\n                   device.\nwidth              defines the visible page area width on the output device.      no                        dp\nmin-width          defines the minimum visible page area width on the output      no                        dp\n                   device.\nmax-width          defines the maximum visible page area width on the output      no                        dp\n                   device.\naspect-ratio       defines the aspect ratio of the visible page area on the       no                        none\n                   output device. the ratio value should be in the format x/y,\n                   e.g., 1/2.\nmin-aspect-ratio   defines the minimum aspect ratio of the visible page area on   no                        none\n                   the output device. parameter requirements are the same as\n                   above.\nmax-aspect-ratio   defines the maximum aspect ratio of the visible page area on   no                        none\n                   the output device. parameter requirements are the same as\n                   above.\ndevice-type        possible values for device-type are: watch, band,              no                        none\n                   smartspeaker. default value: watch.\nshape              screen shape. possible values: circle, rect, pill-shaped.      no                        none\n\n\n# notes\n\n 1. in the media feature list, media features marked as \"no unit required for query,\" such as width and height, should not include length units, and the length unit can only be dp.\n\ndp value = physical resolution / device pixel ratio (dpr)\n\nexample: for a device with a resolution of 480*480 and a dpr of 2, the screen width = 480 pixels = 240dp.\n\ndevice data reference:\n\ndevice type   device model          screen shape   screen size   resolution   ppi   dpr   horizontal dp value\nwatch         xiaomi watch s1 pro   circle         1.47 inches   480x480      326   2.0   240\nwatch         xiaomi watch h1       circle         1.43 inches   466x466      326   2.0   233\nwatch         xiaomi watch s3       circle         1.43 inches   466x466      326   2.0   233\nband          xiaomi band 8 pro     rectangle      1.74 inches   336x480      336   2.1   168\nband          xiaomi band 9         pill-shaped    1.62 inches   192x490      325   2.0   96\n\nexample code:\n\n// the following media query will take effect on xiaomi band 9, which has a resolution of 192*490 and a horizontal dp value of 96.\n@media (min-width: 80) and (max-width: 160) {\n  .box {\n    background-color: green;\n  }\n}\n\n// the following media query will take effect on xiaomi band 8 pro, which has a resolution of 336*480 and a horizontal dp value of 168.\n@media (min-width: 160) and (max-width: 200) {\n  .box {\n    background-color: yellow;\n  }\n}\n\n// the following media query will take effect on xiaomi watch s3, which has a resolution of 466*466 and a horizontal dp value of 233.\n@media (min-width: 200) and (max-width: 300) {\n  .box {\n    background-color: red;\n  }\n}\n\n\n\n# logical operators\n\ndevelopers can use logical operators to combine multiple media feature query conditions and write complex media queries.\n\ntype        description\nand         the and operator is used to combine multiple media features\n            into a single media query. the query is true if each linked\n            feature returns true.\nnot         the not operator is used to negate a media query. if the\n            query does not return false, it returns true. if it appears\n            in a comma-separated list, it only negates the specific\n            query to which it is applied. if using the not operator, an\n            explicit media type must be specified. example: not screen\n            and (min-width: 400) and (max-width: 700). note: the not\n            keyword cannot be used to negate a single feature\n            expression; it applies to the entire media query.\nonly        the only operator is used to apply styles only when the\n            entire query matches. watch applications will ignore the\n            only keyword when processing keywords starting with only. if\n            using the only operator, a media type must be specified.\n            example: only screen and (min-width: 400) and (max-width:\n            700).\n, (comma)   the comma-separated effect is equivalent to the or logical\n            operator. when using comma-separated media queries, if any\n            media query returns true, the styles are valid. example:\n            (width >= 192), (height >= 490).\nor          the or operator is used to combine multiple media feature\n            comparison statements into a single media query statement.\n            the query is true if any of the media feature comparison\n            statements return true. example: (min-width: 400) or\n            (max-width: 700).\n<=          less than or equal to. example: (400 <= width).\n>=          greater than or equal to. example: (500 >= height).\n<           less than. example: (400 < width).\n>           greater than. example: (500 > height).\n\n\n# example code\n\n * query for circular or pill-shaped screens:\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (shape: circle) or (shape: pill-shaped) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n\n * query for devices of type watch with circular screens:\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (device-type: watch) and (shape: circle) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n\n\n# support details\n\ndevice product                            description\nxiaomi s1 pro sports health watch         not supported\nxiaomi band 8 pro                         not supported\nxiaomi watch s3                           supports 2+ features\nredmi watch 4                             not supported\nxiaomi wrist ecg blood pressure monitor   not supported\nxiaomi watch s4                           supported\nredmi watch 5                             supported",charsets:{cjk:!0}},{title:"Page Styling and Layout",frontmatter:{},regularPath:"/en/guide/framework/style/page-style-and-layout.html",relativePath:"en/guide/framework/style/page-style-and-layout.md",key:"v-4281869e",path:"/en/guide/framework/style/page-style-and-layout.html",headers:[{level:2,title:"Box Model",slug:"box-model",normalizedTitle:"box model",charIndex:30},{level:2,title:"Length Units",slug:"length-units",normalizedTitle:"length units",charIndex:557},{level:3,title:"px",slug:"px",normalizedTitle:"px",charIndex:622},{level:3,title:"Percentage %",slug:"percentage",normalizedTitle:"percentage %",charIndex:2162},{level:3,title:"dp",slug:"dp",normalizedTitle:"dp",charIndex:629},{level:2,title:"Setting Positioning",slug:"setting-positioning",normalizedTitle:"setting positioning",charIndex:2672},{level:2,title:"Setting Styles",slug:"setting-styles",normalizedTitle:"setting styles",charIndex:2831},{level:2,title:"Common Styles",slug:"common-styles",normalizedTitle:"common styles",charIndex:3648},{level:2,title:"Flex Layout Example",slug:"flex-layout-example",normalizedTitle:"flex layout example",charIndex:3728},{level:2,title:"Dynamic Style Modification",slug:"dynamic-style-modification",normalizedTitle:"dynamic style modification",charIndex:4859},{level:2,title:"Introducing Less/SCSS Precompilation",slug:"introducing-less-scss-precompilation",normalizedTitle:"introducing less/scss precompilation",charIndex:6371},{level:3,title:"Less Section",slug:"less-section",normalizedTitle:"less section",charIndex:6412},{level:3,title:"SCSS Section",slug:"scss-section",normalizedTitle:"scss section",charIndex:6946},{level:2,title:"Using PostCSS to Parse CSS",slug:"using-postcss-to-parse-css",normalizedTitle:"using postcss to parse css",charIndex:7551}],headersStr:"Box Model Length Units px Percentage % dp Setting Positioning Setting Styles Common Styles Flex Layout Example Dynamic Style Modification Introducing Less/SCSS Precompilation Less Section SCSS Section Using PostCSS to Parse CSS",content:'# Page Styling and Layout\n\n\n# Box Model\n\nThe JS application layout framework uses the border-box model. For specific performance and width/height/margin calculations, refer to the MDN documentation on box-sizing. The content-box model and manual specification of the box-sizing property are not currently supported.\n\n\n\nWidth occupied by the layout:\n\nWidth = width (including padding-left + padding-right + border-left + border-right)\n\nHeight occupied by the layout:\n\nHeight = height (including padding-top + padding-bottom + border-top + border-bottom)\n\n\n# Length Units\n\nThe framework supports the following length units: px, %, dp.\n\n\n# px\n\nUnlike traditional web pages, px is a unit relative to the project configuration base width. It has been adapted for mobile screens, similar in principle to rem.\n\nDevelopers only need to determine the px value in the framework style based on the design draft.\n\nFirst, define the project configuration base width, which is the value of config.designWidth in the project configuration file (<ProjectName>/src/manifest.json). The default value is 480 if not specified.\n\nThen, the conversion formula between design draft 1px and framework style 1px is as follows:\n\nDesign draft 1px / Design draft base width = Framework style 1px / Project configuration base width\n\n\nExample:\n\nIf the design draft width is 640px and element A has a width of 100px in the design draft, there are two implementation schemes:\n\nScheme 1:\n\nModify the project configuration base width: Set the project configuration base width to the design draft base width, then framework style 1px equals design draft 1px.\n\n * Set the project configuration base width in the project configuration file (<ProjectName>/src/manifest.json) by modifying config.designWidth:\n\n{\n  "config": {\n    "designWidth": 640\n  }\n}\n\n\n * Set the framework style for element A:\n\nwidth: 100px;\n\n\nScheme 2:\n\nDo not modify the project configuration base width: If the current project\'s project configuration base width is 480, let the framework style of element A be xpx. From the conversion formula: 100 / 640 = x / 480.\n\n * Set the framework style for element A:\n\nwidth: 75px;\n\n\n\n# Percentage %\n\nThe percentage calculation rules in JS applications are similar to CSS. Refer to the MDN documentation.\n\n\n# dp\n\nThe dp unit stands for device independent pixels.\n\nCalculation formula: dp value = physical resolution / device pixel ratio\n\nExample: A device with a resolution of 480*480 and a device pixel ratio of 2 has a screen width of 480 pixels = 240dp.\n\nExample code:\n\n<style>\n  .dp-box{\n    width:360dp;\n    height:360dp;\n    background-color:green;\n    margin-bottom:40px;\n  }\n</style>\n\n\n\n# Setting Positioning\n\nThe position property supports two values: relative and absolute, with relative as the default value. Refer to the MDN documentation.\n\n\n# Setting Styles\n\nDevelopers can use inline styles, tag selectors, class selectors, and id selectors to style components.\n\nYou can also use parallel selectors to set styles. Descendant selectors are not currently supported.\n\nDetailed documentation can be found here.\n\nExample:\n\n<template>\n  <div class="page">\n    <text style="color: #FF0000;">Inline style</text>\n    <text id="title">ID selector</text>\n    <text class="title">Class selector</text>\n    <text>Tag selector</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n  /* Tag selector */\n  text {\n    color: #0000FF;\n  }\n  /* Class selector (recommended) */\n  .title {\n    color: #00FF00;\n  }\n  /* ID selector */\n  #title {\n    color: #00A000;\n  }\n  /* Parallel selector */\n  .title, #title {\n    font-weight: bold;\n  }\n</style>\n\n\n\n# Common Styles\n\nFor common styles such as margin and padding, refer to here.\n\n\n# Flex Layout Example\n\nThe framework uses Flex layout. For more information on Flex layout, refer to the external documentation A Complete Guide to Flexbox.\n\nSupport for Flex layout can also be found in the Common Styles section of the official documentation.\n\nThe div component is the most commonly used Flex container component with Flex layout characteristics. The text and span components are text container components. Other components cannot directly contain text content.\n\nExample:\n\n<template>\n  <div class="page">\n    <div class="item">\n      <text>item1</text>\n    </div>\n    <div class="item">\n      <text>item2</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    /* Cross-axis centering */\n    align-items: center;\n    /* Vertical arrangement */\n    flex-direction: column;\n  }\n  .item {\n    /* Allow stretching when there is remaining space */\n    /*flex-grow: 1;*/\n    /* Do not allow compression when space is insufficient */\n    flex-shrink: 0;\n    /* Main axis centering */\n    justify-content: center;\n    width: 200px;\n    height: 100px;\n    margin: 10px;\n    background-color: #FF0000;\n  }\n</style>\n\n\n\n# Dynamic Style Modification\n\nThere are multiple ways to dynamically modify styles, consistent with traditional front-end development habits, including but not limited to the following:\n\n * Modify class: Update the value of the variable used in the component\'s class attribute.\n * Modify inline style: Update a CSS value in the component\'s style attribute.\n * Modify bound object: Control the element\'s style through a bound object.\n\nExample:\n\n<template>\n  <div style="flex-direction: column;">\n    \x3c!-- Modify class --\x3e\n    <text class="normal-text {{ className }}" onclick="changeClassName">Click to change text color</text>\n    \x3c!-- Modify inline style --\x3e\n    <text style="color: {{ textColor }}" onclick="changeInlineStyle">Click to change text color</text>\n    \x3c!-- Modify bound object --\x3e\n    <text style="{{ styleObj }}" onclick="changeStyleObj">Click to change text color</text>\n  </div>\n</template>\n\n<style>\n  .normal-text {\n    font-weight: bold;\n  }\n  .text-blue {\n    color: #0faeff;\n  }\n  .text-red {\n    color: #f76160;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      className: \'text-blue\',\n      textColor: \'#0faeff\',\n      styleObj: {\n        color: \'red\'\n      }\n    },\n    onInit () {\n      console.info(\'Dynamic style modification\')\n    },\n    changeClassName () {\n      this.className = \'text-red\'\n    },\n    changeInlineStyle () {\n      this.textColor = \'#f76160\'\n    },\n    changeStyleObj () {\n      this.styleObj = {\n        color: \'yellow\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# Introducing Less/SCSS Precompilation\n\n\n# Less Section\n\nFor an introduction to less syntax, refer to the less Chinese official website.\n\nTo use less, first install the corresponding libraries: less, less-loader:\n\nnpm i less less-loader\n\n\nRefer to the documentation Style Syntax --\x3e Style Precompilation. Then add the attribute lang="less" to the <style> tag.\n\nExample:\n\n<template>\n  <div class="page">\n    <text id="title">Less example!</text>\n  </div>\n</template>\n<style lang="less">\n  /* Import external less file */\n  @import \'./style.less\';\n  /* Use less */\n</style>\n\n\n\n# SCSS Section\n\nFor an introduction to scss syntax, refer to the scss Chinese official website.\n\nTo use scss, execute the following command under the JS application project to install the corresponding libraries: node-sass, sass-loader:\n\nnpm i node-sass sass-loader\n\n\nRefer to the documentation Style Syntax --\x3e Style Precompilation. Then add the attribute lang="scss" to the <style> tag.\n\nExample:\n\n<template>\n  <div class="page">\n    <text id="title">Less example!</text>\n  </div>\n</template>\n\n<style lang="scss">\n  /* Import external scss file */\n  @import \'./style.scss\';\n  /* Use scss */\n</style>\n\n\n\n# Using PostCSS to Parse CSS\n\nJS applications support using PostCSS to parse CSS. PostCSS can parse CSS using syntax similar to Less and Sass, supporting features such as variables, nesting, and defining functions.\n\nUsing PostCSS to parse CSS involves three steps:\n\n 1. Install the corresponding loader:\n\n> npm i postcss-loader precss@3.1.2 -D\n\n 2. Create a postcss.config.js file in the project root directory and add the following content:\n\nmodule.exports = {\n  plugins: [require(\'precss\')]\n}\n\n\nHere, precss is a PostCSS plugin.\n\n 3. Add lang="postcss" to the corresponding style tag on the page, as follows:\n\n<style lang="postcss">\n  /* Use PostCSS */\n  .page {\n    justify-content: center;\n    background-color: #00beaf;\n  }\n  \n  #title {\n    color: #FF0000;\n  }\n</style>\n\n\nNow you can write the corresponding code in CSS.\n\nNote\n\nIf you want to support more syntax formats, you can add more plugins in the postcss.config.js file. For PostCSS plugins, refer to the plugin address.',normalizedContent:'# page styling and layout\n\n\n# box model\n\nthe js application layout framework uses the border-box model. for specific performance and width/height/margin calculations, refer to the mdn documentation on box-sizing. the content-box model and manual specification of the box-sizing property are not currently supported.\n\n\n\nwidth occupied by the layout:\n\nwidth = width (including padding-left + padding-right + border-left + border-right)\n\nheight occupied by the layout:\n\nheight = height (including padding-top + padding-bottom + border-top + border-bottom)\n\n\n# length units\n\nthe framework supports the following length units: px, %, dp.\n\n\n# px\n\nunlike traditional web pages, px is a unit relative to the project configuration base width. it has been adapted for mobile screens, similar in principle to rem.\n\ndevelopers only need to determine the px value in the framework style based on the design draft.\n\nfirst, define the project configuration base width, which is the value of config.designwidth in the project configuration file (<projectname>/src/manifest.json). the default value is 480 if not specified.\n\nthen, the conversion formula between design draft 1px and framework style 1px is as follows:\n\ndesign draft 1px / design draft base width = framework style 1px / project configuration base width\n\n\nexample:\n\nif the design draft width is 640px and element a has a width of 100px in the design draft, there are two implementation schemes:\n\nscheme 1:\n\nmodify the project configuration base width: set the project configuration base width to the design draft base width, then framework style 1px equals design draft 1px.\n\n * set the project configuration base width in the project configuration file (<projectname>/src/manifest.json) by modifying config.designwidth:\n\n{\n  "config": {\n    "designwidth": 640\n  }\n}\n\n\n * set the framework style for element a:\n\nwidth: 100px;\n\n\nscheme 2:\n\ndo not modify the project configuration base width: if the current project\'s project configuration base width is 480, let the framework style of element a be xpx. from the conversion formula: 100 / 640 = x / 480.\n\n * set the framework style for element a:\n\nwidth: 75px;\n\n\n\n# percentage %\n\nthe percentage calculation rules in js applications are similar to css. refer to the mdn documentation.\n\n\n# dp\n\nthe dp unit stands for device independent pixels.\n\ncalculation formula: dp value = physical resolution / device pixel ratio\n\nexample: a device with a resolution of 480*480 and a device pixel ratio of 2 has a screen width of 480 pixels = 240dp.\n\nexample code:\n\n<style>\n  .dp-box{\n    width:360dp;\n    height:360dp;\n    background-color:green;\n    margin-bottom:40px;\n  }\n</style>\n\n\n\n# setting positioning\n\nthe position property supports two values: relative and absolute, with relative as the default value. refer to the mdn documentation.\n\n\n# setting styles\n\ndevelopers can use inline styles, tag selectors, class selectors, and id selectors to style components.\n\nyou can also use parallel selectors to set styles. descendant selectors are not currently supported.\n\ndetailed documentation can be found here.\n\nexample:\n\n<template>\n  <div class="page">\n    <text style="color: #ff0000;">inline style</text>\n    <text id="title">id selector</text>\n    <text class="title">class selector</text>\n    <text>tag selector</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n  /* tag selector */\n  text {\n    color: #0000ff;\n  }\n  /* class selector (recommended) */\n  .title {\n    color: #00ff00;\n  }\n  /* id selector */\n  #title {\n    color: #00a000;\n  }\n  /* parallel selector */\n  .title, #title {\n    font-weight: bold;\n  }\n</style>\n\n\n\n# common styles\n\nfor common styles such as margin and padding, refer to here.\n\n\n# flex layout example\n\nthe framework uses flex layout. for more information on flex layout, refer to the external documentation a complete guide to flexbox.\n\nsupport for flex layout can also be found in the common styles section of the official documentation.\n\nthe div component is the most commonly used flex container component with flex layout characteristics. the text and span components are text container components. other components cannot directly contain text content.\n\nexample:\n\n<template>\n  <div class="page">\n    <div class="item">\n      <text>item1</text>\n    </div>\n    <div class="item">\n      <text>item2</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    /* cross-axis centering */\n    align-items: center;\n    /* vertical arrangement */\n    flex-direction: column;\n  }\n  .item {\n    /* allow stretching when there is remaining space */\n    /*flex-grow: 1;*/\n    /* do not allow compression when space is insufficient */\n    flex-shrink: 0;\n    /* main axis centering */\n    justify-content: center;\n    width: 200px;\n    height: 100px;\n    margin: 10px;\n    background-color: #ff0000;\n  }\n</style>\n\n\n\n# dynamic style modification\n\nthere are multiple ways to dynamically modify styles, consistent with traditional front-end development habits, including but not limited to the following:\n\n * modify class: update the value of the variable used in the component\'s class attribute.\n * modify inline style: update a css value in the component\'s style attribute.\n * modify bound object: control the element\'s style through a bound object.\n\nexample:\n\n<template>\n  <div style="flex-direction: column;">\n    \x3c!-- modify class --\x3e\n    <text class="normal-text {{ classname }}" onclick="changeclassname">click to change text color</text>\n    \x3c!-- modify inline style --\x3e\n    <text style="color: {{ textcolor }}" onclick="changeinlinestyle">click to change text color</text>\n    \x3c!-- modify bound object --\x3e\n    <text style="{{ styleobj }}" onclick="changestyleobj">click to change text color</text>\n  </div>\n</template>\n\n<style>\n  .normal-text {\n    font-weight: bold;\n  }\n  .text-blue {\n    color: #0faeff;\n  }\n  .text-red {\n    color: #f76160;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      classname: \'text-blue\',\n      textcolor: \'#0faeff\',\n      styleobj: {\n        color: \'red\'\n      }\n    },\n    oninit () {\n      console.info(\'dynamic style modification\')\n    },\n    changeclassname () {\n      this.classname = \'text-red\'\n    },\n    changeinlinestyle () {\n      this.textcolor = \'#f76160\'\n    },\n    changestyleobj () {\n      this.styleobj = {\n        color: \'yellow\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# introducing less/scss precompilation\n\n\n# less section\n\nfor an introduction to less syntax, refer to the less chinese official website.\n\nto use less, first install the corresponding libraries: less, less-loader:\n\nnpm i less less-loader\n\n\nrefer to the documentation style syntax --\x3e style precompilation. then add the attribute lang="less" to the <style> tag.\n\nexample:\n\n<template>\n  <div class="page">\n    <text id="title">less example!</text>\n  </div>\n</template>\n<style lang="less">\n  /* import external less file */\n  @import \'./style.less\';\n  /* use less */\n</style>\n\n\n\n# scss section\n\nfor an introduction to scss syntax, refer to the scss chinese official website.\n\nto use scss, execute the following command under the js application project to install the corresponding libraries: node-sass, sass-loader:\n\nnpm i node-sass sass-loader\n\n\nrefer to the documentation style syntax --\x3e style precompilation. then add the attribute lang="scss" to the <style> tag.\n\nexample:\n\n<template>\n  <div class="page">\n    <text id="title">less example!</text>\n  </div>\n</template>\n\n<style lang="scss">\n  /* import external scss file */\n  @import \'./style.scss\';\n  /* use scss */\n</style>\n\n\n\n# using postcss to parse css\n\njs applications support using postcss to parse css. postcss can parse css using syntax similar to less and sass, supporting features such as variables, nesting, and defining functions.\n\nusing postcss to parse css involves three steps:\n\n 1. install the corresponding loader:\n\n> npm i postcss-loader precss@3.1.2 -d\n\n 2. create a postcss.config.js file in the project root directory and add the following content:\n\nmodule.exports = {\n  plugins: [require(\'precss\')]\n}\n\n\nhere, precss is a postcss plugin.\n\n 3. add lang="postcss" to the corresponding style tag on the page, as follows:\n\n<style lang="postcss">\n  /* use postcss */\n  .page {\n    justify-content: center;\n    background-color: #00beaf;\n  }\n  \n  #title {\n    color: #ff0000;\n  }\n</style>\n\n\nnow you can write the corresponding code in css.\n\nnote\n\nif you want to support more syntax formats, you can add more plugins in the postcss.config.js file. for postcss plugins, refer to the plugin address.',charsets:{}},{frontmatter:{},regularPath:"/en/guide/framework/template.html",relativePath:"en/guide/framework/template.md",key:"v-90903354",path:"/en/guide/framework/template.html",headersStr:null,content:"没有要翻译的内容",normalizedContent:"没有要翻译的内容",charsets:{cjk:!0}},{title:"Props",frontmatter:{},regularPath:"/en/guide/framework/template/Props.html",relativePath:"en/guide/framework/template/Props.md",key:"v-177546b6",path:"/en/guide/framework/template/Props.html",headers:[{level:2,title:"Prop Writing",slug:"prop-writing",normalizedTitle:"prop writing",charIndex:12},{level:2,title:"Attribute Default Values",slug:"attribute-default-values",normalizedTitle:"attribute default values",charIndex:663},{level:2,title:"Data Unidirectionality",slug:"data-unidirectionality",normalizedTitle:"data unidirectionality",charIndex:1257},{level:2,title:"Three Common Methods for Handling Prop Values:",slug:"three-common-methods-for-handling-prop-values",normalizedTitle:"three common methods for handling prop values:",charIndex:1791},{level:3,title:"1. Using the prop value as an initial value and receiving it with data",slug:"_1-using-the-prop-value-as-an-initial-value-and-receiving-it-with-data",normalizedTitle:"1. using the prop value as an initial value and receiving it with data",charIndex:1842},{level:3,title:"2. Using $watch to monitor data changes",slug:"_2-using-watch-to-monitor-data-changes",normalizedTitle:"2. using $watch to monitor data changes",charIndex:2312},{level:3,title:"3. Using computed properties",slug:"_3-using-computed-properties",normalizedTitle:"3. using computed properties",charIndex:2981},{level:2,title:"Attribute Validation",slug:"attribute-validation",normalizedTitle:"attribute validation",charIndex:3215}],headersStr:"Prop Writing Attribute Default Values Data Unidirectionality Three Common Methods for Handling Prop Values: 1. Using the prop value as an initial value and receiving it with data 2. Using $watch to monitor data changes 3. Using computed properties Attribute Validation",content:"# Props\n\n\n# Prop Writing\n\nProp attribute names are written in camelCase. When passing data externally, convert them to kebab-case. For example, propObject is converted to prop-object.\n\n\x3c!-- Child Component --\x3e\n<template>\n  <div class=\"child-demo\">\n    <text>{{ propObject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: ['propObject']\n  }\n<\/script>\n\n\n\x3c!-- Parent Component --\x3e\n<import name=\"comp\" src=\"./comp\"></import>\n<template>\n  <div class=\"parent-demo\">\n    <comp prop-object=\"{{obj}}\"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      obj: {\n        name: 'child-demo'\n      }\n    }\n  }\n<\/script>\n\n\n\n# Attribute Default Values\n\nWhen declaring props in a child component, you can set default values. If no data is passed when calling the child component, the default value will be automatically set.\n\nTo set default values, the props attribute must be written in Object form, not Array form.\n\nExample:\n\n<script>\n  // Child Component\n  export default {\n    props: {\n      prop1: {\n        default: 'Hello' // Default value\n      },\n      prop2Object: {} // No default value\n    },\n    onInit() {\n      console.info(`Data passed from parent:`, this.prop1, this.prop2Object)\n    }\n  }\n<\/script>\n\n\n\n# Data Unidirectionality\n\nData transfer between parent and child components is unidirectional. When the parent component's prop data updates, the child component's data refreshes to the latest value. However, if the child component's prop value changes, it does not affect the parent component's value.\n\nHowever, if the prop type is an array or object, changes in the child component will affect the parent component's value. This means you should not modify the prop value inside a child component, as it is a dangerous operation.\n\n\n# Three Common Methods for Handling Prop Values:\n\n\n# 1. Using the prop value as an initial value and receiving it with data\n\n<script>\n  export default {\n    props: ['say', 'propObject'],\n    data: {\n      count: null,\n      obj: null\n    },\n    onInit() {\n      console.info(`Data passed from parent:`, this.say, this.propObject)\n\n      this.count = this.propObject.count // Assign a simple type from prop to data\n      this.obj = JSON.parse(JSON.stringify(this.propObject)) // Deep clone the prop\n    }\n  }\n<\/script>\n\n\n\n# 2. Using $watch to monitor data changes\n\nIf monitoring a property in an object, use a dot-separated parameter, e.g., $watch(xxx.xxx.xxx, methodName). For details, see $watch.\n\n<script>\n  export default {\n    props: ['propObject'],\n    data: {\n      propSay: ''\n    },\n    onInit() {\n      // Monitor data changes\n      this.$watch('propObject.name', 'watchPropsChange')\n    },\n    /**\n     * Monitor data changes, process the data, and set the value to data\n     * @param newV\n     * @param oldV\n     */\n    watchPropsChange(newV, oldV) {\n      console.info(`Data change monitored:`, newV, oldV)\n      this.propSay = newV && newV.toUpperCase()\n    }\n  }\n<\/script>\n\n\n\n# 3. Using computed properties\n\nFor details, see Computed Properties.\n\n<script>\n  export default {\n    props: [\n      'say'\n    ],\n    computed: {\n      sayText() {\n        return this.say.toUpperCase()\n      }\n    }\n  }\n<\/script>\n\n\n\n# Attribute Validation\n\nWhen declaring props in a child component, you can specify data type validation.\n\nThe supported types for type checking include [String, Number, Boolean, Function, Object, Array].\n\nTo validate types, the props attribute must be written in Object form, not Array form.\n\nExample:\n\n<script>\n  // Child Component\n  export default {\n    props: {\n      prop1: {\n        default: 'Hello' // Default value\n        type: String // Type validation\n      },\n      prop2Object: {} // No default value\n    },\n    onInit() {\n      console.info(`Data passed from parent:`, this.prop1, this.prop2Object)\n    }\n  }\n<\/script>\n",normalizedContent:"# props\n\n\n# prop writing\n\nprop attribute names are written in camelcase. when passing data externally, convert them to kebab-case. for example, propobject is converted to prop-object.\n\n\x3c!-- child component --\x3e\n<template>\n  <div class=\"child-demo\">\n    <text>{{ propobject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: ['propobject']\n  }\n<\/script>\n\n\n\x3c!-- parent component --\x3e\n<import name=\"comp\" src=\"./comp\"></import>\n<template>\n  <div class=\"parent-demo\">\n    <comp prop-object=\"{{obj}}\"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      obj: {\n        name: 'child-demo'\n      }\n    }\n  }\n<\/script>\n\n\n\n# attribute default values\n\nwhen declaring props in a child component, you can set default values. if no data is passed when calling the child component, the default value will be automatically set.\n\nto set default values, the props attribute must be written in object form, not array form.\n\nexample:\n\n<script>\n  // child component\n  export default {\n    props: {\n      prop1: {\n        default: 'hello' // default value\n      },\n      prop2object: {} // no default value\n    },\n    oninit() {\n      console.info(`data passed from parent:`, this.prop1, this.prop2object)\n    }\n  }\n<\/script>\n\n\n\n# data unidirectionality\n\ndata transfer between parent and child components is unidirectional. when the parent component's prop data updates, the child component's data refreshes to the latest value. however, if the child component's prop value changes, it does not affect the parent component's value.\n\nhowever, if the prop type is an array or object, changes in the child component will affect the parent component's value. this means you should not modify the prop value inside a child component, as it is a dangerous operation.\n\n\n# three common methods for handling prop values:\n\n\n# 1. using the prop value as an initial value and receiving it with data\n\n<script>\n  export default {\n    props: ['say', 'propobject'],\n    data: {\n      count: null,\n      obj: null\n    },\n    oninit() {\n      console.info(`data passed from parent:`, this.say, this.propobject)\n\n      this.count = this.propobject.count // assign a simple type from prop to data\n      this.obj = json.parse(json.stringify(this.propobject)) // deep clone the prop\n    }\n  }\n<\/script>\n\n\n\n# 2. using $watch to monitor data changes\n\nif monitoring a property in an object, use a dot-separated parameter, e.g., $watch(xxx.xxx.xxx, methodname). for details, see $watch.\n\n<script>\n  export default {\n    props: ['propobject'],\n    data: {\n      propsay: ''\n    },\n    oninit() {\n      // monitor data changes\n      this.$watch('propobject.name', 'watchpropschange')\n    },\n    /**\n     * monitor data changes, process the data, and set the value to data\n     * @param newv\n     * @param oldv\n     */\n    watchpropschange(newv, oldv) {\n      console.info(`data change monitored:`, newv, oldv)\n      this.propsay = newv && newv.touppercase()\n    }\n  }\n<\/script>\n\n\n\n# 3. using computed properties\n\nfor details, see computed properties.\n\n<script>\n  export default {\n    props: [\n      'say'\n    ],\n    computed: {\n      saytext() {\n        return this.say.touppercase()\n      }\n    }\n  }\n<\/script>\n\n\n\n# attribute validation\n\nwhen declaring props in a child component, you can specify data type validation.\n\nthe supported types for type checking include [string, number, boolean, function, object, array].\n\nto validate types, the props attribute must be written in object form, not array form.\n\nexample:\n\n<script>\n  // child component\n  export default {\n    props: {\n      prop1: {\n        default: 'hello' // default value\n        type: string // type validation\n      },\n      prop2object: {} // no default value\n    },\n    oninit() {\n      console.info(`data passed from parent:`, this.prop1, this.prop2object)\n    }\n  }\n<\/script>\n",charsets:{}},{frontmatter:{},regularPath:"/en/guide/framework/other/language-list.html",relativePath:"en/guide/framework/other/language-list.md",key:"v-25a1c724",path:"/en/guide/framework/other/language-list.html",headersStr:null,content:"The list of supported languages is as follows:\n\n<LANGUAGE CODE>-<COUNTRY CODE>   CHINESE                           ENGLISH\naz-AZ                            Azerbaijani                       Azerbaijani\nms-MY                            Malay                             Bahasa Melayu\nbs-BA                            Bosnian                           Bosnian\nca-ES                            Catalan                           Catalan\ncs-CZ                            Czech                             Czech\nda-DK                            Danish                            Danish\nde-DE                            German                            German\net-EE                            Estonian                          Estonian\nen-AU                            English (Australia)               English (Australia)\nen-IN                            English (India)                   English (India)\nen-GB                            English (UK)                      English (United Kingdom)\nen-US                            English (US)                      English (United States)\nes-ES                            Spanish (Spain)                   Spanish (Spain)\nes-US                            Spanish (Latin America)           Spanish (Latin America)\neu-ES                            Basque                            Basque\nfr-FR                            French                            French\ngl-ES                            Galician                          Galician\nha-NG                            Hausa                             Hausa\nhr-HR                            Croatian                          Croatian\nin-ID                            Indonesian                        Indonesian\nit-IT                            Italian                           Italian\nlv-LV                            Latvian                           Latvian\nlt-LT                            Lithuanian                        Lithuanian\nhu-HU                            Hungarian                         Hungarian\nmt-MT                            Maltese                           Maltese\nnl-NL                            Dutch                             Dutch\nnb-NO                            Norwegian                         Norwegian\nuz-UZ                            Uzbek                             Uzbek\npl-PL                            Polish                            Polish\npt-BR                            Portuguese (Brazil)               Portuguese (Brazil)\npt-PT                            Portuguese (Portugal)             Portuguese (Portugal)\nro-RO                            Romanian                          Romanian\nsq-AL                            Albanian                          Albanian\nsk-SK                            Slovak                            Slovak\nsl-SI                            Slovenian                         Slovenian\nfi-FI                            Finnish                           Finnish\nsv-SE                            Swedish                           Swedish\nvi-VN                            Vietnamese                        Vietnamese\ntr-TR                            Turkish                           Turkish\nel-GR                            Greek                             Greek\nbe-BY                            Belarusian                        Belarusian\nbg-BG                            Bulgarian                         Bulgarian\nkk-KZ                            Kazakh                            Kazakh\nmk-MK                            Macedonian                        Macedonian\nru-RU                            Russian                           Russian\nsr-RS                            Serbian                           Serbian\nuk-UA                            Ukrainian                         Ukrainian\nka-GE                            Georgian                          Georgian\nhy-AM                            Armenian                          Armenian\niw-IL                            Hebrew                            Hebrew\nur-IN                            Urdu (India)                      Urdu (India)\nur-PK                            Urdu (Pakistan)                   Urdu (Pakistan)\nar-EG                            Arabic                            Arabic\nfa-IR                            Persian                           Persian\nne-IN                            Nepali (India)                    Nepali (India)\nne-NP                            Nepali (Nepal)                    Nepali (Nepal)\nmr-IN                            Marathi                           Marathi\nhi-IN                            Hindi                             Hindi\nas-IN                            Assamese                          Assamese\nbn-IN                            Bengali (India)                   Bengali (India)\nbn-BD                            Bengali (Bangladesh)              Bengali (Bangladesh)\npa-IN                            Punjabi                           Punjabi\ngu-IN                            Gujarati                          Gujarati\nor-IN                            Oriya                             Oriya\nta-IN                            Tamil                             Tamil\nte-IN                            Telugu                            Telugu\nkn-IN                            Kannada                           Kannada\nml-IN                            Malayalam                         Malayalam\nth-TH                            Thai                              Thai\nlo-LA                            Lao                               Lao\nmy-MM                            Burmese                           Burmese\nkm-KH                            Khmer (Cambodian)                 Khmer\nko-KR                            Korean                            Korean\nja-JP                            Japanese                          Japanese\nzh-CN                            Chinese (Simplified)              Chinese (Simplified)\nzh-TW                            Chinese (Taiwan Traditional)      Chinese (Taiwan Traditional)\nzh-HK                            Chinese (Hong Kong Traditional)   Chinese (Hong Kong Traditional)\nsw-KE                            Swahili                           Swahili",normalizedContent:"the list of supported languages is as follows:\n\n<language code>-<country code>   chinese                           english\naz-az                            azerbaijani                       azerbaijani\nms-my                            malay                             bahasa melayu\nbs-ba                            bosnian                           bosnian\nca-es                            catalan                           catalan\ncs-cz                            czech                             czech\nda-dk                            danish                            danish\nde-de                            german                            german\net-ee                            estonian                          estonian\nen-au                            english (australia)               english (australia)\nen-in                            english (india)                   english (india)\nen-gb                            english (uk)                      english (united kingdom)\nen-us                            english (us)                      english (united states)\nes-es                            spanish (spain)                   spanish (spain)\nes-us                            spanish (latin america)           spanish (latin america)\neu-es                            basque                            basque\nfr-fr                            french                            french\ngl-es                            galician                          galician\nha-ng                            hausa                             hausa\nhr-hr                            croatian                          croatian\nin-id                            indonesian                        indonesian\nit-it                            italian                           italian\nlv-lv                            latvian                           latvian\nlt-lt                            lithuanian                        lithuanian\nhu-hu                            hungarian                         hungarian\nmt-mt                            maltese                           maltese\nnl-nl                            dutch                             dutch\nnb-no                            norwegian                         norwegian\nuz-uz                            uzbek                             uzbek\npl-pl                            polish                            polish\npt-br                            portuguese (brazil)               portuguese (brazil)\npt-pt                            portuguese (portugal)             portuguese (portugal)\nro-ro                            romanian                          romanian\nsq-al                            albanian                          albanian\nsk-sk                            slovak                            slovak\nsl-si                            slovenian                         slovenian\nfi-fi                            finnish                           finnish\nsv-se                            swedish                           swedish\nvi-vn                            vietnamese                        vietnamese\ntr-tr                            turkish                           turkish\nel-gr                            greek                             greek\nbe-by                            belarusian                        belarusian\nbg-bg                            bulgarian                         bulgarian\nkk-kz                            kazakh                            kazakh\nmk-mk                            macedonian                        macedonian\nru-ru                            russian                           russian\nsr-rs                            serbian                           serbian\nuk-ua                            ukrainian                         ukrainian\nka-ge                            georgian                          georgian\nhy-am                            armenian                          armenian\niw-il                            hebrew                            hebrew\nur-in                            urdu (india)                      urdu (india)\nur-pk                            urdu (pakistan)                   urdu (pakistan)\nar-eg                            arabic                            arabic\nfa-ir                            persian                           persian\nne-in                            nepali (india)                    nepali (india)\nne-np                            nepali (nepal)                    nepali (nepal)\nmr-in                            marathi                           marathi\nhi-in                            hindi                             hindi\nas-in                            assamese                          assamese\nbn-in                            bengali (india)                   bengali (india)\nbn-bd                            bengali (bangladesh)              bengali (bangladesh)\npa-in                            punjabi                           punjabi\ngu-in                            gujarati                          gujarati\nor-in                            oriya                             oriya\nta-in                            tamil                             tamil\nte-in                            telugu                            telugu\nkn-in                            kannada                           kannada\nml-in                            malayalam                         malayalam\nth-th                            thai                              thai\nlo-la                            lao                               lao\nmy-mm                            burmese                           burmese\nkm-kh                            khmer (cambodian)                 khmer\nko-kr                            korean                            korean\nja-jp                            japanese                          japanese\nzh-cn                            chinese (simplified)              chinese (simplified)\nzh-tw                            chinese (taiwan traditional)      chinese (taiwan traditional)\nzh-hk                            chinese (hong kong traditional)   chinese (hong kong traditional)\nsw-ke                            swahili                           swahili",charsets:{}},{title:"Template",frontmatter:{},regularPath:"/en/guide/framework/template/",relativePath:"en/guide/framework/template/README.md",key:"v-dbefd20a",path:"/en/guide/framework/template/",headers:[{level:2,title:"Data Binding",slug:"data-binding",normalizedTitle:"data binding",charIndex:288},{level:2,title:"Event Binding",slug:"event-binding",normalizedTitle:"event binding",charIndex:617},{level:2,title:"List Rendering",slug:"list-rendering",normalizedTitle:"list rendering",charIndex:1531},{level:2,title:"Conditional Rendering",slug:"conditional-rendering",normalizedTitle:"conditional rendering",charIndex:3354},{level:2,title:"Logical Control Block",slug:"logical-control-block",normalizedTitle:"logical control block",charIndex:4520}],headersStr:"Data Binding Event Binding List Rendering Conditional Rendering Logical Control Block",content:'# Template\n\nA tag language similar to HTML that combines basic components and events to build the structure of a page.\n\nNote\n\nThere can only be one root node in the template, such as div. Please do not have multiple root nodes under <template>, and do not use block as the root node.\n\n\n# Data Binding\n\n<template>\n  <text>{{message}}</text>\n</template>\n\n<script>\n  export default {\n    // The data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      message: \'Hello\'\n    }\n  }\n<\/script>\n\n\n\n# Event Binding\n\n<template>\n  <div>\n    \x3c!-- Normal format --\x3e\n    <text onclick="press"></text>\n    \x3c!-- Shorthand --\x3e\n    <text @click="press"></text>\n  </div>\n</template>\n\n<script>\n  export default {\n    press(e) {\n      this.title = \'Hello\'\n    }\n  }\n<\/script>\n\n\nSupported syntax for event callbacks (where {{}} can be omitted):\n\nfn: fn is the name of the event callback function (with corresponding function implementation in <script>);\n\nfn(a,b): Function parameters such as a, b can be constants or data variables defined in <script> (no need to write this before them);\n\nWhen the callback function is called, an evt parameter will be automatically added at the end of the parameter list. You can access the context data related to the callback event through the evt parameter (refer to the component callback event description for specific data content), such as the click position x, y of a click event.\n\n\n# List Rendering\n\n<template>\n  <div>\n    <div for="{{list}}" tid="uniqueId">\n      <text>{{$idx}}</text>\n      <text>{{$item.uniqueId}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    // The data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      list: [\n        { uniqueId: 1 },\n        { uniqueId: 2 }\n      ]\n    }\n  }\n<\/script>\n\n\nThe for directive renders a list based on the source data array. The supported syntax is as follows (where {{}} can be omitted):\n\n * for="{{list}}" list is the source data array, and the default array element name is $item;\n * for="{{value in list}}" value is a custom array element name, and the default array element index name is $idx;\n * for="{{(index, value) in list}}" index is a custom array element index name, and value is a custom array element name.\n\nThe tid attribute of the for directive is used to specify the unique ID of the array element. If not specified, the array index ($idx) is used as the unique ID by default. The purpose of the tid attribute is to reuse element nodes and optimize the redraw efficiency of the for loop.\n\nIn the example code, tid="uniqueId" means that the array element $item.uniqueId of the array list is used as the unique ID of the array element, and it must be ensured that the value of the uniqueId property is different for each array element.\n\nWhen using the tid attribute, pay attention to the following:\n\n * The data attribute specified by the tid attribute must exist, otherwise it may cause runtime exceptions;\n * The data attribute specified by the tid attribute must be unique, otherwise it may cause performance issues;\n * The tid attribute currently does not support expressions.\n\n\n# Conditional Rendering\n\nThere are two types: if/elif/else and show. The difference is that when if is false, the component will be removed from the VDOM, while show is just invisible during rendering, and the component still exists in the VDOM;\n\nif/elif/else nodes must be adjacent sibling nodes, otherwise they cannot pass compilation.\n\n<template>\n  <div>\n    <text if="{{display}}">Hello-1</text>\n    <text elif="{{display}}">Hello-2</text>\n    <text else>Hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // The data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\nshow is equivalent to visible=none, mainly used for declaration on native components;\n\n<template>\n  <text show="{{visible}}">Hello</text>\n</template>\n\n<script>\n  export default {\n    // The data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# Logical Control Block\n\nYou can use <block> to achieve more flexible loop/conditional rendering. Note that <block> currently only supports the for and if/elif/else attributes. If no attributes are specified, <block> will be treated as a transparent node during construction, and its child nodes will be added to the parent node of <block>.\n\n<template>\n  <list>\n    <block for="cities">\n      <list-item type="city">\n        <text>{{$item.name}}</text>\n      </list-item>\n      <list-item type="spot" for="$item.spots">\n        <text>{{$item.address}}</text>\n      </list-item>\n    </block>\n  </list>\n</template>\n\n<script>\n  export default {\n    // The data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      cities: [\n        {\n          name: \'beijing\',\n          spots: [\n            { address: \'XXX\' }\n          ]\n        },\n        {\n          name: \'shanghai\',\n          spots: [\n            { address: \'XXX\' },\n            { address: \'XXX\' }\n          ]\n        }\n      ]\n    }\n  }\n<\/script>\n',normalizedContent:'# template\n\na tag language similar to html that combines basic components and events to build the structure of a page.\n\nnote\n\nthere can only be one root node in the template, such as div. please do not have multiple root nodes under <template>, and do not use block as the root node.\n\n\n# data binding\n\n<template>\n  <text>{{message}}</text>\n</template>\n\n<script>\n  export default {\n    // the data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      message: \'hello\'\n    }\n  }\n<\/script>\n\n\n\n# event binding\n\n<template>\n  <div>\n    \x3c!-- normal format --\x3e\n    <text onclick="press"></text>\n    \x3c!-- shorthand --\x3e\n    <text @click="press"></text>\n  </div>\n</template>\n\n<script>\n  export default {\n    press(e) {\n      this.title = \'hello\'\n    }\n  }\n<\/script>\n\n\nsupported syntax for event callbacks (where {{}} can be omitted):\n\nfn: fn is the name of the event callback function (with corresponding function implementation in <script>);\n\nfn(a,b): function parameters such as a, b can be constants or data variables defined in <script> (no need to write this before them);\n\nwhen the callback function is called, an evt parameter will be automatically added at the end of the parameter list. you can access the context data related to the callback event through the evt parameter (refer to the component callback event description for specific data content), such as the click position x, y of a click event.\n\n\n# list rendering\n\n<template>\n  <div>\n    <div for="{{list}}" tid="uniqueid">\n      <text>{{$idx}}</text>\n      <text>{{$item.uniqueid}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    // the data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      list: [\n        { uniqueid: 1 },\n        { uniqueid: 2 }\n      ]\n    }\n  }\n<\/script>\n\n\nthe for directive renders a list based on the source data array. the supported syntax is as follows (where {{}} can be omitted):\n\n * for="{{list}}" list is the source data array, and the default array element name is $item;\n * for="{{value in list}}" value is a custom array element name, and the default array element index name is $idx;\n * for="{{(index, value) in list}}" index is a custom array element index name, and value is a custom array element name.\n\nthe tid attribute of the for directive is used to specify the unique id of the array element. if not specified, the array index ($idx) is used as the unique id by default. the purpose of the tid attribute is to reuse element nodes and optimize the redraw efficiency of the for loop.\n\nin the example code, tid="uniqueid" means that the array element $item.uniqueid of the array list is used as the unique id of the array element, and it must be ensured that the value of the uniqueid property is different for each array element.\n\nwhen using the tid attribute, pay attention to the following:\n\n * the data attribute specified by the tid attribute must exist, otherwise it may cause runtime exceptions;\n * the data attribute specified by the tid attribute must be unique, otherwise it may cause performance issues;\n * the tid attribute currently does not support expressions.\n\n\n# conditional rendering\n\nthere are two types: if/elif/else and show. the difference is that when if is false, the component will be removed from the vdom, while show is just invisible during rendering, and the component still exists in the vdom;\n\nif/elif/else nodes must be adjacent sibling nodes, otherwise they cannot pass compilation.\n\n<template>\n  <div>\n    <text if="{{display}}">hello-1</text>\n    <text elif="{{display}}">hello-2</text>\n    <text else>hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // the data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\nshow is equivalent to visible=none, mainly used for declaration on native components;\n\n<template>\n  <text show="{{visible}}">hello</text>\n</template>\n\n<script>\n  export default {\n    // the data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# logical control block\n\nyou can use <block> to achieve more flexible loop/conditional rendering. note that <block> currently only supports the for and if/elif/else attributes. if no attributes are specified, <block> will be treated as a transparent node during construction, and its child nodes will be added to the parent node of <block>.\n\n<template>\n  <list>\n    <block for="cities">\n      <list-item type="city">\n        <text>{{$item.name}}</text>\n      </list-item>\n      <list-item type="spot" for="$item.spots">\n        <text>{{$item.address}}</text>\n      </list-item>\n    </block>\n  </list>\n</template>\n\n<script>\n  export default {\n    // the data model of the page-level component affects the override mechanism of the incoming data: properties defined within `private` are not allowed to be overridden.\n    private: {\n      cities: [\n        {\n          name: \'beijing\',\n          spots: [\n            { address: \'xxx\' }\n          ]\n        },\n        {\n          name: \'shanghai\',\n          spots: [\n            { address: \'xxx\' },\n            { address: \'xxx\' }\n          ]\n        }\n      ]\n    }\n  }\n<\/script>\n',charsets:{}},{title:"Components",frontmatter:{},regularPath:"/en/guide/framework/template/component.html",relativePath:"en/guide/framework/template/component.md",key:"v-134b9196",path:"/en/guide/framework/template/component.html",headers:[{level:2,title:"Custom Components",slug:"custom-components",normalizedTitle:"custom components",charIndex:17},{level:3,title:"Custom Component Lifecycle:",slug:"custom-component-lifecycle",normalizedTitle:"custom component lifecycle:",charIndex:1785},{level:2,title:"Importing Components",slug:"importing-components",normalizedTitle:"importing components",charIndex:2132},{level:2,title:"Parent-Child Component Communication",slug:"parent-child-component-communication",normalizedTitle:"parent-child component communication",charIndex:2985},{level:3,title:"Parent Component Passes Data to Child Component via Props",slug:"parent-component-passes-data-to-child-component-via-props",normalizedTitle:"parent component passes data to child component via props",charIndex:3026},{level:3,title:"Child Component Communicates with Parent Component",slug:"child-component-communicates-with-parent-component",normalizedTitle:"child component communicates with parent component",charIndex:4020}],headersStr:"Custom Components Custom Component Lifecycle: Importing Components Parent-Child Component Communication Parent Component Passes Data to Child Component via Props Child Component Communicates with Parent Component",content:'# Components\n\n\n# Custom Components\n\nWhen developing pages, developers must use Native components such as text and div, which are rendered by the Native layer of each platform. If a developer writes all UI parts in a single file\'s <template> for a complex page, the code\'s maintainability will be low, and modules may become unnecessarily coupled.\n\nTo better organize logic and code, a page can be split into multiple modules based on functionality, with each module responsible for one part of the functionality. The page then manages these modules, passing business and configuration data to achieve code separation. This is the significance of custom components.\n\nA custom component is a component written by a developer that is used similarly to Native components and is rendered according to the component\'s <template>. At the same time, development is similar to that of a page, with a ViewModel managing data, events, and methods.\n\nTIP\n\nSince custom components have an independent ViewModel, there is a certain memory overhead. It is not recommended to use them on lightweight devices like watches and bracelets.\n\nExample:\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">Custom Component:</text>\n    <text>{{ say }}</text>\n    <text>{{ obj.name }}</text>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding-top: 20px;\n\n    .tutorial-title {\n      font-weight: bold;\n    }\n  }\n</style>\n\n<script>\n  // Child component\n  export default {\n    data: {\n      say: \'hello\',\n      obj: {\n        name: \'quickApp\'\n      }\n    },\n    onInit() {\n      console.log(\'I am a child component\')\n    }\n  }\n<\/script>\n\n\nIn custom components, the data model can only use the data property, and the data type is Object.\n\n\n# Custom Component Lifecycle:\n\n * onInit: Indicates that the component\'s ViewModel data is ready and can start using the page\'s data.\n * onReady: Indicates that the component\'s ViewModel template has been compiled and DOM nodes can be accessed.\n * onDestroy: Called when the component is destroyed. Resources should be released, such as timers.\n\n\n# Importing Components\n\nIn Vela, components are imported using the <import> tag, as shown in the following code:\n\n<import name="XXX" src="XXX"></import>\n\n\nThe src attribute in the <import> tag specifies the address of the custom component, and the name attribute specifies the tag name used to reference the component in the parent component.\n\nExample:\n\n<import name="comp-part1" src="./part1"></import>\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">Import Component:</text>\n    <comp-part1></comp-part1>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding: 20px 10px;\n  }\n  .tutorial-title {\n      font-weight: bold;\n  }\n</style>\n\n<script>\n  // Parent component\n  export default {\n    private: {},\n    onInit() {\n      console.log(\'Import component\')\n    }\n  }\n<\/script>\n\n\n\n# Parent-Child Component Communication\n\n\n# Parent Component Passes Data to Child Component via Props\n\nThe parent component passes data to the child component by declaring exposed property names in the child component\'s props attribute and then declaring the data to be passed on the component\'s reference tag. For details, see the Props section.\n\nExample:\n\n\x3c!-- Child component --\x3e\n<template>\n  <div class="child-demo">\n    <text class="title">Child Component:</text>\n    <text>{{ say }}</text>\n    <text>{{ propObject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'say\', \'propObject\'],\n    onInit() {\n      console.info(`External data:`, this.say, this.propObject)\n    }\n  }\n<\/script>\n\n\n\x3c!-- Parent component --\x3e\n<import name="comp" src="./comp"></import>\n<template>\n  <div class="parent-demo">\n    <comp say="{{say}}" prop-object="{{obj}}"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      say: \'hello\',\n      obj: {\n        name: \'child-demo\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# Child Component Communicates with Parent Component\n\n * The child component triggers a custom event bound to the node using $emit() to execute the parent component\'s method, as in the relationship between the parent component and Component 1.\n * The child component triggers a custom event using $dispatch(), and the parent component monitors the trigger using $on(), as in the relationship between the parent component and Component 2.\n\nExample:\n\n\x3c!-- Parent component --\x3e\n<import name="comp1" src="./comp1.ux"></import>\n<import name="comp2" src="./comp2.ux"></import>\n<import name="comp3" src="./comp3.ux"></import>\n<template>\n  <div class="parent-demo">\n    <text>I am the parent component count: {{count}}</text>\n    <comp1 count="{{count}}" onemit-evt="emitEvt"></comp1>\n\n    <text>I am the parent component num: {{num}}</text>\n    <comp2 num="{{num}}"></comp2>\n\n    <text>I am the parent component age: {{age}}</text>\n    <input type="button" onclick="evtTypeEmit" value="Trigger $broadcast()"></input>\n    <comp3></comp3>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      count: 20,\n      num: 20,\n      age: 18\n    },\n    onInit() {\n      this.$on(\'dispatchEvt\', this.dispatchEvt)\n    },\n    emitEvt(evt) {\n      this.count = evt.detail.count\n    },\n    dispatchEvt(evt) {\n      this.num = evt.detail.num\n    },\n    evtTypeEmit() {\n      this.$broadcast(\'broadevt\', {\n        age: 19\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp1 --\x3e\n<template>\n  <div class="child-demo">\n    <text>I am child component one count: {{compCount}}</text>\n    <input type="button" onclick=\'addHandler\' value=\'add\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'count\'],\n    data() {\n      return {\n        compCount: this.count\n      }\n    },\n    addHandler() {\n      this.compCount++\n      this.$emit(\'emitEvt\', {\n        count: this.compCount\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp2 --\x3e\n<template>\n  <div class="child-demo">\n    <text>I am child component two num: {{compNum}}</text>\n    <input type="button" onclick=\'delHandler\' value=\'del\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'num\'],\n    data() {\n      return {\n        compNum: this.num\n      }\n    },\n    delHandler() {\n      this.compNum--\n      this.$dispatch(\'dispatchEvt\', {\n        num: this.compNum\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp3 --\x3e\n<template>\n  <div class="child-demo">\n    <text>I am child component three age: {{compAge}}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: [],\n    data() {\n      return {\n        compAge: null\n      }\n    },\n    onInit() {\n      this.$on(\'broadevt\', this.broadevt)\n    },\n    broadevt(evt) {\n      this.compAge = evt.detail.age\n    }\n  }\n<\/script>\n\n\nThe framework provides developers with bidirectional event passing:\n\n * Downward passing: Triggered by the parent component and responded to by the child component. Use parentVm.$broadcast() for downward passing, such as broadevt.\n * Upward passing: Triggered by the child component and responded to by the parent component. Use childVm.$dispatch() for upward passing, such as dispatchEvt.\n\nTips:\n\n * When passing parameters during triggering, use evt.detail to retrieve the parameters.\n * After passing is complete, you can call evt.stop() to end the passing; otherwise, it will continue indefinitely.',normalizedContent:'# components\n\n\n# custom components\n\nwhen developing pages, developers must use native components such as text and div, which are rendered by the native layer of each platform. if a developer writes all ui parts in a single file\'s <template> for a complex page, the code\'s maintainability will be low, and modules may become unnecessarily coupled.\n\nto better organize logic and code, a page can be split into multiple modules based on functionality, with each module responsible for one part of the functionality. the page then manages these modules, passing business and configuration data to achieve code separation. this is the significance of custom components.\n\na custom component is a component written by a developer that is used similarly to native components and is rendered according to the component\'s <template>. at the same time, development is similar to that of a page, with a viewmodel managing data, events, and methods.\n\ntip\n\nsince custom components have an independent viewmodel, there is a certain memory overhead. it is not recommended to use them on lightweight devices like watches and bracelets.\n\nexample:\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">custom component:</text>\n    <text>{{ say }}</text>\n    <text>{{ obj.name }}</text>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding-top: 20px;\n\n    .tutorial-title {\n      font-weight: bold;\n    }\n  }\n</style>\n\n<script>\n  // child component\n  export default {\n    data: {\n      say: \'hello\',\n      obj: {\n        name: \'quickapp\'\n      }\n    },\n    oninit() {\n      console.log(\'i am a child component\')\n    }\n  }\n<\/script>\n\n\nin custom components, the data model can only use the data property, and the data type is object.\n\n\n# custom component lifecycle:\n\n * oninit: indicates that the component\'s viewmodel data is ready and can start using the page\'s data.\n * onready: indicates that the component\'s viewmodel template has been compiled and dom nodes can be accessed.\n * ondestroy: called when the component is destroyed. resources should be released, such as timers.\n\n\n# importing components\n\nin vela, components are imported using the <import> tag, as shown in the following code:\n\n<import name="xxx" src="xxx"></import>\n\n\nthe src attribute in the <import> tag specifies the address of the custom component, and the name attribute specifies the tag name used to reference the component in the parent component.\n\nexample:\n\n<import name="comp-part1" src="./part1"></import>\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">import component:</text>\n    <comp-part1></comp-part1>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding: 20px 10px;\n  }\n  .tutorial-title {\n      font-weight: bold;\n  }\n</style>\n\n<script>\n  // parent component\n  export default {\n    private: {},\n    oninit() {\n      console.log(\'import component\')\n    }\n  }\n<\/script>\n\n\n\n# parent-child component communication\n\n\n# parent component passes data to child component via props\n\nthe parent component passes data to the child component by declaring exposed property names in the child component\'s props attribute and then declaring the data to be passed on the component\'s reference tag. for details, see the props section.\n\nexample:\n\n\x3c!-- child component --\x3e\n<template>\n  <div class="child-demo">\n    <text class="title">child component:</text>\n    <text>{{ say }}</text>\n    <text>{{ propobject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'say\', \'propobject\'],\n    oninit() {\n      console.info(`external data:`, this.say, this.propobject)\n    }\n  }\n<\/script>\n\n\n\x3c!-- parent component --\x3e\n<import name="comp" src="./comp"></import>\n<template>\n  <div class="parent-demo">\n    <comp say="{{say}}" prop-object="{{obj}}"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      say: \'hello\',\n      obj: {\n        name: \'child-demo\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# child component communicates with parent component\n\n * the child component triggers a custom event bound to the node using $emit() to execute the parent component\'s method, as in the relationship between the parent component and component 1.\n * the child component triggers a custom event using $dispatch(), and the parent component monitors the trigger using $on(), as in the relationship between the parent component and component 2.\n\nexample:\n\n\x3c!-- parent component --\x3e\n<import name="comp1" src="./comp1.ux"></import>\n<import name="comp2" src="./comp2.ux"></import>\n<import name="comp3" src="./comp3.ux"></import>\n<template>\n  <div class="parent-demo">\n    <text>i am the parent component count: {{count}}</text>\n    <comp1 count="{{count}}" onemit-evt="emitevt"></comp1>\n\n    <text>i am the parent component num: {{num}}</text>\n    <comp2 num="{{num}}"></comp2>\n\n    <text>i am the parent component age: {{age}}</text>\n    <input type="button" onclick="evttypeemit" value="trigger $broadcast()"></input>\n    <comp3></comp3>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      count: 20,\n      num: 20,\n      age: 18\n    },\n    oninit() {\n      this.$on(\'dispatchevt\', this.dispatchevt)\n    },\n    emitevt(evt) {\n      this.count = evt.detail.count\n    },\n    dispatchevt(evt) {\n      this.num = evt.detail.num\n    },\n    evttypeemit() {\n      this.$broadcast(\'broadevt\', {\n        age: 19\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp1 --\x3e\n<template>\n  <div class="child-demo">\n    <text>i am child component one count: {{compcount}}</text>\n    <input type="button" onclick=\'addhandler\' value=\'add\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'count\'],\n    data() {\n      return {\n        compcount: this.count\n      }\n    },\n    addhandler() {\n      this.compcount++\n      this.$emit(\'emitevt\', {\n        count: this.compcount\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp2 --\x3e\n<template>\n  <div class="child-demo">\n    <text>i am child component two num: {{compnum}}</text>\n    <input type="button" onclick=\'delhandler\' value=\'del\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'num\'],\n    data() {\n      return {\n        compnum: this.num\n      }\n    },\n    delhandler() {\n      this.compnum--\n      this.$dispatch(\'dispatchevt\', {\n        num: this.compnum\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp3 --\x3e\n<template>\n  <div class="child-demo">\n    <text>i am child component three age: {{compage}}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: [],\n    data() {\n      return {\n        compage: null\n      }\n    },\n    oninit() {\n      this.$on(\'broadevt\', this.broadevt)\n    },\n    broadevt(evt) {\n      this.compage = evt.detail.age\n    }\n  }\n<\/script>\n\n\nthe framework provides developers with bidirectional event passing:\n\n * downward passing: triggered by the parent component and responded to by the child component. use parentvm.$broadcast() for downward passing, such as broadevt.\n * upward passing: triggered by the child component and responded to by the parent component. use childvm.$dispatch() for upward passing, such as dispatchevt.\n\ntips:\n\n * when passing parameters during triggering, use evt.detail to retrieve the parameters.\n * after passing is complete, you can call evt.stop() to end the passing; otherwise, it will continue indefinitely.',charsets:{}},{title:"Computed Properties",frontmatter:{},regularPath:"/en/guide/framework/template/computed.html",relativePath:"en/guide/framework/template/computed.md",key:"v-75011dd2",path:"/en/guide/framework/template/computed.html",headers:[{level:2,title:"Basic Usage of Computed Properties",slug:"basic-usage-of-computed-properties",normalizedTitle:"basic usage of computed properties",charIndex:26},{level:2,title:"Setting the setter Function for Computed Properties",slug:"setting-the-setter-function-for-computed-properties",normalizedTitle:"setting the setter function for computed properties",charIndex:1779}],headersStr:"Basic Usage of Computed Properties Setting the setter Function for Computed Properties",content:"# Computed Properties\n\n\n# Basic Usage of Computed Properties\n\nWe often use expressions in templates, and using expressions properly can improve our development efficiency. However, putting too much logic in the template makes it heavy and difficult to maintain. For example:\n\n<text> {{ message.split('').reverse().join('') }} </text>\n\n\nIn this case, the template is no longer simple declarative logic. If we use such expressions in many places, it might reduce the readability of the template, and reusing the same expression logic redundantly makes the code hard to maintain. To address this, we can use computed properties:\n\n<template>\n    <div>\n      <text>Original message: \"{{ message }}\"</text>\n      <text>Computed reversed message: \"{{ reversedMessage }}\"</text>\n    </div>\n</template>\n<script>\n    export default {\n      data: {\n        message: 'Hello'\n      },\n      computed: {\n        // Getter function for the computed property\n        reversedMessage() {\n          // `this` points to the vm instance\n          return this.message.split('').reverse().join('')\n        }\n      },\n      onReady() {\n        console.log(this.reversedMessage) // olleH\n    \n        this.message = 'Goodbye'\n    \n        console.log(this.reversedMessage) // eybdooG\n      }\n    }\n<\/script>\n\n\nHere, we declared a computed property reversedMessage. The function we provided will be used as the getter function for the property vm.reversedMessage, and the value of vm.reversedMessage always depends on the value of vm.message.\n\nYou can bind computed properties in the template just like binding regular properties. The component instance knows that vm.reversedMessage depends on vm.message, so when vm.message changes, all bindings that depend on vm.reversedMessage will also update.\n\n\n# Setting the setter Function for Computed Properties\n\nComputed properties have only a getter by default, but you can also provide a setter when needed:\n\n<script>\n    export default {\n      data: {\n        firstName: 'Quick',\n        lastName: 'App'\n      },\n      computed: {\n        fullName: {\n          get() {\n            return `${this.firstName} ${this.lastName}`\n          },\n          set(value) {\n            const names = value.split(' ')\n            this.firstName = names[0]\n            this.lastName = names[names.length - 1]\n          }\n        }\n      },\n      onReady() {\n        console.log(this.fullName) // Quick App\n        this.fullName = 'John Doe'\n        console.log(this.firstName) // John\n        console.log(this.lastName) // Doe\n      }\n    }\n<\/script>\n",normalizedContent:"# computed properties\n\n\n# basic usage of computed properties\n\nwe often use expressions in templates, and using expressions properly can improve our development efficiency. however, putting too much logic in the template makes it heavy and difficult to maintain. for example:\n\n<text> {{ message.split('').reverse().join('') }} </text>\n\n\nin this case, the template is no longer simple declarative logic. if we use such expressions in many places, it might reduce the readability of the template, and reusing the same expression logic redundantly makes the code hard to maintain. to address this, we can use computed properties:\n\n<template>\n    <div>\n      <text>original message: \"{{ message }}\"</text>\n      <text>computed reversed message: \"{{ reversedmessage }}\"</text>\n    </div>\n</template>\n<script>\n    export default {\n      data: {\n        message: 'hello'\n      },\n      computed: {\n        // getter function for the computed property\n        reversedmessage() {\n          // `this` points to the vm instance\n          return this.message.split('').reverse().join('')\n        }\n      },\n      onready() {\n        console.log(this.reversedmessage) // olleh\n    \n        this.message = 'goodbye'\n    \n        console.log(this.reversedmessage) // eybdoog\n      }\n    }\n<\/script>\n\n\nhere, we declared a computed property reversedmessage. the function we provided will be used as the getter function for the property vm.reversedmessage, and the value of vm.reversedmessage always depends on the value of vm.message.\n\nyou can bind computed properties in the template just like binding regular properties. the component instance knows that vm.reversedmessage depends on vm.message, so when vm.message changes, all bindings that depend on vm.reversedmessage will also update.\n\n\n# setting the setter function for computed properties\n\ncomputed properties have only a getter by default, but you can also provide a setter when needed:\n\n<script>\n    export default {\n      data: {\n        firstname: 'quick',\n        lastname: 'app'\n      },\n      computed: {\n        fullname: {\n          get() {\n            return `${this.firstname} ${this.lastname}`\n          },\n          set(value) {\n            const names = value.split(' ')\n            this.firstname = names[0]\n            this.lastname = names[names.length - 1]\n          }\n        }\n      },\n      onready() {\n        console.log(this.fullname) // quick app\n        this.fullname = 'john doe'\n        console.log(this.firstname) // john\n        console.log(this.lastname) // doe\n      }\n    }\n<\/script>\n",charsets:{}},{title:"Event Binding",frontmatter:{},regularPath:"/en/guide/framework/template/event.html",relativePath:"en/guide/framework/template/event.md",key:"v-4ca36f14",path:"/en/guide/framework/template/event.html",headers:[{level:2,title:"Format",slug:"format",normalizedTitle:"format",charIndex:20},{level:2,title:"Passing Parameters",slug:"passing-parameters",normalizedTitle:"passing parameters",charIndex:287},{level:3,title:"Constants",slug:"constants",normalizedTitle:"constants",charIndex:310},{level:3,title:"Variables",slug:"variables",normalizedTitle:"variables",charIndex:763}],headersStr:"Format Passing Parameters Constants Variables",content:'# Event Binding\n\n\n# Format\n\n<text onclick="press"></text>\n\n\ncan be abbreviated as:\n\n<text @click="press"></text>\n\n\nfn: fn is the name of the event callback function (with corresponding function implementation in <script>). In the above example, press is the event callback function.\n\n\n# Passing Parameters\n\n\n# Constants\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle($idx,$item)">{{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5]\n    },\n    handle(idx,item,$evt) { // Clicking the first element\n      console.log(idx) // 0\n      console.log(item) // 1\n      console.log($evt) // { pageX: 4, pageY: 246, clientX: 4, clientY: 246, offsetX: 4, offsetY: 246 }\n    }\n  }\n<\/script>\n\n\n\n# Variables\n\nData variables defined in <script> for the page (no need to write this before them).\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle(total,$item)"> {{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5],\n      total:0\n    },\n    handle(total,num,$evt){\n      console.log(total)\n      console.log(num)\n      console.log($evt)\n    }\n  }\n<\/script>\n\n\nWARNING\n\nWhen the callback function is called, an evt parameter will be automatically added at the end of the parameter list. You can access the context data related to the callback event through the evt parameter.',normalizedContent:'# event binding\n\n\n# format\n\n<text onclick="press"></text>\n\n\ncan be abbreviated as:\n\n<text @click="press"></text>\n\n\nfn: fn is the name of the event callback function (with corresponding function implementation in <script>). in the above example, press is the event callback function.\n\n\n# passing parameters\n\n\n# constants\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle($idx,$item)">{{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5]\n    },\n    handle(idx,item,$evt) { // clicking the first element\n      console.log(idx) // 0\n      console.log(item) // 1\n      console.log($evt) // { pagex: 4, pagey: 246, clientx: 4, clienty: 246, offsetx: 4, offsety: 246 }\n    }\n  }\n<\/script>\n\n\n\n# variables\n\ndata variables defined in <script> for the page (no need to write this before them).\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle(total,$item)"> {{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5],\n      total:0\n    },\n    handle(total,num,$evt){\n      console.log(total)\n      console.log(num)\n      console.log($evt)\n    }\n  }\n<\/script>\n\n\nwarning\n\nwhen the callback function is called, an evt parameter will be automatically added at the end of the parameter list. you can access the context data related to the callback event through the evt parameter.',charsets:{}},{title:"Lifecycle",frontmatter:{},regularPath:"/en/guide/framework/script/lifecycle.html",relativePath:"en/guide/framework/script/lifecycle.md",key:"v-40922854",path:"/en/guide/framework/script/lifecycle.html",headers:[{level:2,title:"Lifecycle Diagram",slug:"lifecycle-diagram",normalizedTitle:"lifecycle diagram",charIndex:235},{level:2,title:"Page Lifecycle",slug:"page-lifecycle",normalizedTitle:"page lifecycle",charIndex:259},{level:3,title:"onInit()",slug:"oninit",normalizedTitle:"oninit()",charIndex:476},{level:3,title:"onReady()",slug:"onready",normalizedTitle:"onready()",charIndex:1098},{level:3,title:"onShow(), onHide()",slug:"onshow-onhide",normalizedTitle:"onshow(), onhide()",charIndex:1329},{level:3,title:"onDestroy()",slug:"ondestroy",normalizedTitle:"ondestroy()",charIndex:1974},{level:3,title:"onBackPress()",slug:"onbackpress",normalizedTitle:"onbackpress()",charIndex:3088},{level:3,title:"onRefresh(query)",slug:"onrefresh-query",normalizedTitle:"onrefresh(query)",charIndex:3688},{level:3,title:"onConfigurationChanged(event)",slug:"onconfigurationchanged-event",normalizedTitle:"onconfigurationchanged(event)",charIndex:4449},{level:2,title:"APP Lifecycle",slug:"app-lifecycle",normalizedTitle:"app lifecycle",charIndex:5219}],headersStr:"Lifecycle Diagram Page Lifecycle onInit() onReady() onShow(), onHide() onDestroy() onBackPress() onRefresh(query) onConfigurationChanged(event) APP Lifecycle",content:"# Lifecycle\n\n * Page lifecycle: onInit, onReady, onShow, onHide, onDestroy, onBackPress, onRefresh, onConfigurationChanged\n * Page states: displayed, hidden, destroyed\n * APP lifecycle: onCreate, onShow, onHide, onDestroy, onError\n\n\n# Lifecycle Diagram\n\n\n\n\n# Page Lifecycle\n\nSince pages are rendered via ViewModel, the page lifecycle refers to the lifecycle of the ViewModel, including common events: onInit, onReady, and onShow, which are triggered during page creation.\n\n\n# onInit()\n\nIndicates that the ViewModel's data is ready and can be used in the page.\n\nExample:\n\nprivate: {\n  // Text list for lifecycle\n  lcList: []\n},\nonInit () {\n  this.lcList.push('onInit')\n\n  console.info(`Triggered: onInit`)\n  // Execute: Get the lcList property of ViewModel: onInit\n  console.info(`Execute: Get the lcList property of ViewModel: ${this.lcList}`)\n  // $app info\n  console.info(`Get: Data from manifest.json's config.data: ${this.$app.$data.name}`)\n  console.info(`Get: Data from APP file: ${this.$app.$def.data1.name}`)\n  console.info(`Execute: Method from APP file`, this.$app.$def.method1())\n}\n\n\n\n# onReady()\n\nIndicates that the ViewModel's template has been compiled and DOM nodes can now be accessed (e.g., this.$element(idxxx)).\n\nExample:\n\nonReady () {\n  this.lcList.push('onReady')\n  console.info(`Triggered: onReady`)\n}\n\n\n\n# onShow(), onHide()\n\nMultiple pages can run simultaneously in the APP, but only one page can be displayed at a time. This differs from pure front-end development, where opening a new page in the browser destroys the previous one. However, it is similar to SPA development, where the browser's global context is shared when switching pages.\n\nPage switching generates new events: onHide() is called when a page is hidden, and onShow() is called when a page is redisplayed.\n\nExample:\n\nonShow () {\n  this.lcList.push('onShow')\n  console.info(`Triggered: onShow`)\n},\nonHide () {\n  this.lcList.push('onHide')\n  console.info(`Triggered: onHide`)\n}\n\n\n\n# onDestroy()\n\nCalled when a page is destroyed. Possible reasons for destruction include: the user returns to the previous page, or the user opens too many pages, and the framework automatically destroys some pages to free up resources.\n\nTherefore, resource cleanup operations should be performed when a page is destroyed, such as canceling interface subscription listeners (geolocation.unsubscribe()).\n\nTo check if a page is in a destroyed state, use the $valid property of the ViewModel: true indicates existence, false indicates destruction.\n\nExample:\n\nonDestroy () {\n  console.info(`Triggered: onDestroy`)\n  console.info(`Execute: Page is about to be destroyed. Destruction state: ${this.$valid}. Should cancel interface subscription listener: geolocation.unsubscribe()`) // true, about to be destroyed\n  setTimeout(function () {\n    // Page has been destroyed, will not execute\n    console.info(`Execute: Page has been destroyed, will not execute`)\n  }.bind(this), 0)\n}\n\n\nNote:\n\n * Asynchronous operations like setTimeout are bound to the current page, so they will not execute after the page is destroyed.\n\n\n# onBackPress()\n\nTriggered when the user swipes right to return or clicks the physical back button.\n\nIf the event handler returns true at the end, it indicates that the system should not return and the developer should handle the business logic (and then manually call the API to return). Otherwise, if no data is returned or other data is returned, the system follows its default logic: return to the previous page.\n\nExample:\n\nonBackPress () {\n  console.info(`Triggered: onBackPress`)\n  // true: indicates custom handling; otherwise, defaults to returning to the previous page\n  // return true\n}\n\n\n\n# onRefresh(query)\n\nListens for page reopening.\n\n 1. When the page's launchMode in the manifest is set to 'singleTask', only one instance of the target page will exist. This function is triggered when the user opens the target page multiple times.\n 2. Triggered when the target page is opened with the 'clearTask' flag in the push parameters and the page instance already exists. The parameter in this callback is the data carried when reopening the page. See Page Launch Modes for details.\n\nExample:\n\nonRefresh(query) {\n  // When launchMode is singleTask, parameters carried when reopening the page are not automatically updated to the page's this object.\n  // Need to manually retrieve and update them from query here.\n  console.log('Page refreshed!!!')\n}\n\n\n\n# onConfigurationChanged(event)\n\nListens for changes in application configuration. Triggered when the application configuration changes, such as a change in system language.\n\nParameters\n\nPARAMETER   TYPE     DESCRIPTION\nevent       Object   Event indicating a change in application configuration\n\nevent Parameters\n\nPARAMETER   TYPE     DESCRIPTION\ntype        String   Reason type for the application configuration change.\n                     Supported type values are as follows:\n\nSupported type values in event\n\nPARAMETER   DESCRIPTION\nlocale      Application configuration changed due to language or region\n            changes\n\nExample:\n\nonConfigurationChanged(evt) {\n  console.log(`Triggered lifecycle onConfigurationChanged. Configuration type: ${evt.type}`)\n}\n\n\n\n# APP Lifecycle\n\nFive callback functions are provided for the APP lifecycle: onCreate(), onShow(), onHide(), onDestroy(), and onError(e).\n\nExample:\n\nexport default {\n  // Listen for application creation. Called when the application is created.\n  onCreate() { \n    console.info('Application onCreate')\n  },\n  // Listen for application returning to the foreground. Called when the application returns to the foreground.\n  onShow() { \n    console.info('Application onShow')\n  },\n  // Listen for application moving to the background. Called when the application moves to the background.\n  onHide() { \n    console.info('Application onHide')\n  },\n  // Listen for application destruction. Called when the application is destroyed.\n  onDestroy() { \n    console.info('Application onDestroy')\n  },\n  // Listen for application errors. Called when the application catches an exception. The parameter is an Error object.\n  onError(e) {\n    console.log('Application onError', e)\n  },\n  // Exposed to all pages. Accessed in pages via: this.$app.$def.method1()\n  method1() {\n    console.info('This is an APP method')\n  },\n  // Exposed to all pages. Accessed in pages via: this.$app.$def.data1\n  data1: {\n    name: 'This is data stored by the APP'\n  }\n}\n",normalizedContent:"# lifecycle\n\n * page lifecycle: oninit, onready, onshow, onhide, ondestroy, onbackpress, onrefresh, onconfigurationchanged\n * page states: displayed, hidden, destroyed\n * app lifecycle: oncreate, onshow, onhide, ondestroy, onerror\n\n\n# lifecycle diagram\n\n\n\n\n# page lifecycle\n\nsince pages are rendered via viewmodel, the page lifecycle refers to the lifecycle of the viewmodel, including common events: oninit, onready, and onshow, which are triggered during page creation.\n\n\n# oninit()\n\nindicates that the viewmodel's data is ready and can be used in the page.\n\nexample:\n\nprivate: {\n  // text list for lifecycle\n  lclist: []\n},\noninit () {\n  this.lclist.push('oninit')\n\n  console.info(`triggered: oninit`)\n  // execute: get the lclist property of viewmodel: oninit\n  console.info(`execute: get the lclist property of viewmodel: ${this.lclist}`)\n  // $app info\n  console.info(`get: data from manifest.json's config.data: ${this.$app.$data.name}`)\n  console.info(`get: data from app file: ${this.$app.$def.data1.name}`)\n  console.info(`execute: method from app file`, this.$app.$def.method1())\n}\n\n\n\n# onready()\n\nindicates that the viewmodel's template has been compiled and dom nodes can now be accessed (e.g., this.$element(idxxx)).\n\nexample:\n\nonready () {\n  this.lclist.push('onready')\n  console.info(`triggered: onready`)\n}\n\n\n\n# onshow(), onhide()\n\nmultiple pages can run simultaneously in the app, but only one page can be displayed at a time. this differs from pure front-end development, where opening a new page in the browser destroys the previous one. however, it is similar to spa development, where the browser's global context is shared when switching pages.\n\npage switching generates new events: onhide() is called when a page is hidden, and onshow() is called when a page is redisplayed.\n\nexample:\n\nonshow () {\n  this.lclist.push('onshow')\n  console.info(`triggered: onshow`)\n},\nonhide () {\n  this.lclist.push('onhide')\n  console.info(`triggered: onhide`)\n}\n\n\n\n# ondestroy()\n\ncalled when a page is destroyed. possible reasons for destruction include: the user returns to the previous page, or the user opens too many pages, and the framework automatically destroys some pages to free up resources.\n\ntherefore, resource cleanup operations should be performed when a page is destroyed, such as canceling interface subscription listeners (geolocation.unsubscribe()).\n\nto check if a page is in a destroyed state, use the $valid property of the viewmodel: true indicates existence, false indicates destruction.\n\nexample:\n\nondestroy () {\n  console.info(`triggered: ondestroy`)\n  console.info(`execute: page is about to be destroyed. destruction state: ${this.$valid}. should cancel interface subscription listener: geolocation.unsubscribe()`) // true, about to be destroyed\n  settimeout(function () {\n    // page has been destroyed, will not execute\n    console.info(`execute: page has been destroyed, will not execute`)\n  }.bind(this), 0)\n}\n\n\nnote:\n\n * asynchronous operations like settimeout are bound to the current page, so they will not execute after the page is destroyed.\n\n\n# onbackpress()\n\ntriggered when the user swipes right to return or clicks the physical back button.\n\nif the event handler returns true at the end, it indicates that the system should not return and the developer should handle the business logic (and then manually call the api to return). otherwise, if no data is returned or other data is returned, the system follows its default logic: return to the previous page.\n\nexample:\n\nonbackpress () {\n  console.info(`triggered: onbackpress`)\n  // true: indicates custom handling; otherwise, defaults to returning to the previous page\n  // return true\n}\n\n\n\n# onrefresh(query)\n\nlistens for page reopening.\n\n 1. when the page's launchmode in the manifest is set to 'singletask', only one instance of the target page will exist. this function is triggered when the user opens the target page multiple times.\n 2. triggered when the target page is opened with the 'cleartask' flag in the push parameters and the page instance already exists. the parameter in this callback is the data carried when reopening the page. see page launch modes for details.\n\nexample:\n\nonrefresh(query) {\n  // when launchmode is singletask, parameters carried when reopening the page are not automatically updated to the page's this object.\n  // need to manually retrieve and update them from query here.\n  console.log('page refreshed!!!')\n}\n\n\n\n# onconfigurationchanged(event)\n\nlistens for changes in application configuration. triggered when the application configuration changes, such as a change in system language.\n\nparameters\n\nparameter   type     description\nevent       object   event indicating a change in application configuration\n\nevent parameters\n\nparameter   type     description\ntype        string   reason type for the application configuration change.\n                     supported type values are as follows:\n\nsupported type values in event\n\nparameter   description\nlocale      application configuration changed due to language or region\n            changes\n\nexample:\n\nonconfigurationchanged(evt) {\n  console.log(`triggered lifecycle onconfigurationchanged. configuration type: ${evt.type}`)\n}\n\n\n\n# app lifecycle\n\nfive callback functions are provided for the app lifecycle: oncreate(), onshow(), onhide(), ondestroy(), and onerror(e).\n\nexample:\n\nexport default {\n  // listen for application creation. called when the application is created.\n  oncreate() { \n    console.info('application oncreate')\n  },\n  // listen for application returning to the foreground. called when the application returns to the foreground.\n  onshow() { \n    console.info('application onshow')\n  },\n  // listen for application moving to the background. called when the application moves to the background.\n  onhide() { \n    console.info('application onhide')\n  },\n  // listen for application destruction. called when the application is destroyed.\n  ondestroy() { \n    console.info('application ondestroy')\n  },\n  // listen for application errors. called when the application catches an exception. the parameter is an error object.\n  onerror(e) {\n    console.log('application onerror', e)\n  },\n  // exposed to all pages. accessed in pages via: this.$app.$def.method1()\n  method1() {\n    console.info('this is an app method')\n  },\n  // exposed to all pages. accessed in pages via: this.$app.$def.data1\n  data1: {\n    name: 'this is data stored by the app'\n  }\n}\n",charsets:{}},{title:"UX File",frontmatter:{},regularPath:"/en/guide/framework/ux.html",relativePath:"en/guide/framework/ux.md",key:"v-52d35d94",path:"/en/guide/framework/ux.html",headers:[{level:2,title:"app.ux",slug:"app-ux",normalizedTitle:"app.ux",charIndex:1372}],headersStr:"app.ux",content:'# UX File\n\nThe APP and its pages are all written in files with the .ux suffix. These files consist of three parts: template, style, and script. A typical example of a page with the .ux suffix is shown below:\n\n<template>\n  \x3c!-- Only one root node is allowed in the template --\x3e\n  <div class="page">\n    <text class="title">Welcome to {{title}}</text>\n    \x3c!-- Click to navigate to the details page --\x3e\n    <input class="btn" type="button" value="Navigate to Details Page" onclick="routeDetail">\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .title {\n    font-size: 30px;\n    text-align: center;\n  }\n\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 75px;\n    border-radius: 43px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // The data model for page-level components, affecting the override mechanism of incoming data: attributes defined within private are not allowed to be overridden\n    private: {\n      title: \'Example Page\'\n    },\n    routeDetail () {\n      // Navigate to a page within the app. For more details on router usage, refer to: Documentation -> API -> Page Routing\n      router.push ({\n        uri: \'/DemoDetail\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# app.ux\n\nAfter compilation, the current app.ux will include manifest configuration information (you can check the file content after running npm run build). Therefore, please do not delete the comment /**manifest**/.\n\nYou can import some common scripts in the <script> section and expose them on the current app object, as shown below. Then, you can access them in the ViewModel of the page .ux file via this.$app.$def.util.\n\n<script>\n  /**\n   * Application-level configuration, shared by all pages\n   */\n  import util from \'./util\'\n\n  export default {\n    showMenu: util.showMenu,\n    createShortcut: util.createShortcut,\n    util\n  }\n<\/script>\n',normalizedContent:'# ux file\n\nthe app and its pages are all written in files with the .ux suffix. these files consist of three parts: template, style, and script. a typical example of a page with the .ux suffix is shown below:\n\n<template>\n  \x3c!-- only one root node is allowed in the template --\x3e\n  <div class="page">\n    <text class="title">welcome to {{title}}</text>\n    \x3c!-- click to navigate to the details page --\x3e\n    <input class="btn" type="button" value="navigate to details page" onclick="routedetail">\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .title {\n    font-size: 30px;\n    text-align: center;\n  }\n\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 75px;\n    border-radius: 43px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // the data model for page-level components, affecting the override mechanism of incoming data: attributes defined within private are not allowed to be overridden\n    private: {\n      title: \'example page\'\n    },\n    routedetail () {\n      // navigate to a page within the app. for more details on router usage, refer to: documentation -> api -> page routing\n      router.push ({\n        uri: \'/demodetail\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# app.ux\n\nafter compilation, the current app.ux will include manifest configuration information (you can check the file content after running npm run build). therefore, please do not delete the comment /**manifest**/.\n\nyou can import some common scripts in the <script> section and expose them on the current app object, as shown below. then, you can access them in the viewmodel of the page .ux file via this.$app.$def.util.\n\n<script>\n  /**\n   * application-level configuration, shared by all pages\n   */\n  import util from \'./util\'\n\n  export default {\n    showmenu: util.showmenu,\n    createshortcut: util.createshortcut,\n    util\n  }\n<\/script>\n',charsets:{}},{title:"Loop Directives",frontmatter:{},regularPath:"/en/guide/framework/template/for.html",relativePath:"en/guide/framework/template/for.md",key:"v-462f9e96",path:"/en/guide/framework/template/for.html",headers:[{level:2,title:"List Rendering",slug:"list-rendering",normalizedTitle:"list rendering",charIndex:22}],headersStr:"List Rendering",content:'# Loop Directives\n\n\n# List Rendering\n\nTo implement list rendering, we use the for directive. The for directive is used to loop through and output an array of data.\n\nTIP\n\nThe for directive renders a list based on the source data array. The supported syntax is as follows (where {{}} can be omitted):\n\n * for="{{list}}" list is the source data array, and the default array element name is $item;\n * for="{{value in list}}" value is a custom array element name, and the default array element index name is $idx;\n * for="{{(index, value) in list}}" index is a custom array element index name, and value is a custom array element name.\n\nTIP\n\nThe tid attribute of the for directive is used to specify the unique ID of array elements. If not specified, the array index ($idx) is used as the unique ID by default. The purpose of the tid attribute is to enable element node reuse and optimize the redraw efficiency of the for loop.\n\nExample:\n\n<template>\n  <div class="page">\n    \x3c!-- Method 1: Default $item represents the array element, $idx represents the array index --\x3e\n    <div class="row" for="{{list}}" tid="uniqueId">\n      <text>{{$idx}}.{{$item.name}}</text>\n    </div>\n    \x3c!-- Method 2: Custom element variable name --\x3e\n    <div class="row" for="value in list" tid="uniqueId">\n      <text>{{$idx}}.{{value.name}}</text>\n    </div>\n    \x3c!-- Method 3: Custom element and index variable names --\x3e\n    <div class="row" for="(personIndex, personItem) in list" tid="uniqueId">\n      <text>{{personIndex}}.{{personItem.name}}</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n\n  .row {\n    width: 85%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      list: [\n        { name: \'aa\', uniqueId: 1 },\n        { name: \'bb\', uniqueId: 2 },\n        { name: \'cc\', uniqueId: 3 }\n      ]\n    },\n    onInit() {\n      console.info(\'Directive for\')\n    }\n  }\n<\/script>\n\n\nIn the example code, the structure of div.row will be generated multiple times based on the definition of the list data in the script when rendering the page.\n\ntid="uniqueId" refers to a property name of the array element, which does not necessarily have to be called uniqueId. It is similar to React\'s key={item.uniqueId} or Vue\'s :key="item.uniqueId", used to optimize rendering speed.\n\nWhen data is modified, DOM elements whose data has not changed will not be re-rendered; only DOM elements whose data has changed will be re-rendered. Therefore, we must ensure that the uniqueId property value is unique for each array element.\n\nNote\n\n 1. The for directive can only loop through arrays, not objects.\n\n 2. The behavior of the for directive inside a block tag is different from its behavior in other tags. The block tag does not insert additional DOM nodes during rendering but instead loops through its internal DOM structure. Other tags will loop and generate themselves.\n\n 3. When the for directive and the if directive coexist on the same tag, the if directive takes precedence over the for directive. To help newcomers who haven\'t read the documentation quickly get started with the project, it is not recommended to have these two directives coexist on the same tag.\n\n 4. When custom variables represent the array index and array element of the for directive, the variable names cannot start with $ or _.\n\n 5. When using the tid attribute, note the following:\n    \n    * The data property specified by the tid attribute must exist; otherwise, it may cause runtime exceptions.\n    * The data property specified by the tid attribute must be unique; otherwise, it may cause performance issues.\n    * The tid attribute currently does not support expressions.',normalizedContent:'# loop directives\n\n\n# list rendering\n\nto implement list rendering, we use the for directive. the for directive is used to loop through and output an array of data.\n\ntip\n\nthe for directive renders a list based on the source data array. the supported syntax is as follows (where {{}} can be omitted):\n\n * for="{{list}}" list is the source data array, and the default array element name is $item;\n * for="{{value in list}}" value is a custom array element name, and the default array element index name is $idx;\n * for="{{(index, value) in list}}" index is a custom array element index name, and value is a custom array element name.\n\ntip\n\nthe tid attribute of the for directive is used to specify the unique id of array elements. if not specified, the array index ($idx) is used as the unique id by default. the purpose of the tid attribute is to enable element node reuse and optimize the redraw efficiency of the for loop.\n\nexample:\n\n<template>\n  <div class="page">\n    \x3c!-- method 1: default $item represents the array element, $idx represents the array index --\x3e\n    <div class="row" for="{{list}}" tid="uniqueid">\n      <text>{{$idx}}.{{$item.name}}</text>\n    </div>\n    \x3c!-- method 2: custom element variable name --\x3e\n    <div class="row" for="value in list" tid="uniqueid">\n      <text>{{$idx}}.{{value.name}}</text>\n    </div>\n    \x3c!-- method 3: custom element and index variable names --\x3e\n    <div class="row" for="(personindex, personitem) in list" tid="uniqueid">\n      <text>{{personindex}}.{{personitem.name}}</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n\n  .row {\n    width: 85%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      list: [\n        { name: \'aa\', uniqueid: 1 },\n        { name: \'bb\', uniqueid: 2 },\n        { name: \'cc\', uniqueid: 3 }\n      ]\n    },\n    oninit() {\n      console.info(\'directive for\')\n    }\n  }\n<\/script>\n\n\nin the example code, the structure of div.row will be generated multiple times based on the definition of the list data in the script when rendering the page.\n\ntid="uniqueid" refers to a property name of the array element, which does not necessarily have to be called uniqueid. it is similar to react\'s key={item.uniqueid} or vue\'s :key="item.uniqueid", used to optimize rendering speed.\n\nwhen data is modified, dom elements whose data has not changed will not be re-rendered; only dom elements whose data has changed will be re-rendered. therefore, we must ensure that the uniqueid property value is unique for each array element.\n\nnote\n\n 1. the for directive can only loop through arrays, not objects.\n\n 2. the behavior of the for directive inside a block tag is different from its behavior in other tags. the block tag does not insert additional dom nodes during rendering but instead loops through its internal dom structure. other tags will loop and generate themselves.\n\n 3. when the for directive and the if directive coexist on the same tag, the if directive takes precedence over the for directive. to help newcomers who haven\'t read the documentation quickly get started with the project, it is not recommended to have these two directives coexist on the same tag.\n\n 4. when custom variables represent the array index and array element of the for directive, the variable names cannot start with $ or _.\n\n 5. when using the tid attribute, note the following:\n    \n    * the data property specified by the tid attribute must exist; otherwise, it may cause runtime exceptions.\n    * the data property specified by the tid attribute must be unique; otherwise, it may cause performance issues.\n    * the tid attribute currently does not support expressions.',charsets:{}},{title:"Multi-screen Adaptation",frontmatter:{},regularPath:"/en/guide/multi-screens/",relativePath:"en/guide/multi-screens/README.md",key:"v-6714f355",path:"/en/guide/multi-screens/",headers:[{level:2,title:"Why is Multi-screen Adaptation Necessary?",slug:"why-is-multi-screen-adaptation-necessary",normalizedTitle:"why is multi-screen adaptation necessary?",charIndex:30},{level:2,title:"How to Perform Multi-screen Adaptation?",slug:"how-to-perform-multi-screen-adaptation",normalizedTitle:"how to perform multi-screen adaptation?",charIndex:1970}],headersStr:"Why is Multi-screen Adaptation Necessary? How to Perform Multi-screen Adaptation?",content:"# Multi-screen Adaptation\n\n\n# Why is Multi-screen Adaptation Necessary?\n\nXiaomi offers a wide range of wearable devices (smart bands, smartwatches) with varying screen shapes, sizes, and resolutions. To ensure proper display of applications across different screens, multi-screen adaptation is required. Developers are advised to consider multi-screen adaptation as much as possible when developing applications to enhance their versatility. This ensures that applications can be distributed to as many wearable devices as possible, helping developers expand their user base quickly. The following table provides detailed screen information for devices equipped with Vela OS. Please refer to it.\n\nDEVICE TYPE   DEVICE MODEL              SCREEN SHAPE                  SCREEN SIZE   RESOLUTION   PPI   SCREEN WIDTH (DP)   ASPECT RATIO\nSmartwatch    Xiaomi Watch S1 Pro       Round                         1.47 inches   480x480      326   240                 1\nSmartwatch    Xiaomi Watch H1           Round                         1.43 inches   466x466      326   233                 1\nSmartwatch    Xiaomi Watch S3           Round                         1.43 inches   466x466      326   233                 1\nSmartwatch    Xiaomi Watch S4 sport     Round                         1.43 inches   466x466      326   233                 1\nSmartwatch    Xiaomi Watch S4           Round                         1.43 inches   466x466      326   233                 1\nSmartwatch    REDMI Watch 5             Rectangle                     2.07 inches   432x514      324   216                 0.8\nSmart Band    Xiaomi Smart Band 8 Pro   Rectangle                     1.74 inches   336x480      336   168                 0.7\nSmart Band    Xiaomi Smart Band 9       Capsule-shaped-track-screen   1.62 inches   192x490      325   96                  0.4\nSmart Band    Xiaomi Smart Band 9 Pro   Rectangle                     1.74 inches   336x480      325   160                 0.7\n\n\n# How to Perform Multi-screen Adaptation?\n\nMulti-screen adaptation requires applications to be designed for multiple screens. The design drafts should include adaptation plans for different screens. For specific design methods, please refer to Multi-screen Design.\n\nThe framework provides a series of technical specifications to help developers complete multi-screen adaptation of applications according to the design drafts. Please refer to Multi-screen Specifications.\n\nOur IDE also offers a multi-screen UI simulator to help developers quickly preview the application's effects on different screens and make appropriate adjustments. Please refer to Multi-screen UI Simulator.\n\nWe provide some code examples for multi-screen adaptation of common page elements, as well as whole-site cases for reference. Code Examples.",normalizedContent:"# multi-screen adaptation\n\n\n# why is multi-screen adaptation necessary?\n\nxiaomi offers a wide range of wearable devices (smart bands, smartwatches) with varying screen shapes, sizes, and resolutions. to ensure proper display of applications across different screens, multi-screen adaptation is required. developers are advised to consider multi-screen adaptation as much as possible when developing applications to enhance their versatility. this ensures that applications can be distributed to as many wearable devices as possible, helping developers expand their user base quickly. the following table provides detailed screen information for devices equipped with vela os. please refer to it.\n\ndevice type   device model              screen shape                  screen size   resolution   ppi   screen width (dp)   aspect ratio\nsmartwatch    xiaomi watch s1 pro       round                         1.47 inches   480x480      326   240                 1\nsmartwatch    xiaomi watch h1           round                         1.43 inches   466x466      326   233                 1\nsmartwatch    xiaomi watch s3           round                         1.43 inches   466x466      326   233                 1\nsmartwatch    xiaomi watch s4 sport     round                         1.43 inches   466x466      326   233                 1\nsmartwatch    xiaomi watch s4           round                         1.43 inches   466x466      326   233                 1\nsmartwatch    redmi watch 5             rectangle                     2.07 inches   432x514      324   216                 0.8\nsmart band    xiaomi smart band 8 pro   rectangle                     1.74 inches   336x480      336   168                 0.7\nsmart band    xiaomi smart band 9       capsule-shaped-track-screen   1.62 inches   192x490      325   96                  0.4\nsmart band    xiaomi smart band 9 pro   rectangle                     1.74 inches   336x480      325   160                 0.7\n\n\n# how to perform multi-screen adaptation?\n\nmulti-screen adaptation requires applications to be designed for multiple screens. the design drafts should include adaptation plans for different screens. for specific design methods, please refer to multi-screen design.\n\nthe framework provides a series of technical specifications to help developers complete multi-screen adaptation of applications according to the design drafts. please refer to multi-screen specifications.\n\nour ide also offers a multi-screen ui simulator to help developers quickly preview the application's effects on different screens and make appropriate adjustments. please refer to multi-screen ui simulator.\n\nwe provide some code examples for multi-screen adaptation of common page elements, as well as whole-site cases for reference. code examples.",charsets:{}},{title:"Conditional Directives",frontmatter:{},regularPath:"/en/guide/framework/template/if.html",relativePath:"en/guide/framework/template/if.md",key:"v-668fe79c",path:"/en/guide/framework/template/if.html",headers:[{level:2,title:"if Directive",slug:"if-directive",normalizedTitle:"if directive",charIndex:29},{level:2,title:"show Directive",slug:"show-directive",normalizedTitle:"show directive",charIndex:659},{level:2,title:"Differences Between if and show",slug:"differences-between-if-and-show",normalizedTitle:"differences between if and show",charIndex:1236}],headersStr:"if Directive show Directive Differences Between if and show",content:'# Conditional Directives\n\n\n# if Directive\n\nThe if conditional directive refers to the three related directives: if/elif/else, which are used to control whether components are added or removed.\n\nThe if/elif/else nodes must be adjacent sibling nodes.\n\n<template>\n  <div>\n    <text if="{{display}}">Hello-1</text>\n    <text elif="{{display}}">Hello-2</text>\n    <text else>Hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // The data model for page-level components, affecting the override mechanism of incoming data: properties defined in private are not allowed to be overridden\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\n\n# show Directive\n\nThe show directive refers to whether a component is displayed, controlling the visibility state of the component without removing it from the DOM structure.\n\nshow is equivalent to visible=none, mainly used for declaration on native components.\n\n<template>\n  <text show="{{visible}}">Hello</text>\n</template>\n\n<script>\n  export default {\n    // The data model for page-level components, affecting the override mechanism of incoming data: properties defined in private are not allowed to be overridden\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# Differences Between if and show\n\n * When the value of the if/elif directive is false, the node is removed from the page. When the value is true, the component is dynamically inserted into the DOM structure.\n\n * When the value of the show directive is true, the node is visible. When the value is false, the component is invisible, but the node remains in the page\'s DOM structure.',normalizedContent:'# conditional directives\n\n\n# if directive\n\nthe if conditional directive refers to the three related directives: if/elif/else, which are used to control whether components are added or removed.\n\nthe if/elif/else nodes must be adjacent sibling nodes.\n\n<template>\n  <div>\n    <text if="{{display}}">hello-1</text>\n    <text elif="{{display}}">hello-2</text>\n    <text else>hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // the data model for page-level components, affecting the override mechanism of incoming data: properties defined in private are not allowed to be overridden\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\n\n# show directive\n\nthe show directive refers to whether a component is displayed, controlling the visibility state of the component without removing it from the dom structure.\n\nshow is equivalent to visible=none, mainly used for declaration on native components.\n\n<template>\n  <text show="{{visible}}">hello</text>\n</template>\n\n<script>\n  export default {\n    // the data model for page-level components, affecting the override mechanism of incoming data: properties defined in private are not allowed to be overridden\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# differences between if and show\n\n * when the value of the if/elif directive is false, the node is removed from the page. when the value is true, the component is dynamically inserted into the dom structure.\n\n * when the value of the show directive is true, the node is visible. when the value is false, the component is invisible, but the node remains in the page\'s dom structure.',charsets:{}},{title:"Code Examples",frontmatter:{},regularPath:"/en/guide/multi-screens/samples.html",relativePath:"en/guide/multi-screens/samples.md",key:"v-589990da",path:"/en/guide/multi-screens/samples.html",headers:[{level:2,title:"Page Layout and Element Adaptation",slug:"page-layout-and-element-adaptation",normalizedTitle:"page layout and element adaptation",charIndex:20},{level:3,title:"Adaptive Container Size",slug:"adaptive-container-size",normalizedTitle:"adaptive container size",charIndex:121},{level:3,title:"Single-Page Three-Row Layout",slug:"single-page-three-row-layout",normalizedTitle:"single-page three-row layout",charIndex:1759},{level:3,title:"Automatic px Scaling Calculation",slug:"automatic-px-scaling-calculation",normalizedTitle:"automatic px scaling calculation",charIndex:2877},{level:3,title:"Full-Screen Background Image",slug:"full-screen-background-image",normalizedTitle:"full-screen background image",charIndex:3901},{level:3,title:"Page Title Bar",slug:"page-title-bar",normalizedTitle:"page title bar",charIndex:4297},{level:2,title:"Cross-Screen Application Project Examples",slug:"cross-screen-application-project-examples",normalizedTitle:"cross-screen application project examples",charIndex:5764},{level:3,title:"To-Do List Application",slug:"to-do-list-application",normalizedTitle:"to-do list application",charIndex:5810},{level:3,title:"Calculator",slug:"calculator",normalizedTitle:"calculator",charIndex:5930}],headersStr:"Page Layout and Element Adaptation Adaptive Container Size Single-Page Three-Row Layout Automatic px Scaling Calculation Full-Screen Background Image Page Title Bar Cross-Screen Application Project Examples To-Do List Application Calculator",content:'# Code Examples\n\n\n# Page Layout and Element Adaptation\n\nSome common cross-screen adaptation examples in development.\n\n\n# Adaptive Container Size\n\nUsing percentages or flex styles instead of fixed container sizes with px can provide better compatibility across multiple screens. For example, in scenarios with long scrolling lists, the example is as follows:\n\n<template>\n  <div class="demo-page">\n    <text class="title">Long List</text>\n    <list class="list">\n      <list-item class="item" type="custom" for="{{listData}}">\n        <text>{{$item.name}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      listData: [\n        {\n          name: \'TEST1 TEST1 TEST1\'\n        }, {\n          name: \'TEST2 TEST2 TEST2\'\n        }, {\n          name: \'TEST3 TEST3 TEST3\'\n        }, {\n          name: \'TEST4 TEST4 TEST4\'\n        }, {\n          name: \'TEST5 TEST5 TEST5\'\n        }, {\n          name: \'TEST6 TEST6 TEST6\'\n        }, {\n          name: \'TEST7 TEST7 TEST7\'\n        }, {\n          name: \'TEST8 TEST8 TEST8\'\n        }, {\n          name: \'TEST9 TEST9 TEST9\'\n        }, {\n          name: \'TEST10 TEST10 TEST10\'\n        }\n      ]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  flex-direction: column;\n  align-items: center;\n  background-color: #fff;\n}\n\n.title {\n  margin-top: 50px;\n  padding: 20px 0;\n  font-size: 32px;\n}\n.list {\n  flex: 1;\n  width: 340px;\n  margin-bottom: 5px;\n  align-items: center;\n}\n.item {\n  width: 100%;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 20px;\n  background-color: #ccc;\n  text-align: center;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  text-align: center;\n  color: #000;\n}\n</style>\n\n\nEffect display:\n\nCircular screen / Rectangular screen / Capsule screen\n\n\n\n\n# Single-Page Three-Row Layout\n\nIn watch and bracelet scenarios, a three-row layout for a single page is a commonly used design approach. The page structure is generally divided into a top title bar, a bottom button interaction area, and a middle main content area. It is recommended to use a fixed height for the top and bottom, with the main part adapting its height.\n\nCode example:\n\n<template>\n  <div class="demo-page">\n    <div class="header">\n      <text>header</text>\n    </div>\n    <div class="content">\n      <text>content</text>\n    </div>\n    <div class="footer">\n      <text>footer</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {}\n<\/script>\n\n<style>\n.demo-page {\n  width: 466px;\n  height: 466px;\n  flex-direction: column;\n}\n\n.header {\n  width: 100%;\n  height: 100px;\n  background-color: red;\n}\n\n.content {\n  flex: 1;\n  background-color: yellow;\n}\n\n.footer {\n  width: 100%;\n  height: 100px;\n  background-color: blue;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  color: black;\n  text-align: center;\n}\n\n</style>\n\n\nEffect display:\n\nCircular screen / Rectangular screen / Capsule screen\n\n\n\n\n# Automatic px Scaling Calculation\n\nThe px length unit will be converted based on the configured project reference width, with decimal places rounded during the process. Therefore, in scenarios requiring precise calculations, the error value (usually ±1px) introduced by the conversion needs to be considered.\n\nFor example, in the following example, the error was not considered when calculating the row width, leading to rendering issues on certain devices:\n\n\n\nCode example:\n\n<template>\n  <div class="demo-page">\n    <div class="item" for="nums">\n      <text>{{$item}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      nums: [1, 2, 3, 4]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.item {\n  width: 110px;\n  height: 110px;\n  margin: 2px;\n  background-color: #ccc;\n}\n\ntext {\n  color: #000;\n  font-size: 30px;\n}\n\n</style>\n\n\nEffect display:\n\nCircular screen / Rectangular screen / Capsule screen\n\n\n\n\n# Full-Screen Background Image\n\nUsing a full-screen background image requires considering whether the image will display well on screens of different sizes. If there are interactive or strictly positioned elements in the background image, it is recommended to handle them as separate elements from the background image.\n\nEffect display:\n\nCircular screen / Rectangular screen / Capsule screen\n\n\n\n\n# Page Title Bar\n\nThe page title is usually located at the top of the page. On devices with different screen shapes, the aesthetics and completeness of the content display need to be considered. Typically, on devices with edge clipping like circular and capsule screens, the title bar uses a multi-line design to ensure the displayed content length does not exceed the screen. On rectangular screens, a single-row left-right layout is used for a more spacious overall design.\n\nCode example:\n\n<template>\n  <div class="demo-page">\n    <div class="title">\n      <text class="title-text">{{text1}}</text>\n      <text class="title-text">{{text2}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      text1: \'09:28\',\n      text2: \'文案\'\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  justify-content: center;\n  background-color: #5c5c5c;\n}\n\n.title {\n  width: 90%;\n}\n\n.title-text {\n  font-size: 36px;\n  color: #fff;\n}\n\n@media (shape: circle){\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n@media (shape: rect) {\n  .title {\n    margin-top: 10px;\n    justify-content: space-between;\n    align-items: flex-start;\n    flex-direction: row-reverse;\n  }\n  .title-text {\n    font-size: 46px;\n  }\n}\n\n@media (shape: pill-shaped) {\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n  .title-text {\n    font-size: 72px;\n  }\n}\n</style>\n\n\nEffect display:\n\nCircular screen / Rectangular screen / Capsule screen\n\n\n\n\n# Cross-Screen Application Project Examples\n\n\n# To-Do List Application\n\nCircular screen / Rectangular screen / Capsule screen\n\n\n\nProject address: Click to download\n\n\n# Calculator\n\nCircular screen / Rectangular screen\n\n\n\nProject address: Click to download',normalizedContent:'# code examples\n\n\n# page layout and element adaptation\n\nsome common cross-screen adaptation examples in development.\n\n\n# adaptive container size\n\nusing percentages or flex styles instead of fixed container sizes with px can provide better compatibility across multiple screens. for example, in scenarios with long scrolling lists, the example is as follows:\n\n<template>\n  <div class="demo-page">\n    <text class="title">long list</text>\n    <list class="list">\n      <list-item class="item" type="custom" for="{{listdata}}">\n        <text>{{$item.name}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      listdata: [\n        {\n          name: \'test1 test1 test1\'\n        }, {\n          name: \'test2 test2 test2\'\n        }, {\n          name: \'test3 test3 test3\'\n        }, {\n          name: \'test4 test4 test4\'\n        }, {\n          name: \'test5 test5 test5\'\n        }, {\n          name: \'test6 test6 test6\'\n        }, {\n          name: \'test7 test7 test7\'\n        }, {\n          name: \'test8 test8 test8\'\n        }, {\n          name: \'test9 test9 test9\'\n        }, {\n          name: \'test10 test10 test10\'\n        }\n      ]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  flex-direction: column;\n  align-items: center;\n  background-color: #fff;\n}\n\n.title {\n  margin-top: 50px;\n  padding: 20px 0;\n  font-size: 32px;\n}\n.list {\n  flex: 1;\n  width: 340px;\n  margin-bottom: 5px;\n  align-items: center;\n}\n.item {\n  width: 100%;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 20px;\n  background-color: #ccc;\n  text-align: center;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  text-align: center;\n  color: #000;\n}\n</style>\n\n\neffect display:\n\ncircular screen / rectangular screen / capsule screen\n\n\n\n\n# single-page three-row layout\n\nin watch and bracelet scenarios, a three-row layout for a single page is a commonly used design approach. the page structure is generally divided into a top title bar, a bottom button interaction area, and a middle main content area. it is recommended to use a fixed height for the top and bottom, with the main part adapting its height.\n\ncode example:\n\n<template>\n  <div class="demo-page">\n    <div class="header">\n      <text>header</text>\n    </div>\n    <div class="content">\n      <text>content</text>\n    </div>\n    <div class="footer">\n      <text>footer</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {}\n<\/script>\n\n<style>\n.demo-page {\n  width: 466px;\n  height: 466px;\n  flex-direction: column;\n}\n\n.header {\n  width: 100%;\n  height: 100px;\n  background-color: red;\n}\n\n.content {\n  flex: 1;\n  background-color: yellow;\n}\n\n.footer {\n  width: 100%;\n  height: 100px;\n  background-color: blue;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  color: black;\n  text-align: center;\n}\n\n</style>\n\n\neffect display:\n\ncircular screen / rectangular screen / capsule screen\n\n\n\n\n# automatic px scaling calculation\n\nthe px length unit will be converted based on the configured project reference width, with decimal places rounded during the process. therefore, in scenarios requiring precise calculations, the error value (usually ±1px) introduced by the conversion needs to be considered.\n\nfor example, in the following example, the error was not considered when calculating the row width, leading to rendering issues on certain devices:\n\n\n\ncode example:\n\n<template>\n  <div class="demo-page">\n    <div class="item" for="nums">\n      <text>{{$item}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      nums: [1, 2, 3, 4]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.item {\n  width: 110px;\n  height: 110px;\n  margin: 2px;\n  background-color: #ccc;\n}\n\ntext {\n  color: #000;\n  font-size: 30px;\n}\n\n</style>\n\n\neffect display:\n\ncircular screen / rectangular screen / capsule screen\n\n\n\n\n# full-screen background image\n\nusing a full-screen background image requires considering whether the image will display well on screens of different sizes. if there are interactive or strictly positioned elements in the background image, it is recommended to handle them as separate elements from the background image.\n\neffect display:\n\ncircular screen / rectangular screen / capsule screen\n\n\n\n\n# page title bar\n\nthe page title is usually located at the top of the page. on devices with different screen shapes, the aesthetics and completeness of the content display need to be considered. typically, on devices with edge clipping like circular and capsule screens, the title bar uses a multi-line design to ensure the displayed content length does not exceed the screen. on rectangular screens, a single-row left-right layout is used for a more spacious overall design.\n\ncode example:\n\n<template>\n  <div class="demo-page">\n    <div class="title">\n      <text class="title-text">{{text1}}</text>\n      <text class="title-text">{{text2}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      text1: \'09:28\',\n      text2: \'文案\'\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  justify-content: center;\n  background-color: #5c5c5c;\n}\n\n.title {\n  width: 90%;\n}\n\n.title-text {\n  font-size: 36px;\n  color: #fff;\n}\n\n@media (shape: circle){\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n@media (shape: rect) {\n  .title {\n    margin-top: 10px;\n    justify-content: space-between;\n    align-items: flex-start;\n    flex-direction: row-reverse;\n  }\n  .title-text {\n    font-size: 46px;\n  }\n}\n\n@media (shape: pill-shaped) {\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n  .title-text {\n    font-size: 72px;\n  }\n}\n</style>\n\n\neffect display:\n\ncircular screen / rectangular screen / capsule screen\n\n\n\n\n# cross-screen application project examples\n\n\n# to-do list application\n\ncircular screen / rectangular screen / capsule screen\n\n\n\nproject address: click to download\n\n\n# calculator\n\ncircular screen / rectangular screen\n\n\n\nproject address: click to download',charsets:{cjk:!0}},{title:"Conditional Compilation",frontmatter:{},regularPath:"/en/guide/multi-screens/conditional-compilation.html",relativePath:"en/guide/multi-screens/conditional-compilation.md",key:"v-2dae6518",path:"/en/guide/multi-screens/conditional-compilation.html",headers:[{level:2,title:"Process",slug:"process",normalizedTitle:"process",charIndex:476}],headersStr:"Process",content:'# Conditional Compilation\n\nConditional compilation based on device features is a technique that determines which code should be included in an application during the compilation process based on characteristics such as device type and screen shape. This feature is suitable for cross-device application development, where different devices may require different code logic and interface layouts. Currently, the file types that support conditional compilation are: ux, js.\n\n\n# Process\n\n 1. Install conditional-compilation-webpack-plugin\n\nnpm install conditional-compilation-webpack-plugin -D\n\n\n 2. Install cross-env\n\nnpm install cross-env -D\n\n\n 3. Add a quickapp.config.js file in the project root directory and refer to the following configuration\n\nconst ConditionalCompilationWebpackPlugin = require("conditional-compilation-webpack-plugin")\n\nmodule.exports = {\n  plugins: [new ConditionalCompilationWebpackPlugin()]\n}\n\n\n 4. Add scripts in package.json according to device features\n\n"scripts": {\n  "build:circle": "cross-env DEVICE_TYPE=WATCH SHAPE=CIRCLE aiot build --enable-custom-component",\n  "build:rect": "cross-env DEVICE_TYPE=WATCH SHAPE=RECT aiot build --enable-custom-component"\n}\n\n\n 5. Use conditional compilation in code, refer to the following code\n\n<template>\n  <div class="home-page">\n    \x3c!-- if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'CIRCLE\' --\x3e\n    <input class="btn bg-red" type="button" value="handleSet" @click="handleSet" />\n    \x3c!-- endif --\x3e\n    \x3c!-- if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'RECT\' --\x3e\n    <input class="btn bg-blue" type="button" value="handleSet" @click="handleSet" />\n    \x3c!-- endif --\x3e\n  </div>\n</template>\n\n<script>\n  export default {\n    handleSet() {\n      // if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'CIRCLE\'\n      console.log(\'handleSet shape = circle\')\n      // endif\n      // if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'RECT\'\n      console.log(\'handleSet shape = rect\')\n      // endif\n    }\n  };\n<\/script>\n\n<style>\n  .home-page {\n    align-items: flex-start;\n    justify-content: flex-start;\n    padding: 60px;\n    position: relative;\n  }\n\n  .btn {\n    height: 60px;\n    width: 360px;\n    text-align: center;\n    border-radius: 5px;\n    margin-bottom: 30px;\n    color: #ffffff;\n    font-size: 30px;\n    background-color: #0faeff;\n  }\n\n/* if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'CIRCLE\' */\n  .bg-red {\n    background-color: red;\n  }\n/* endif */\n/* if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'RECT\' */\n  .bg-blue {\n    background-color: blue;\n  }\n/* endif */\n</style>\n\n\n 6. Execute the configured compilation command\n\nnpm run build:circle\nor\nnpm run build:rect\n',normalizedContent:'# conditional compilation\n\nconditional compilation based on device features is a technique that determines which code should be included in an application during the compilation process based on characteristics such as device type and screen shape. this feature is suitable for cross-device application development, where different devices may require different code logic and interface layouts. currently, the file types that support conditional compilation are: ux, js.\n\n\n# process\n\n 1. install conditional-compilation-webpack-plugin\n\nnpm install conditional-compilation-webpack-plugin -d\n\n\n 2. install cross-env\n\nnpm install cross-env -d\n\n\n 3. add a quickapp.config.js file in the project root directory and refer to the following configuration\n\nconst conditionalcompilationwebpackplugin = require("conditional-compilation-webpack-plugin")\n\nmodule.exports = {\n  plugins: [new conditionalcompilationwebpackplugin()]\n}\n\n\n 4. add scripts in package.json according to device features\n\n"scripts": {\n  "build:circle": "cross-env device_type=watch shape=circle aiot build --enable-custom-component",\n  "build:rect": "cross-env device_type=watch shape=rect aiot build --enable-custom-component"\n}\n\n\n 5. use conditional compilation in code, refer to the following code\n\n<template>\n  <div class="home-page">\n    \x3c!-- if true: process.env.device_type === \'watch\' && process.env.shape === \'circle\' --\x3e\n    <input class="btn bg-red" type="button" value="handleset" @click="handleset" />\n    \x3c!-- endif --\x3e\n    \x3c!-- if true: process.env.device_type === \'watch\' && process.env.shape === \'rect\' --\x3e\n    <input class="btn bg-blue" type="button" value="handleset" @click="handleset" />\n    \x3c!-- endif --\x3e\n  </div>\n</template>\n\n<script>\n  export default {\n    handleset() {\n      // if true: process.env.device_type === \'watch\' && process.env.shape === \'circle\'\n      console.log(\'handleset shape = circle\')\n      // endif\n      // if true: process.env.device_type === \'watch\' && process.env.shape === \'rect\'\n      console.log(\'handleset shape = rect\')\n      // endif\n    }\n  };\n<\/script>\n\n<style>\n  .home-page {\n    align-items: flex-start;\n    justify-content: flex-start;\n    padding: 60px;\n    position: relative;\n  }\n\n  .btn {\n    height: 60px;\n    width: 360px;\n    text-align: center;\n    border-radius: 5px;\n    margin-bottom: 30px;\n    color: #ffffff;\n    font-size: 30px;\n    background-color: #0faeff;\n  }\n\n/* if true: process.env.device_type === \'watch\' && process.env.shape === \'circle\' */\n  .bg-red {\n    background-color: red;\n  }\n/* endif */\n/* if true: process.env.device_type === \'watch\' && process.env.shape === \'rect\' */\n  .bg-blue {\n    background-color: blue;\n  }\n/* endif */\n</style>\n\n\n 6. execute the configured compilation command\n\nnpm run build:circle\nor\nnpm run build:rect\n',charsets:{}},{title:"Precautions",frontmatter:{},regularPath:"/en/guide/other/tips.html",relativePath:"en/guide/other/tips.md",key:"v-1855b854",path:"/en/guide/other/tips.html",headers:[{level:2,title:"Exception Scenarios in the Watch",slug:"exception-scenarios-in-the-watch",normalizedTitle:"exception scenarios in the watch",charIndex:18},{level:2,title:"Code Specifications",slug:"code-specifications",normalizedTitle:"code specifications",charIndex:454},{level:2,title:"Common Optimizations",slug:"common-optimizations",normalizedTitle:"common optimizations",charIndex:1100}],headersStr:"Exception Scenarios in the Watch Code Specifications Common Optimizations",content:'# Precautions\n\n\n# Exception Scenarios in the Watch\n\n 1. Network exceptions, prompt when there is no network\n 2. Data exceptions (no data is obtained, or the backend interface returns an error)\n 3. JS code error handling\n 4. Prevent duplicate clicks on buttons (especially pay attention to operations that send requests after clicking)\n 5. When the screen turns off and then back on, the onReady and onShow lifecycle functions will be triggered again\n\n\n# Code Specifications\n\n 1. The code in the app.ux file must be written within <script><\/script>, otherwise the code will not execute!\n 2. In *.ux files, the template node can only have one root node\n 3. CSS properties related to angles must include units, such as total-angle: 360deg\n 4. In list-item, use conditional judgments like if/else/show cautiously to ensure all list-item structures are consistent\n 5. For the src attribute of image, do not use variable concatenation (e.g., src="/common/{{type}}"), otherwise the compiler will display a warning during packaging. It is recommended to use the variable directly, like src="{{imgPath}}"\n\n\n# Common Optimizations\n\n 1. Reduce the number of network requests and concurrency\n 2. Consider local caching for interfaces with low real-time data requirements (also consider data size for caching)\n 3. Control the number of local files and avoid directly traversing files to get all file sizes\n 4. Use low-resolution network images whenever possible\n 5. Use pagination for lists, with about 20 items per page being optimal\n 6. Do not store network request data directly in memory; only store the fields that are needed\n 7. Use third-party dependencies cautiously and prefer lightweight ones\n 8. Consider placing common code in the global scope to avoid multiple imports\n 9. Add a loading state to prevent multiple network requests from being initiated due to frequent button clicks',normalizedContent:'# precautions\n\n\n# exception scenarios in the watch\n\n 1. network exceptions, prompt when there is no network\n 2. data exceptions (no data is obtained, or the backend interface returns an error)\n 3. js code error handling\n 4. prevent duplicate clicks on buttons (especially pay attention to operations that send requests after clicking)\n 5. when the screen turns off and then back on, the onready and onshow lifecycle functions will be triggered again\n\n\n# code specifications\n\n 1. the code in the app.ux file must be written within <script><\/script>, otherwise the code will not execute!\n 2. in *.ux files, the template node can only have one root node\n 3. css properties related to angles must include units, such as total-angle: 360deg\n 4. in list-item, use conditional judgments like if/else/show cautiously to ensure all list-item structures are consistent\n 5. for the src attribute of image, do not use variable concatenation (e.g., src="/common/{{type}}"), otherwise the compiler will display a warning during packaging. it is recommended to use the variable directly, like src="{{imgpath}}"\n\n\n# common optimizations\n\n 1. reduce the number of network requests and concurrency\n 2. consider local caching for interfaces with low real-time data requirements (also consider data size for caching)\n 3. control the number of local files and avoid directly traversing files to get all file sizes\n 4. use low-resolution network images whenever possible\n 5. use pagination for lists, with about 20 items per page being optimal\n 6. do not store network request data directly in memory; only store the fields that are needed\n 7. use third-party dependencies cautiously and prefer lightweight ones\n 8. consider placing common code in the global scope to avoid multiple imports\n 9. add a loading state to prevent multiple network requests from being initiated due to frequent button clicks',charsets:{}},{title:"Adaptation Specifications",frontmatter:{},regularPath:"/en/guide/multi-screens/specs.html",relativePath:"en/guide/multi-screens/specs.md",key:"v-627f2808",path:"/en/guide/multi-screens/specs.html",headers:[{level:2,title:"Responsive Layout",slug:"responsive-layout",normalizedTitle:"responsive layout",charIndex:117},{level:2,title:"Responsive Units",slug:"responsive-units",normalizedTitle:"responsive units",charIndex:632},{level:3,title:"px",slug:"px",normalizedTitle:"px",charIndex:739},{level:3,title:"Percentage (%)",slug:"percentage",normalizedTitle:"percentage (%)",charIndex:2e3},{level:2,title:"Fixed Length Units",slug:"fixed-length-units",normalizedTitle:"fixed length units",charIndex:2523},{level:2,title:"Media Queries",slug:"media-queries",normalizedTitle:"media queries",charIndex:4421},{level:2,title:"Obtaining Screen Information",slug:"obtaining-screen-information",normalizedTitle:"obtaining screen information",charIndex:5602}],headersStr:"Responsive Layout Responsive Units px Percentage (%) Fixed Length Units Media Queries Obtaining Screen Information",content:'# Adaptation Specifications\n\nVela OS supports a range of technical capabilities for adapting to various screens.\n\n\n# Responsive Layout\n\nThe container components provided by the system all follow the Flex layout rules by default. Using Flex layout enables responsive screen layouts.\n\nFor example, the following code can achieve an even distribution of multiple inline items.\n\n<div>\n  <text style="flex-grow: 1; background-color:aqua;">1</text>\n  <text style="flex-grow: 1; background-color:yellow;">2</text>\n  <text style="flex-grow: 1; background-color:red;">3</text>\n</div>\n\n\n\n\nFor more details, refer to Flex Layout Examples.\n\n\n# Responsive Units\n\nWhen writing UI styles, you can use the system\'s responsive length units, including:\n\n * px\n * %\n\n\n# px\n\nIn Vela applications, px does not represent the physical pixels of the screen but is a unit relative to the project\'s configured base width, similar in principle to rem.\n\nDevelopers configure the designWidth field in the manifest file to set the design base width (design draft width), and then use this length unit in style descriptions. The numerical values are directly taken from the pixel values in the design draft, and the system will automatically scale the Vela application UI proportionally on different screens.\n\n{\n  "config": {\n    "designWidth": 336\n  }\n}\n\n\n<template>\n  <div class="demo-page">\n    <div class="container"></div>\n  </div>\n</template>\n\n<style>\n.demo-page {\n  justify-content: center;\n  align-items: center;\n}\n.container {\n  width: 168px;\n  height: 168px;\n  background-color: aquamarine;\n}\n</style>\n\n\nIn the example above, if designWidth is configured as 336px, all px values will be calculated based on this base width. Assuming the actual screen width is 336 pixels, the actual width of the container element will also be 168 pixels; if the actual screen width is 192 pixels, the actual width of the container element will be 96 pixels.\n\n336480 screen / 192490 screen\n\n\n\nFor more details, refer to Length Units.\n\n\n# Percentage (%)\n\n% represents a percentage. Many style properties can take percentage values, often used to determine size based on the parent object.\n\nFor example, the following code can achieve multiple inline items occupying the parent container\'s width by percentage.\n\n<div>\n  <text style="width: 20%; background-color:aqua;">1</text>\n  <text style="width: 40%; background-color:yellow;">2</text>\n  <text style="width: 40%; background-color:red;">3</text>\n</div>\n\n\n\n\nFor more details, refer to CSS Percentage Units.\n\n\n# Fixed Length Units\n\nIn some layout scenarios, fixed length units are required, and the system\'s supported dp length unit can meet this need.\n\nThe DP length unit represents device-independent pixels, also known as density-independent pixels. It can be considered as a point in the computer coordinate system, representing a logical pixel that can be used by the program. It is a unit that approximates physical size, with the calculation formula as follows:\n\nDP value of screen width = screen resolution width / DPR\nDP value of element width/height = physical pixel count of element width/height / DPR\n\n\nDPR represents the device pixel ratio, which is the ratio of the device\'s physical pixels to logical pixels (DP), with the calculation formula as follows:\n\nDPR = device PPI / 160\n\n\nPPI (pixels per inch) represents the number of pixels per inch, characterizing the physical density of the screen. Therefore, DPR is also known as logical density. The logical density value (DPR) of the device screen can be obtained through the device interface.\n\nFor example, the following code can achieve elements maintaining approximate physical sizes on screens of different sizes, thus displaying more elements on larger screens.\n\n<template>\n  <div class="container">\n    <div class="text-box">\n      <text style="background-color: aquamarine;">\n        A\n      </text>\n      <text style="background-color: #ff0000;">\n        B\n      </text>\n      <text style="background-color: #00ff00;">\n        C\n      </text>\n      <text style="background-color: #0000ff;">\n        D\n      </text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .container {\n    justify-content: center;\n    align-items: center;\n  }\n  .text-box {\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  text {\n    width:116dp;\n    height: 30dp;\n    font-size: 15dp;\n    text-align: center;\n  }\n</style>\n\n\n466466 screen / 192490 screen\n\n\n\n\n# Media Queries\n\nMedia queries, introduced in CSS3, are used to apply different styles to web pages based on different screen sizes and device types.\n\nIn Vela JS applications, similar media query specifications can be used to write styles for different screens and devices. For detailed information, refer to Media Queries.\n\nFor example, the following code can apply different styles based on the screen shape.\n\nNote: The designWidth in the following example code is 466.\n\n<template>\n  <div class="container">\n    <text>10:30</text>\n    <text>My To-Do</text>\n  </div>\n</template>\n\n<style>\n  /* When the screen is circular */\n  @media screen and (shape: circle) {\n    .container {\n      padding-left: 80px;\n      padding-right: 80px;\n      padding-top: 40px;\n      flex-direction: row;\n      align-items: flex-start;\n      justify-content: space-between;\n    }\n    text {\n      font-size: 40px;\n    }\n  }\n  /* When the screen is pill-shaped */\n  @media screen and (shape: pill-shaped) {\n    .container {\n      padding-top: 50px;\n      flex-direction: column;\n      align-items: center;\n    }\n    text {\n      margin-top: 10px;\n    }\n  }\n</style>\n\n\n466466 screen / 192490 screen\n\n\n\n\n# Obtaining Screen Information\n\nIn Vela JS applications, screen information, including screen shape and resolution, can be obtained through the device feature interface. Based on the obtained results, corresponding style adaptations can be made.\n\nFor example, the following code can determine the type of the progress component (whether it is arc-shaped) based on the screen shape.\n\n<template>\n  <div class="container">\n    <progress percent="80" type="{{progressType}}"></progress>\n  </div>\n</template>\n\n<script>\n  import device from \'@system.device\'\n\n  export default {\n    data: {\n      progressType: "horizontal"\n    },\n    onInit() {\n      const that = this\n      device.getInfo({\n        success: function(ret) {\n          that.progressType = ret.screenShape === "circle" ? "arc" : "horizontal"\n        }\n      })\n    }\n  }\n<\/script>\n\n<style>\n  .container {\n    padding: 20px;\n  }\n</style>\n\n\nCircular screen / Rectangular screen\n\n\n\nFor detailed information, refer to Device Information (device).',normalizedContent:'# adaptation specifications\n\nvela os supports a range of technical capabilities for adapting to various screens.\n\n\n# responsive layout\n\nthe container components provided by the system all follow the flex layout rules by default. using flex layout enables responsive screen layouts.\n\nfor example, the following code can achieve an even distribution of multiple inline items.\n\n<div>\n  <text style="flex-grow: 1; background-color:aqua;">1</text>\n  <text style="flex-grow: 1; background-color:yellow;">2</text>\n  <text style="flex-grow: 1; background-color:red;">3</text>\n</div>\n\n\n\n\nfor more details, refer to flex layout examples.\n\n\n# responsive units\n\nwhen writing ui styles, you can use the system\'s responsive length units, including:\n\n * px\n * %\n\n\n# px\n\nin vela applications, px does not represent the physical pixels of the screen but is a unit relative to the project\'s configured base width, similar in principle to rem.\n\ndevelopers configure the designwidth field in the manifest file to set the design base width (design draft width), and then use this length unit in style descriptions. the numerical values are directly taken from the pixel values in the design draft, and the system will automatically scale the vela application ui proportionally on different screens.\n\n{\n  "config": {\n    "designwidth": 336\n  }\n}\n\n\n<template>\n  <div class="demo-page">\n    <div class="container"></div>\n  </div>\n</template>\n\n<style>\n.demo-page {\n  justify-content: center;\n  align-items: center;\n}\n.container {\n  width: 168px;\n  height: 168px;\n  background-color: aquamarine;\n}\n</style>\n\n\nin the example above, if designwidth is configured as 336px, all px values will be calculated based on this base width. assuming the actual screen width is 336 pixels, the actual width of the container element will also be 168 pixels; if the actual screen width is 192 pixels, the actual width of the container element will be 96 pixels.\n\n336480 screen / 192490 screen\n\n\n\nfor more details, refer to length units.\n\n\n# percentage (%)\n\n% represents a percentage. many style properties can take percentage values, often used to determine size based on the parent object.\n\nfor example, the following code can achieve multiple inline items occupying the parent container\'s width by percentage.\n\n<div>\n  <text style="width: 20%; background-color:aqua;">1</text>\n  <text style="width: 40%; background-color:yellow;">2</text>\n  <text style="width: 40%; background-color:red;">3</text>\n</div>\n\n\n\n\nfor more details, refer to css percentage units.\n\n\n# fixed length units\n\nin some layout scenarios, fixed length units are required, and the system\'s supported dp length unit can meet this need.\n\nthe dp length unit represents device-independent pixels, also known as density-independent pixels. it can be considered as a point in the computer coordinate system, representing a logical pixel that can be used by the program. it is a unit that approximates physical size, with the calculation formula as follows:\n\ndp value of screen width = screen resolution width / dpr\ndp value of element width/height = physical pixel count of element width/height / dpr\n\n\ndpr represents the device pixel ratio, which is the ratio of the device\'s physical pixels to logical pixels (dp), with the calculation formula as follows:\n\ndpr = device ppi / 160\n\n\nppi (pixels per inch) represents the number of pixels per inch, characterizing the physical density of the screen. therefore, dpr is also known as logical density. the logical density value (dpr) of the device screen can be obtained through the device interface.\n\nfor example, the following code can achieve elements maintaining approximate physical sizes on screens of different sizes, thus displaying more elements on larger screens.\n\n<template>\n  <div class="container">\n    <div class="text-box">\n      <text style="background-color: aquamarine;">\n        a\n      </text>\n      <text style="background-color: #ff0000;">\n        b\n      </text>\n      <text style="background-color: #00ff00;">\n        c\n      </text>\n      <text style="background-color: #0000ff;">\n        d\n      </text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .container {\n    justify-content: center;\n    align-items: center;\n  }\n  .text-box {\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  text {\n    width:116dp;\n    height: 30dp;\n    font-size: 15dp;\n    text-align: center;\n  }\n</style>\n\n\n466466 screen / 192490 screen\n\n\n\n\n# media queries\n\nmedia queries, introduced in css3, are used to apply different styles to web pages based on different screen sizes and device types.\n\nin vela js applications, similar media query specifications can be used to write styles for different screens and devices. for detailed information, refer to media queries.\n\nfor example, the following code can apply different styles based on the screen shape.\n\nnote: the designwidth in the following example code is 466.\n\n<template>\n  <div class="container">\n    <text>10:30</text>\n    <text>my to-do</text>\n  </div>\n</template>\n\n<style>\n  /* when the screen is circular */\n  @media screen and (shape: circle) {\n    .container {\n      padding-left: 80px;\n      padding-right: 80px;\n      padding-top: 40px;\n      flex-direction: row;\n      align-items: flex-start;\n      justify-content: space-between;\n    }\n    text {\n      font-size: 40px;\n    }\n  }\n  /* when the screen is pill-shaped */\n  @media screen and (shape: pill-shaped) {\n    .container {\n      padding-top: 50px;\n      flex-direction: column;\n      align-items: center;\n    }\n    text {\n      margin-top: 10px;\n    }\n  }\n</style>\n\n\n466466 screen / 192490 screen\n\n\n\n\n# obtaining screen information\n\nin vela js applications, screen information, including screen shape and resolution, can be obtained through the device feature interface. based on the obtained results, corresponding style adaptations can be made.\n\nfor example, the following code can determine the type of the progress component (whether it is arc-shaped) based on the screen shape.\n\n<template>\n  <div class="container">\n    <progress percent="80" type="{{progresstype}}"></progress>\n  </div>\n</template>\n\n<script>\n  import device from \'@system.device\'\n\n  export default {\n    data: {\n      progresstype: "horizontal"\n    },\n    oninit() {\n      const that = this\n      device.getinfo({\n        success: function(ret) {\n          that.progresstype = ret.screenshape === "circle" ? "arc" : "horizontal"\n        }\n      })\n    }\n  }\n<\/script>\n\n<style>\n  .container {\n    padding: 20px;\n  }\n</style>\n\n\ncircular screen / rectangular screen\n\n\n\nfor detailed information, refer to device information (device).',charsets:{}},{title:"FAQ",frontmatter:{},regularPath:"/en/guide/other/faq.html",relativePath:"en/guide/other/faq.md",key:"v-06bbf686",path:"/en/guide/other/faq.html",headers:[{level:2,title:"How to adapt to screens of different sizes?",slug:"how-to-adapt-to-screens-of-different-sizes",normalizedTitle:"how to adapt to screens of different sizes?",charIndex:10},{level:2,title:"How does the simulator communicate with the watch?",slug:"how-does-the-simulator-communicate-with-the-watch",normalizedTitle:"how does the simulator communicate with the watch?",charIndex:496},{level:2,title:"How to resolve the issue of incorrect signature prompts during communication?",slug:"how-to-resolve-the-issue-of-incorrect-signature-prompts-during-communication",normalizedTitle:"how to resolve the issue of incorrect signature prompts during communication?",charIndex:742},{level:2,title:"How to troubleshoot issues related to communication (interconnect)?",slug:"how-to-troubleshoot-issues-related-to-communication-interconnect",normalizedTitle:"how to troubleshoot issues related to communication (interconnect)?",charIndex:1290},{level:2,title:"How to resolve the issue of flickering when updating list data?",slug:"how-to-resolve-the-issue-of-flickering-when-updating-list-data",normalizedTitle:"how to resolve the issue of flickering when updating list data?",charIndex:1700},{level:2,title:"What are the requirements for the packaging certificate when building a release version of the rpk?",slug:"what-are-the-requirements-for-the-packaging-certificate-when-building-a-release-version-of-the-rpk",normalizedTitle:"what are the requirements for the packaging certificate when building a release version of the rpk?",charIndex:1951},{level:2,title:"How to resolve the issue of obtaining the connection status between the watch and the mobile phone?",slug:"how-to-resolve-the-issue-of-obtaining-the-connection-status-between-the-watch-and-the-mobile-phone",normalizedTitle:"how to resolve the issue of obtaining the connection status between the watch and the mobile phone?",charIndex:2652},{level:2,title:"Which platforms does the simulator support?",slug:"which-platforms-does-the-simulator-support",normalizedTitle:"which platforms does the simulator support?",charIndex:3013},{level:2,title:"Can Windows and Mac package rpk?",slug:"can-windows-and-mac-package-rpk",normalizedTitle:"can windows and mac package rpk?",charIndex:3180},{level:2,title:"How to upload the rpk to the watch real device for running?",slug:"how-to-upload-the-rpk-to-the-watch-real-device-for-running",normalizedTitle:"how to upload the rpk to the watch real device for running?",charIndex:3256},{level:2,title:"How to view logs on the watch real device?",slug:"how-to-view-logs-on-the-watch-real-device",normalizedTitle:"how to view logs on the watch real device?",charIndex:3882}],headersStr:"How to adapt to screens of different sizes? How does the simulator communicate with the watch? How to resolve the issue of incorrect signature prompts during communication? How to troubleshoot issues related to communication (interconnect)? How to resolve the issue of flickering when updating list data? What are the requirements for the packaging certificate when building a release version of the rpk? How to resolve the issue of obtaining the connection status between the watch and the mobile phone? Which platforms does the simulator support? Can Windows and Mac package rpk? How to upload the rpk to the watch real device for running? How to view logs on the watch real device?",content:"# FAQ\n\n\n# How to adapt to screens of different sizes?\n\nThe default screen resolution of the framework is 480480. Vela third-party apps will automatically adapt, and developers can directly develop according to the size of the design draft. For example, if the design draft is 466466, you can configure designWidth: 466 in manifest.json, and then keep the size-related values in the CSS consistent with the design draft. For more detailed information, please refer to: Page Styles and Layout.\n\n\n# How does the simulator communicate with the watch?\n\nFor the simulator to communicate with a mobile phone, an external Bluetooth adapter is required, and the configuration is relatively complex. It is recommended to use real device debugging.\n\n\n# How to resolve the issue of incorrect signature prompts during communication?\n\nBefore the watch and mobile phone communicate, the application's signature is checked. If the signature is incorrect, communication will be rejected. Therefore, when debugging communication, the mobile phone app and the watch rpk need to be packaged using matching certificates. When encountering an incorrect signature error, please check whether the certificate used when exporting the rpk is the same as the certificate used when packaging the mobile phone app.\n\n\n# How to troubleshoot issues related to communication (interconnect)?\n\nFirst, check whether the data structure of the data sent from the watch side is correct (refer to sending data) and the execution status of the callback line number of the send method. Secondly, you can troubleshoot the logs printed on the mobile phone side (using the adb logcat tool) to see the data received by the mobile phone side.\n\n\n# How to resolve the issue of flickering when updating list data?\n\nFor lists rendered through a for loop, if flickering occurs during data updates, you can add a tid to resolve the issue. For detailed documentation, please refer to: Loop Directive.\n\n\n# What are the requirements for the packaging certificate when building a release version of the rpk?\n\n 1. If watch-to-mobile phone communication is involved, the certificate used when packaging the rpk must be consistent with the certificate used when packaging the mobile phone app; otherwise, communication will not be possible.\n 2. If no communication is involved, there are no special requirements for the certificate. It can be generated according to the steps in the documentation.\n\n> Note: Please keep the certificate secure and ensure that the same certificate is used each time to package the release version of the rpk. If the certificate changes, it may not be possible to list the app.\n\n\n# How to resolve the issue of obtaining the connection status between the watch and the mobile phone?\n\nDirectly obtaining the status when entering the page often results in DISCONNECTED. Therefore, polling is required to obtain the status and determine the connection status between the watch and the mobile phone based on the return value of getApkStatus().\n\n\n# Which platforms does the simulator support?\n\nThe simulator supports three platforms: Windows, Mac, and Ubuntu. Windows supports Win10+, and Mac supports macOS12+.\n\n\n# Can Windows and Mac package rpk?\n\nYes, Windows and Mac can package rpk.\n\n\n# How to upload the rpk to the watch real device for running?\n\n 1. Install the Mi Fitness app on your mobile phone (currently provided through business group对接. For Vela third-party app development needs, please contact Chang Jian via email: changjian@xiaomi.com).\n 2. Click on [Mi Fitness] --\x3e [Me] --\x3e [About] --\x3e [Debug].\n 3. Click on [Third-Party Apps].\n 4. Click on [Click to input package name].\n 5. Enter any character (only need the detailed package name when uninstalling).\n 6. Select [Install third app].\n 7. Select the local rpk file for installation.\n 8. A Toast prompt will appear upon successful installation.\n\n\n# How to view logs on the watch real device?\n\n 1. Install the Mi Fitness app on your mobile phone (currently provided through business group对接. For Vela third-party app development needs, please contact Chang Jian via email: changjian@xiaomi.com).\n 2. Synchronize Mi Fitness with the watch.\n 3. Reproduce the issue on the watch.\n 4. Click on [Mi Fitness] --\x3e [Me] --\x3e [About] --\x3e [Debug] --\x3e [Pull firmware logs].\n 5. After successful pulling, the logs are saved on the mobile phone. Log file directory: /sdcard/Android/data/com.mi.health/files/log.",normalizedContent:"# faq\n\n\n# how to adapt to screens of different sizes?\n\nthe default screen resolution of the framework is 480480. vela third-party apps will automatically adapt, and developers can directly develop according to the size of the design draft. for example, if the design draft is 466466, you can configure designwidth: 466 in manifest.json, and then keep the size-related values in the css consistent with the design draft. for more detailed information, please refer to: page styles and layout.\n\n\n# how does the simulator communicate with the watch?\n\nfor the simulator to communicate with a mobile phone, an external bluetooth adapter is required, and the configuration is relatively complex. it is recommended to use real device debugging.\n\n\n# how to resolve the issue of incorrect signature prompts during communication?\n\nbefore the watch and mobile phone communicate, the application's signature is checked. if the signature is incorrect, communication will be rejected. therefore, when debugging communication, the mobile phone app and the watch rpk need to be packaged using matching certificates. when encountering an incorrect signature error, please check whether the certificate used when exporting the rpk is the same as the certificate used when packaging the mobile phone app.\n\n\n# how to troubleshoot issues related to communication (interconnect)?\n\nfirst, check whether the data structure of the data sent from the watch side is correct (refer to sending data) and the execution status of the callback line number of the send method. secondly, you can troubleshoot the logs printed on the mobile phone side (using the adb logcat tool) to see the data received by the mobile phone side.\n\n\n# how to resolve the issue of flickering when updating list data?\n\nfor lists rendered through a for loop, if flickering occurs during data updates, you can add a tid to resolve the issue. for detailed documentation, please refer to: loop directive.\n\n\n# what are the requirements for the packaging certificate when building a release version of the rpk?\n\n 1. if watch-to-mobile phone communication is involved, the certificate used when packaging the rpk must be consistent with the certificate used when packaging the mobile phone app; otherwise, communication will not be possible.\n 2. if no communication is involved, there are no special requirements for the certificate. it can be generated according to the steps in the documentation.\n\n> note: please keep the certificate secure and ensure that the same certificate is used each time to package the release version of the rpk. if the certificate changes, it may not be possible to list the app.\n\n\n# how to resolve the issue of obtaining the connection status between the watch and the mobile phone?\n\ndirectly obtaining the status when entering the page often results in disconnected. therefore, polling is required to obtain the status and determine the connection status between the watch and the mobile phone based on the return value of getapkstatus().\n\n\n# which platforms does the simulator support?\n\nthe simulator supports three platforms: windows, mac, and ubuntu. windows supports win10+, and mac supports macos12+.\n\n\n# can windows and mac package rpk?\n\nyes, windows and mac can package rpk.\n\n\n# how to upload the rpk to the watch real device for running?\n\n 1. install the mi fitness app on your mobile phone (currently provided through business group对接. for vela third-party app development needs, please contact chang jian via email: changjian@xiaomi.com).\n 2. click on [mi fitness] --\x3e [me] --\x3e [about] --\x3e [debug].\n 3. click on [third-party apps].\n 4. click on [click to input package name].\n 5. enter any character (only need the detailed package name when uninstalling).\n 6. select [install third app].\n 7. select the local rpk file for installation.\n 8. a toast prompt will appear upon successful installation.\n\n\n# how to view logs on the watch real device?\n\n 1. install the mi fitness app on your mobile phone (currently provided through business group对接. for vela third-party app development needs, please contact chang jian via email: changjian@xiaomi.com).\n 2. synchronize mi fitness with the watch.\n 3. reproduce the issue on the watch.\n 4. click on [mi fitness] --\x3e [me] --\x3e [about] --\x3e [debug] --\x3e [pull firmware logs].\n 5. after successful pulling, the logs are saved on the mobile phone. log file directory: /sdcard/android/data/com.mi.health/files/log.",charsets:{cjk:!0}},{title:"Quick Start",frontmatter:{},regularPath:"/en/guide/start.html",relativePath:"en/guide/start.md",key:"v-2aa5f770",path:"/en/guide/start.html",headersStr:null,content:"# Quick Start\n\nThis section is mainly suitable for beginners in Vela JS application development. By implementing a simple weather forecast APP, you can get familiar with the process and basics of Vela JS application development.",normalizedContent:"# quick start\n\nthis section is mainly suitable for beginners in vela js application development. by implementing a simple weather forecast app, you can get familiar with the process and basics of vela js application development.",charsets:{}},{title:"Release",frontmatter:{},regularPath:"/en/guide/publish/",relativePath:"en/guide/publish/README.md",key:"v-de750ad6",path:"/en/guide/publish/",headersStr:null,content:"# Release\n\nCurrently, you need to contact the staff member zhangyuanpu@xiaomi.com for collaborative release.",normalizedContent:"# release\n\ncurrently, you need to contact the staff member zhangyuanpu@xiaomi.com for collaborative release.",charsets:{}},{title:"Data Acquisition",frontmatter:{},regularPath:"/en/guide/start/data-fetch.html",relativePath:"en/guide/start/data-fetch.md",key:"v-4cd7ee94",path:"/en/guide/start/data-fetch.html",headers:[{level:2,title:"Requesting API Data",slug:"requesting-api-data",normalizedTitle:"requesting api data",charIndex:263},{level:2,title:"Data Rendering",slug:"data-rendering",normalizedTitle:"data rendering",charIndex:2200}],headersStr:"Requesting API Data Data Rendering",content:'# Data Acquisition\n\nIn the previous chapters, we have implemented the UI of the weather forecast app and added basic interactions. However, the data displayed on the page is not real data. Next, we will request real data from the HeWeather API and render it.\n\n\n# Requesting API Data\n\nNetwork requests require the use of the Data Request fetch module. Please declare it in the manifest.json file before using it.\n\nThe fetch module provides the fetch() method. For detailed usage, please refer to the Vela documentation.\n\nEach page has its own lifecycle. You can send requests in the onReady method. The code is as follows:\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      // ...\n    },\n\n    onReady() {\n      let key = \'<your key>\';\n      // location, using Wuhan\'s code here\n      // For more location codes, refer to: https://github.com/qwd/LocationList\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101010100&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'Returned data:\', JSON.stringify(result.data, null, 2));\n      }).catch(error => {\n        console.log(`Data request failed:`, error);\n      })\n    },\n\n    // ...\n  }\n<\/script>\n\n\n> Before using, please apply for a key on the HeWeather development platform and replace the key in the above code.\n\nAfter adding the above code and replacing it with a valid key, run the app. You should see logs similar to the following in the console, indicating that the request was successful.\n\nReturned data: {\n  "code": "200",\n  "updateTime": "2022-01-04T10:07+08:00",\n  "fxLink": "http://hfx.link/2ax1",\n  "now": {\n    "obsTime": "2022-01-04T09:54+08:00",\n    "temp": "-1",\n    "feelsLike": "-4",\n    "icon": "100",\n    "text": "Sunny",\n    "wind360": "45",\n    "windDir": "Northeast",\n    "windScale": "2",\n    "windSpeed": "7",\n    "humidity": "55",\n    "precip": "0.0",\n    "pressure": "1029",\n    "vis": "15",\n    "cloud": "10",\n    "dew": "-17"\n  },\n  "refer": {\n    "sources": [\n      "QWeather",\n      "NMC",\n      "ECMWF"\n    ],\n    "license": [\n      "no commercial use"\n    ]\n  }\n}\n\n\n\n# Data Rendering\n\nAfter requesting data from the backend, you need to display it on the page. To display the data, simply update the corresponding data in the page data object:\n\nthis.weather = result.data.now;\n\n\nHere is the complete JavaScript code for the final page:\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      city: \'Wuhan\',\n      province: \'Hubei\',\n      country: \'China\',\n      weather: {\n        obsTime: "12-21 09:05",\n        temp: "13",\n        feelsLike: "10",\n        icon: "101",\n        text: "Cloudy",\n        humidity: "72",\n        vis: "16"\n      }\n    },\n\n    onReady() {\n      let key = \'<your key>\';\n      // location, using Wuhan\'s code here\n      // For more location codes, refer to: https://github.com/qwd/LocationList\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101200101&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'Returned data:\', JSON.stringify(result.data, null, 2));\n        this.weather = result.data.now;\n      }).catch(error => {\n        console.log(`Data request failed:`, error);\n      })\n    },\n\n    toListPage(eve) {\n      console.log(eve);\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\nPage running result:\n\n\n\nThe data request for the 3-day weather forecast interface is the same as the real-time weather page, so it will not be repeated here.\n\nIn real projects, you need to handle more page details, such as adding a loading state when the page requests data, formatting dates accordingly, etc.\n\nTo provide a good user experience, please strictly follow the design draft to write the page structure and styles, and handle various exceptions appropriately.',normalizedContent:'# data acquisition\n\nin the previous chapters, we have implemented the ui of the weather forecast app and added basic interactions. however, the data displayed on the page is not real data. next, we will request real data from the heweather api and render it.\n\n\n# requesting api data\n\nnetwork requests require the use of the data request fetch module. please declare it in the manifest.json file before using it.\n\nthe fetch module provides the fetch() method. for detailed usage, please refer to the vela documentation.\n\neach page has its own lifecycle. you can send requests in the onready method. the code is as follows:\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      // ...\n    },\n\n    onready() {\n      let key = \'<your key>\';\n      // location, using wuhan\'s code here\n      // for more location codes, refer to: https://github.com/qwd/locationlist\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101010100&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'returned data:\', json.stringify(result.data, null, 2));\n      }).catch(error => {\n        console.log(`data request failed:`, error);\n      })\n    },\n\n    // ...\n  }\n<\/script>\n\n\n> before using, please apply for a key on the heweather development platform and replace the key in the above code.\n\nafter adding the above code and replacing it with a valid key, run the app. you should see logs similar to the following in the console, indicating that the request was successful.\n\nreturned data: {\n  "code": "200",\n  "updatetime": "2022-01-04t10:07+08:00",\n  "fxlink": "http://hfx.link/2ax1",\n  "now": {\n    "obstime": "2022-01-04t09:54+08:00",\n    "temp": "-1",\n    "feelslike": "-4",\n    "icon": "100",\n    "text": "sunny",\n    "wind360": "45",\n    "winddir": "northeast",\n    "windscale": "2",\n    "windspeed": "7",\n    "humidity": "55",\n    "precip": "0.0",\n    "pressure": "1029",\n    "vis": "15",\n    "cloud": "10",\n    "dew": "-17"\n  },\n  "refer": {\n    "sources": [\n      "qweather",\n      "nmc",\n      "ecmwf"\n    ],\n    "license": [\n      "no commercial use"\n    ]\n  }\n}\n\n\n\n# data rendering\n\nafter requesting data from the backend, you need to display it on the page. to display the data, simply update the corresponding data in the page data object:\n\nthis.weather = result.data.now;\n\n\nhere is the complete javascript code for the final page:\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      city: \'wuhan\',\n      province: \'hubei\',\n      country: \'china\',\n      weather: {\n        obstime: "12-21 09:05",\n        temp: "13",\n        feelslike: "10",\n        icon: "101",\n        text: "cloudy",\n        humidity: "72",\n        vis: "16"\n      }\n    },\n\n    onready() {\n      let key = \'<your key>\';\n      // location, using wuhan\'s code here\n      // for more location codes, refer to: https://github.com/qwd/locationlist\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101200101&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'returned data:\', json.stringify(result.data, null, 2));\n        this.weather = result.data.now;\n      }).catch(error => {\n        console.log(`data request failed:`, error);\n      })\n    },\n\n    tolistpage(eve) {\n      console.log(eve);\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\npage running result:\n\n\n\nthe data request for the 3-day weather forecast interface is the same as the real-time weather page, so it will not be repeated here.\n\nin real projects, you need to handle more page details, such as adding a loading state when the page requests data, formatting dates accordingly, etc.\n\nto provide a good user experience, please strictly follow the design draft to write the page structure and styles, and handle various exceptions appropriately.',charsets:{}},{title:"Project Structure",frontmatter:{},regularPath:"/en/guide/start/project-overview.html",relativePath:"en/guide/start/project-overview.md",key:"v-72a35ab6",path:"/en/guide/start/project-overview.html",headers:[{level:2,title:"Directory Structure",slug:"directory-structure",normalizedTitle:"directory structure",charIndex:157},{level:2,title:"Configuration File",slug:"configuration-file",normalizedTitle:"configuration file",charIndex:675},{level:2,title:"ux Template",slug:"ux-template",normalizedTitle:"ux template",charIndex:1008},{level:2,title:"app.ux",slug:"app-ux",normalizedTitle:"app.ux",charIndex:449},{level:2,title:"common",slug:"common",normalizedTitle:"common",charIndex:611},{level:2,title:"i18n",slug:"i18n",normalizedTitle:"i18n",charIndex:542}],headersStr:"Directory Structure Configuration File ux Template app.ux common i18n",content:'# Project Structure\n\nThis chapter explains the role of each part in a Vela JS application project based on the project initialized in Environment Setup.\n\n\n# Directory Structure\n\nA Vela JS application project consists of configuration files (manifest.json), template code (ux files), style code (css files), logic code (js files), and resource files (images, audio, etc.).\n\nA typical project directory structure is as follows:\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-CN.json\n|   └── en-US.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# Configuration File\n\nThe manifest.json file in the project root directory is the configuration file for the project. Information such as application information, system interfaces used, and page routes need to be declared in this configuration file.\n\nFor detailed configuration field descriptions, refer to Project Configuration.\n\n\n# ux Template\n\nA page usually consists of three parts: page structure, style, and logic interaction. These three parts can be placed in a single ux file or as separate files.\n\nIf placed in a single ux file, the ux file needs to include three tags: template, style, and script.\n\nExample:\n\n<template>\n  <div class="page">\n    <text class="title">Welcome to {{title}}</text>\n    <input class="btn" type="button" value="Jump to detail page" onclick="routeDetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // Page data object\n    private: {\n      title: \'Example Page\'\n    },\n    // Callback after button click\n    routeDetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\nIf the page structure, style, and logic interaction are separated into independent files, the following directory structure can be used:\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\nNote\n\nIf separated into independent files (ux/css/js), the ux file cannot contain the template tag.\n\n\n# app.ux\n\napp.ux is used to define the App\'s lifecycle, global data, or global methods.\n\nFor detailed usage methods, refer to app.ux.\n\n\n# common\n\nThe common folder is mainly used to store public resources such as images, audio, and public styles.\n\n\n# i18n\n\nThe i18n folder is used to store multilingual configuration files.',normalizedContent:'# project structure\n\nthis chapter explains the role of each part in a vela js application project based on the project initialized in environment setup.\n\n\n# directory structure\n\na vela js application project consists of configuration files (manifest.json), template code (ux files), style code (css files), logic code (js files), and resource files (images, audio, etc.).\n\na typical project directory structure is as follows:\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-cn.json\n|   └── en-us.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# configuration file\n\nthe manifest.json file in the project root directory is the configuration file for the project. information such as application information, system interfaces used, and page routes need to be declared in this configuration file.\n\nfor detailed configuration field descriptions, refer to project configuration.\n\n\n# ux template\n\na page usually consists of three parts: page structure, style, and logic interaction. these three parts can be placed in a single ux file or as separate files.\n\nif placed in a single ux file, the ux file needs to include three tags: template, style, and script.\n\nexample:\n\n<template>\n  <div class="page">\n    <text class="title">welcome to {{title}}</text>\n    <input class="btn" type="button" value="jump to detail page" onclick="routedetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // page data object\n    private: {\n      title: \'example page\'\n    },\n    // callback after button click\n    routedetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\nif the page structure, style, and logic interaction are separated into independent files, the following directory structure can be used:\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\nnote\n\nif separated into independent files (ux/css/js), the ux file cannot contain the template tag.\n\n\n# app.ux\n\napp.ux is used to define the app\'s lifecycle, global data, or global methods.\n\nfor detailed usage methods, refer to app.ux.\n\n\n# common\n\nthe common folder is mainly used to store public resources such as images, audio, and public styles.\n\n\n# i18n\n\nthe i18n folder is used to store multilingual configuration files.',charsets:{cjk:!0}},{title:"Adding Interaction",frontmatter:{},regularPath:"/en/guide/start/add-interactivity.html",relativePath:"en/guide/start/add-interactivity.md",key:"v-2c543360",path:"/en/guide/start/add-interactivity.html",headers:[{level:2,title:"Registering Events",slug:"registering-events",normalizedTitle:"registering events",charIndex:210},{level:2,title:"Page Jump",slug:"page-jump",normalizedTitle:"page jump",charIndex:1106}],headersStr:"Registering Events Page Jump",content:'# Adding Interaction\n\nIn the previous chapter, we have already written the structure and style of two pages, but there is no connection between the two pages. In this chapter, we will implement page jumps.\n\n\n# Registering Events\n\nPage jumps are triggered by users and require adding corresponding events to specific elements on the page, such as click/touchstart. For more details about events, please refer to General Events.\n\nIn this weather forecast app, the interaction we use is swiping to switch pages:\n\n 1. On the real-time weather page, swipe up to enter the 3-day weather forecast page;\n 2. On the 3-day weather forecast page, swipe right to return to the real-time weather page.\n\nWe want the swipe action to perform the jump no matter where it occurs on the page, so we register the swipe event (swipe) on the root node.\n\nThe template code is as follows:\n\n<template>\n  <div class="page column" @swipe="toListPage">\n    \x3c!-- Other content of the page --\x3e\n  </div>\n</template>\n\n\nNote\n\n@swipe="toListPage" can also be written as onswipe="toListPage". For details, please refer to Event Binding.\n\n\n# Page Jump\n\nAfter registering the event, we need to define the toListPage() callback method in the JavaScript code. By judging the swipe direction, we decide whether to perform a page jump. Page jumps require the use of the @system.router module. Please declare it in manifest.json before using it:\n\n{\n  // ...\n  "features": [\n    { "name": "system.router" }\n  ]\n}\n\n\nNote\n\nFor more details about router, please refer to Page Switching.\n\nAfter declaring the module, you can import it in the JavaScript script and then use the API provided by router to jump between pages:\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    toListPage(eve) {\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\nSimilarly, on the 3-day weather forecast page, use the same method to implement the page return logic. The corresponding code is:\n\n<template>\n  <div class="page column" @swipe="toHomePage">\n    \x3c!-- Other content of the page --\x3e\n  </div>\n</template>\n\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    toHomePage(eve) {\n      if (eve.direction === \'right\') {\n        router.back()\n      }\n    }\n  }\n<\/script>\n',normalizedContent:'# adding interaction\n\nin the previous chapter, we have already written the structure and style of two pages, but there is no connection between the two pages. in this chapter, we will implement page jumps.\n\n\n# registering events\n\npage jumps are triggered by users and require adding corresponding events to specific elements on the page, such as click/touchstart. for more details about events, please refer to general events.\n\nin this weather forecast app, the interaction we use is swiping to switch pages:\n\n 1. on the real-time weather page, swipe up to enter the 3-day weather forecast page;\n 2. on the 3-day weather forecast page, swipe right to return to the real-time weather page.\n\nwe want the swipe action to perform the jump no matter where it occurs on the page, so we register the swipe event (swipe) on the root node.\n\nthe template code is as follows:\n\n<template>\n  <div class="page column" @swipe="tolistpage">\n    \x3c!-- other content of the page --\x3e\n  </div>\n</template>\n\n\nnote\n\n@swipe="tolistpage" can also be written as onswipe="tolistpage". for details, please refer to event binding.\n\n\n# page jump\n\nafter registering the event, we need to define the tolistpage() callback method in the javascript code. by judging the swipe direction, we decide whether to perform a page jump. page jumps require the use of the @system.router module. please declare it in manifest.json before using it:\n\n{\n  // ...\n  "features": [\n    { "name": "system.router" }\n  ]\n}\n\n\nnote\n\nfor more details about router, please refer to page switching.\n\nafter declaring the module, you can import it in the javascript script and then use the api provided by router to jump between pages:\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    tolistpage(eve) {\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\nsimilarly, on the 3-day weather forecast page, use the same method to implement the page return logic. the corresponding code is:\n\n<template>\n  <div class="page column" @swipe="tohomepage">\n    \x3c!-- other content of the page --\x3e\n  </div>\n</template>\n\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    tohomepage(eve) {\n      if (eve.direction === \'right\') {\n        router.back()\n      }\n    }\n  }\n<\/script>\n',charsets:{}},{title:"Build Parameters",frontmatter:{},regularPath:"/en/guide/start/toolkit-params.html",relativePath:"en/guide/start/toolkit-params.md",key:"v-18e80676",path:"/en/guide/start/toolkit-params.html",headers:[{level:2,title:"How to Set Build Parameters",slug:"how-to-set-build-parameters",normalizedTitle:"how to set build parameters",charIndex:231},{level:2,title:"View All Supported Build Parameters",slug:"view-all-supported-build-parameters",normalizedTitle:"view all supported build parameters",charIndex:652},{level:2,title:"Common Build Parameters",slug:"common-build-parameters",normalizedTitle:"common build parameters",charIndex:713}],headersStr:"How to Set Build Parameters View All Supported Build Parameters Common Build Parameters",content:'# Build Parameters\n\nThe build tool offers various build capabilities that developers can configure based on project requirements. Please note that build parameters are only available in the build, server, and release commands.\n\n\n# How to Set Build Parameters\n\nThere are typically two ways to set build parameters, taking the extraction of a separate source-map file as an example:\n\n * Include build parameters in the command line\n\naiot build --devtool=source-map\n\n\n * Create a configuration file named quickapp.config.js in the project root directory and configure the cli property;\n\nmodule.exports = {\n  cli: {\n    devtool: "source-map",\n  },\n};\n\n\n\n# View All Supported Build Parameters\n\n npx aiot build -h\n\n\n\n# Common Build Parameters\n\nPARAMETER NAME              VALUE TYPE   DESCRIPTION                                                    DEFAULT\n--devtool                   string       The output format of the sourcemap. For parameter values and   none\n                                         their meanings, refer to webpack/devtool\n                                         Example: aiot server --devtool=source-map\n--enable-jsc                boolean      Whether to convert js files to jsc files to improve runtime    false\n                                         performance\n                                         Example: aiot server --enable-jsc\n--enable-protobuf           boolean      Whether to enable protobuf binary packaging to improve         false\n                                         runtime performance\n                                         Example: aiot server --enable-protobuf\n--enable-custom-component   boolean      Whether to support custom components                           false\n                                         Example: aiot server --enable-custom-component',normalizedContent:'# build parameters\n\nthe build tool offers various build capabilities that developers can configure based on project requirements. please note that build parameters are only available in the build, server, and release commands.\n\n\n# how to set build parameters\n\nthere are typically two ways to set build parameters, taking the extraction of a separate source-map file as an example:\n\n * include build parameters in the command line\n\naiot build --devtool=source-map\n\n\n * create a configuration file named quickapp.config.js in the project root directory and configure the cli property;\n\nmodule.exports = {\n  cli: {\n    devtool: "source-map",\n  },\n};\n\n\n\n# view all supported build parameters\n\n npx aiot build -h\n\n\n\n# common build parameters\n\nparameter name              value type   description                                                    default\n--devtool                   string       the output format of the sourcemap. for parameter values and   none\n                                         their meanings, refer to webpack/devtool\n                                         example: aiot server --devtool=source-map\n--enable-jsc                boolean      whether to convert js files to jsc files to improve runtime    false\n                                         performance\n                                         example: aiot server --enable-jsc\n--enable-protobuf           boolean      whether to enable protobuf binary packaging to improve         false\n                                         runtime performance\n                                         example: aiot server --enable-protobuf\n--enable-custom-component   boolean      whether to support custom components                           false\n                                         example: aiot server --enable-custom-component',charsets:{}},{title:"Acceptance Criteria",frontmatter:{},regularPath:"/en/guide/publish/acceptance-criteria.html",relativePath:"en/guide/publish/acceptance-criteria.md",key:"v-6658530a",path:"/en/guide/publish/acceptance-criteria.html",headersStr:null,content:"# Acceptance Criteria\n\nTo continuously enhance the user experience of Vela Quick Apps, we are officially incorporating startup performance into the quality acceptance criteria: the First Meaningful Paint (FMP) time for the Quick App's home page should be ≤2000ms. We have also compiled a set of best practices for Quick Apps, including startup acceleration solutions and resource loading strategies. Developers can refer to: Best Practices for targeted optimization.",normalizedContent:"# acceptance criteria\n\nto continuously enhance the user experience of vela quick apps, we are officially incorporating startup performance into the quality acceptance criteria: the first meaningful paint (fmp) time for the quick app's home page should be ≤2000ms. we have also compiled a set of best practices for quick apps, including startup acceleration solutions and resource loading strategies. developers can refer to: best practices for targeted optimization.",charsets:{}},{title:"Write Page UI",frontmatter:{},regularPath:"/en/guide/start/user-interface.html",relativePath:"en/guide/start/user-interface.md",key:"v-0932ee36",path:"/en/guide/start/user-interface.html",headers:[{level:2,title:"Functional Requirements",slug:"functional-requirements",normalizedTitle:"functional requirements",charIndex:1434},{level:2,title:"Preparation",slug:"preparation",normalizedTitle:"preparation",charIndex:1910},{level:2,title:"Page Structure",slug:"page-structure",normalizedTitle:"page structure",charIndex:2502},{level:3,title:"Real-time Weather",slug:"real-time-weather",normalizedTitle:"real-time weather",charIndex:1533},{level:3,title:"3-Day Weather Forecast",slug:"_3-day-weather-forecast",normalizedTitle:"3-day weather forecast",charIndex:1555},{level:2,title:"Page Styling",slug:"page-styling",normalizedTitle:"page styling",charIndex:6865},{level:3,title:"Common Styling",slug:"common-styling",normalizedTitle:"common styling",charIndex:7717},{level:3,title:"page",slug:"page",normalizedTitle:"page",charIndex:293},{level:3,title:"Header Information",slug:"header-information",normalizedTitle:"header information",charIndex:9322},{level:3,title:"Real-time Weather",slug:"real-time-weather-2",normalizedTitle:"real-time weather",charIndex:1533},{level:3,title:"3-Day Weather Forecast",slug:"_3-day-weather-forecast-2",normalizedTitle:"3-day weather forecast",charIndex:1555},{level:3,title:"Footer Information",slug:"footer-information",normalizedTitle:"footer information",charIndex:13528},{level:2,title:"Page Effect",slug:"page-effect",normalizedTitle:"page effect",charIndex:13895},{level:2,title:"Page Data",slug:"page-data",normalizedTitle:"page data",charIndex:14023},{level:2,title:"List Rendering",slug:"list-rendering",normalizedTitle:"list rendering",charIndex:16707},{level:3,title:"Conditional Rendering",slug:"conditional-rendering",normalizedTitle:"conditional rendering",charIndex:17826}],headersStr:"Functional Requirements Preparation Page Structure Real-time Weather 3-Day Weather Forecast Page Styling Common Styling page Header Information Real-time Weather 3-Day Weather Forecast Footer Information Page Effect Page Data List Rendering Conditional Rendering",content:'# Write Page UI\n\nIn the previous section Project Structure, we introduced the roles of files and directories in a Vela JS application project. After gaining a certain understanding of the project structure, we will now implement a simple weather forecast app.\n\nThis chapter will implement the page UI of the app, with the main content being: the basic structure of the page, styling, data structure definition, and data rendering.\n\nRestyling according to the UI design draft is a detailed and time-consuming task. To improve work efficiency, it is generally recommended to first conceive the overall implementation approach of the page (page structure, styling, and interactions, etc.), then write the page structure, followed by uniformly adding styling, and finally adding data rendering and interactions.\n\nIn this usage guide, to facilitate the demonstration of page structure, styling, and interaction development in Vela JS applications, the above development process is adopted. In actual development, developers can also choose a workflow that suits their own development habits.\n\nTIP\n\nThis section contains a relatively large number of code snippets. If you are already familiar with HTML/CSS/JavaScript, you can choose to skip this section. However, we still recommend that you read the content of this chapter to understand some differences between Vela JS application development and traditional front-end development.\n\n\n# Functional Requirements\n\nThe weather forecast app we are going to implement consists of two pages: Real-time Weather and 3-Day Weather Forecast. The real-time weather interface displays the current weather conditions, mainly including information such as weather, temperature, humidity, and visibility. The 3-day weather forecast page is used to display the weather conditions for the next three days.\n\nThe final effect to be achieved is shown in the following figures:\n\n\n\n\n# Preparation\n\nThis app uses the QWeather API to obtain weather data, and icons use the QWeather Icons.\n\nThe weather app in this usage guide is only for demonstrating Vela JS application development techniques. If you need to use related interfaces and resources in actual projects, please register and activate the interfaces on the QWeather developer platform. Detailed information can be viewed on the official website:\n\n * QWeather Developer Platform: https://dev.qweather.com/\n * QWeather Icons: https://icons.qweather.com/\n * Icon Download Address: https://github.com/qwd/WeatherIcon\n\n\n# Page Structure\n\nIn the Project Structure chapter, we introduced that a page (ux file) consists of three parts: template, style, and script. Next, we will write the template (template) code for these two pages respectively.\n\nVery similar to HTML, Vela\'s page template is also composed of tags and attributes, and the syntax is mostly consistent with HTML. The difference is that Vela has its own set of built-in components, which are not exactly the same as those supported by HTML.\n\nIn the following code, we use the div, text, and image components. For detailed usage methods of components, you can refer to the Vela Official Documentation - Components.\n\n\n# Real-time Weather\n\nThe real-time weather page can be divided into three parts from top to bottom: header, body, and footer. The code is as follows.\n\n<template>\n  <div class="page">\n    \x3c!-- Header city information --\x3e\n    <div class="header"></div>\n    <div class="body">\n      \x3c!-- Main weather information --\x3e\n      <div class="info"></div>\n      \x3c!-- Perceived temperature and other information --\x3e\n      <div class="more-info"></div>\n    </div>\n    \x3c!-- Footer update time --\x3e\n    <div class="footer"></div>\n  </div>\n</template>\n\n\nWarm Tip\n\nThe template can only have one root node.\n\nThe header information, including city, province, and country information, has a relatively simple structure. The code is as follows:\n\n\x3c!-- Header city information --\x3e\n<div class="header">\n  <text class="city">Wuhan</text>\n  <text class="province">Hubei/China</text>\n</div>\n\n\nWarm Tip\n\nText must be placed in the text component; otherwise, the text will not be displayed on the interface.\n\nThe weather information section is slightly more complex than the header. It can be generally divided into two columns, with the right column further divided into two rows. The code is as follows:\n\n\x3c!-- Main weather information --\x3e\n<div class="info">\n  <image class="icon" src="/common/icons/101.png"></image>\n  <div class="column center">\n    <text class="temp">6°</text>\n    <text class="weather">Clear to Cloudy</text>\n  </div>\n</div>\n\n\nNext, we implement the module for perceived temperature and other information. It can be generally divided into three columns, with each column further divided into two rows. The code is as follows:\n\n\x3c!-- Perceived temperature and other information --\x3e\n<div class="more-info row">\n  <div class="item column center">\n    <text class="value">10°</text>\n    <text class="label">Perceived Temperature</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">67</text><text class="sub">%</text></div>\n    <text class="label">Humidity</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">5</text><text class="sub">km</text></div>\n    <text class="label">Visibility</text>\n  </div>\n</div>\n</div>\n\n\nFinally, the footer update time module has a relatively simple structure. The code is as follows:\n\n\x3c!-- Footer update time --\x3e\n<div class="footer center">\n  <text class="update-time">Data updated on 12-20 09:15</text>\n</div>\n\n\n\n# 3-Day Weather Forecast\n\nThe structure of this page is the same as that of the real-time weather page, also divided into three parts from top to bottom, and the content of the header and footer is the same, so it will not be repeated here.\n\nNext, we mainly look at the implementation of the middle part, which mainly includes the 3-Day Weather Overview and the Weather List.\n\nThe weather overview is divided into two rows. The code is as follows:\n\n\x3c!-- Weather Overview --\x3e\n<div class="info">\n  <text class="title">3-Day Forecast</text>\n  <text class="summary">High 8° Low -6°</text>\n</div>\n\n\nThe weather list is slightly more complex. First, it can be generally divided into three columns, with each column further divided into three rows. The code is as follows:\n\n\x3c!-- 3-Day Weather --\x3e\n<div class="list">\n  <div class="item">\n    <text class="date">Sunday</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item">\n    <text class="date">Monday</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item">\n    <text class="date">Tuesday</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\n\n# Page Styling\n\nVela supports commonly used CSS features, with a small amount of expansion and modification. It by default supports adaptation to different screen sizes. Detailed attribute support can be queried in the Attribute List.\n\nVela JS applications use the flex layout, which can conveniently implement commonly used layout styles. For technical details of the flex layout, you can refer to the MDN Documentation.\n\nCurrently, only class selectors, ID selectors, grouping selectors (,), and tag selectors are supported. Descendant selectors, attribute selectors, universal selectors (*), sibling selectors (+), direct parent-child selectors (>), pseudo-classes, and inheritance are not supported.\n\nSo far, we have completed the coding of the page structure, but no styling has been set yet. Next, we will implement the styling of each module.\n\n\n# Common Styling\n\nBefore writing the styling code, we can first extract some basic common styling, such as arrangement methods, colors, and alignment methods.\n\nIn our project, we mainly use horizontal and vertical arrangements, centering, etc. In terms of colors, the main color is white, so we can set the default color of the text to white.\n\nThe extracted basic styling is as follows:\n\n/* Common styling */\ntext {\n  color: #ffffff;\n}\n\n.column {\n  flex-direction: column;\n}\n\n.row {\n  flex-direction: row;\n}\n\n.center {\n  align-items: center;\n  justify-content: center;\n}\n\n\n\n# page\n\nTo solve the screen adaptation problem, all styles related to size (such as width and font-size) are scaled based on a reference width (default 480px) according to the actual screen width. For example, width:100px on a 960px width screen is actually 200px.\n\nOur design draft is designed with a width of 480px, so the dimensions in the design draft can be directly used in the styling. For example, in the following figure, the overall width is 480, and the dimensions of the module for perceived temperature and other information are 335*100, so the CSS code is:\n\n.info {\n  width: 335px;\n  height: 100px; \n}\n\n\n\n\nFor the overall page, we first set the page background to black, the shape to circular, and the page width.\n\n.page {\n  padding: 40px;\n  background-color: #000000;\n  width: 480px;\n  border-radius: 240px;\n}\n\n\nNote\n\nIf the reference width of the design draft is not 480, it can be configured in the manifest.json file through the config.designWidth field:\n\n{\n  // ...\n  "config": {\n    "designWidth": 360\n  }\n}\n\n\n\n# Header Information\n\nThe header information is arranged vertically and centered, using the previously extracted common styling: column and center. Then, add styling to the text to control the font size and color.\n\nThe modified template code is as follows:\n\n\x3c!-- Header city information --\x3e\n<div class="header column center">\n  <text class="city">Wuhan</text>\n  <text class="province">Hubei/China</text>\n</div>\n\n\nThe CSS code is as follows:\n\n/* Header styling */\n.city {\n  font-size: 40px;\n}\n\n.province {\n  font-size: 18px;\n  color: #757575;\n}\n\n\nActual running result:\n\n\n\n# Real-time Weather\n\nSimilar to the header information, first add the basic styling column, row, and center to achieve the basic layout. Then, write targeted CSS code for each text component to achieve styling such as text color and size.\n\nThe completed template code is as follows:\n\n<div class="body column center">\n  \x3c!-- Main weather information --\x3e\n  <div class="info">\n    <image class="icon" src="/common/icons/101.png"></image>\n    <div class="column center">\n      <text class="temp">6°</text>\n      <text class="weather">Clear to Cloudy</text>\n    </div>\n  </div>\n  \x3c!-- Perceived temperature and other information --\x3e\n  <div class="more-info row">\n    <div class="item column center">\n      <text class="value">10°</text>\n      <text class="label">Perceived Temperature</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">67</text><text class="sub">%</text></div>\n      <text class="label">Humidity</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">5</text><text class="sub">km</text></div>\n      <text class="label">Visibility</text>\n    </div>\n  </div>\n</div>\n\n\nFor the module of perceived temperature and other information, first arrange it horizontally (flex-direction: row), and then set flex: 1 for each item to achieve the effect of equal width for each item.\n\nSpecifically, inside each item, just set the color and size of each text field respectively.\n\nThe CSS code is as follows:\n\n/* Weather data styling */\n.body {\n  flex: 1;\n}\n\n.temp {\n  font-size: 70px;\n}\n\n.icon {\n  width: 170px;\n  height: 170px;\n  margin-right: 20px;\n}\n\n.weather {\n  font-size: 24px;\n}\n\n/* More information styling */\n.more-info {\n  width: 335px;\n  height: 100px;\n  background-color: rgba(255, 255, 255, 0.21);\n  border-radius: 15px;\n}\n\n.item {\n  flex: 1;\n}\n\n.value {\n  font-size: 30px;\n}\n\n.sub {\n  font-size: 14px;\n  margin-top: 10px;\n}\n\n.label {\n  color: #757575;\n  margin-top: 5px;\n}\n\n\nActual running result:\n\n\n\n# 3-Day Weather Forecast\n\nThe styling of the weather overview information module is relatively simple, just arrange it vertically.\n\nSimilar to the module of perceived temperature and other information, the 3-day weather list also uses horizontal arrangement. The difference is that each item has a background color and spacing between them, so fixed dimensions are set for each item, and then the spacing between each item is allocated (justify-content: space-between) according to the remaining space.\n\nThe modified template code is as follows:\n\n\x3c!-- 3-Day Weather --\x3e\n<div class="list row">\n  <div class="item column center">\n    <text class="date">Sunday</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">Monday</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">Tuesday</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\nThe CSS code is as follows:\n\n/* Weather data styling */\n.body {\n  flex: 1;\n}\n\n.info {\n  margin-bottom: 20px;\n}\n\n.title {\n  font-size: 30px;\n}\n\n.summary {\n  font-size: 24px;\n  color: #757575;\n}\n\n/* 3-Day Weather */\n.list {\n  width: 380px;\n  justify-content: space-between;\n}\n\n.item {\n  width: 120px;\n  height: 175px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 15px;\n}\n\n.date {\n  font-size: 28px;\n}\n\n.icon {\n  width: 90px;\n  height: 90px;\n}\n\n.temp {\n  font-size: 24px;\n}\n\n\nActual running result:\n\n\n\n# Footer Information\n\nThe final template code for the footer information is as follows:\n\n\x3c!-- Footer update time --\x3e\n<div class="footer center">\n  <text class="update-time">Data updated on 12-20 09:15</text>\n</div>\n\n\nThe CSS code is as follows:\n\n/* Footer styling */\n.footer {\n  margin-top: 20px;    \n}\n\n.update-time {\n  color: #757575;\n}\n\n\nActual running result:\n\n\n\n# Page Effect\n\nAfter completing the page structure and styling, the actual running results in the simulator are as follows:\n\n\n\n\n# Page Data\n\nWe have implemented the rendering of page data, but currently, all the data is directly written into the template code and cannot be dynamically modified in the program.\n\nIf you need to dynamically modify the data displayed on the interface in the program, you need to store the data in the Page Data Object and then use the double curly brace syntax to reference the data, such as {{ name }}. Detailed usage methods can be referred to in the Template Syntax.\n\nData definition needs to be implemented through JavaScript scripts. Like HTML, JavaScript code needs to be placed in the script tag:\n\n<script>\n  export default {\n    private: {\n      city: \'Wuhan\',\n      province: \'Hubei\',\n      country: \'China\',\n      weather: {\n        // Data observation time\n        obsTime: "12-21 09:05",\n        // Temperature\n        temp: "13",\n        // Perceived temperature\n        feelsLike: "10",\n        // Weather icon number\n        icon: "101",\n        // Weather description text\n        text: "Cloudy",\n        // Relative humidity\n        humidity: "72",\n        // Visibility, unit: km\n        vis: "16"\n      }\n    }\n  }\n<\/script>\n\n\nAfter defining the data, replace the previous template code. The replaced code is as follows:\n\n<template>\n  <div class="page column">\n    \x3c!-- Header city information --\x3e\n    <div class="header column center">\n      <text class="city">{{city}}</text>\n      <text class="province">{{province}}/{{country}}</text>\n    </div>\n    <div class="body column center">\n      \x3c!-- Main weather information --\x3e\n      <div class="info">\n        <image class="icon" src="/common/icons/{{weather.icon}}.png"></image>\n        <div class="column center">\n          <text class="temp">{{weather.temp}}°</text>\n          <text class="weather">{{weather.text}}</text>\n        </div>\n      </div>\n      \x3c!-- Perceived temperature and other information --\x3e\n      <div class="more-info row">\n        <div class="item column center">\n          <text class="value">{{weather.feelsLike}}°</text>\n          <text class="label">Perceived Temperature</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.humidity}}</text><text class="sub">%</text></div>\n          <text class="label">Humidity</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.vis}}</text><text class="sub">km</text></div>\n          <text class="label">Visibility</text>\n        </div>\n      </div>\n    </div>\n    \x3c!-- Footer update time --\x3e\n    <div class="footer center">\n      <text class="update-time">Data updated on {{weather.obsTime}}</text>\n    </div>\n  </div>\n</template>\n\n\n\n# List Rendering\n\nIn the 3-day weather forecast page, array storage is used for the weather data of the next 3 days. The for directive can be used for rendering (detailed usage methods of the for directive can be referred to in the List Rendering).\n\nThe data definition is as follows:\n\n{\n  list: [\n    {\n      "fxDate": "Sunday",\n      "tempMax": "12",\n      "tempMin": "-1",\n      "iconDay": "101",\n      "textDay": "Cloudy",\n    },\n    {\n      "fxDate": "Monday",\n      "tempMax": "13",\n      "tempMin": "0",\n      "iconDay": "100",\n      "textDay": "Sunny"\n    },\n    {\n      "fxDate": "Tuesday",\n      "tempMax": "13",\n      "tempMin": "0",\n      "iconDay": "302",\n      "textDay": "Sunny",\n      "iconNight": "150",\n      "textNight": "Sunny"\n    }\n  ]\n}\n\n\nThe template code is as follows:\n\n\x3c!-- 3-Day Weather --\x3e\n<div class="list row">\n  <div class="item column center" for="{{list}}">\n    <text class="date">{{$item.fxDate}}</text>\n    <image class="icon" src="/common/icons/{{$item.iconDay}}.png"></image>\n    <text class="temp">{{$item.tempMin}}°~{{$item.tempMax}}°</text>\n  </div>\n</div>\n\n\nRunning result:\n\n\n\n# Conditional Rendering\n\nIn actual projects, conditional judgments are often required to render different UIs based on different conditions. For conditional rendering, please refer to the Conditional Directives.',normalizedContent:'# write page ui\n\nin the previous section project structure, we introduced the roles of files and directories in a vela js application project. after gaining a certain understanding of the project structure, we will now implement a simple weather forecast app.\n\nthis chapter will implement the page ui of the app, with the main content being: the basic structure of the page, styling, data structure definition, and data rendering.\n\nrestyling according to the ui design draft is a detailed and time-consuming task. to improve work efficiency, it is generally recommended to first conceive the overall implementation approach of the page (page structure, styling, and interactions, etc.), then write the page structure, followed by uniformly adding styling, and finally adding data rendering and interactions.\n\nin this usage guide, to facilitate the demonstration of page structure, styling, and interaction development in vela js applications, the above development process is adopted. in actual development, developers can also choose a workflow that suits their own development habits.\n\ntip\n\nthis section contains a relatively large number of code snippets. if you are already familiar with html/css/javascript, you can choose to skip this section. however, we still recommend that you read the content of this chapter to understand some differences between vela js application development and traditional front-end development.\n\n\n# functional requirements\n\nthe weather forecast app we are going to implement consists of two pages: real-time weather and 3-day weather forecast. the real-time weather interface displays the current weather conditions, mainly including information such as weather, temperature, humidity, and visibility. the 3-day weather forecast page is used to display the weather conditions for the next three days.\n\nthe final effect to be achieved is shown in the following figures:\n\n\n\n\n# preparation\n\nthis app uses the qweather api to obtain weather data, and icons use the qweather icons.\n\nthe weather app in this usage guide is only for demonstrating vela js application development techniques. if you need to use related interfaces and resources in actual projects, please register and activate the interfaces on the qweather developer platform. detailed information can be viewed on the official website:\n\n * qweather developer platform: https://dev.qweather.com/\n * qweather icons: https://icons.qweather.com/\n * icon download address: https://github.com/qwd/weathericon\n\n\n# page structure\n\nin the project structure chapter, we introduced that a page (ux file) consists of three parts: template, style, and script. next, we will write the template (template) code for these two pages respectively.\n\nvery similar to html, vela\'s page template is also composed of tags and attributes, and the syntax is mostly consistent with html. the difference is that vela has its own set of built-in components, which are not exactly the same as those supported by html.\n\nin the following code, we use the div, text, and image components. for detailed usage methods of components, you can refer to the vela official documentation - components.\n\n\n# real-time weather\n\nthe real-time weather page can be divided into three parts from top to bottom: header, body, and footer. the code is as follows.\n\n<template>\n  <div class="page">\n    \x3c!-- header city information --\x3e\n    <div class="header"></div>\n    <div class="body">\n      \x3c!-- main weather information --\x3e\n      <div class="info"></div>\n      \x3c!-- perceived temperature and other information --\x3e\n      <div class="more-info"></div>\n    </div>\n    \x3c!-- footer update time --\x3e\n    <div class="footer"></div>\n  </div>\n</template>\n\n\nwarm tip\n\nthe template can only have one root node.\n\nthe header information, including city, province, and country information, has a relatively simple structure. the code is as follows:\n\n\x3c!-- header city information --\x3e\n<div class="header">\n  <text class="city">wuhan</text>\n  <text class="province">hubei/china</text>\n</div>\n\n\nwarm tip\n\ntext must be placed in the text component; otherwise, the text will not be displayed on the interface.\n\nthe weather information section is slightly more complex than the header. it can be generally divided into two columns, with the right column further divided into two rows. the code is as follows:\n\n\x3c!-- main weather information --\x3e\n<div class="info">\n  <image class="icon" src="/common/icons/101.png"></image>\n  <div class="column center">\n    <text class="temp">6°</text>\n    <text class="weather">clear to cloudy</text>\n  </div>\n</div>\n\n\nnext, we implement the module for perceived temperature and other information. it can be generally divided into three columns, with each column further divided into two rows. the code is as follows:\n\n\x3c!-- perceived temperature and other information --\x3e\n<div class="more-info row">\n  <div class="item column center">\n    <text class="value">10°</text>\n    <text class="label">perceived temperature</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">67</text><text class="sub">%</text></div>\n    <text class="label">humidity</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">5</text><text class="sub">km</text></div>\n    <text class="label">visibility</text>\n  </div>\n</div>\n</div>\n\n\nfinally, the footer update time module has a relatively simple structure. the code is as follows:\n\n\x3c!-- footer update time --\x3e\n<div class="footer center">\n  <text class="update-time">data updated on 12-20 09:15</text>\n</div>\n\n\n\n# 3-day weather forecast\n\nthe structure of this page is the same as that of the real-time weather page, also divided into three parts from top to bottom, and the content of the header and footer is the same, so it will not be repeated here.\n\nnext, we mainly look at the implementation of the middle part, which mainly includes the 3-day weather overview and the weather list.\n\nthe weather overview is divided into two rows. the code is as follows:\n\n\x3c!-- weather overview --\x3e\n<div class="info">\n  <text class="title">3-day forecast</text>\n  <text class="summary">high 8° low -6°</text>\n</div>\n\n\nthe weather list is slightly more complex. first, it can be generally divided into three columns, with each column further divided into three rows. the code is as follows:\n\n\x3c!-- 3-day weather --\x3e\n<div class="list">\n  <div class="item">\n    <text class="date">sunday</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item">\n    <text class="date">monday</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item">\n    <text class="date">tuesday</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\n\n# page styling\n\nvela supports commonly used css features, with a small amount of expansion and modification. it by default supports adaptation to different screen sizes. detailed attribute support can be queried in the attribute list.\n\nvela js applications use the flex layout, which can conveniently implement commonly used layout styles. for technical details of the flex layout, you can refer to the mdn documentation.\n\ncurrently, only class selectors, id selectors, grouping selectors (,), and tag selectors are supported. descendant selectors, attribute selectors, universal selectors (*), sibling selectors (+), direct parent-child selectors (>), pseudo-classes, and inheritance are not supported.\n\nso far, we have completed the coding of the page structure, but no styling has been set yet. next, we will implement the styling of each module.\n\n\n# common styling\n\nbefore writing the styling code, we can first extract some basic common styling, such as arrangement methods, colors, and alignment methods.\n\nin our project, we mainly use horizontal and vertical arrangements, centering, etc. in terms of colors, the main color is white, so we can set the default color of the text to white.\n\nthe extracted basic styling is as follows:\n\n/* common styling */\ntext {\n  color: #ffffff;\n}\n\n.column {\n  flex-direction: column;\n}\n\n.row {\n  flex-direction: row;\n}\n\n.center {\n  align-items: center;\n  justify-content: center;\n}\n\n\n\n# page\n\nto solve the screen adaptation problem, all styles related to size (such as width and font-size) are scaled based on a reference width (default 480px) according to the actual screen width. for example, width:100px on a 960px width screen is actually 200px.\n\nour design draft is designed with a width of 480px, so the dimensions in the design draft can be directly used in the styling. for example, in the following figure, the overall width is 480, and the dimensions of the module for perceived temperature and other information are 335*100, so the css code is:\n\n.info {\n  width: 335px;\n  height: 100px; \n}\n\n\n\n\nfor the overall page, we first set the page background to black, the shape to circular, and the page width.\n\n.page {\n  padding: 40px;\n  background-color: #000000;\n  width: 480px;\n  border-radius: 240px;\n}\n\n\nnote\n\nif the reference width of the design draft is not 480, it can be configured in the manifest.json file through the config.designwidth field:\n\n{\n  // ...\n  "config": {\n    "designwidth": 360\n  }\n}\n\n\n\n# header information\n\nthe header information is arranged vertically and centered, using the previously extracted common styling: column and center. then, add styling to the text to control the font size and color.\n\nthe modified template code is as follows:\n\n\x3c!-- header city information --\x3e\n<div class="header column center">\n  <text class="city">wuhan</text>\n  <text class="province">hubei/china</text>\n</div>\n\n\nthe css code is as follows:\n\n/* header styling */\n.city {\n  font-size: 40px;\n}\n\n.province {\n  font-size: 18px;\n  color: #757575;\n}\n\n\nactual running result:\n\n\n\n# real-time weather\n\nsimilar to the header information, first add the basic styling column, row, and center to achieve the basic layout. then, write targeted css code for each text component to achieve styling such as text color and size.\n\nthe completed template code is as follows:\n\n<div class="body column center">\n  \x3c!-- main weather information --\x3e\n  <div class="info">\n    <image class="icon" src="/common/icons/101.png"></image>\n    <div class="column center">\n      <text class="temp">6°</text>\n      <text class="weather">clear to cloudy</text>\n    </div>\n  </div>\n  \x3c!-- perceived temperature and other information --\x3e\n  <div class="more-info row">\n    <div class="item column center">\n      <text class="value">10°</text>\n      <text class="label">perceived temperature</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">67</text><text class="sub">%</text></div>\n      <text class="label">humidity</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">5</text><text class="sub">km</text></div>\n      <text class="label">visibility</text>\n    </div>\n  </div>\n</div>\n\n\nfor the module of perceived temperature and other information, first arrange it horizontally (flex-direction: row), and then set flex: 1 for each item to achieve the effect of equal width for each item.\n\nspecifically, inside each item, just set the color and size of each text field respectively.\n\nthe css code is as follows:\n\n/* weather data styling */\n.body {\n  flex: 1;\n}\n\n.temp {\n  font-size: 70px;\n}\n\n.icon {\n  width: 170px;\n  height: 170px;\n  margin-right: 20px;\n}\n\n.weather {\n  font-size: 24px;\n}\n\n/* more information styling */\n.more-info {\n  width: 335px;\n  height: 100px;\n  background-color: rgba(255, 255, 255, 0.21);\n  border-radius: 15px;\n}\n\n.item {\n  flex: 1;\n}\n\n.value {\n  font-size: 30px;\n}\n\n.sub {\n  font-size: 14px;\n  margin-top: 10px;\n}\n\n.label {\n  color: #757575;\n  margin-top: 5px;\n}\n\n\nactual running result:\n\n\n\n# 3-day weather forecast\n\nthe styling of the weather overview information module is relatively simple, just arrange it vertically.\n\nsimilar to the module of perceived temperature and other information, the 3-day weather list also uses horizontal arrangement. the difference is that each item has a background color and spacing between them, so fixed dimensions are set for each item, and then the spacing between each item is allocated (justify-content: space-between) according to the remaining space.\n\nthe modified template code is as follows:\n\n\x3c!-- 3-day weather --\x3e\n<div class="list row">\n  <div class="item column center">\n    <text class="date">sunday</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">monday</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">tuesday</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\nthe css code is as follows:\n\n/* weather data styling */\n.body {\n  flex: 1;\n}\n\n.info {\n  margin-bottom: 20px;\n}\n\n.title {\n  font-size: 30px;\n}\n\n.summary {\n  font-size: 24px;\n  color: #757575;\n}\n\n/* 3-day weather */\n.list {\n  width: 380px;\n  justify-content: space-between;\n}\n\n.item {\n  width: 120px;\n  height: 175px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 15px;\n}\n\n.date {\n  font-size: 28px;\n}\n\n.icon {\n  width: 90px;\n  height: 90px;\n}\n\n.temp {\n  font-size: 24px;\n}\n\n\nactual running result:\n\n\n\n# footer information\n\nthe final template code for the footer information is as follows:\n\n\x3c!-- footer update time --\x3e\n<div class="footer center">\n  <text class="update-time">data updated on 12-20 09:15</text>\n</div>\n\n\nthe css code is as follows:\n\n/* footer styling */\n.footer {\n  margin-top: 20px;    \n}\n\n.update-time {\n  color: #757575;\n}\n\n\nactual running result:\n\n\n\n# page effect\n\nafter completing the page structure and styling, the actual running results in the simulator are as follows:\n\n\n\n\n# page data\n\nwe have implemented the rendering of page data, but currently, all the data is directly written into the template code and cannot be dynamically modified in the program.\n\nif you need to dynamically modify the data displayed on the interface in the program, you need to store the data in the page data object and then use the double curly brace syntax to reference the data, such as {{ name }}. detailed usage methods can be referred to in the template syntax.\n\ndata definition needs to be implemented through javascript scripts. like html, javascript code needs to be placed in the script tag:\n\n<script>\n  export default {\n    private: {\n      city: \'wuhan\',\n      province: \'hubei\',\n      country: \'china\',\n      weather: {\n        // data observation time\n        obstime: "12-21 09:05",\n        // temperature\n        temp: "13",\n        // perceived temperature\n        feelslike: "10",\n        // weather icon number\n        icon: "101",\n        // weather description text\n        text: "cloudy",\n        // relative humidity\n        humidity: "72",\n        // visibility, unit: km\n        vis: "16"\n      }\n    }\n  }\n<\/script>\n\n\nafter defining the data, replace the previous template code. the replaced code is as follows:\n\n<template>\n  <div class="page column">\n    \x3c!-- header city information --\x3e\n    <div class="header column center">\n      <text class="city">{{city}}</text>\n      <text class="province">{{province}}/{{country}}</text>\n    </div>\n    <div class="body column center">\n      \x3c!-- main weather information --\x3e\n      <div class="info">\n        <image class="icon" src="/common/icons/{{weather.icon}}.png"></image>\n        <div class="column center">\n          <text class="temp">{{weather.temp}}°</text>\n          <text class="weather">{{weather.text}}</text>\n        </div>\n      </div>\n      \x3c!-- perceived temperature and other information --\x3e\n      <div class="more-info row">\n        <div class="item column center">\n          <text class="value">{{weather.feelslike}}°</text>\n          <text class="label">perceived temperature</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.humidity}}</text><text class="sub">%</text></div>\n          <text class="label">humidity</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.vis}}</text><text class="sub">km</text></div>\n          <text class="label">visibility</text>\n        </div>\n      </div>\n    </div>\n    \x3c!-- footer update time --\x3e\n    <div class="footer center">\n      <text class="update-time">data updated on {{weather.obstime}}</text>\n    </div>\n  </div>\n</template>\n\n\n\n# list rendering\n\nin the 3-day weather forecast page, array storage is used for the weather data of the next 3 days. the for directive can be used for rendering (detailed usage methods of the for directive can be referred to in the list rendering).\n\nthe data definition is as follows:\n\n{\n  list: [\n    {\n      "fxdate": "sunday",\n      "tempmax": "12",\n      "tempmin": "-1",\n      "iconday": "101",\n      "textday": "cloudy",\n    },\n    {\n      "fxdate": "monday",\n      "tempmax": "13",\n      "tempmin": "0",\n      "iconday": "100",\n      "textday": "sunny"\n    },\n    {\n      "fxdate": "tuesday",\n      "tempmax": "13",\n      "tempmin": "0",\n      "iconday": "302",\n      "textday": "sunny",\n      "iconnight": "150",\n      "textnight": "sunny"\n    }\n  ]\n}\n\n\nthe template code is as follows:\n\n\x3c!-- 3-day weather --\x3e\n<div class="list row">\n  <div class="item column center" for="{{list}}">\n    <text class="date">{{$item.fxdate}}</text>\n    <image class="icon" src="/common/icons/{{$item.iconday}}.png"></image>\n    <text class="temp">{{$item.tempmin}}°~{{$item.tempmax}}°</text>\n  </div>\n</div>\n\n\nrunning result:\n\n\n\n# conditional rendering\n\nin actual projects, conditional judgments are often required to render different uis based on different conditions. for conditional rendering, please refer to the conditional directives.',charsets:{}},{title:"Using AIoT-IDE to Develop JS Applications",frontmatter:{},regularPath:"/en/guide/start/use-ide.html",relativePath:"en/guide/start/use-ide.md",key:"v-1feb2446",path:"/en/guide/start/use-ide.html",headers:[{level:2,title:"Download AIoT-IDE",slug:"download-aiot-ide",normalizedTitle:"download aiot-ide",charIndex:48},{level:2,title:"System Requirements",slug:"system-requirements",normalizedTitle:"system requirements",charIndex:299},{level:2,title:"Installing AIoT-IDE",slug:"installing-aiot-ide",normalizedTitle:"installing aiot-ide",charIndex:477},{level:2,title:"Historical Versions",slug:"historical-versions",normalizedTitle:"historical versions",charIndex:904},{level:2,title:"Using AIoT-IDE",slug:"using-aiot-ide",normalizedTitle:"using aiot-ide",charIndex:2},{level:3,title:"1. Initializing a Vela Project",slug:"_1-initializing-a-vela-project",normalizedTitle:"1. initializing a vela project",charIndex:1014},{level:3,title:"2. Project Development",slug:"_2-project-development",normalizedTitle:"2. project development",charIndex:1371},{level:3,title:"3. Development Guide",slug:"_3-development-guide",normalizedTitle:"3. development guide",charIndex:1823},{level:3,title:"4. Emulator Environment Management",slug:"_4-emulator-environment-management",normalizedTitle:"4. emulator environment management",charIndex:2405},{level:3,title:"5. Running the Project",slug:"_5-running-the-project",normalizedTitle:"5. running the project",charIndex:3631},{level:3,title:"6. Debugging the Project",slug:"_6-debugging-the-project",normalizedTitle:"6. debugging the project",charIndex:4067},{level:3,title:"7. Packaging the Project",slug:"_7-packaging-the-project",normalizedTitle:"7. packaging the project",charIndex:4415}],headersStr:"Download AIoT-IDE System Requirements Installing AIoT-IDE Historical Versions Using AIoT-IDE 1. Initializing a Vela Project 2. Project Development 3. Development Guide 4. Emulator Environment Management 5. Running the Project 6. Debugging the Project 7. Packaging the Project",content:'# Using AIoT-IDE to Develop JS Applications\n\n\n# Download AIoT-IDE\n\n{{item.platform}}\n{{platform.platform}}\n\nThis application supports macOS, Windows, and Ubuntu systems. Please ensure your device meets the following minimum system version requirements.\n\n----------------------------------------\n\n\n# System Requirements\n\nOPERATING SYSTEM   MINIMUM VERSION REQUIRED\nmacOS              14 (Sonoma) or later\nWindows            10 or later\nUbuntu             20.04 LTS or later\n\n\n# Installing AIoT-IDE\n\nYou may encounter the following installation error on macOS:\n\n\n\nIf you encounter this issue, follow these steps:\n\n 1. Open a shell window and enter: sudo xattr -r -d com.apple.quarantine, as shown in Example 1 below.\n 2. Press the spacebar and then drag the application into the window to get Example 2 below.\n 3. Press Enter, enter your password, and then run the program again.\n\nExample 1\n\nExample 2\n\n\n# Historical Versions\n\nHistorical versions can be found at: Click to view\nPassword: 99E6\n\n\n# Using AIoT-IDE\n\n\n# 1. Initializing a Vela Project\n\n * Click on "File" > "New Project" in the top-left corner to open the project initialization GUI.\n * Click on the Vela card in the left sidebar and then click "Create".\n * Select a project template and click "Next".\n * Enter the project name and save path, then click "Create" and wait for the project to be created.\n\n\n\n\n\n\n# 2. Project Development\n\nSupports dependency installation, running, debugging, restarting, emulator management, and project packaging.\nAfter opening a Vela quick app project, AIoT-IDE will display a banner of operation buttons at the top and a development guide on the right. Follow the guide to install the necessary dependencies.\nOnce the dependencies are installed, click the operation buttons in the banner to perform corresponding functions.\n\n\n\n\n# 3. Development Guide\n\nWhen you open a Vela quick app project, AIoT-IDE will display a development guide on the right to assist you. Follow the guide\'s instructions to complete the corresponding operations.\n\n\n\nIf you encounter npm i download failures as per the guide, follow these steps to resolve:\n\n\n\n * Check if there is a .npmrc file in the root directory of your project. If not, create one.\n   \n   \n\n * Open the .npmrc file and copy the following content into it:\n   \n   registry="https://registry.npmmirror.com/"\n   \n   \n\n * Open the terminal and run npm i again.\n   \n   \n\n\n# 4. Emulator Environment Management\n\nAIoT-IDE supports automatic initialization of the emulator environment, creating, deleting, and listing emulators to view effects during running/debugging.\n\nEmulator Environment Instructions\n\nIf the emulator environment and instances are missing, the development guide will provide corresponding prompts.\n\n * Click the "Check emulator environment, create emulator instance" button, and in the modal window that pops up, select "Auto Install" to automatically install the emulator-related dependencies.\n * On the emulator list page, click the "Create" button in the top-left corner to generate an emulator instance.\n\n\n\nEmulator Operation Instructions\n\n * View created emulators\n   Click the "Emulator" button in the banner to enter the emulator list page, where you can see detailed information about the created emulators.\n\n\n\n * Create a new emulator\n   * Click the "New" button in the top-left corner of the Device Management to enter the emulator form page.\n   * Fill in the emulator information on the form page and click the "Create" button. The plugin will first download the Vela image and complete the creation.\n\nIt is recommended to use the Vela official version (4.0) image.\n\n\n\n\n# 5. Running the Project\n\nWhen running, you first need to select the emulator on which to preview the effect. After selection, the currently opened quick app will start in the emulator and display the project UI.\n\n\n\nThe plugin will filter all emulators starting with "Vela" in the $HOME/.android/avd directory. If none are found, AIoT-IDE will prompt at the bottom-right corner, and you can click the "Emulator" button to create one.\n\n\n# 6. Debugging the Project\n\nSimilar to running, you need to select an emulator when debugging.\nAfter the quick app starts successfully, AIoT-IDE will display a debugging panel at the bottom. Click the tabs in the debugging panel to perform corresponding operations, such as viewing the DOM tree, checking the Console, and breakpoint debugging.\n\n\n\n\n# 7. Packaging the Project\n\nDevelopment Mode Packaging\nAfter development is complete, click the "Package" button in the banner to package the application. By default, two new directories will be generated: dist and build.\nThe dist folder will contain a .debug.rpk file, and the build folder will contain the compiled js files.\n\nProduction Mode Packaging\n\n * Before packaging, configure the signature private key to generate a signature file.\n   \n   * Auto-generate: Click the "Release" button in the banner > fill in the relevant information > click the "Finish" button. The plugin will generate private.pem and certificate.pem files in the project\'s sign directory. After the signature files are successfully generated, click the "Release" button in the top operation bar. The packaged output will be similar to development mode packaging, but the rpk file in the dist folder will have a release suffix.\n   \n   \n   \n   * Auto-generation requires openssl to be installed in the system environment. Windows systems may encounter openssl missing issues. Here are the specific solutions.\n     \n     * Install openssl and configure the system environment variables, then restart the computer. After successful restart, open the terminal in AIoT-IDE, enter openssl, and if it appears as shown below, the installation is successful.\n     \n     \n   \n   * Manual generation: Similarly, openssl must be installed in the system environment. Then, open the terminal and run the following command to generate the signature files. Create a new sign directory in the project and place the generated files private.pem and certificate.pem in this directory.\n     openssl req -newkey rsa:2048 -nodes -keyout private.pem -x509 -days 3650 -out certificate.pem',normalizedContent:'# using aiot-ide to develop js applications\n\n\n# download aiot-ide\n\n{{item.platform}}\n{{platform.platform}}\n\nthis application supports macos, windows, and ubuntu systems. please ensure your device meets the following minimum system version requirements.\n\n----------------------------------------\n\n\n# system requirements\n\noperating system   minimum version required\nmacos              14 (sonoma) or later\nwindows            10 or later\nubuntu             20.04 lts or later\n\n\n# installing aiot-ide\n\nyou may encounter the following installation error on macos:\n\n\n\nif you encounter this issue, follow these steps:\n\n 1. open a shell window and enter: sudo xattr -r -d com.apple.quarantine, as shown in example 1 below.\n 2. press the spacebar and then drag the application into the window to get example 2 below.\n 3. press enter, enter your password, and then run the program again.\n\nexample 1\n\nexample 2\n\n\n# historical versions\n\nhistorical versions can be found at: click to view\npassword: 99e6\n\n\n# using aiot-ide\n\n\n# 1. initializing a vela project\n\n * click on "file" > "new project" in the top-left corner to open the project initialization gui.\n * click on the vela card in the left sidebar and then click "create".\n * select a project template and click "next".\n * enter the project name and save path, then click "create" and wait for the project to be created.\n\n\n\n\n\n\n# 2. project development\n\nsupports dependency installation, running, debugging, restarting, emulator management, and project packaging.\nafter opening a vela quick app project, aiot-ide will display a banner of operation buttons at the top and a development guide on the right. follow the guide to install the necessary dependencies.\nonce the dependencies are installed, click the operation buttons in the banner to perform corresponding functions.\n\n\n\n\n# 3. development guide\n\nwhen you open a vela quick app project, aiot-ide will display a development guide on the right to assist you. follow the guide\'s instructions to complete the corresponding operations.\n\n\n\nif you encounter npm i download failures as per the guide, follow these steps to resolve:\n\n\n\n * check if there is a .npmrc file in the root directory of your project. if not, create one.\n   \n   \n\n * open the .npmrc file and copy the following content into it:\n   \n   registry="https://registry.npmmirror.com/"\n   \n   \n\n * open the terminal and run npm i again.\n   \n   \n\n\n# 4. emulator environment management\n\naiot-ide supports automatic initialization of the emulator environment, creating, deleting, and listing emulators to view effects during running/debugging.\n\nemulator environment instructions\n\nif the emulator environment and instances are missing, the development guide will provide corresponding prompts.\n\n * click the "check emulator environment, create emulator instance" button, and in the modal window that pops up, select "auto install" to automatically install the emulator-related dependencies.\n * on the emulator list page, click the "create" button in the top-left corner to generate an emulator instance.\n\n\n\nemulator operation instructions\n\n * view created emulators\n   click the "emulator" button in the banner to enter the emulator list page, where you can see detailed information about the created emulators.\n\n\n\n * create a new emulator\n   * click the "new" button in the top-left corner of the device management to enter the emulator form page.\n   * fill in the emulator information on the form page and click the "create" button. the plugin will first download the vela image and complete the creation.\n\nit is recommended to use the vela official version (4.0) image.\n\n\n\n\n# 5. running the project\n\nwhen running, you first need to select the emulator on which to preview the effect. after selection, the currently opened quick app will start in the emulator and display the project ui.\n\n\n\nthe plugin will filter all emulators starting with "vela" in the $home/.android/avd directory. if none are found, aiot-ide will prompt at the bottom-right corner, and you can click the "emulator" button to create one.\n\n\n# 6. debugging the project\n\nsimilar to running, you need to select an emulator when debugging.\nafter the quick app starts successfully, aiot-ide will display a debugging panel at the bottom. click the tabs in the debugging panel to perform corresponding operations, such as viewing the dom tree, checking the console, and breakpoint debugging.\n\n\n\n\n# 7. packaging the project\n\ndevelopment mode packaging\nafter development is complete, click the "package" button in the banner to package the application. by default, two new directories will be generated: dist and build.\nthe dist folder will contain a .debug.rpk file, and the build folder will contain the compiled js files.\n\nproduction mode packaging\n\n * before packaging, configure the signature private key to generate a signature file.\n   \n   * auto-generate: click the "release" button in the banner > fill in the relevant information > click the "finish" button. the plugin will generate private.pem and certificate.pem files in the project\'s sign directory. after the signature files are successfully generated, click the "release" button in the top operation bar. the packaged output will be similar to development mode packaging, but the rpk file in the dist folder will have a release suffix.\n   \n   \n   \n   * auto-generation requires openssl to be installed in the system environment. windows systems may encounter openssl missing issues. here are the specific solutions.\n     \n     * install openssl and configure the system environment variables, then restart the computer. after successful restart, open the terminal in aiot-ide, enter openssl, and if it appears as shown below, the installation is successful.\n     \n     \n   \n   * manual generation: similarly, openssl must be installed in the system environment. then, open the terminal and run the following command to generate the signature files. create a new sign directory in the project and place the generated files private.pem and certificate.pem in this directory.\n     openssl req -newkey rsa:2048 -nodes -keyout private.pem -x509 -days 3650 -out certificate.pem',charsets:{}},{title:"APILevel2",frontmatter:{},regularPath:"/en/guide/version/APILevel2.html",relativePath:"en/guide/version/APILevel2.md",key:"v-4d64fddc",path:"/en/guide/version/APILevel2.html",headers:[{level:2,title:"Framework",slug:"framework",normalizedTitle:"framework",charIndex:16},{level:2,title:"Components",slug:"components",normalizedTitle:"components",charIndex:89},{level:2,title:"APIs",slug:"apis",normalizedTitle:"apis",charIndex:352}],headersStr:"Framework Components APIs",content:"# APILevel2\n\n\n# Framework\n\n * Added media query to support the media feature - shape\n\n\n# Components\n\n * Added the barcode component\n * Added the qrcode component\n * Added the image-animator component\n * Added the scroll component\n * Added the getBoundingClientRect general method\n * Added the swipestart and swipeend events to the swiper component\n\n\n# APIs\n\n * Added the return values deviceType and APILevel to getInfo() of @system.device",normalizedContent:"# apilevel2\n\n\n# framework\n\n * added media query to support the media feature - shape\n\n\n# components\n\n * added the barcode component\n * added the qrcode component\n * added the image-animator component\n * added the scroll component\n * added the getboundingclientrect general method\n * added the swipestart and swipeend events to the swiper component\n\n\n# apis\n\n * added the return values devicetype and apilevel to getinfo() of @system.device",charsets:{}},{title:"APILevel4",frontmatter:{},regularPath:"/en/guide/version/APILevel4.html",relativePath:"en/guide/version/APILevel4.md",key:"v-7594b9e4",path:"/en/guide/version/APILevel4.html",headers:[{level:2,title:"Components",slug:"components",normalizedTitle:"components",charIndex:16}],headersStr:"Components",content:"# APILevel4\n\n\n# Components\n\n * New interface: @system.event",normalizedContent:"# apilevel4\n\n\n# components\n\n * new interface: @system.event",charsets:{}},{title:"APILevel3",frontmatter:{},regularPath:"/en/guide/version/APILevel3.html",relativePath:"en/guide/version/APILevel3.md",key:"v-4f419210",path:"/en/guide/version/APILevel3.html",headers:[{level:2,title:"Framework",slug:"framework",normalizedTitle:"framework",charIndex:16},{level:2,title:"Components",slug:"components",normalizedTitle:"components",charIndex:98},{level:2,title:"Interface",slug:"interface",normalizedTitle:"interface",charIndex:170},{level:2,title:"Style",slug:"style",normalizedTitle:"style",charIndex:368}],headersStr:"Framework Components Interface Style",content:"# APILevel3\n\n\n# Framework\n\n * Added common style: box-shadow\n * Added global method: $canIUse\n\n\n# Components\n\n * Added edge adsorption style for the scroll component\n\n\n# Interface\n\n * Added interface: @system.uploadtask\n * Added canIUse method for @system.app\n * Added return value for @system.device getInfo(): screenDensity, screenShape added pill-shaped screen\n\n\n# Style\n\n * Expanded media query to support new features and logical operations\n * Added dp unit",normalizedContent:"# apilevel3\n\n\n# framework\n\n * added common style: box-shadow\n * added global method: $caniuse\n\n\n# components\n\n * added edge adsorption style for the scroll component\n\n\n# interface\n\n * added interface: @system.uploadtask\n * added caniuse method for @system.app\n * added return value for @system.device getinfo(): screendensity, screenshape added pill-shaped screen\n\n\n# style\n\n * expanded media query to support new features and logical operations\n * added dp unit",charsets:{}},{frontmatter:{showToc:!1,sidebar:!1},regularPath:"/en/samples/",relativePath:"en/samples/README.md",key:"v-46051735",path:"/en/samples/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"About AIoT-IDE",frontmatter:{},regularPath:"/en/tools/",relativePath:"en/tools/README.md",key:"v-c0242c16",path:"/en/tools/",headers:[{level:2,title:"Project Structure",slug:"project-structure",normalizedTitle:"project structure",charIndex:871}],headersStr:"Project Structure",content:"# About AIoT-IDE\n\nAIoT-IDE is the official integrated development environment for developing Xiaomi Vela JS applications. Built upon Visual Studio Code (hereinafter referred to as VS Code), it inherits all the functionalities of VS Code, such as code editing, plugin integration, theme customization, and personalized settings. Additionally, AIoT-IDE introduces a series of enhanced features specifically tailored for the development of Xiaomi Vela JS applications, including but not limited to:\n\n * Intelligent code suggestions\n * Vela JS application debugging\n * Real-time compilation preview\n * Packaging and publishing of Vela JS applications\n * Real-device debugging of Vela JS applications\n\nThis chapter primarily introduces the core functionalities of AIoT-IDE. For download and installation instructions, please refer to the Installation Environment chapter.\n\n\n# Project Structure\n\nThe enhanced features for application development are only available when AIoT-IDE opens a Xiaomi Vela JS application.\n\nA basic Xiaomi Vela JS application consists of a configuration file manifest.json that describes project information, an app.ux file that contains the project's public resources, and UX files that describe different pages.\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-CN.json\n|   └── en-US.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\nWhen AIoT-IDE opens a project, it checks whether there is a manifest.json file in the root directory or src directory of the current project. If found, it reads the deviceTypeList from manifest.json and determines the type of Xiaomi Vela JS application based on the content of the deviceTypeList field.",normalizedContent:"# about aiot-ide\n\naiot-ide is the official integrated development environment for developing xiaomi vela js applications. built upon visual studio code (hereinafter referred to as vs code), it inherits all the functionalities of vs code, such as code editing, plugin integration, theme customization, and personalized settings. additionally, aiot-ide introduces a series of enhanced features specifically tailored for the development of xiaomi vela js applications, including but not limited to:\n\n * intelligent code suggestions\n * vela js application debugging\n * real-time compilation preview\n * packaging and publishing of vela js applications\n * real-device debugging of vela js applications\n\nthis chapter primarily introduces the core functionalities of aiot-ide. for download and installation instructions, please refer to the installation environment chapter.\n\n\n# project structure\n\nthe enhanced features for application development are only available when aiot-ide opens a xiaomi vela js application.\n\na basic xiaomi vela js application consists of a configuration file manifest.json that describes project information, an app.ux file that contains the project's public resources, and ux files that describe different pages.\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-cn.json\n|   └── en-us.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\nwhen aiot-ide opens a project, it checks whether there is a manifest.json file in the root directory or src directory of the current project. if found, it reads the devicetypelist from manifest.json and determines the type of xiaomi vela js application based on the content of the devicetypelist field.",charsets:{cjk:!0}},{title:"Debug and Run",frontmatter:{},regularPath:"/en/tools/debug/debug.html",relativePath:"en/tools/debug/debug.md",key:"v-3c246d88",path:"/en/tools/debug/debug.html",headersStr:null,content:"# Debug and Run\n\nClick the Select Device button, choose the simulator to run, click OK, and then click the Debug button to start the corresponding simulator.\n\n\n\nAfter the simulator starts successfully, the debug page will open. When multiple simulators are running, the debug window corresponds to the simulator with a selected effect in the title on the simulator's running page (as shown in labels 1, 2, and 3 in the figure below).\n\n\n\nClick on a simulator to switch the debug service and perform corresponding debugging.\n\n\n\n",normalizedContent:"# debug and run\n\nclick the select device button, choose the simulator to run, click ok, and then click the debug button to start the corresponding simulator.\n\n\n\nafter the simulator starts successfully, the debug page will open. when multiple simulators are running, the debug window corresponds to the simulator with a selected effect in the title on the simulator's running page (as shown in labels 1, 2, and 3 in the figure below).\n\n\n\nclick on a simulator to switch the debug service and perform corresponding debugging.\n\n\n\n",charsets:{}},{title:"Build Settings",frontmatter:{},regularPath:"/en/tools/debug/build-setting.html",relativePath:"en/tools/debug/build-setting.md",key:"v-70f8c8cc",path:"/en/tools/debug/build-setting.html",headersStr:null,content:"# Build Settings\n\nThe build settings function allows you to customize the pages and page cache that will be opened when the simulator is running. If no settings are made, it will default to reading the router configuration in the project's manifest.json file.\n\n\n\nIn the top banner area, a display button for the current build mode has been added. Clicking on the current build configuration route path allows you to switch build configurations or click \"Add\" to add a new build configuration.\n\n\n\nClicking on the current build configuration name will take you to the build mode settings interface, where you can add, delete, or modify the current project's build configurations.\n\n",normalizedContent:"# build settings\n\nthe build settings function allows you to customize the pages and page cache that will be opened when the simulator is running. if no settings are made, it will default to reading the router configuration in the project's manifest.json file.\n\n\n\nin the top banner area, a display button for the current build mode has been added. clicking on the current build configuration route path allows you to switch build configurations or click \"add\" to add a new build configuration.\n\n\n\nclicking on the current build configuration name will take you to the build mode settings interface, where you can add, delete, or modify the current project's build configurations.\n\n",charsets:{}},{title:"Optimization Scoring",frontmatter:{},regularPath:"/en/tools/debug/audit.html",relativePath:"en/tools/debug/audit.md",key:"v-530de478",path:"/en/tools/debug/audit.html",headers:[{level:2,title:"File Analysis",slug:"file-analysis",normalizedTitle:"file analysis",charIndex:525},{level:2,title:"Performance Metrics",slug:"performance-metrics",normalizedTitle:"performance metrics",charIndex:806},{level:2,title:"Optimization Detection Items",slug:"optimization-detection-items",normalizedTitle:"optimization detection items",charIndex:985},{level:3,title:"Multiple-Reference Code Detection",slug:"multiple-reference-code-detection",normalizedTitle:"multiple-reference code detection",charIndex:1473},{level:3,title:"Large Dependency Replacement Detection",slug:"large-dependency-replacement-detection",normalizedTitle:"large dependency replacement detection",charIndex:1666},{level:3,title:"Unused Dependency Detection",slug:"unused-dependency-detection",normalizedTitle:"unused dependency detection",charIndex:1864},{level:3,title:"Unused System Function Detection",slug:"unused-system-function-detection",normalizedTitle:"unused system function detection",charIndex:2032},{level:3,title:"Network Request Time-Consumption Detection",slug:"network-request-time-consumption-detection",normalizedTitle:"network request time-consumption detection",charIndex:2208},{level:3,title:"Network Request HTTPS Usage Detection",slug:"network-request-https-usage-detection",normalizedTitle:"network request https usage detection",charIndex:2417},{level:3,title:"Network Request Frequency Detection",slug:"network-request-frequency-detection",normalizedTitle:"network request frequency detection",charIndex:2624},{level:3,title:"Network Request Exception Detection",slug:"network-request-exception-detection",normalizedTitle:"network request exception detection",charIndex:2805},{level:3,title:"Code Execution Error Detection",slug:"code-execution-error-detection",normalizedTitle:"code execution error detection",charIndex:2987}],headersStr:"File Analysis Performance Metrics Optimization Detection Items Multiple-Reference Code Detection Large Dependency Replacement Detection Unused Dependency Detection Unused System Function Detection Network Request Time-Consumption Detection Network Request HTTPS Usage Detection Network Request Frequency Detection Network Request Exception Detection Code Execution Error Detection",content:"# Optimization Scoring\n\nTo optimize the development experience for developers, the AIoT-IDE includes a built-in function for generating optimization scoring reports. Simply click the Generate Report button to create an optimization report based on the currently open application.\n\n\n\nThe report is divided into two main sections: dynamic analysis and static analysis. Each detection item includes: specific information about the triggered entry (such as code location/file URL/network URL), optimization suggestions, etc.\n\n\n# File Analysis\n\n 1. Helps users visually identify files that take up an excessively large proportion of the package size, facilitating package size optimization.\n\n 2. Plans are also in place to provide visual dependency proportion analysis similar to a treeMap in the future.\n\n\n\n\n# Performance Metrics\n\nThe optimization report provides multi-dimensional performance metrics along with optimization suggestions to assist developers in making improvements.\n\n\n\n\n# Optimization Detection Items\n\n * A unified, aggregated detection entry currently includes a total of 9 inspection items:\n   * Multiple-reference code detection\n   * Large dependency replacement detection\n   * Unused dependency detection\n   * Unused system function detection\n   * Network request time-consumption detection\n   * Network request HTTPS usage detection\n   * Network request frequency detection\n   * Network request exception detection\n   * Code execution error detection\n\n\n# Multiple-Reference Code Detection\n\nThe optimization report will highlight code that is referenced multiple times and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Large Dependency Replacement Detection\n\nThe optimization report will identify dependencies that are excessively large and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Unused Dependency Detection\n\nThe optimization report will highlight unused dependencies and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Unused System Function Detection\n\nThe optimization report will identify unused system functions and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Network Request Time-Consumption Detection\n\nThe optimization report will highlight requests with excessively long response times and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Network Request HTTPS Usage Detection\n\nThe optimization report will identify requests that do not use HTTPS in their responses and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Network Request Frequency Detection\n\nThe optimization report will highlight frequently made requests and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Network Request Exception Detection\n\nThe optimization report will identify abnormal request responses and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# Code Execution Error Detection\n\nThe optimization report will highlight code execution errors in the project and provide optimization suggestions for developers to make improvements.\n\n",normalizedContent:"# optimization scoring\n\nto optimize the development experience for developers, the aiot-ide includes a built-in function for generating optimization scoring reports. simply click the generate report button to create an optimization report based on the currently open application.\n\n\n\nthe report is divided into two main sections: dynamic analysis and static analysis. each detection item includes: specific information about the triggered entry (such as code location/file url/network url), optimization suggestions, etc.\n\n\n# file analysis\n\n 1. helps users visually identify files that take up an excessively large proportion of the package size, facilitating package size optimization.\n\n 2. plans are also in place to provide visual dependency proportion analysis similar to a treemap in the future.\n\n\n\n\n# performance metrics\n\nthe optimization report provides multi-dimensional performance metrics along with optimization suggestions to assist developers in making improvements.\n\n\n\n\n# optimization detection items\n\n * a unified, aggregated detection entry currently includes a total of 9 inspection items:\n   * multiple-reference code detection\n   * large dependency replacement detection\n   * unused dependency detection\n   * unused system function detection\n   * network request time-consumption detection\n   * network request https usage detection\n   * network request frequency detection\n   * network request exception detection\n   * code execution error detection\n\n\n# multiple-reference code detection\n\nthe optimization report will highlight code that is referenced multiple times and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# large dependency replacement detection\n\nthe optimization report will identify dependencies that are excessively large and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# unused dependency detection\n\nthe optimization report will highlight unused dependencies and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# unused system function detection\n\nthe optimization report will identify unused system functions and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# network request time-consumption detection\n\nthe optimization report will highlight requests with excessively long response times and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# network request https usage detection\n\nthe optimization report will identify requests that do not use https in their responses and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# network request frequency detection\n\nthe optimization report will highlight frequently made requests and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# network request exception detection\n\nthe optimization report will identify abnormal request responses and provide optimization suggestions for developers to make improvements.\n\n\n\n\n# code execution error detection\n\nthe optimization report will highlight code execution errors in the project and provide optimization suggestions for developers to make improvements.\n\n",charsets:{}},{title:"Multi-Screen Adaptation",frontmatter:{},regularPath:"/en/tools/debug/multi-screens.html",relativePath:"en/tools/debug/multi-screens.md",key:"v-2b7a6570",path:"/en/tools/debug/multi-screens.html",headers:[{level:2,title:"Multi-Device Emulator Creation",slug:"multi-device-emulator-creation",normalizedTitle:"multi-device emulator creation",charIndex:235},{level:2,title:"Custom Emulator",slug:"custom-emulator",normalizedTitle:"custom emulator",charIndex:1262},{level:2,title:"Multi-Screen Preview",slug:"multi-screen-preview",normalizedTitle:"multi-screen preview",charIndex:2127},{level:2,title:"Custom Emulator Skin",slug:"custom-emulator-skin",normalizedTitle:"custom emulator skin",charIndex:2483},{level:2,title:"Vela Emulator Skin Group",slug:"vela-emulator-skin-group",normalizedTitle:"vela emulator skin group",charIndex:2720},{level:2,title:"Creation of Layout File",slug:"creation-of-layout-file",normalizedTitle:"creation of layout file",charIndex:3393},{level:2,title:"Application of Skin File",slug:"application-of-skin-file",normalizedTitle:"application of skin file",charIndex:5016},{level:2,title:"Detailed Explanation of Layout",slug:"detailed-explanation-of-layout",normalizedTitle:"detailed explanation of layout",charIndex:5554}],headersStr:"Multi-Device Emulator Creation Custom Emulator Multi-Screen Preview Custom Emulator Skin Vela Emulator Skin Group Creation of Layout File Application of Skin File Detailed Explanation of Layout",content:"# Multi-Screen Adaptation\n\nTo enhance the development experience, AIoT-IDE has built-in **** features that allow a single set of code to run on multiple different device screens, testing the adaptation effect on different screens.\n\n\n# Multi-Device Emulator Creation\n\nTo recreate the most realistic multi-screen adaptation development scenario, AIoT-IDE provides multiple emulators with different device size configurations and different image versions to test applications on various devices with different image systems.\n\nCurrently, three images are available for selection\n\n * vela-miwear-watch-5.0 Stable release version of vela5.0\n\n * vela-miwear-watch-4.0 Stable release version of vela4.0\n\n * vela-watch-4.0 Development version of vela\n\nCurrently, six devices with different screen sizes are available for creation:\n\nxiaomiWatch 466*466\n\nredmiWatch\n\nxiaomiBand\n\nxiaomiBandpro\n\nxiaomi10Band\n\nxiaomiSoundMini\n\nCurrently, when creating an emulator, vela-miwear-watch-5.0 and vela-miwear-watch-4.0 only support one device type with the xiaomiWatch (466*466) size, while vela-watch-4.0 supports all the above device types and can also be customized for device type creation.\n\nNote\n\nThere is a performance difference between the emulator and the real device\n\n\n# Custom Emulator\n\nIn addition, to support more device sizes, when creating an emulator, you can also choose the custom option for the emulator, which provides the following custom configurations:\n\n * 1. Customize the emulator's width and height (width and height less than 800 and greater than 100), emulator shape, emulator density, etc.\n * 2. Customize and set the emulator type, currently mainly watch, band, smartspeaker\n * 3. Customize the emulator shape, currently there are two main shapes circular and rectangular, with the rectangular shape allowing customization of rounded corners\n * 4. Customize the emulator screen DPI\n\n\n\nAfter clicking the new button at the bottom and completing the emulator creation, AIoT-IDE will pop up a success prompt in the lower right corner, and the device management page will update the created emulator in real-time.\n\n\n\n\n# Multi-Screen Preview\n\nAfter creating emulators of different device types, when starting the emulator through the Debug or Run button, select the corresponding emulator for different devices and click OK to run them simultaneously.\n\n\n\nAfter successful operation, the emulator preview page will display the preview effects of different device screens.\n\n\n\n\n# Custom Emulator Skin\n\nIn addition, if users are not satisfied with just customizing the display effect of the emulator and hope to preview the emulator device more realistically, we also provide the function of customizing the skin.\n\n\n# Vela Emulator Skin Group\n\nTo create a skin, two images and a configuration file are required:\n\n * background.png is the main image of the device, requiring the screen area to be black\n * foreground.png is used to cover the part outside the emulator screen.\n * layout configuration file, mainly used to configure the layout information of the skin's required background.png and foreground.png\n\n\n\nAmong them, foreground.png is generally cut from the background image with the emulator screen part modified to transparent color. The comparison between without foreground.png and with foreground.png is as follows:\n\nforeground.png not configured\n\nforeground.png configured\n\n\n# Creation of Layout File\n\nCopy the following code and modify the information according to the comments, keeping the rest unchanged.\n\n  parts {\n    device {\n      display {\n        # Emulator size \n        width 466\n        # Emulator size\n        height 466\n        # x and y fill 0\n        x 0\n        y 0\n      }\n    }\n    portrait {\n      background {\n        # Name of the background image\n        image background.png\n      }\n      foreground {\n        # Name of the foreground image\n        mask foreground.png\n      }\n    }\n  }\n  layouts {\n    portrait {\n      // The size of the entire skin, usually using the pixel size of the background image\n      width 572\n      height 938\n      event EV_SW:0:1 \n      part1 {\n        name portrait\n        x 0\n        y 0\n      }\n      part2 {\n        name device\n        # The starting coordinates of the foreground image when cutting from the background image, calculated with the top left corner as 0,0\n        x 54\n        y 236\n      }\n    }\n  }\n\n  // Fields that will be passed to the underlying configuration when creating the emulator\n  props {\n    // Screen shape. Optional values: circle (circular), rect (rectangular), pill-shaped (capsule-shaped screen eg: full-screen bracelet)\n    shape circle\n    // Screen density, optional values: ['120', '140', '160', '180', '213', '240', '280', '320', '340', '360', '400', '420', '440', '480', '560', '640']\n    density 320\n    // Device type, optional values: phone (mobile phone), watch (watch), pad (tablet), car (car), tv (television), band (bracelet), smartspeaker (speaker), default is watch\n    flavor watch\n  }\n\n\n\n# Application of Skin File\n\nOpen the SKD directory through AIoT-IDE. There is a skins directory under this directory. Create a new folder named after your skin under the skins/user directory, and place the created files into it. If there is no user directory under skins, first create the user directory. Then, when using the IDE to create an emulator, you can choose to apply this skin.\n\nNote\n\nThe SDK directory is a directory starting with a dot. Please enable the display of hidden files in the operating system before proceeding.\n\n\n\n\n# Detailed Explanation of Layout\n\nThe content in the layout file is as follows:\n\n\n\nDetailed explanation of layout configuration content:\n\n * layout can define two layout methods: portrait and landscape, i.e., vertical and horizontal screens. The width and height are the pixel sizes of your background.png.\n\n * event is a fixed value, fill in EV_SW:0:0.\n\n * part1 refers to the background image and foreground image defined in the parts above. The name represents the name of the referenced part, and x, y represent the starting coordinates of the layout, starting from the top left corner as 0,0.\n\n * part2 refers to the display defined in the parts above. The name represents the name of the referenced part, and x, y represent the starting coordinates of the layout, starting from the top left corner as 0,0.\n\n * parts defines the components of the skin, usually consisting of two parts, namely the skin and the emulator screen. The one with display represents the emulator screen, and the one with background and foreground represents the skin.",normalizedContent:"# multi-screen adaptation\n\nto enhance the development experience, aiot-ide has built-in **** features that allow a single set of code to run on multiple different device screens, testing the adaptation effect on different screens.\n\n\n# multi-device emulator creation\n\nto recreate the most realistic multi-screen adaptation development scenario, aiot-ide provides multiple emulators with different device size configurations and different image versions to test applications on various devices with different image systems.\n\ncurrently, three images are available for selection\n\n * vela-miwear-watch-5.0 stable release version of vela5.0\n\n * vela-miwear-watch-4.0 stable release version of vela4.0\n\n * vela-watch-4.0 development version of vela\n\ncurrently, six devices with different screen sizes are available for creation:\n\nxiaomiwatch 466*466\n\nredmiwatch\n\nxiaomiband\n\nxiaomibandpro\n\nxiaomi10band\n\nxiaomisoundmini\n\ncurrently, when creating an emulator, vela-miwear-watch-5.0 and vela-miwear-watch-4.0 only support one device type with the xiaomiwatch (466*466) size, while vela-watch-4.0 supports all the above device types and can also be customized for device type creation.\n\nnote\n\nthere is a performance difference between the emulator and the real device\n\n\n# custom emulator\n\nin addition, to support more device sizes, when creating an emulator, you can also choose the custom option for the emulator, which provides the following custom configurations:\n\n * 1. customize the emulator's width and height (width and height less than 800 and greater than 100), emulator shape, emulator density, etc.\n * 2. customize and set the emulator type, currently mainly watch, band, smartspeaker\n * 3. customize the emulator shape, currently there are two main shapes circular and rectangular, with the rectangular shape allowing customization of rounded corners\n * 4. customize the emulator screen dpi\n\n\n\nafter clicking the new button at the bottom and completing the emulator creation, aiot-ide will pop up a success prompt in the lower right corner, and the device management page will update the created emulator in real-time.\n\n\n\n\n# multi-screen preview\n\nafter creating emulators of different device types, when starting the emulator through the debug or run button, select the corresponding emulator for different devices and click ok to run them simultaneously.\n\n\n\nafter successful operation, the emulator preview page will display the preview effects of different device screens.\n\n\n\n\n# custom emulator skin\n\nin addition, if users are not satisfied with just customizing the display effect of the emulator and hope to preview the emulator device more realistically, we also provide the function of customizing the skin.\n\n\n# vela emulator skin group\n\nto create a skin, two images and a configuration file are required:\n\n * background.png is the main image of the device, requiring the screen area to be black\n * foreground.png is used to cover the part outside the emulator screen.\n * layout configuration file, mainly used to configure the layout information of the skin's required background.png and foreground.png\n\n\n\namong them, foreground.png is generally cut from the background image with the emulator screen part modified to transparent color. the comparison between without foreground.png and with foreground.png is as follows:\n\nforeground.png not configured\n\nforeground.png configured\n\n\n# creation of layout file\n\ncopy the following code and modify the information according to the comments, keeping the rest unchanged.\n\n  parts {\n    device {\n      display {\n        # emulator size \n        width 466\n        # emulator size\n        height 466\n        # x and y fill 0\n        x 0\n        y 0\n      }\n    }\n    portrait {\n      background {\n        # name of the background image\n        image background.png\n      }\n      foreground {\n        # name of the foreground image\n        mask foreground.png\n      }\n    }\n  }\n  layouts {\n    portrait {\n      // the size of the entire skin, usually using the pixel size of the background image\n      width 572\n      height 938\n      event ev_sw:0:1 \n      part1 {\n        name portrait\n        x 0\n        y 0\n      }\n      part2 {\n        name device\n        # the starting coordinates of the foreground image when cutting from the background image, calculated with the top left corner as 0,0\n        x 54\n        y 236\n      }\n    }\n  }\n\n  // fields that will be passed to the underlying configuration when creating the emulator\n  props {\n    // screen shape. optional values: circle (circular), rect (rectangular), pill-shaped (capsule-shaped screen eg: full-screen bracelet)\n    shape circle\n    // screen density, optional values: ['120', '140', '160', '180', '213', '240', '280', '320', '340', '360', '400', '420', '440', '480', '560', '640']\n    density 320\n    // device type, optional values: phone (mobile phone), watch (watch), pad (tablet), car (car), tv (television), band (bracelet), smartspeaker (speaker), default is watch\n    flavor watch\n  }\n\n\n\n# application of skin file\n\nopen the skd directory through aiot-ide. there is a skins directory under this directory. create a new folder named after your skin under the skins/user directory, and place the created files into it. if there is no user directory under skins, first create the user directory. then, when using the ide to create an emulator, you can choose to apply this skin.\n\nnote\n\nthe sdk directory is a directory starting with a dot. please enable the display of hidden files in the operating system before proceeding.\n\n\n\n\n# detailed explanation of layout\n\nthe content in the layout file is as follows:\n\n\n\ndetailed explanation of layout configuration content:\n\n * layout can define two layout methods: portrait and landscape, i.e., vertical and horizontal screens. the width and height are the pixel sizes of your background.png.\n\n * event is a fixed value, fill in ev_sw:0:0.\n\n * part1 refers to the background image and foreground image defined in the parts above. the name represents the name of the referenced part, and x, y represent the starting coordinates of the layout, starting from the top left corner as 0,0.\n\n * part2 refers to the display defined in the parts above. the name represents the name of the referenced part, and x, y represent the starting coordinates of the layout, starting from the top left corner as 0,0.\n\n * parts defines the components of the skin, usually consisting of two parts, namely the skin and the emulator screen. the one with display represents the emulator screen, and the one with background and foreground represents the skin.",charsets:{}},{title:"Memory Analysis",frontmatter:{},regularPath:"/en/tools/debug/memory.html",relativePath:"en/tools/debug/memory.md",key:"v-2c3d8df6",path:"/en/tools/debug/memory.html",headersStr:null,content:"# Memory Analysis\n\nWhen troubleshooting memory leaks, you can assist the analysis by taking two memory snapshots (dumps). For example, to troubleshoot a page memory leak, take a dump before entering the page and another after exiting the page. There are two scenarios for troubleshooting memory leaks:\n\nFor applications that do not rely on low-level capabilities: If your application does not require low-level capabilities such as blueos.multimedia.audio, you can test directly in AIoT-IDE. Click on Position 4 before and after the problematic scenario to take memory snapshots.\n\nFor applications that rely on low-level capabilities: You need to install firmware capable of executing JavaScript heap memory snapshots, run the command dump_js_heap /sdcard, and then copy the snapshot file from the real device to your computer. Load and analyze it in AIoT-IDE via Position 3.\n\nIn AIoT-IDE, the tools for JavaScript heap analysis and export are located in the function panel area. Select Debug -> Snapshot -> Profile, as shown in labels 1, 2, and 3 in the following image:\n\n",normalizedContent:"# memory analysis\n\nwhen troubleshooting memory leaks, you can assist the analysis by taking two memory snapshots (dumps). for example, to troubleshoot a page memory leak, take a dump before entering the page and another after exiting the page. there are two scenarios for troubleshooting memory leaks:\n\nfor applications that do not rely on low-level capabilities: if your application does not require low-level capabilities such as blueos.multimedia.audio, you can test directly in aiot-ide. click on position 4 before and after the problematic scenario to take memory snapshots.\n\nfor applications that rely on low-level capabilities: you need to install firmware capable of executing javascript heap memory snapshots, run the command dump_js_heap /sdcard, and then copy the snapshot file from the real device to your computer. load and analyze it in aiot-ide via position 3.\n\nin aiot-ide, the tools for javascript heap analysis and export are located in the function panel area. select debug -> snapshot -> profile, as shown in labels 1, 2, and 3 in the following image:\n\n",charsets:{}},{title:"APILevel",frontmatter:{},regularPath:"/en/guide/version/",relativePath:"en/guide/version/README.md",key:"v-1f294796",path:"/en/guide/version/",headersStr:null,content:"# APILevel\n\nAPILevel is used to identify the collection of interface standards provided by the current framework. By default, all interfaces in the documentation belong to APILevel 1. If certain interfaces belong to other versions, they will be marked accordingly.",normalizedContent:"# apilevel\n\napilevel is used to identify the collection of interface standards provided by the current framework. by default, all interfaces in the documentation belong to apilevel 1. if certain interfaces belong to other versions, they will be marked accordingly.",charsets:{}},{title:"Function Buttons",frontmatter:{},regularPath:"/en/tools/debug/toolbar.html",relativePath:"en/tools/debug/toolbar.md",key:"v-998bcf10",path:"/en/tools/debug/toolbar.html",headers:[{level:2,title:"Close All Simulators",slug:"close-all-simulators",normalizedTitle:"close all simulators",charIndex:215},{level:2,title:"Customize Simulator Display",slug:"customize-simulator-display",normalizedTitle:"customize simulator display",charIndex:432},{level:2,title:"Shutdown",slug:"shutdown",normalizedTitle:"shutdown",charIndex:717},{level:2,title:"Home",slug:"home",normalizedTitle:"home",charIndex:918},{level:2,title:"Terminal",slug:"terminal",normalizedTitle:"terminal",charIndex:1138},{level:2,title:"View Logs",slug:"view-logs",normalizedTitle:"view logs",charIndex:1371},{level:2,title:"Menu",slug:"menu",normalizedTitle:"menu",charIndex:1583},{level:2,title:"Screenshot",slug:"screenshot",normalizedTitle:"screenshot",charIndex:1796},{level:2,title:"Size",slug:"size",normalizedTitle:"size",charIndex:2087},{level:2,title:"Install rpk",slug:"install-rpk",normalizedTitle:"install rpk",charIndex:2311},{level:2,title:"Run rpk",slug:"run-rpk",normalizedTitle:"run rpk",charIndex:2545}],headersStr:"Close All Simulators Customize Simulator Display Shutdown Home Terminal View Logs Menu Screenshot Size Install rpk Run rpk",content:"# Function Buttons\n\nAfter the simulator starts successfully and enters the simulator operation page, AIoT-IDE provides several function buttons to facilitate developers in developing and debugging applications.\n\n\n# Close All Simulators\n\nClose All Simulators, located in the top-right corner of the simulator operation page, allows you to close all running simulators when clicked, as shown by number 1 in the following image.\n\n\n\n\n# Customize Simulator Display\n\nCustomize Simulator Display, located in the top-right corner of the simulator operation page, allows you to customize the display order of the running simulators in a pop-up box when clicked, as shown by number 1 and number 2 in the following image.\n\n\n\n\n# Shutdown\n\nShutdown: Each simulator display area has a shutdown button configured on the right side, allowing you to close a single running simulator, as shown by number 1 in the following image.\n\n\n\n\n# Home\n\nHome: Each simulator display area has a home button configured on the right side, allowing you to return to the current simulator's home page when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# Terminal\n\nTerminal: Each simulator display area has a terminal button configured on the right side, allowing you to access the simulator's command-line terminal when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# View Logs\n\nView Logs: Each simulator display area has a view logs button configured on the right side, allowing you to access and view logs when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# Menu\n\nMenu: Each simulator display area has a menu button configured on the right side, allowing you to return to the current simulator's menu page when clicked, as shown by number 1 in the following image.\n\n\n\n\n# Screenshot\n\nScreenshot: Each simulator display area has a screenshot button configured on the right side, allowing you to take a screenshot of the current simulator's display and choose between two modes: with skin and without skin, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# Size\n\nSize: Each simulator display area has a size button configured on the right side, allowing you to dynamically adjust the display size of the current simulator, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# Install rpk\n\nInstall rpk: Each simulator display area has an install rpk button configured on the right side, allowing you to select and install a local rpk file when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# Run rpk\n\nRun rpk: Each simulator display area has a run rpk button configured on the right side, allowing you to switch between running rpks or uninstall installed rpks from the installed rpk list when clicked, as shown by numbers 1, 2, and 3 in the following image.\n\n",normalizedContent:"# function buttons\n\nafter the simulator starts successfully and enters the simulator operation page, aiot-ide provides several function buttons to facilitate developers in developing and debugging applications.\n\n\n# close all simulators\n\nclose all simulators, located in the top-right corner of the simulator operation page, allows you to close all running simulators when clicked, as shown by number 1 in the following image.\n\n\n\n\n# customize simulator display\n\ncustomize simulator display, located in the top-right corner of the simulator operation page, allows you to customize the display order of the running simulators in a pop-up box when clicked, as shown by number 1 and number 2 in the following image.\n\n\n\n\n# shutdown\n\nshutdown: each simulator display area has a shutdown button configured on the right side, allowing you to close a single running simulator, as shown by number 1 in the following image.\n\n\n\n\n# home\n\nhome: each simulator display area has a home button configured on the right side, allowing you to return to the current simulator's home page when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# terminal\n\nterminal: each simulator display area has a terminal button configured on the right side, allowing you to access the simulator's command-line terminal when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# view logs\n\nview logs: each simulator display area has a view logs button configured on the right side, allowing you to access and view logs when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# menu\n\nmenu: each simulator display area has a menu button configured on the right side, allowing you to return to the current simulator's menu page when clicked, as shown by number 1 in the following image.\n\n\n\n\n# screenshot\n\nscreenshot: each simulator display area has a screenshot button configured on the right side, allowing you to take a screenshot of the current simulator's display and choose between two modes: with skin and without skin, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# size\n\nsize: each simulator display area has a size button configured on the right side, allowing you to dynamically adjust the display size of the current simulator, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# install rpk\n\ninstall rpk: each simulator display area has an install rpk button configured on the right side, allowing you to select and install a local rpk file when clicked, as shown by numbers 1 and 2 in the following image.\n\n\n\n\n# run rpk\n\nrun rpk: each simulator display area has a run rpk button configured on the right side, allowing you to switch between running rpks or uninstall installed rpks from the installed rpk list when clicked, as shown by numbers 1, 2, and 3 in the following image.\n\n",charsets:{}},{title:"Compile Preview",frontmatter:{},regularPath:"/en/tools/debug/start.html",relativePath:"en/tools/debug/start.md",key:"v-fb2b5dac",path:"/en/tools/debug/start.html",headers:[{level:2,title:"Run the Project",slug:"run-the-project",normalizedTitle:"run the project",charIndex:396}],headersStr:"Run the Project",content:"# Compile Preview\n\nRunning, debugging, releasing, and packaging a Vela project is mainly achieved through the buttons in the top action bar. Additionally, the user guide page and device management page on the right ensure that the current development environment has a simulator runtime environment, while the specific display effect is shown in the simulator preview interface on the right.\n\n\n# Run the Project\n\nClick the Select Device button, choose the simulator to run, click OK, and then click Debug to start the simulator.\n\n\n\nAfter the simulator starts successfully, it will push the current project. Once the push is successful, you can preview the effect in the simulator preview page, as shown in the following dynamic image:\n\n\n\nClicking Run again will stop pushing the current project to the simulator, but the simulator will continue to run.",normalizedContent:"# compile preview\n\nrunning, debugging, releasing, and packaging a vela project is mainly achieved through the buttons in the top action bar. additionally, the user guide page and device management page on the right ensure that the current development environment has a simulator runtime environment, while the specific display effect is shown in the simulator preview interface on the right.\n\n\n# run the project\n\nclick the select device button, choose the simulator to run, click ok, and then click debug to start the simulator.\n\n\n\nafter the simulator starts successfully, it will push the current project. once the push is successful, you can preview the effect in the simulator preview page, as shown in the following dynamic image:\n\n\n\nclicking run again will stop pushing the current project to the simulator, but the simulator will continue to run.",charsets:{}},{title:"Log Viewing",frontmatter:{},regularPath:"/en/tools/debug/watch-log.html",relativePath:"en/tools/debug/watch-log.md",key:"v-5f79073c",path:"/en/tools/debug/watch-log.html",headersStr:null,content:"# Log Viewing\n\nBy utilizing various logs (such as compilation logs and simulator logs), you can quickly understand the current state of your application, thereby improving development efficiency. To view the logs, simply click on the Output option in the Function Panel. The log output panel provides a range of practical features, including: Switch-Log-Type, Clear-Logs, Enable/Disable-Auto-Scroll, Export-Logs, and Filter-Logs.\n\n * Switch Log Type: Select the type of logs you want to view, such as simulator logs, compilation logs, etc.\n * Clear Logs: One-click to clear all logs of the current type.\n * Enable/Disable Auto-Scroll: When enabled, the view will automatically scroll to the latest log entry when new logs are added to the output panel; when disabled, auto-scrolling stops, and logs remain at the last viewed position.\n * Export Logs: Export logs of the current type and save them to the logs directory of the current project.\n * Filter Logs: With the Output panel in focus, use Command + F (or Ctrl + F on Windows) to trigger a keyword search in the logs, with support for regular expressions.\n\n\n\nFriendly Reminder: If you encounter anomalies during development, such as a black preview screen or inconsistencies between rendered content and code, first check the Compilation Logs to confirm whether the application was built successfully, and then examine the Simulator Logs to determine if the application is running properly. If both are fine, please refer to the documentation or seek technical support from the AIoT-IDE official team.",normalizedContent:"# log viewing\n\nby utilizing various logs (such as compilation logs and simulator logs), you can quickly understand the current state of your application, thereby improving development efficiency. to view the logs, simply click on the output option in the function panel. the log output panel provides a range of practical features, including: switch-log-type, clear-logs, enable/disable-auto-scroll, export-logs, and filter-logs.\n\n * switch log type: select the type of logs you want to view, such as simulator logs, compilation logs, etc.\n * clear logs: one-click to clear all logs of the current type.\n * enable/disable auto-scroll: when enabled, the view will automatically scroll to the latest log entry when new logs are added to the output panel; when disabled, auto-scrolling stops, and logs remain at the last viewed position.\n * export logs: export logs of the current type and save them to the logs directory of the current project.\n * filter logs: with the output panel in focus, use command + f (or ctrl + f on windows) to trigger a keyword search in the logs, with support for regular expressions.\n\n\n\nfriendly reminder: if you encounter anomalies during development, such as a black preview screen or inconsistencies between rendered content and code, first check the compilation logs to confirm whether the application was built successfully, and then examine the simulator logs to determine if the application is running properly. if both are fine, please refer to the documentation or seek technical support from the aiot-ide official team.",charsets:{}},{title:"Code Beautification",frontmatter:{},regularPath:"/en/tools/dev/format.html",relativePath:"en/tools/dev/format.md",key:"v-7e7f9636",path:"/en/tools/dev/format.html",headers:[{level:2,title:"Auto Formatting",slug:"auto-formatting",normalizedTitle:"auto formatting",charIndex:26}],headersStr:"Auto Formatting",content:'# Code Beautification\n\n\n# Auto Formatting\n\nAuto-formatting of code is crucial in software development, as it enhances code consistency, improves readability, simplifies the review process, and supports agile development practices. AIoT-IDE provides this feature, but it is turned off by default. To enable it, simply follow these steps:\n\nUse the shortcut key Command (Ctrl for Windows systems) to open the Settings panel. Enter "format" in the search bar.\n\nCheck the "Editor: Format On Save" option, as shown in the image below.\n\n\n\nOnce this option is activated, the system will automatically format your code using Prettier each time you save.\n\nPrettier is a popular code formatting tool that supports multiple development languages and file formats. Its goal is to provide a unified code style to simplify code maintenance and improve team efficiency. AIoT-IDE has Prettier built-in, so you don\'t need to take any additional steps to use it. The specific effect is shown in the dynamic image below:\n\n',normalizedContent:'# code beautification\n\n\n# auto formatting\n\nauto-formatting of code is crucial in software development, as it enhances code consistency, improves readability, simplifies the review process, and supports agile development practices. aiot-ide provides this feature, but it is turned off by default. to enable it, simply follow these steps:\n\nuse the shortcut key command (ctrl for windows systems) to open the settings panel. enter "format" in the search bar.\n\ncheck the "editor: format on save" option, as shown in the image below.\n\n\n\nonce this option is activated, the system will automatically format your code using prettier each time you save.\n\nprettier is a popular code formatting tool that supports multiple development languages and file formats. its goal is to provide a unified code style to simplify code maintenance and improve team efficiency. aiot-ide has prettier built-in, so you don\'t need to take any additional steps to use it. the specific effect is shown in the dynamic image below:\n\n',charsets:{}},{title:"Application Hot Update",frontmatter:{},regularPath:"/en/tools/dev/build.html",relativePath:"en/tools/dev/build.md",key:"v-975854e4",path:"/en/tools/dev/build.html",headersStr:null,content:"# Application Hot Update\n\nWhen developing Xiaomi Vela JS applications using AIoT-IDE, a built-in hot update feature is also included. When developers click the top action bar Run or Debug button to run the simulator, file changes are constantly monitored.\n\n\n\nWhen file changes are detected, automatic compilation is triggered, the current project is pushed, and the latest effects of the compiled code can be previewed in real-time. When the Run or Debug button is clicked again to cancel the push, file monitoring will stop, reducing performance consumption.\n\n",normalizedContent:"# application hot update\n\nwhen developing xiaomi vela js applications using aiot-ide, a built-in hot update feature is also included. when developers click the top action bar run or debug button to run the simulator, file changes are constantly monitored.\n\n\n\nwhen file changes are detected, automatic compilation is triggered, the current project is pushed, and the latest effects of the compiled code can be previewed in real-time. when the run or debug button is clicked again to cancel the push, file monitoring will stop, reducing performance consumption.\n\n",charsets:{}},{title:"Visual Editing",frontmatter:{},regularPath:"/en/tools/dev/manifest.html",relativePath:"en/tools/dev/manifest.md",key:"v-e7f83714",path:"/en/tools/dev/manifest.html",headersStr:null,content:"# Visual Editing\n\nAs the main configuration file for the Xiaomi Vela JS Application, manifest.json has a visual editing interface configured in the AIoT-IDE, as shown in the following figure:\n\n\n\nAfter clicking to open the manifest visual interface, you can edit manifest.json more intuitively and clearly.\n\n",normalizedContent:"# visual editing\n\nas the main configuration file for the xiaomi vela js application, manifest.json has a visual editing interface configured in the aiot-ide, as shown in the following figure:\n\n\n\nafter clicking to open the manifest visual interface, you can edit manifest.json more intuitively and clearly.\n\n",charsets:{}},{title:"Function Introduction",frontmatter:{},regularPath:"/en/tools/devicedebug/start.html",relativePath:"en/tools/devicedebug/start.md",key:"v-68186856",path:"/en/tools/devicedebug/start.html",headers:[{level:2,title:"Device Upgrade",slug:"device-upgrade",normalizedTitle:"device upgrade",charIndex:233},{level:2,title:"Environment Preparation",slug:"environment-preparation",normalizedTitle:"environment preparation",charIndex:595},{level:2,title:"Connection",slug:"connection",normalizedTitle:"connection",charIndex:801},{level:2,title:"Debugging",slug:"debugging",normalizedTitle:"debugging",charIndex:392}],headersStr:"Device Upgrade Environment Preparation Connection Debugging",content:'# Function Introduction\n\nIt supports real-device debugging when developing Xiaomi Vela JS applications. In AIoT-IDE, you can connect to a real device using its device ID and push the application to the real device for debugging.\n\n\n# Device Upgrade\n\nCurrently, real-device debugging only supports O62 devices. Please contact Xiaomi staff to obtain the document "Xiaomi-Vela-Device-Real-Device-Debugging-Full-Process-Guide" and follow the instructions in the document to obtain the corresponding OTA package and upgrade the device to the specified version that supports real-device debugging.\n\n\n# Environment Preparation\n\n 1. Please use the beta version of Mi Fitness and connect the test device.\n 2. Ensure that the computer network and the mobile phone network are on the same local area network.\n\n\n# Connection\n\n 1. Open rpk First, open the installed real-device debugging debug-app on the real device (marked in the red box in the image).\n\n\n\n 2. Connect After opening the debug-app, click to start debugging. The middle button status of the debug-app will enter "Waiting for IDE Connection".\n\n 3. IDE-side Connection Open AIoT-IDE on the computer and enter the real-device debugging interface.\n\n 4. Start Connection Click Connect Device, enter the device IDE (the device ID is obtained from the debug-App above), and click Connect.\n\n\n\n 5. Connection Successful After a successful connection, a real device information entry will appear in the list below the button, and the status will be displayed as Connected.\n\n\n\n\n# Debugging\n\nAfter successfully connecting to the real device, you can enter the debugging phase and debug the currently developed Vela application on the real device.\n\n 1. Select Device Click Connect Device in the top tab bar, select the real device, and then click Debug to enter real-device debugging mode.\n\n\n\n\n\n\n\n 2. Enter Real-Device Debugging After successful debugging and operation, the current application will automatically open on the real device, and the debugging panel will directly open at the bottom of AIoT-IDE.\n\n\n\n 3. Obtain Logs Click Obtain Logs in the real-device debugging panel to directly pull logs from the real device.\n\n\n\n 4. Push Other rpk In the real-device debugging page, you can click the Push rpk button, select the non-current project rpk to be pushed, and proceed with real-device debugging.\n\n\n\n 5. Real-Device Debugging Effect Perform debugging on the AIoT-IDE debugging panel, and the real device will display the debugging effect in real time (but hot updates are not supported. If you need to modify the source code, click the Package button to package the current application and install the rpk through the fourth step).\n\n',normalizedContent:'# function introduction\n\nit supports real-device debugging when developing xiaomi vela js applications. in aiot-ide, you can connect to a real device using its device id and push the application to the real device for debugging.\n\n\n# device upgrade\n\ncurrently, real-device debugging only supports o62 devices. please contact xiaomi staff to obtain the document "xiaomi-vela-device-real-device-debugging-full-process-guide" and follow the instructions in the document to obtain the corresponding ota package and upgrade the device to the specified version that supports real-device debugging.\n\n\n# environment preparation\n\n 1. please use the beta version of mi fitness and connect the test device.\n 2. ensure that the computer network and the mobile phone network are on the same local area network.\n\n\n# connection\n\n 1. open rpk first, open the installed real-device debugging debug-app on the real device (marked in the red box in the image).\n\n\n\n 2. connect after opening the debug-app, click to start debugging. the middle button status of the debug-app will enter "waiting for ide connection".\n\n 3. ide-side connection open aiot-ide on the computer and enter the real-device debugging interface.\n\n 4. start connection click connect device, enter the device ide (the device id is obtained from the debug-app above), and click connect.\n\n\n\n 5. connection successful after a successful connection, a real device information entry will appear in the list below the button, and the status will be displayed as connected.\n\n\n\n\n# debugging\n\nafter successfully connecting to the real device, you can enter the debugging phase and debug the currently developed vela application on the real device.\n\n 1. select device click connect device in the top tab bar, select the real device, and then click debug to enter real-device debugging mode.\n\n\n\n\n\n\n\n 2. enter real-device debugging after successful debugging and operation, the current application will automatically open on the real device, and the debugging panel will directly open at the bottom of aiot-ide.\n\n\n\n 3. obtain logs click obtain logs in the real-device debugging panel to directly pull logs from the real device.\n\n\n\n 4. push other rpk in the real-device debugging page, you can click the push rpk button, select the non-current project rpk to be pushed, and proceed with real-device debugging.\n\n\n\n 5. real-device debugging effect perform debugging on the aiot-ide debugging panel, and the real device will display the debugging effect in real time (but hot updates are not supported. if you need to modify the source code, click the package button to package the current application and install the rpk through the fourth step).\n\n',charsets:{}},{title:"Code Completion",frontmatter:{},regularPath:"/en/tools/dev/start.html",relativePath:"en/tools/dev/start.md",key:"v-686f59a6",path:"/en/tools/dev/start.html",headers:[{level:2,title:"Auto-completion for ux Files",slug:"auto-completion-for-ux-files",normalizedTitle:"auto-completion for ux files",charIndex:368},{level:2,title:"Completion in the style area",slug:"completion-in-the-style-area",normalizedTitle:"completion in the style area",charIndex:713},{level:2,title:"Other Completions",slug:"other-completions",normalizedTitle:"other completions",charIndex:904}],headersStr:"Auto-completion for ux Files Completion in the style area Other Completions",content:"# Code Completion\n\nAIoT-IDE is based on the secondary development of Visual Studio Code, so it inherits all code editing functions of VS Code. In addition, to better meet the development needs of Xiaomi Vela JS applications and enhance the developer experience, AIoT-IDE has built-in syntax functions for ux files, including syntax assistance and auto-completion.\n\n\n# Auto-completion for ux Files\n\n * Completion in the template area\n   * Tag completion: Start auto-completion after entering < (tag start)\n   * Tag attribute completion: Auto-completion of common attributes and component-specific attributes\n   * Tag attribute value completion: Auto-completion of attribute values if enumerated values exist\n\n\n\n\n# Completion in the style area\n\n * CSS property completion: Supports auto-completion of CSS properties;\n * CSS property value completion: Supports auto-completion of CSS property values.\n\n\n\n\n# Other Completions\n\n * Path completion: Auto-completion of file paths, such as component paths;\n * Class value completion: Auto-completion based on class values defined in the style tag.\n\n\n\nJump to Definition in ux Files\n\n * Jump support: Jump to class and id in the template area, variables, methods, custom components, and interfaces in the script area;\n * Jump operation: Use command + left-click on Mac or ctrl + left-click on Windows to jump to the definition.\n\nLink Jump in ux Files\n\n * Link jump: Jump from the ux file to the corresponding linked file;\n * Jump operation: Use command + left-click on Mac or ctrl + left-click on Windows to perform the jump.\n\n\n\nHover Tips in ux Files\n\n * Tag tips: Display relevant information about tags;\n * Attribute value tips: Display relevant information about tag attribute values;\n * Style tips: Display style information about style;\n * Script tips: Display method, imported module, and other tips in the script area.\n\n",normalizedContent:"# code completion\n\naiot-ide is based on the secondary development of visual studio code, so it inherits all code editing functions of vs code. in addition, to better meet the development needs of xiaomi vela js applications and enhance the developer experience, aiot-ide has built-in syntax functions for ux files, including syntax assistance and auto-completion.\n\n\n# auto-completion for ux files\n\n * completion in the template area\n   * tag completion: start auto-completion after entering < (tag start)\n   * tag attribute completion: auto-completion of common attributes and component-specific attributes\n   * tag attribute value completion: auto-completion of attribute values if enumerated values exist\n\n\n\n\n# completion in the style area\n\n * css property completion: supports auto-completion of css properties;\n * css property value completion: supports auto-completion of css property values.\n\n\n\n\n# other completions\n\n * path completion: auto-completion of file paths, such as component paths;\n * class value completion: auto-completion based on class values defined in the style tag.\n\n\n\njump to definition in ux files\n\n * jump support: jump to class and id in the template area, variables, methods, custom components, and interfaces in the script area;\n * jump operation: use command + left-click on mac or ctrl + left-click on windows to jump to the definition.\n\nlink jump in ux files\n\n * link jump: jump from the ux file to the corresponding linked file;\n * jump operation: use command + left-click on mac or ctrl + left-click on windows to perform the jump.\n\n\n\nhover tips in ux files\n\n * tag tips: display relevant information about tags;\n * attribute value tips: display relevant information about tag attribute values;\n * style tips: display style information about style;\n * script tips: display method, imported module, and other tips in the script area.\n\n",charsets:{}},{title:"Run the emulator",frontmatter:{},regularPath:"/en/tools/emulator/emulator-run.html",relativePath:"en/tools/emulator/emulator-run.md",key:"v-672f48dc",path:"/en/tools/emulator/emulator-run.html",headersStr:null,content:"# Run the emulator\n\nClick the Run icon in the emulator list on the Device Management page to automatically run the emulator, and the button will enter a loading state. However, after successfully running the emulator through the Device Management page, the currently opened Xiaomi Vela JS Application Project will not be pushed. You still need to click the Select Device button in the top action bar, select the running emulator, and then click the Debug button to run the current project.\n\n\n\n * After successful running through the Device Management page, different images will exhibit different behaviors:\n   \n   * The emulator with the vela-miwear-watch-5.0 image version will display the watch face page.\n   \n   * The emulator with the vela-miwear-watch-4.0 image version will display the watch face page.\n   \n   * The emulator with the vela-watch-4.0 image version will display a black screen.\n\nAs shown in labels 1 and 2 in the following figure:\n\n",normalizedContent:"# run the emulator\n\nclick the run icon in the emulator list on the device management page to automatically run the emulator, and the button will enter a loading state. however, after successfully running the emulator through the device management page, the currently opened xiaomi vela js application project will not be pushed. you still need to click the select device button in the top action bar, select the running emulator, and then click the debug button to run the current project.\n\n\n\n * after successful running through the device management page, different images will exhibit different behaviors:\n   \n   * the emulator with the vela-miwear-watch-5.0 image version will display the watch face page.\n   \n   * the emulator with the vela-miwear-watch-4.0 image version will display the watch face page.\n   \n   * the emulator with the vela-watch-4.0 image version will display a black screen.\n\nas shown in labels 1 and 2 in the following figure:\n\n",charsets:{}},{title:"Device Management",frontmatter:{},regularPath:"/en/tools/emulator/create-emulator.html",relativePath:"en/tools/emulator/create-emulator.md",key:"v-90080bd4",path:"/en/tools/emulator/create-emulator.html",headers:[{level:2,title:"Simulator Device Management",slug:"simulator-device-management",normalizedTitle:"simulator device management",charIndex:408},{level:3,title:"Automatic Simulator Creation",slug:"automatic-simulator-creation",normalizedTitle:"automatic simulator creation",charIndex:749},{level:3,title:"Creating a New Simulator",slug:"creating-a-new-simulator",normalizedTitle:"creating a new simulator",charIndex:1294},{level:2,title:"Simulator SDK Management",slug:"simulator-sdk-management",normalizedTitle:"simulator sdk management",charIndex:3100},{level:2,title:"Device Usage Configuration",slug:"device-usage-configuration",normalizedTitle:"device usage configuration",charIndex:3792}],headersStr:"Simulator Device Management Automatic Simulator Creation Creating a New Simulator Simulator SDK Management Device Usage Configuration",content:"# Device Management\n\nThe Device Management page is mainly divided into two sections:\n\n * 1. Simulator Version Management: Provides functions for adding, deleting, modifying, querying, and running simulators, as shown in Figure 1 below.\n * 2. Vela Image Version Management: Offers installation and updates for SDK packages required for the simulator's operating environment, as shown in Figure 2 below.\n\n\n\n\n# Simulator Device Management\n\nSimulator Device Management primarily displays basic information about the simulator:\n\n * Name\n * Image Version\n * Screen Size\n * Build Time\n * Action Bar (provides functions such as delete and run)\n\nAdditionally, users can click the New button in the top-left corner to enter the simulator creation page.\n\n\n\n\n# Automatic Simulator Creation\n\nWhen using the AIoT-IDE development tool for the first time, during the initialization of the simulator environment, the system checks whether a simulator has already been created locally. If no simulator has been created locally, developers will be prompted to automatically create a simulator.\n\n\n\nSelecting Confirm will automatically create a formal version simulator after the environment is initialized.\n\n\n\nSelecting Create All Device Simulators will automatically create simulators for all device types.\n\n\n\n\n# Creating a New Simulator\n\nClick the New button in the figure above to open the simulator creation page. When first entering the Create Simulator Page, the default image version is vela-miwear-watch-5.0. After entering the simulator name, click New to complete the creation. As shown in Labels 1, 2, 3, 4 in the figure below:\n\n\n\nIn addition to the default vela-miwear-watch-5.0 image, users can also select the vela-miwear-watch-4.0 image and vela-watch-4.0 image from the dropdown in Label 3 in the figure above, as shown in Labels 1, 2 in the figure below:\n\n\n\nIn the Device Management list, operations can be performed on the created simulators, with buttons provided for running, pausing, and deleting.\n\n * Additionally, in the Device Management list, multiple quick configurations are provided for user convenience:\n   \n   * Copy Start Command: Copies the start command for the current simulator, facilitating user self-startup of the simulator and troubleshooting when simulator startup fails.\n   \n   * Open Simulator Directory: Opens the directory where simulator files are stored, allowing direct viewing of simulator configuration files.\n   \n   * Open Image File: Opens the directory where simulator SDK packages are stored, allowing direct viewing of simulator SDK package files.\n   \n   * Install Rpk: After the simulator runs successfully, it allows selecting Rpk packages from the local environment for direct installation and preview (disabled when the simulator is not running).\n   \n   * Custom Image Directory: When there are multiple image files locally, users can customize the image directory to run their local image files.\n   \n   * Reset Image Directory to Default: After customizing the image directory, users can reset the image running directory to the system default directory.\n\n\n\n\n# Simulator SDK Management\n\nSimulator SDK Management is mainly divided into two sections:\n\n * Simulator Kernel, as shown in Figure 1 below\n * Simulator Image, as shown in Figure 2 below\n\n\n\nThe Simulator SDK Management page primarily displays simulator information across four dimensions:\n\n * Name\n * Version\n * Build Time\n * Status\n\nEach time AIoT-IDE is launched, it automatically detects whether the simulator kernel and simulator image versions need to be updated or installed. Users can view the status column in the list to see if the simulator kernel or simulator image is installed or requires an upgrade. They can manually click to install or upgrade, as shown in Figure 1 below.\n\n\n\n\n# Device Usage Configuration\n\nIn addition to the basic functions above, the Simulator Device Management page provides a simple device usage configuration (as shown in Figure 1 below):\n\n * Adb Mode: Whether to prioritize using the plugin's built-in ADB module or the host's local ADB module (as shown in Figure 2 below).\n * Hide Qt Window: Whether to use GRPC technology to embed the simulator into the IDE for display, or to pop it up externally outside the IDE (as shown in Figure 3 below).\n\n",normalizedContent:"# device management\n\nthe device management page is mainly divided into two sections:\n\n * 1. simulator version management: provides functions for adding, deleting, modifying, querying, and running simulators, as shown in figure 1 below.\n * 2. vela image version management: offers installation and updates for sdk packages required for the simulator's operating environment, as shown in figure 2 below.\n\n\n\n\n# simulator device management\n\nsimulator device management primarily displays basic information about the simulator:\n\n * name\n * image version\n * screen size\n * build time\n * action bar (provides functions such as delete and run)\n\nadditionally, users can click the new button in the top-left corner to enter the simulator creation page.\n\n\n\n\n# automatic simulator creation\n\nwhen using the aiot-ide development tool for the first time, during the initialization of the simulator environment, the system checks whether a simulator has already been created locally. if no simulator has been created locally, developers will be prompted to automatically create a simulator.\n\n\n\nselecting confirm will automatically create a formal version simulator after the environment is initialized.\n\n\n\nselecting create all device simulators will automatically create simulators for all device types.\n\n\n\n\n# creating a new simulator\n\nclick the new button in the figure above to open the simulator creation page. when first entering the create simulator page, the default image version is vela-miwear-watch-5.0. after entering the simulator name, click new to complete the creation. as shown in labels 1, 2, 3, 4 in the figure below:\n\n\n\nin addition to the default vela-miwear-watch-5.0 image, users can also select the vela-miwear-watch-4.0 image and vela-watch-4.0 image from the dropdown in label 3 in the figure above, as shown in labels 1, 2 in the figure below:\n\n\n\nin the device management list, operations can be performed on the created simulators, with buttons provided for running, pausing, and deleting.\n\n * additionally, in the device management list, multiple quick configurations are provided for user convenience:\n   \n   * copy start command: copies the start command for the current simulator, facilitating user self-startup of the simulator and troubleshooting when simulator startup fails.\n   \n   * open simulator directory: opens the directory where simulator files are stored, allowing direct viewing of simulator configuration files.\n   \n   * open image file: opens the directory where simulator sdk packages are stored, allowing direct viewing of simulator sdk package files.\n   \n   * install rpk: after the simulator runs successfully, it allows selecting rpk packages from the local environment for direct installation and preview (disabled when the simulator is not running).\n   \n   * custom image directory: when there are multiple image files locally, users can customize the image directory to run their local image files.\n   \n   * reset image directory to default: after customizing the image directory, users can reset the image running directory to the system default directory.\n\n\n\n\n# simulator sdk management\n\nsimulator sdk management is mainly divided into two sections:\n\n * simulator kernel, as shown in figure 1 below\n * simulator image, as shown in figure 2 below\n\n\n\nthe simulator sdk management page primarily displays simulator information across four dimensions:\n\n * name\n * version\n * build time\n * status\n\neach time aiot-ide is launched, it automatically detects whether the simulator kernel and simulator image versions need to be updated or installed. users can view the status column in the list to see if the simulator kernel or simulator image is installed or requires an upgrade. they can manually click to install or upgrade, as shown in figure 1 below.\n\n\n\n\n# device usage configuration\n\nin addition to the basic functions above, the simulator device management page provides a simple device usage configuration (as shown in figure 1 below):\n\n * adb mode: whether to prioritize using the plugin's built-in adb module or the host's local adb module (as shown in figure 2 below).\n * hide qt window: whether to use grpc technology to embed the simulator into the ide for display, or to pop it up externally outside the ide (as shown in figure 3 below).\n\n",charsets:{}},{title:"Project Type",frontmatter:{},regularPath:"/en/tools/project/template.html",relativePath:"en/tools/project/template.md",key:"v-044a34d4",path:"/en/tools/project/template.html",headersStr:null,content:"# Project Type\n\nAIoT-IDE not only supports Xiaomi Vela JS application projects, but also enables the creation of Quick App projects.\n\n\n\nAs shown in Label 1, 2 in the image above, after opening the New Project Popup, you can select quickApp from the left-side menu, then click Create to enter the creation page. Follow the input prompts to enter the creation information, and you can create a Quick App project.\n\n",normalizedContent:"# project type\n\naiot-ide not only supports xiaomi vela js application projects, but also enables the creation of quick app projects.\n\n\n\nas shown in label 1, 2 in the image above, after opening the new project popup, you can select quickapp from the left-side menu, then click create to enter the creation page. follow the input prompts to enter the creation information, and you can create a quick app project.\n\n",charsets:{}},{title:"Create a New Project",frontmatter:{},regularPath:"/en/tools/project/creat-project.html",relativePath:"en/tools/project/creat-project.md",key:"v-427a1a38",path:"/en/tools/project/creat-project.html",headersStr:null,content:"# Create a New Project\n\nAIoT-IDE provides functionality for creating and managing Xiaomi Vela JS application projects.\n\nFor developers using AIoT-IDE for the first time, follow these steps to open the new project dialog and create a project:\n\n * 1. Click the File button in the top-left corner to display the drop-down menu.\n * 2. Click the New Project menu to open the new project dialog.\n\n\n\nWhen creating a new project, you can select the project type and create a basic Xiaomi Vela JS application project using the templates we provide. Currently, eight basic templates are available:\n\n * 1. Basic template for Xiaomi Vela JS application projects\n * 2. Calendar template for Xiaomi Vela JS application projects\n * 3. Chart template for Xiaomi Vela JS application projects\n * 4. List template for Xiaomi Vela JS application projects\n * 5. Music player template for Xiaomi Vela JS application projects\n * 6. Development example template for Xiaomi Vela JS application projects\n * 7. Calculator template for Xiaomi Vela JS application projects\n * 8. Settings panel template for Xiaomi Vela JS application projects\n\n\n\nAfter selecting a template, click Next and follow these steps to complete the creation:\n\n * 1. Enter the project name.\n * 2. Select the creation directory (AIoT-IDE will remember directories previously selected by the user, allowing for direct selection).\n * 3. After filling in the form, click Create to complete the project creation.\n\n\n\nAfter successful creation, AIoT-IDE will automatically open the created project. Follow the instructions on the guide page to install project dependencies, after which you can run the project (Labels 1 and 2 in the image below).\n\n",normalizedContent:"# create a new project\n\naiot-ide provides functionality for creating and managing xiaomi vela js application projects.\n\nfor developers using aiot-ide for the first time, follow these steps to open the new project dialog and create a project:\n\n * 1. click the file button in the top-left corner to display the drop-down menu.\n * 2. click the new project menu to open the new project dialog.\n\n\n\nwhen creating a new project, you can select the project type and create a basic xiaomi vela js application project using the templates we provide. currently, eight basic templates are available:\n\n * 1. basic template for xiaomi vela js application projects\n * 2. calendar template for xiaomi vela js application projects\n * 3. chart template for xiaomi vela js application projects\n * 4. list template for xiaomi vela js application projects\n * 5. music player template for xiaomi vela js application projects\n * 6. development example template for xiaomi vela js application projects\n * 7. calculator template for xiaomi vela js application projects\n * 8. settings panel template for xiaomi vela js application projects\n\n\n\nafter selecting a template, click next and follow these steps to complete the creation:\n\n * 1. enter the project name.\n * 2. select the creation directory (aiot-ide will remember directories previously selected by the user, allowing for direct selection).\n * 3. after filling in the form, click create to complete the project creation.\n\n\n\nafter successful creation, aiot-ide will automatically open the created project. follow the instructions on the guide page to install project dependencies, after which you can run the project (labels 1 and 2 in the image below).\n\n",charsets:{}},{title:"Managing Projects",frontmatter:{},regularPath:"/en/tools/project/project.html",relativePath:"en/tools/project/project.md",key:"v-136ceff0",path:"/en/tools/project/project.html",headers:[{level:2,title:"Opening Historical Projects",slug:"opening-historical-projects",normalizedTitle:"opening historical projects",charIndex:172},{level:2,title:"Deleting Projects",slug:"deleting-projects",normalizedTitle:"deleting projects",charIndex:443},{level:2,title:"Importing Projects",slug:"importing-projects",normalizedTitle:"importing projects",charIndex:777}],headersStr:"Opening Historical Projects Deleting Projects Importing Projects",content:"# Managing Projects\n\nFor Xiaomi Vela JS application projects created via a new project in AIoT-IDE, AIoT-IDE provides functions to delete and open historical projects.\n\n\n# Opening Historical Projects\n\nWhen opening the new project popup, you can view historical information cards for the projects you have created. Select one of the projects and open it using the Open button in the lower-right corner, as shown in Figures 1 and 2 below:\n\n\n\n\n# Deleting Projects\n\nMove the mouse to the Manage button at the top of the historical project information. After clicking, a check button will appear in the upper-right corner of each card. Select one or more historical projects, and then click Delete Project in the lower-right corner. This is shown in Labels 1, 2, and 3 below:\n\n\n\n\n# Importing Projects\n\nMove the mouse to the Import button at the top of the historical project information. After clicking, a folder selection box will automatically open. Select the corresponding project type to import. Non-quickApp projects and Xiaomi Vela JS application projects cannot be imported.\n\n",normalizedContent:"# managing projects\n\nfor xiaomi vela js application projects created via a new project in aiot-ide, aiot-ide provides functions to delete and open historical projects.\n\n\n# opening historical projects\n\nwhen opening the new project popup, you can view historical information cards for the projects you have created. select one of the projects and open it using the open button in the lower-right corner, as shown in figures 1 and 2 below:\n\n\n\n\n# deleting projects\n\nmove the mouse to the manage button at the top of the historical project information. after clicking, a check button will appear in the upper-right corner of each card. select one or more historical projects, and then click delete project in the lower-right corner. this is shown in labels 1, 2, and 3 below:\n\n\n\n\n# importing projects\n\nmove the mouse to the import button at the top of the historical project information. after clicking, a folder selection box will automatically open. select the corresponding project type to import. non-quickapp projects and xiaomi vela js application projects cannot be imported.\n\n",charsets:{}},{title:"Release Application",frontmatter:{},regularPath:"/en/tools/release/release.html",relativePath:"en/tools/release/release.md",key:"v-4583e590",path:"/en/tools/release/release.html",headersStr:null,content:"# Release Application\n\nUnlike the package button in the top button area, clicking the Release button to release the application will generate a release package.\n\nThe release package is designed for deployment to the production environment, so it undergoes stricter optimizations to reduce file size and loading time. Typically, the release package contains only necessary files and code, with all debug information, comments, and unused code removed to reduce file size and enhance performance.\n\nAt the same time, before generating the release package, it will check whether the current directory contains a signature file. If not, it will navigate to the signature creation page, where you can follow the prompts to create a signature file by clicking to complete the process.\n\n\n\nAfter the signature file is successfully created, click Release again to create the release package.\n\n",normalizedContent:"# release application\n\nunlike the package button in the top button area, clicking the release button to release the application will generate a release package.\n\nthe release package is designed for deployment to the production environment, so it undergoes stricter optimizations to reduce file size and loading time. typically, the release package contains only necessary files and code, with all debug information, comments, and unused code removed to reduce file size and enhance performance.\n\nat the same time, before generating the release package, it will check whether the current directory contains a signature file. if not, it will navigate to the signature creation page, where you can follow the prompts to create a signature file by clicking to complete the process.\n\n\n\nafter the signature file is successfully created, click release again to create the release package.\n\n",charsets:{}},{title:"Packaging Applications",frontmatter:{},regularPath:"/en/tools/release/start.html",relativePath:"en/tools/release/start.md",key:"v-956bf67c",path:"/en/tools/release/start.html",headersStr:null,content:'# Packaging Applications\n\nThe packaging of Xiaomi Vela JS applications employs a specialized .rpk file format. In AIoT-IDE, we provide two buttons, Package and Publish, in the top operation bar for packaging the project, as shown in Labels 1 and 2 in the following figure.\n\n\n\nSimply click on "Package Application" to execute the packaging in the function panel. Upon successful packaging, a debug package will be generated in the dist directory.\n\n\n\nThe debug package is designed to facilitate developers\' debugging efforts, so it does not undergo extensive optimization. Typically, the debug package includes debugging information to assist developers in debugging and locating errors.',normalizedContent:'# packaging applications\n\nthe packaging of xiaomi vela js applications employs a specialized .rpk file format. in aiot-ide, we provide two buttons, package and publish, in the top operation bar for packaging the project, as shown in labels 1 and 2 in the following figure.\n\n\n\nsimply click on "package application" to execute the packaging in the function panel. upon successful packaging, a debug package will be generated in the dist directory.\n\n\n\nthe debug package is designed to facilitate developers\' debugging efforts, so it does not undergo extensive optimization. typically, the debug package includes debugging information to assist developers in debugging and locating errors.',charsets:{}},{title:"About AIoT-IDE",frontmatter:{},regularPath:"/en/tools/start/about.html",relativePath:"en/tools/start/about.md",key:"v-202babb6",path:"/en/tools/start/about.html",headers:[{level:2,title:"Understanding the Interface",slug:"understanding-the-interface",normalizedTitle:"understanding the interface",charIndex:786}],headersStr:"Understanding the Interface",content:"# About AIoT-IDE\n\nAIoT-IDE is the official integrated development environment for developing Xiaomi Vela JS applications. Built on Visual Studio Code (hereinafter referred to as VS Code), it inherits all the features of VS Code, such as code editing, plugin integration, theme customization, and personalized settings. In addition, AIoT-IDE introduces a series of enhanced features specifically tailored for Vela JS application development, including but not limited to:\n\n * Smart coding suggestions\n * Vela JS application debugging\n * Real-time compilation preview\n * Packaging and publishing of Vela JS applications\n\nThis chapter primarily introduces the core features of AIoT-IDE. For download and installation instructions, please refer to the Installation Environment chapter.\n\n\n# Understanding the Interface\n\nThe main window of AIoT-IDE consists of several key areas, as follows:\n\n * 1. Sidebar: Provides functions such as the explorer, search, Git management, plugin marketplace, and quick access.\n * 2. Menu Bar: Includes menu items such as File, Edit, Selection, View, Go To, Terminal, Window, and Help.\n * 3. Toolbar: Contains functional buttons for running, debugging, restarting, packaging, and publishing.\n * 4. Code Editor Area: Includes features such as code editing, definition navigation, code completion, and error prompts. For details, refer to Code Completion.\n * 5. Function Panel: Provides panels for issues, output, terminal, debugging, etc.\n * 6. Simulator: Includes functions such as onboarding guide, simulation preview, simulated real-device operation, and screenshots.\n\n\n\nThe project window will only appear as shown above if a Xiaomi Vela JS application project is opened via AIoT-IDE. AIoT-IDE automatically identifies whether the opened project is a Xiaomi Vela JS application project based on its structure.",normalizedContent:"# about aiot-ide\n\naiot-ide is the official integrated development environment for developing xiaomi vela js applications. built on visual studio code (hereinafter referred to as vs code), it inherits all the features of vs code, such as code editing, plugin integration, theme customization, and personalized settings. in addition, aiot-ide introduces a series of enhanced features specifically tailored for vela js application development, including but not limited to:\n\n * smart coding suggestions\n * vela js application debugging\n * real-time compilation preview\n * packaging and publishing of vela js applications\n\nthis chapter primarily introduces the core features of aiot-ide. for download and installation instructions, please refer to the installation environment chapter.\n\n\n# understanding the interface\n\nthe main window of aiot-ide consists of several key areas, as follows:\n\n * 1. sidebar: provides functions such as the explorer, search, git management, plugin marketplace, and quick access.\n * 2. menu bar: includes menu items such as file, edit, selection, view, go to, terminal, window, and help.\n * 3. toolbar: contains functional buttons for running, debugging, restarting, packaging, and publishing.\n * 4. code editor area: includes features such as code editing, definition navigation, code completion, and error prompts. for details, refer to code completion.\n * 5. function panel: provides panels for issues, output, terminal, debugging, etc.\n * 6. simulator: includes functions such as onboarding guide, simulation preview, simulated real-device operation, and screenshots.\n\n\n\nthe project window will only appear as shown above if a xiaomi vela js application project is opened via aiot-ide. aiot-ide automatically identifies whether the opened project is a xiaomi vela js application project based on its structure.",charsets:{}},{title:"Understanding the Interface",frontmatter:{},regularPath:"/en/tools/start/project.html",relativePath:"en/tools/start/project.md",key:"v-47286cc4",path:"/en/tools/start/project.html",headers:[{level:2,title:"Interface Layout",slug:"interface-layout",normalizedTitle:"interface layout",charIndex:34},{level:2,title:"Toolbar Interface",slug:"toolbar-interface",normalizedTitle:"toolbar interface",charIndex:1082},{level:2,title:"Simulator Interface",slug:"simulator-interface",normalizedTitle:"simulator interface",charIndex:1812},{level:2,title:"User Guide Page",slug:"user-guide-page",normalizedTitle:"user guide page",charIndex:1896},{level:2,title:"Device Management Page",slug:"device-management-page",normalizedTitle:"device management page",charIndex:3208},{level:2,title:"Simulator Running Preview Page",slug:"simulator-running-preview-page",normalizedTitle:"simulator running preview page",charIndex:1966}],headersStr:"Interface Layout Toolbar Interface Simulator Interface User Guide Page Device Management Page Simulator Running Preview Page",content:"# Understanding the Interface\n\n\n# Interface Layout\n\nThe main window of AIoT-IDE consists of several key areas, as detailed below:\n\n 1. Sidebar: Provides functions such as resource explorer, search, Git management, plugin marketplace, and quick access.\n 2. Menu Bar: Includes menu items like File, Edit, Select, View, Go To, Terminal, Window, and Help.\n 3. Toolbar: Contains functional buttons for running, debugging, restarting, packaging, and publishing.\n 4. Code Editing Area: Offers features like code editing, definition navigation, code completion, and error prompts. For details, refer to code completion.\n 5. Function Panel: Provides panels for issues, output, terminal, debugging, etc.\n 6. Simulator: Includes functions like guide page prompts, simulation preview, real device operation simulation, and screenshots.\n\n\n\nThe main window interface, as shown above, only appears when a Xiaomi Vela JS application is opened through AIoT-IDE. AIoT-IDE automatically identifies whether the opened project is a Xiaomi Vela JS application project based on the project structure.\n\n\n# Toolbar Interface\n\nThe toolbar interface of AIoT-IDE contains several commonly used functions:\n\nSelect Device: Choose a simulator created locally\nDebug: Compile and preview the currently opened Xiaomi Vela JS application project, and open the debugging panel to debug the current project\nDevice: Open the device management page to create simulators of different image types and device types\nPackage: Package the current Xiaomi Vela JS application project into an rpk\nPublish: Generate a release-type application package (RPK)\n\nAdditionally, AIoT-IDE supports direct previewing of the rpk packaged from a Xiaomi Vela JS application project. The directory containing the unpacked rpk can be opened with AIoT-IDE for previewing.\n\n\n# Simulator Interface\n\nThe simulator interface primarily consists of three parts:\n\n * User Guide Page\n * Simulator SDK and Device Management Update Page\n * Simulator Running Preview Page\n\n\n# User Guide Page\n\nThe User Guide Page of the simulator guides users in initializing the running environment for the Xiaomi Vela JS application simulator. Follow the prompts on the guide page:\n\n * 1. Install project dependencies and wait for the project dependencies and environment to be installed before you can normally compile and preview the Xiaomi Vela JS application project.\n * 2. Initialize the simulator environment. The simulator user guide page will automatically check if the current environment has the simulator running environment. If not, follow the prompts on the user guide page to automatically install the simulator environment.\n\n\n\nAfter correctly operating as prompted on the guide page above, the guide page will indicate that the current project can be normally started, as shown by label 1 in the following image.\n\n\n\nNote: For performance reasons, the guide page does not continuously monitor whether project dependencies and the simulator running environment are ready. When users choose to manually install the project dependencies and simulator running environment, they can click the refresh button in the top-right corner of the guide page to update the guide page status.\n\n\n\n\n# Device Management Page\n\nThe device management page is divided into two main parts:\n\n * 1. Simulator Management and Real Device Debugging: Provides functions for adding, deleting, modifying, and querying simulators, as well as running them and debugging real devices.\n * 2. Simulator SDK Management: Provides installation and updates for SDK packages required for the simulator running environment.\n\n\n\n\n\n\n# Simulator Running Preview Page\n\nThe simulator preview page embeds the running simulator into AIoT-IDE using grpc technology for previewing. Once project dependencies and the simulator environment are ready, follow these steps to preview the current project:\n\n * 1. Click the Select Device button in the top action bar to choose one or more simulators to run.\n * 2. Click the Debug button in the top action bar to run the simulator. The button will enter a loading state and turn blue upon successful operation.\n * 3. The bottom toolbar starts outputting simulator running logs, and the page automatically switches from the user guide page to the simulator preview page.\n * 4. Upon successful simulator operation, the simulator preview page will display the corresponding simulator and push the currently opened Xiaomi Vela JS application to the running simulator.\n\n",normalizedContent:"# understanding the interface\n\n\n# interface layout\n\nthe main window of aiot-ide consists of several key areas, as detailed below:\n\n 1. sidebar: provides functions such as resource explorer, search, git management, plugin marketplace, and quick access.\n 2. menu bar: includes menu items like file, edit, select, view, go to, terminal, window, and help.\n 3. toolbar: contains functional buttons for running, debugging, restarting, packaging, and publishing.\n 4. code editing area: offers features like code editing, definition navigation, code completion, and error prompts. for details, refer to code completion.\n 5. function panel: provides panels for issues, output, terminal, debugging, etc.\n 6. simulator: includes functions like guide page prompts, simulation preview, real device operation simulation, and screenshots.\n\n\n\nthe main window interface, as shown above, only appears when a xiaomi vela js application is opened through aiot-ide. aiot-ide automatically identifies whether the opened project is a xiaomi vela js application project based on the project structure.\n\n\n# toolbar interface\n\nthe toolbar interface of aiot-ide contains several commonly used functions:\n\nselect device: choose a simulator created locally\ndebug: compile and preview the currently opened xiaomi vela js application project, and open the debugging panel to debug the current project\ndevice: open the device management page to create simulators of different image types and device types\npackage: package the current xiaomi vela js application project into an rpk\npublish: generate a release-type application package (rpk)\n\nadditionally, aiot-ide supports direct previewing of the rpk packaged from a xiaomi vela js application project. the directory containing the unpacked rpk can be opened with aiot-ide for previewing.\n\n\n# simulator interface\n\nthe simulator interface primarily consists of three parts:\n\n * user guide page\n * simulator sdk and device management update page\n * simulator running preview page\n\n\n# user guide page\n\nthe user guide page of the simulator guides users in initializing the running environment for the xiaomi vela js application simulator. follow the prompts on the guide page:\n\n * 1. install project dependencies and wait for the project dependencies and environment to be installed before you can normally compile and preview the xiaomi vela js application project.\n * 2. initialize the simulator environment. the simulator user guide page will automatically check if the current environment has the simulator running environment. if not, follow the prompts on the user guide page to automatically install the simulator environment.\n\n\n\nafter correctly operating as prompted on the guide page above, the guide page will indicate that the current project can be normally started, as shown by label 1 in the following image.\n\n\n\nnote: for performance reasons, the guide page does not continuously monitor whether project dependencies and the simulator running environment are ready. when users choose to manually install the project dependencies and simulator running environment, they can click the refresh button in the top-right corner of the guide page to update the guide page status.\n\n\n\n\n# device management page\n\nthe device management page is divided into two main parts:\n\n * 1. simulator management and real device debugging: provides functions for adding, deleting, modifying, and querying simulators, as well as running them and debugging real devices.\n * 2. simulator sdk management: provides installation and updates for sdk packages required for the simulator running environment.\n\n\n\n\n\n\n# simulator running preview page\n\nthe simulator preview page embeds the running simulator into aiot-ide using grpc technology for previewing. once project dependencies and the simulator environment are ready, follow these steps to preview the current project:\n\n * 1. click the select device button in the top action bar to choose one or more simulators to run.\n * 2. click the debug button in the top action bar to run the simulator. the button will enter a loading state and turn blue upon successful operation.\n * 3. the bottom toolbar starts outputting simulator running logs, and the page automatically switches from the user guide page to the simulator preview page.\n * 4. upon successful simulator operation, the simulator preview page will display the corresponding simulator and push the currently opened xiaomi vela js application to the running simulator.\n\n",charsets:{}},{title:"AIoT-toolkit",frontmatter:{},regularPath:"/en/tools/toolkit/start.html",relativePath:"en/tools/toolkit/start.md",key:"v-1dab2654",path:"/en/tools/toolkit/start.html",headers:[{level:2,title:"Functional Support",slug:"functional-support",normalizedTitle:"functional support",charIndex:310},{level:2,title:"Version Support",slug:"version-support",normalizedTitle:"version support",charIndex:1301},{level:2,title:"Functional Optimization",slug:"functional-optimization",normalizedTitle:"functional optimization",charIndex:2087}],headersStr:"Functional Support Version Support Functional Optimization",content:'# AIoT-toolkit\n\nWhen developers are working on the Xiaomi Vela JS application project, AIoT-IDE primarily uses the AIoT-toolkit built into the project template to complete the project compilation and construction tasks, resulting in build files (named with the rpk suffix, e.g., com.application.demo.rpk).\n\n\n# Functional Support\n\nThe AIoT-toolkit is a command-line tool that converts source code projects into target code projects and generates target code applications, while also providing emulator-related functions for developers. The AIoT-toolkit enables independent development of Xiaomi Vela JS applications without relying on AIoT-IDE. Without using AIoT-IDE, developers can fully utilize the AIoT-toolkit for development via command-line tools. The latest AIoT-toolkit2.0 currently offers the following common commands:\n\n * Create a project: npm create aiot\n * Run directly: aiot start. The first run will prompt you to create an emulator; follow the instructions.\n * Build the project to generate an rpk: aiot build\n * Build the project in release mode: aiot release\n * Get a list of connected devices: aiot getConnectedDevices\n * Get setting platforms: aiot getPlatforms\n * Create a Xiaomi Vela JS emulator: aiot crateVelaAvd\n * Delete a Xiaomi Vela JS emulator: aiot deleteVelafangAvd\n\n\n# Version Support\n\nCurrently, AIoT-IDE supports AIoT-toolkit1.0 and AIoT-toolkit2.0, with a minimum supported version of 1.0.18 for AIoT-toolkit1.0 and 2.0.x for AIoT-toolkit2.0. The latest version of AIoT-IDE, 1.6.0, recommends using 2.0, which offers faster compilation speeds and hot update support, providing developers with a better development experience.\n\nWhen AIoT-IDE opens a Xiaomi Vela JS application, it actively checks the version of AIoT-toolkit. If the current project uses AIoT-toolkit1.0, it will prompt you to upgrade and view the migration documentation, as shown in label 1 below:\n\n\n\nIf your project uses AIoT-toolkit2.0 but not the minimum official version supported by the current AIoT-IDE, it will forcefully prompt you to upgrade, as shown in label 1 below:\n\n\n\n\n# Functional Optimization\n\nCompared to AIoT-toolkit1.0, AIoT-toolkit2.0 offers the following significant improvements:\n\n 1. Complex functions can be directly written in template syntax.\n\n<div \n    id="{{(x=> x+ y)(1)}}" \n    onclick="(evt)=>{\n       const x = 10;\n       return sum(x, evt, y)\n    }">\n</div>\n\n\n 2. Variables in class can contain multiple class names (previously, each variable could only contain one class name).\n\nclass="a {{x}}"  // x="a1 a2 a3"\n\n\n 3. Style can be a string or an object (previously, it was only an object).\n\n <div style="a{{b}}c">\n\n </div>\n\n\n 4. The order of styles can be written arbitrarily (previously, a fixed order was required).\n\n border: solid red 10px; \n\n\n 5. Error prompts are located by row and column.',normalizedContent:'# aiot-toolkit\n\nwhen developers are working on the xiaomi vela js application project, aiot-ide primarily uses the aiot-toolkit built into the project template to complete the project compilation and construction tasks, resulting in build files (named with the rpk suffix, e.g., com.application.demo.rpk).\n\n\n# functional support\n\nthe aiot-toolkit is a command-line tool that converts source code projects into target code projects and generates target code applications, while also providing emulator-related functions for developers. the aiot-toolkit enables independent development of xiaomi vela js applications without relying on aiot-ide. without using aiot-ide, developers can fully utilize the aiot-toolkit for development via command-line tools. the latest aiot-toolkit2.0 currently offers the following common commands:\n\n * create a project: npm create aiot\n * run directly: aiot start. the first run will prompt you to create an emulator; follow the instructions.\n * build the project to generate an rpk: aiot build\n * build the project in release mode: aiot release\n * get a list of connected devices: aiot getconnecteddevices\n * get setting platforms: aiot getplatforms\n * create a xiaomi vela js emulator: aiot cratevelaavd\n * delete a xiaomi vela js emulator: aiot deletevelafangavd\n\n\n# version support\n\ncurrently, aiot-ide supports aiot-toolkit1.0 and aiot-toolkit2.0, with a minimum supported version of 1.0.18 for aiot-toolkit1.0 and 2.0.x for aiot-toolkit2.0. the latest version of aiot-ide, 1.6.0, recommends using 2.0, which offers faster compilation speeds and hot update support, providing developers with a better development experience.\n\nwhen aiot-ide opens a xiaomi vela js application, it actively checks the version of aiot-toolkit. if the current project uses aiot-toolkit1.0, it will prompt you to upgrade and view the migration documentation, as shown in label 1 below:\n\n\n\nif your project uses aiot-toolkit2.0 but not the minimum official version supported by the current aiot-ide, it will forcefully prompt you to upgrade, as shown in label 1 below:\n\n\n\n\n# functional optimization\n\ncompared to aiot-toolkit1.0, aiot-toolkit2.0 offers the following significant improvements:\n\n 1. complex functions can be directly written in template syntax.\n\n<div \n    id="{{(x=> x+ y)(1)}}" \n    onclick="(evt)=>{\n       const x = 10;\n       return sum(x, evt, y)\n    }">\n</div>\n\n\n 2. variables in class can contain multiple class names (previously, each variable could only contain one class name).\n\nclass="a {{x}}"  // x="a1 a2 a3"\n\n\n 3. style can be a string or an object (previously, it was only an object).\n\n <div style="a{{b}}c">\n\n </div>\n\n\n 4. the order of styles can be written arbitrarily (previously, a fixed order was required).\n\n border: solid red 10px; \n\n\n 5. error prompts are located by row and column.',charsets:{}},{title:"Upgrade Migration",frontmatter:{},regularPath:"/en/tools/toolkit/update.html",relativePath:"en/tools/toolkit/update.md",key:"v-75394a56",path:"/en/tools/toolkit/update.html",headers:[{level:2,title:"Precautions",slug:"precautions",normalizedTitle:"precautions",charIndex:342}],headersStr:"Precautions",content:'# Upgrade Migration\n\nCompared to AIoT-toolkit1.0, AIoT-toolkit2.0 has significantly improved the compilation speed of the Xiaomi Vela JS project, while also bringing some breaking changes. When an old project uses 1.0 and is preparing to upgrade to 2.0, please follow the precautions below to make minor modifications to the source code.\n\n\n# Precautions\n\nDevelopers upgrading from AIoT-toolkit1.0 to AIoT-toolkit2.0 should pay attention to the following:\n\nDESCRIPTION                                                  SOLUTION\nSome syntax corrections                                      Modify the source code\n1. No need to nest {{}} inside {{}}, change\nonclick="{{fun({{x}}，{{y}})}}" to onclick="fun(x, y)"\n\n2. Unsupported style selectors will report errors, such as\npseudo-classes\nDynamic paths are not converted to full paths:               Modify the source code\n1.0 syntax: ../../common\n2.0 syntax: /common/****\n\nThere are also some special dynamic CSS values that need to use new syntax when upgrading from AIoT-toolkit1.0 to AIoT-toolkit2.0:\n\n * transform\n\n this.divStyle = {\n   transform: JSON.stringify({\n       translateX: "10px",\n       translateY: "20px",\n       scaleX: 2,\n       scaleY: 0.5,\n       rotate: "10deg",\n   }),\n };\n\n\n * background\n   \n     // Linear gradient\n     this.divStyle = {\n         background: JSON.stringify({\n             values: [\n             {\n                 type: "linearGradient",\n                 directions: ["to", "left"],\n                 values: ["#FF0000 10px", "#0000FF 100%"],\n             },\n             ],\n         }),\n     };\n     // Radial gradient\n     this.divStyle = {\n         background: JSON.stringify({\n             values: [{\n                 type: "radialGradient",\n                 size: ["farthest-corner"],\n                 directions: ["center"],\n                 values: ["#3f87a6", "#ebf8e1", "#f69d3c"],\n             }],\n         }),\n     };\n   \n\n * filter\n\n   this.divStyle = {\n       filter: JSON.stringify({\n           blur: "10px",\n       }),\n   };\n\n\n * url\n\nthis.divStyle = {\n   backgroundImage: "/common/logo.png",\n};\n\n\nNote\n\nPlease be sure to make the modifications according to the instructions in the precautions, otherwise, it will affect the normal operation and startup of the project after upgrading to 2.0.',normalizedContent:'# upgrade migration\n\ncompared to aiot-toolkit1.0, aiot-toolkit2.0 has significantly improved the compilation speed of the xiaomi vela js project, while also bringing some breaking changes. when an old project uses 1.0 and is preparing to upgrade to 2.0, please follow the precautions below to make minor modifications to the source code.\n\n\n# precautions\n\ndevelopers upgrading from aiot-toolkit1.0 to aiot-toolkit2.0 should pay attention to the following:\n\ndescription                                                  solution\nsome syntax corrections                                      modify the source code\n1. no need to nest {{}} inside {{}}, change\nonclick="{{fun({{x}}，{{y}})}}" to onclick="fun(x, y)"\n\n2. unsupported style selectors will report errors, such as\npseudo-classes\ndynamic paths are not converted to full paths:               modify the source code\n1.0 syntax: ../../common\n2.0 syntax: /common/****\n\nthere are also some special dynamic css values that need to use new syntax when upgrading from aiot-toolkit1.0 to aiot-toolkit2.0:\n\n * transform\n\n this.divstyle = {\n   transform: json.stringify({\n       translatex: "10px",\n       translatey: "20px",\n       scalex: 2,\n       scaley: 0.5,\n       rotate: "10deg",\n   }),\n };\n\n\n * background\n   \n     // linear gradient\n     this.divstyle = {\n         background: json.stringify({\n             values: [\n             {\n                 type: "lineargradient",\n                 directions: ["to", "left"],\n                 values: ["#ff0000 10px", "#0000ff 100%"],\n             },\n             ],\n         }),\n     };\n     // radial gradient\n     this.divstyle = {\n         background: json.stringify({\n             values: [{\n                 type: "radialgradient",\n                 size: ["farthest-corner"],\n                 directions: ["center"],\n                 values: ["#3f87a6", "#ebf8e1", "#f69d3c"],\n             }],\n         }),\n     };\n   \n\n * filter\n\n   this.divstyle = {\n       filter: json.stringify({\n           blur: "10px",\n       }),\n   };\n\n\n * url\n\nthis.divstyle = {\n   backgroundimage: "/common/logo.png",\n};\n\n\nnote\n\nplease be sure to make the modifications according to the instructions in the precautions, otherwise, it will affect the normal operation and startup of the project after upgrading to 2.0.',charsets:{}},{title:"Home",frontmatter:{home:!0,heroImage:"/xiaomi_vela.png",heroText:"JS应用开发文档",tagline:"开发者友好，性能高效的IoT跨端应用框架",actionText:"快速开始",actionLink:"/zh/guide/",features:[{title:"开发者友好",details:"类Web开发范式，快速上手，提供一站式开发工具，便捷高效。"},{title:"丰富的组件和接口",details:"提供了多种常用组件和接口，如网络、音频、图形和安全等，方便开发者快速构建应用。"},{title:"性能高效",details:"基于 Vela OS 进行应用开发，具有高实时性、低功耗、低延迟等特点，同时具备出色的渲染能力，媲美原生的流畅体验。"}],footer:"© Xiaomi Vela all rights reserved."},regularPath:"/zh/",relativePath:"zh/README.md",key:"v-3535af55",path:"/zh/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"barcode",frontmatter:{},regularPath:"/zh/components/basic/barcode.html",relativePath:"zh/components/basic/barcode.md",key:"v-a7dea294",path:"/zh/components/basic/barcode.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:14},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:41},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:54},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:158},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:411},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:426}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# barcode\n\n\n# 概述\n\n条形码，将文本内容转换为条形码展示。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称      类型       默认值   必填   描述\nvalue   string   -     是    条形码内容，码制为Code128码，长度小于等于20字节\n\n\n# 样式\n\n支持通用样式\n\n名称                 类型        默认值       必填   描述\ncolor              <color>   #000000   否    条形码颜色\nbackground-color   <color>   #ffffff   否    条形码背景颜色\n\n注意\n\n * 当设置transform的rotate属性时，该组件只能旋转为垂直或者水平状态；\n * 当设置transform的scale属性时，该组件只能支持整数倍缩放。\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <barcode value="barcodetest" style="color: #008cff;"></barcode>\n  </div>\n</template>\n\n\n',normalizedContent:'# barcode\n\n\n# 概述\n\n条形码，将文本内容转换为条形码展示。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称      类型       默认值   必填   描述\nvalue   string   -     是    条形码内容，码制为code128码，长度小于等于20字节\n\n\n# 样式\n\n支持通用样式\n\n名称                 类型        默认值       必填   描述\ncolor              <color>   #000000   否    条形码颜色\nbackground-color   <color>   #ffffff   否    条形码背景颜色\n\n注意\n\n * 当设置transform的rotate属性时，该组件只能旋转为垂直或者水平状态；\n * 当设置transform的scale属性时，该组件只能支持整数倍缩放。\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <barcode value="barcodetest" style="color: #008cff;"></barcode>\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"组件",frontmatter:{},regularPath:"/zh/components/",relativePath:"zh/components/README.md",key:"v-06803356",path:"/zh/components/",headersStr:null,content:"# 组件\n\n组件分为预定义组件和自定义组件。\n\n预定义组件是框架预先定义好、由框架实现渲染和逻辑的组件，例如开发页面时开发者必须用到的 text、div，这些组件是由平台 Native 底层渲染出来的。\n\n如果开发一个复杂的页面，开发者把所有的 UI 部分写在一个文件的<template>，那代码的可维护性将会很低，并且模块之间容易产生不必要的耦合关系，为了更好地组织逻辑与代码，可以把页面按照功能拆成多个模块，每个模块负责其中的一个功能部分，最后页面将这些模块引入管理起来，传递业务与配置数据完成代码分离，那么这就是自定义组件的意义。\n\n自定义组件是一个开发者编写的组件，使用起来和 Native 组件一样，最终按照组件的<template>来渲染；同时开发起来又和页面一样，拥有 ViewModel 实现对数据、事件、方法的管理。\n\n这么来看，页面也是一种特殊的自定义组件，无需引入即可使用，同时服务于整个页面。\n\n本章节主要详细介绍预定义的 Native 组件的用法，包括其支持的样式、属性、事件。",normalizedContent:"# 组件\n\n组件分为预定义组件和自定义组件。\n\n预定义组件是框架预先定义好、由框架实现渲染和逻辑的组件，例如开发页面时开发者必须用到的 text、div，这些组件是由平台 native 底层渲染出来的。\n\n如果开发一个复杂的页面，开发者把所有的 ui 部分写在一个文件的<template>，那代码的可维护性将会很低，并且模块之间容易产生不必要的耦合关系，为了更好地组织逻辑与代码，可以把页面按照功能拆成多个模块，每个模块负责其中的一个功能部分，最后页面将这些模块引入管理起来，传递业务与配置数据完成代码分离，那么这就是自定义组件的意义。\n\n自定义组件是一个开发者编写的组件，使用起来和 native 组件一样，最终按照组件的<template>来渲染；同时开发起来又和页面一样，拥有 viewmodel 实现对数据、事件、方法的管理。\n\n这么来看，页面也是一种特殊的自定义组件，无需引入即可使用，同时服务于整个页面。\n\n本章节主要详细介绍预定义的 native 组件的用法，包括其支持的样式、属性、事件。",charsets:{cjk:!0}},{title:"基础组件",frontmatter:{},regularPath:"/zh/components/basic/",relativePath:"zh/components/basic/README.md",key:"v-7979ae97",path:"/zh/components/basic/",headersStr:null,content:"# 基础组件\n\n页面中的组件，例如文字、图片。\n\n * text\n * span\n * a\n * image\n * image-animator\n * progress\n * marquee\n * chart\n * qrcode\n * barcode",normalizedContent:"# 基础组件\n\n页面中的组件，例如文字、图片。\n\n * text\n * span\n * a\n * image\n * image-animator\n * progress\n * marquee\n * chart\n * qrcode\n * barcode",charsets:{cjk:!0}},{title:"a",frontmatter:{},regularPath:"/zh/components/basic/a.html",relativePath:"zh/components/basic/a.md",key:"v-d7a6ce54",path:"/zh/components/basic/a.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:8},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:29},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:48},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:486},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:511},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:526}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# a\n\n\n# 概述\n\n超链接（默认不带下划线）\n\n\n# 子组件\n\n仅支持<span>\n\n\n# 属性\n\n支持通用属性\n\n名称     类型       默认值   必填   描述\nhref   string   -     否    支持的格式参见页面路由中的 uri 参数。\n                           额外的：\n                           href\n                           还可以通过“?param1=value1”的方式添加参数，参数可以在页面中通过this.param1的方式使用。使用this.param1变量时，需要在目标页面中在\n                           public（应用外传参）或 protected（应用内传参）下定义 key 名相同的属性\n                           示例：\n                           <a href="/about?param1=value1">关于</a>\n\n\n# 样式\n\n支持text样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <a class="link" href="/home">goHome</a>\n    <a href="/home">\n      <span class="link">使用span子组件</span>\n    </a>\n  </div>\n</template>\n',normalizedContent:'# a\n\n\n# 概述\n\n超链接（默认不带下划线）\n\n\n# 子组件\n\n仅支持<span>\n\n\n# 属性\n\n支持通用属性\n\n名称     类型       默认值   必填   描述\nhref   string   -     否    支持的格式参见页面路由中的 uri 参数。\n                           额外的：\n                           href\n                           还可以通过“?param1=value1”的方式添加参数，参数可以在页面中通过this.param1的方式使用。使用this.param1变量时，需要在目标页面中在\n                           public（应用外传参）或 protected（应用内传参）下定义 key 名相同的属性\n                           示例：\n                           <a href="/about?param1=value1">关于</a>\n\n\n# 样式\n\n支持text样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <a class="link" href="/home">gohome</a>\n    <a href="/home">\n      <span class="link">使用span子组件</span>\n    </a>\n  </div>\n</template>\n',charsets:{cjk:!0}},{title:"chart",frontmatter:{},regularPath:"/zh/components/basic/chart.html",relativePath:"zh/components/basic/chart.md",key:"v-45d6b3b6",path:"/zh/components/basic/chart.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:12},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:40},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:53},{level:3,title:"ChartOptions 说明",slug:"chartoptions-说明",normalizedTitle:"chartoptions 说明",charIndex:395},{level:3,title:"ChartDataset 说明",slug:"chartdataset-说明",normalizedTitle:"chartdataset 说明",charIndex:678},{level:3,title:"ChartAxis 说明",slug:"chartaxis-说明",normalizedTitle:"chartaxis 说明",charIndex:998},{level:3,title:"ChartSeries 说明",slug:"chartseries-说明",normalizedTitle:"chartseries 说明",charIndex:1483},{level:3,title:"ChartLineStyle 说明",slug:"chartlinestyle-说明",normalizedTitle:"chartlinestyle 说明",charIndex:1661},{level:3,title:"ChartLoop 说明",slug:"chartloop-说明",normalizedTitle:"chartloop 说明",charIndex:1752},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:635},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:1970},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1985},{level:3,title:"线形图",slug:"线形图",normalizedTitle:"线形图",charIndex:25},{level:3,title:"柱状图",slug:"柱状图",normalizedTitle:"柱状图",charIndex:29}],headersStr:"概述 子组件 属性 ChartOptions 说明 ChartDataset 说明 ChartAxis 说明 ChartSeries 说明 ChartLineStyle 说明 ChartLoop 说明 样式 事件 示例代码 线形图 柱状图",content:"# chart\n\n\n# 概述\n\n图表组件，用于呈现线形图、柱状图界面。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称         类型                    默认值    必填   描述\ntype       <string>              line   否    设置图表类型（不支持动态修改），可选项有：bar（柱状图） \\ line（线形图）\noptions    ChartOptions          -      是    图表参数设置，柱状图和线形图必须设置参数。可以设置x轴、y轴的最小值、最大值、刻度数、是否显示、线条宽度、是否平滑等。（不支持动态修改）\ndatasets   Array<ChartDataset>   -      是    数据集合，柱状图和线形图必须设置，可以设置多条数据集及其背景色\n\n\n# ChartOptions 说明\n\n名称       类型            默认值    必填   描述\nxAxis    ChartAxis     line   是    x轴参数设置。可以设置x轴最小值、最大值、刻度数以及是否显示\nyAxis    ChartAxis     -      是    y轴参数设置。可以设置y轴最小值、最大值、刻度数以及是否显示\nseries   ChartSeries   -      否    数据序列参数设置。可以设置 1）线的样式，如线宽、是否平滑；2）设置线最前端位置白点的样式和大小（仅线形图支持）\n\n\n# ChartDataset 说明\n\n名称            类型               默认值       必填   描述\nstrokeColor   <color>          #ff6384   否    线条颜色。（仅线形图支持）\nfillColor     <color>          #ff6384   否    填充颜色。线形图表示填充的渐变颜色\ndata          Array<<number>   -         是    设置绘制线或柱中的点集\ngradient      <boolean>        false     否    设置是否显示填充渐变颜色。（仅线形图支持）\n\n\n# ChartAxis 说明\n\n名称         类型          默认值              必填   描述\nmin        <number>    0                否    轴的最小值。（不支持负数。仅线形图支持）\nmax        <number>    dataset 数据个数-1   否    轴的最大值。（不支持负数。仅线形图支持）\naxisTick   <number>    10               否    轴显示的刻度数量。（仅支持1~20，且具体显示的效果与如下计算值有关（图的宽度所占的像素/（max-min））。因轻量级智能穿戴为整型运行，在除不尽的情况下会有误差产生，具体的表现形式是x轴末尾可能会空出一段。在柱状图中，每组数据显示的柱子数量与刻度数量一致，且柱子显示在刻度处。）\ndisplay    <boolean>   false            否    是否显示轴\ncolor      <color>     #c0c0c0          否    轴颜色\n\n\n# ChartSeries 说明\n\n名称          类型               默认值   必填   描述\nlineStyle   ChartLineStyle   -     否    线样式设置，如线宽、是否平滑\nloop        ChartLoop        -     否    设置屏幕显示满时，是否需要重头开始绘制\n\n\n# ChartLineStyle 说明\n\n名称      类型         默认值   必填   描述\nwidth   <length>   2px   否    线宽设置\n\n\n# ChartLoop 说明\n\n名称       类型         默认值   必填   描述\nmargin   <length>   1px   否    擦除点的个数（最新绘制的点与最老的点之间的横向距离）。注意：轻量设备margin和topPoint/bottomPoint/headPoint同时使用时，有概率出现point正好位于擦除区域的情况，导致point不可见，因此不建议同时使用\n\n\n# 样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n\n# 线形图\n\n<template>\n  <chart type=\"line\" options=\"{{lineOpts}}\" datasets=\"{{lineData}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      lineData: [\n        {\n          strokeColor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525, 696, 595, 628],\n        },\n        {\n          strokeColor: '#cce5ff',\n          fillColor: '#cce5ff', \n          data: [535, 776, 615, 444, 694, 785, 677, 609, 562, 410],\n        },\n        {\n          strokeColor: '#ff88bb',\n          data: [673, 500, 574, 483, 702, 583, 437, 506, 693, 657]\n        },\n      ],\n      lineOpts: {\n        xAxis: {\n          min: 0,\n          max: 10,\n          display: true,\n          axisTick: 10\n        },\n        yAxis: {\n          min: 400,\n          max: 900,\n          display: true,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n\n\n\n# 柱状图\n\n<template>\n  <chart type=\"bar\" options=\"{{barOpts}}\" datasets=\"{{barData}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      barData: [\n        {\n          fillColor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525]\n        },\n        {\n          fillColor: '#cce5ff',\n          data: [535, 776, 615, 444, 694, 785, 677]\n        }\n      ],\n      barOpts: {\n        xAxis: {\n          min: 0,\n          max: 7,\n          display: false,\n          axisTick: 7\n        },\n        yAxis: {\n          min: 0,\n          max: 800,\n          display: false,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n",normalizedContent:"# chart\n\n\n# 概述\n\n图表组件，用于呈现线形图、柱状图界面。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称         类型                    默认值    必填   描述\ntype       <string>              line   否    设置图表类型（不支持动态修改），可选项有：bar（柱状图） \\ line（线形图）\noptions    chartoptions          -      是    图表参数设置，柱状图和线形图必须设置参数。可以设置x轴、y轴的最小值、最大值、刻度数、是否显示、线条宽度、是否平滑等。（不支持动态修改）\ndatasets   array<chartdataset>   -      是    数据集合，柱状图和线形图必须设置，可以设置多条数据集及其背景色\n\n\n# chartoptions 说明\n\n名称       类型            默认值    必填   描述\nxaxis    chartaxis     line   是    x轴参数设置。可以设置x轴最小值、最大值、刻度数以及是否显示\nyaxis    chartaxis     -      是    y轴参数设置。可以设置y轴最小值、最大值、刻度数以及是否显示\nseries   chartseries   -      否    数据序列参数设置。可以设置 1）线的样式，如线宽、是否平滑；2）设置线最前端位置白点的样式和大小（仅线形图支持）\n\n\n# chartdataset 说明\n\n名称            类型               默认值       必填   描述\nstrokecolor   <color>          #ff6384   否    线条颜色。（仅线形图支持）\nfillcolor     <color>          #ff6384   否    填充颜色。线形图表示填充的渐变颜色\ndata          array<<number>   -         是    设置绘制线或柱中的点集\ngradient      <boolean>        false     否    设置是否显示填充渐变颜色。（仅线形图支持）\n\n\n# chartaxis 说明\n\n名称         类型          默认值              必填   描述\nmin        <number>    0                否    轴的最小值。（不支持负数。仅线形图支持）\nmax        <number>    dataset 数据个数-1   否    轴的最大值。（不支持负数。仅线形图支持）\naxistick   <number>    10               否    轴显示的刻度数量。（仅支持1~20，且具体显示的效果与如下计算值有关（图的宽度所占的像素/（max-min））。因轻量级智能穿戴为整型运行，在除不尽的情况下会有误差产生，具体的表现形式是x轴末尾可能会空出一段。在柱状图中，每组数据显示的柱子数量与刻度数量一致，且柱子显示在刻度处。）\ndisplay    <boolean>   false            否    是否显示轴\ncolor      <color>     #c0c0c0          否    轴颜色\n\n\n# chartseries 说明\n\n名称          类型               默认值   必填   描述\nlinestyle   chartlinestyle   -     否    线样式设置，如线宽、是否平滑\nloop        chartloop        -     否    设置屏幕显示满时，是否需要重头开始绘制\n\n\n# chartlinestyle 说明\n\n名称      类型         默认值   必填   描述\nwidth   <length>   2px   否    线宽设置\n\n\n# chartloop 说明\n\n名称       类型         默认值   必填   描述\nmargin   <length>   1px   否    擦除点的个数（最新绘制的点与最老的点之间的横向距离）。注意：轻量设备margin和toppoint/bottompoint/headpoint同时使用时，有概率出现point正好位于擦除区域的情况，导致point不可见，因此不建议同时使用\n\n\n# 样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n\n# 线形图\n\n<template>\n  <chart type=\"line\" options=\"{{lineopts}}\" datasets=\"{{linedata}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      linedata: [\n        {\n          strokecolor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525, 696, 595, 628],\n        },\n        {\n          strokecolor: '#cce5ff',\n          fillcolor: '#cce5ff', \n          data: [535, 776, 615, 444, 694, 785, 677, 609, 562, 410],\n        },\n        {\n          strokecolor: '#ff88bb',\n          data: [673, 500, 574, 483, 702, 583, 437, 506, 693, 657]\n        },\n      ],\n      lineopts: {\n        xaxis: {\n          min: 0,\n          max: 10,\n          display: true,\n          axistick: 10\n        },\n        yaxis: {\n          min: 400,\n          max: 900,\n          display: true,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n\n\n\n# 柱状图\n\n<template>\n  <chart type=\"bar\" options=\"{{baropts}}\" datasets=\"{{bardata}}\"></chart>\n</template>\n\n<script>\n  export default {\n    data: {\n      bardata: [\n        {\n          fillcolor: '#f07826',\n          data: [763, 550, 551, 554, 731, 654, 525]\n        },\n        {\n          fillcolor: '#cce5ff',\n          data: [535, 776, 615, 444, 694, 785, 677]\n        }\n      ],\n      baropts: {\n        xaxis: {\n          min: 0,\n          max: 7,\n          display: false,\n          axistick: 7\n        },\n        yaxis: {\n          min: 0,\n          max: 800,\n          display: false,\n        }\n      }\n    }\n  }\n<\/script>\n\n\n",charsets:{cjk:!0}},{title:"image",frontmatter:{},regularPath:"/zh/components/basic/image.html",relativePath:"zh/components/basic/image.md",key:"v-1ca07a96",path:"/zh/components/basic/image.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:12},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:25},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:38},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:510},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:929},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1154}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# image\n\n\n# 概述\n\n渲染图片\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称    类型                默认值   必填   描述\nsrc   <uri>             -     否    图片的 uri，同时支持本地和云端路径，支持的图片格式包括png，jpg\nalt   <uri> | \'blank\'   -     否    加载时显示的占位图；只支持本地图片资源\n\n注意：alt 属性详情如下：\n\n * 如果 Image 组件没有设置 alt 值，终端会加上默认的灰色占位图；\n\n * src 为本地图片地址时，不会有占位图；\n\n * src 为远程图片地址时，如果之前已经成功加载过图片，有本地缓存，则不会有占位图；\n\n * src 为远程图片地址时，且 Image 组件 的 alt 值传入字符串 "blank" 值，不会有占位图（可避免一些远程地址的小图标第一次加载时瞬间闪烁的现象）；\n\n * 设置 alt 为本地图片地址时，占位图缩放模式由原来的居中不缩放改为居中保持宽高比缩放，减少了占位图资源文件的分辨率与体积大小。\n\n注：缩放模式可以通过样式值object-fit配置，默认值为cover（居中保持宽高比缩放），详情查看样式一节\n\n\n# 样式\n\n支持通用样式\n\n名称           类型                                    默认值     必填   描述\nobject-fit   contain | cover | none | scale-down   cover   否    图片的缩放类型\n\n注意：\n\n 1. object-fit参数列表如下：\n\n类型           描述\ncontain      保持宽高比，缩小或者放大，使得图片完全显示在显示边界内，居中显示\ncover        保持宽高比，缩小或者放大，使得两边都大于或等于显示边界，居中显示\nnone         居中，无缩放\nscale-down   保持宽高比，缩小或保持不变，取 contain 和 none中显示较小的一个，居中显示\n\n\n# 事件\n\n支持通用事件\n\n名称         参数                                                 描述\ncomplete   {width: widthValue(px), height: heightValue(px)}   图片加载完成时触发\nerror      -                                                  图片加载失败时触发\n\n\n# 示例代码\n\n<template>\n  <div>\n    <image src="/common/logo.png" />\n  </div>\n</template>\n\n\n',normalizedContent:'# image\n\n\n# 概述\n\n渲染图片\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称    类型                默认值   必填   描述\nsrc   <uri>             -     否    图片的 uri，同时支持本地和云端路径，支持的图片格式包括png，jpg\nalt   <uri> | \'blank\'   -     否    加载时显示的占位图；只支持本地图片资源\n\n注意：alt 属性详情如下：\n\n * 如果 image 组件没有设置 alt 值，终端会加上默认的灰色占位图；\n\n * src 为本地图片地址时，不会有占位图；\n\n * src 为远程图片地址时，如果之前已经成功加载过图片，有本地缓存，则不会有占位图；\n\n * src 为远程图片地址时，且 image 组件 的 alt 值传入字符串 "blank" 值，不会有占位图（可避免一些远程地址的小图标第一次加载时瞬间闪烁的现象）；\n\n * 设置 alt 为本地图片地址时，占位图缩放模式由原来的居中不缩放改为居中保持宽高比缩放，减少了占位图资源文件的分辨率与体积大小。\n\n注：缩放模式可以通过样式值object-fit配置，默认值为cover（居中保持宽高比缩放），详情查看样式一节\n\n\n# 样式\n\n支持通用样式\n\n名称           类型                                    默认值     必填   描述\nobject-fit   contain | cover | none | scale-down   cover   否    图片的缩放类型\n\n注意：\n\n 1. object-fit参数列表如下：\n\n类型           描述\ncontain      保持宽高比，缩小或者放大，使得图片完全显示在显示边界内，居中显示\ncover        保持宽高比，缩小或者放大，使得两边都大于或等于显示边界，居中显示\nnone         居中，无缩放\nscale-down   保持宽高比，缩小或保持不变，取 contain 和 none中显示较小的一个，居中显示\n\n\n# 事件\n\n支持通用事件\n\n名称         参数                                                 描述\ncomplete   {width: widthvalue(px), height: heightvalue(px)}   图片加载完成时触发\nerror      -                                                  图片加载失败时触发\n\n\n# 示例代码\n\n<template>\n  <div>\n    <image src="/common/logo.png" />\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"image-animator",frontmatter:{},regularPath:"/zh/components/basic/image-animator.html",relativePath:"zh/components/basic/image-animator.md",key:"v-0cc3d5c4",path:"/zh/components/basic/image-animator.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:21},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:39},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:52},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:1056},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:1071},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1288}],headersStr:"概述 子组件 属性 样式 方法 示例代码",content:'# image-animator\n\n\n# 概述\n\n图片帧动画播放器。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称          类型                  默认值        必填   描述\nimages      Array<ImageFrame>   -          是    设置图片帧信息集合。每一帧的帧信息包含图片路径、图片大小和图片位置信息\niteration   <number>|<string>   infinite   否    设置帧动画播放次数。number表示固定次数，infinite枚举表示无限次数播放\nreverse     <boolean>           false      否    设置播放顺序。false表示从第1张图片播放到最后1张图片； true表示从最后1张图片播放到第1张图片\nfixedsize   <boolean>           true       否    设置图片大小是否固定为组件大小。 true表示图片大小与组件大小一致，此时设置图片的width 、height 、top\n                                                和left属性是无效的。false表示每一张图片的 width 、height 、top和left属性都要单独设置\nduration    <string>            -          否    设置单次播放时长。单位支持[s(秒)|ms(毫秒)]，默认单位为ms\nfillmode    <string>            forwards   否    指定帧动画执行结束后的状态。可选项有：none：恢复初始状态。forwards：保持帧动画结束时的状态（在最后一个关键帧中定义）\n\nImageFrame说明\n\n名称       类型         默认值   必填   描述\nsrc      <uri>      -     是    图片路径\nwidth    <length>   0     否    图片宽度\nheight   <length>   0     否    图片高度\ntop      <length>   0     否    图片相对于组件左上角的纵向坐标\nleft     <length>   0     否    图片相对于组件左上角的横向坐标\n\n\n# 样式\n\n支持通用样式\n\n\n# 方法\n\n支持通用方法\n\n名称         参数   描述\nstart      -    开始播放图片帧动画。再次调用，重新从第1帧开始播放\npause      -    暂停播放图片帧动画\nstop       -    停止播放图片帧动画\nresume     -    继续播放图片帧\ngetState   -    获取播放状态。- playing：播放中 - paused：已暂停 - stopped：已停止\n\n\n# 示例代码\n\n<template>\n  <div class="container">\n  <image-animator class="animator" id="animator" images="{{frames}}" duration="1s" />\n  <div class="btn-box">\n    <input class="btn" type="button" value="start" @click="handleStart" />\n    <input class="btn" type="button" value="stop" @click="handleStop" />\n    <input class="btn" type="button" value="pause" @click="handlePause" />\n    <input class="btn" type="button" value="resume" @click="handleResume" />\n  </div>\n</div>\n</template>\n\n\n.container {\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  left: 0px;\n  top: 0px;\n  width: 454px;\n  height: 454px;\n  background-color: black;\n}\n.animator {\n  width: 70px;\n  height: 70px;\n}\n.btn-box {\n  width: 264px;\n  height: 120px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.btn {\n  border-radius: 8px;\n  width: 120px;\n  margin-top: 8px;\n}\n\n\nexport default {\n  data: {\n    frames: [\n      {\n        src: "/common/asserts/001.png",\n      },\n      {\n        src: "/common/asserts/002.png",\n      },\n      {\n        src: "/common/asserts/003.png",\n      },\n      {\n        src: "/common/asserts/004.png",\n      },\n      {\n        src: "/common/asserts/005.png",\n      }\n    ],\n  },\n  handleStart() {\n    this.$element(\'animator\').start();\n  },\n  handlePause() {\n    this.$element(\'animator\').pause();\n  },\n  handleResume() {\n    this.$element(\'animator\').resume();\n  },\n  handleStop() {\n    this.$element(\'animator\').stop();\n  },\n};\n\n\n',normalizedContent:'# image-animator\n\n\n# 概述\n\n图片帧动画播放器。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称          类型                  默认值        必填   描述\nimages      array<imageframe>   -          是    设置图片帧信息集合。每一帧的帧信息包含图片路径、图片大小和图片位置信息\niteration   <number>|<string>   infinite   否    设置帧动画播放次数。number表示固定次数，infinite枚举表示无限次数播放\nreverse     <boolean>           false      否    设置播放顺序。false表示从第1张图片播放到最后1张图片； true表示从最后1张图片播放到第1张图片\nfixedsize   <boolean>           true       否    设置图片大小是否固定为组件大小。 true表示图片大小与组件大小一致，此时设置图片的width 、height 、top\n                                                和left属性是无效的。false表示每一张图片的 width 、height 、top和left属性都要单独设置\nduration    <string>            -          否    设置单次播放时长。单位支持[s(秒)|ms(毫秒)]，默认单位为ms\nfillmode    <string>            forwards   否    指定帧动画执行结束后的状态。可选项有：none：恢复初始状态。forwards：保持帧动画结束时的状态（在最后一个关键帧中定义）\n\nimageframe说明\n\n名称       类型         默认值   必填   描述\nsrc      <uri>      -     是    图片路径\nwidth    <length>   0     否    图片宽度\nheight   <length>   0     否    图片高度\ntop      <length>   0     否    图片相对于组件左上角的纵向坐标\nleft     <length>   0     否    图片相对于组件左上角的横向坐标\n\n\n# 样式\n\n支持通用样式\n\n\n# 方法\n\n支持通用方法\n\n名称         参数   描述\nstart      -    开始播放图片帧动画。再次调用，重新从第1帧开始播放\npause      -    暂停播放图片帧动画\nstop       -    停止播放图片帧动画\nresume     -    继续播放图片帧\ngetstate   -    获取播放状态。- playing：播放中 - paused：已暂停 - stopped：已停止\n\n\n# 示例代码\n\n<template>\n  <div class="container">\n  <image-animator class="animator" id="animator" images="{{frames}}" duration="1s" />\n  <div class="btn-box">\n    <input class="btn" type="button" value="start" @click="handlestart" />\n    <input class="btn" type="button" value="stop" @click="handlestop" />\n    <input class="btn" type="button" value="pause" @click="handlepause" />\n    <input class="btn" type="button" value="resume" @click="handleresume" />\n  </div>\n</div>\n</template>\n\n\n.container {\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  left: 0px;\n  top: 0px;\n  width: 454px;\n  height: 454px;\n  background-color: black;\n}\n.animator {\n  width: 70px;\n  height: 70px;\n}\n.btn-box {\n  width: 264px;\n  height: 120px;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.btn {\n  border-radius: 8px;\n  width: 120px;\n  margin-top: 8px;\n}\n\n\nexport default {\n  data: {\n    frames: [\n      {\n        src: "/common/asserts/001.png",\n      },\n      {\n        src: "/common/asserts/002.png",\n      },\n      {\n        src: "/common/asserts/003.png",\n      },\n      {\n        src: "/common/asserts/004.png",\n      },\n      {\n        src: "/common/asserts/005.png",\n      }\n    ],\n  },\n  handlestart() {\n    this.$element(\'animator\').start();\n  },\n  handlepause() {\n    this.$element(\'animator\').pause();\n  },\n  handleresume() {\n    this.$element(\'animator\').resume();\n  },\n  handlestop() {\n    this.$element(\'animator\').stop();\n  },\n};\n\n\n',charsets:{cjk:!0}},{title:"marquee",frontmatter:{},regularPath:"/zh/components/basic/marquee.html",relativePath:"zh/components/basic/marquee.md",key:"v-75697af6",path:"/zh/components/basic/marquee.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:14},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:45},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:58},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:403},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:582},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:734},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:810}],headersStr:"概述 子组件 属性 样式 事件 方法 示例代码",content:"# marquee\n\n\n# 概述\n\n跑马灯，用来插入一段滚动的文字，默认为单行。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称             类型         默认值    必填   描述\nscrollamount   <number>   6      否    设置每次滚动时移动的长度，单位：px\nloop           <number>   -1     否    设置 marquee 滚动的次数。如果未指定值，默认值为 −1，表示 marquee 将连续滚动\ndirection      <string>   left   否    文字滚动方向，支持 left，right\ntext-offset    <number>   -      否    设置跑马灯首尾相接时，上一段的尾和下一段的头之间的距离，属性值为大于 0 的整数，单位：px\n\n\n# 样式\n\n支持通用样式\n\n名称          类型         默认值                   必填   描述\ncolor       <color>    rgba(0, 0, 0, 0.54)   否    文本颜色\nfont-size   <length>   30px                  否    文本尺寸\n\n\n# 事件\n\n支持通用事件\n\n名称       参数   描述\nbounce   -    当 marquee 滚动到结尾时触发\nfinish   -    当 marquee 完成设置的 loop 次数时触发，loop > 0 时有效\nstart    -    当 marquee 开始滚动时触发\n\n\n# 方法\n\n名称      参数   描述\nstart   -    开始滚动 marquee\nstop    -    停止滚动 marquee\n\n\n# 示例代码\n\n<template>\n  <div>\n    <marquee id=\"marquee\" scrollamount={{6}} loop={{-1}}>\n      scrollamount控制滚动速度，默认值为6（6像素/秒）\n    </marquee>\n  </div>\n</template>\n\n<script>\n  export default {\n    onReady() {\n      this.$element('marquee').start()\n    }\n  }\n<\/script>\n\n\n",normalizedContent:"# marquee\n\n\n# 概述\n\n跑马灯，用来插入一段滚动的文字，默认为单行。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称             类型         默认值    必填   描述\nscrollamount   <number>   6      否    设置每次滚动时移动的长度，单位：px\nloop           <number>   -1     否    设置 marquee 滚动的次数。如果未指定值，默认值为 −1，表示 marquee 将连续滚动\ndirection      <string>   left   否    文字滚动方向，支持 left，right\ntext-offset    <number>   -      否    设置跑马灯首尾相接时，上一段的尾和下一段的头之间的距离，属性值为大于 0 的整数，单位：px\n\n\n# 样式\n\n支持通用样式\n\n名称          类型         默认值                   必填   描述\ncolor       <color>    rgba(0, 0, 0, 0.54)   否    文本颜色\nfont-size   <length>   30px                  否    文本尺寸\n\n\n# 事件\n\n支持通用事件\n\n名称       参数   描述\nbounce   -    当 marquee 滚动到结尾时触发\nfinish   -    当 marquee 完成设置的 loop 次数时触发，loop > 0 时有效\nstart    -    当 marquee 开始滚动时触发\n\n\n# 方法\n\n名称      参数   描述\nstart   -    开始滚动 marquee\nstop    -    停止滚动 marquee\n\n\n# 示例代码\n\n<template>\n  <div>\n    <marquee id=\"marquee\" scrollamount={{6}} loop={{-1}}>\n      scrollamount控制滚动速度，默认值为6（6像素/秒）\n    </marquee>\n  </div>\n</template>\n\n<script>\n  export default {\n    onready() {\n      this.$element('marquee').start()\n    }\n  }\n<\/script>\n\n\n",charsets:{cjk:!0}},{title:"progress",frontmatter:{},regularPath:"/zh/components/basic/progress.html",relativePath:"zh/components/basic/progress.md",key:"v-69a751f6",path:"/zh/components/basic/progress.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:15},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:27},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:40},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:216},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:1050},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1065}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# progress\n\n\n# 概述\n\n进度条\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称        类型                 默认值          必填   描述\npercent   <number>           0            否    -\ntype      horizontal | arc   horizontal   否    进度条类型，不支持动态修改\n\n\n# 样式\n\n支持通用样式\n\n注：horizontal progress 底色为#f0f0f0；height 属性失效\n\n名称             类型         默认值                             必填   描述\ncolor          <color>    #33b4ff 或者 rgb(51, 180, 255)    否    进度条的颜色\nstroke-width   <length>   32px                            否    进度条的宽度\nlayer-color    <color>    #f0f0f0 或者 rgb(240, 240, 240)   否    进度条的背景颜色\n\ntype=arc时生效：\n\n名称            类型         默认值          必填   描述\nstart-angle   <deg>      240          否    弧形进度条起始角度，以时钟0点为基线。范围为0到360（顺时针）\ntotal-angle   <deg>      240          否    弧形进度条总长度，范围为-360到360，负数表示起点到终点为逆时针\ncenter-x      <length>   组件宽度的一半      否    弧形进度条中心位置，（坐标原点为组件左上角顶点）。该样式需要和 center-y \\ radius 一起使用\ncenter-y      <length>   组件高度的一半      否    弧形进度条中心位置，（坐标原点为组件左上角顶点）。该样式需要和 center-x \\ radius 一起使用\nradius        <length>   组件宽高较小值的一半   否    弧形进度条半径，该样式需要和 center-x \\ center-y 一起使用\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div style="flex-direction: column">\n    <progress class="p1" percent="40"></progress> \n    <progress class="p2" percent="80" type="arc"></progress>\n  </div>\n</template>\n<style>\n  .p1 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n  }\n\n  .p2 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n    start-angle: 0;\n    total-angle: 360deg;\n  }\n</style>\n\n\n',normalizedContent:'# progress\n\n\n# 概述\n\n进度条\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称        类型                 默认值          必填   描述\npercent   <number>           0            否    -\ntype      horizontal | arc   horizontal   否    进度条类型，不支持动态修改\n\n\n# 样式\n\n支持通用样式\n\n注：horizontal progress 底色为#f0f0f0；height 属性失效\n\n名称             类型         默认值                             必填   描述\ncolor          <color>    #33b4ff 或者 rgb(51, 180, 255)    否    进度条的颜色\nstroke-width   <length>   32px                            否    进度条的宽度\nlayer-color    <color>    #f0f0f0 或者 rgb(240, 240, 240)   否    进度条的背景颜色\n\ntype=arc时生效：\n\n名称            类型         默认值          必填   描述\nstart-angle   <deg>      240          否    弧形进度条起始角度，以时钟0点为基线。范围为0到360（顺时针）\ntotal-angle   <deg>      240          否    弧形进度条总长度，范围为-360到360，负数表示起点到终点为逆时针\ncenter-x      <length>   组件宽度的一半      否    弧形进度条中心位置，（坐标原点为组件左上角顶点）。该样式需要和 center-y \\ radius 一起使用\ncenter-y      <length>   组件高度的一半      否    弧形进度条中心位置，（坐标原点为组件左上角顶点）。该样式需要和 center-x \\ radius 一起使用\nradius        <length>   组件宽高较小值的一半   否    弧形进度条半径，该样式需要和 center-x \\ center-y 一起使用\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div style="flex-direction: column">\n    <progress class="p1" percent="40"></progress> \n    <progress class="p2" percent="80" type="arc"></progress>\n  </div>\n</template>\n<style>\n  .p1 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n  }\n\n  .p2 {\n    margin-bottom: 10px;\n    stroke-width: 12px;\n    start-angle: 0;\n    total-angle: 360deg;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"qrcode",frontmatter:{},regularPath:"/zh/components/basic/qrcode.html",relativePath:"zh/components/basic/qrcode.md",key:"v-437d6134",path:"/zh/components/basic/qrcode.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:13},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:31},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:44},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:130},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:295},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:310}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# qrcode\n\n\n# 概述\n\n生成并显示二维码。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称      类型       默认值   必填   描述\nvalue   string   -     是    用来生成二维码的内容\n\n\n# 样式\n\n支持通用样式\n\n名称                 类型        默认值       必填   描述\ncolor              <color>   #000000   否    二维码颜色\nbackground-color   <color>   #ffffff   否    二维码背景颜色\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <qrcode value="https://iot.mi.com" style="color: #008cff;"></qrcode>\n  </div>\n</template>\n\n\n',normalizedContent:'# qrcode\n\n\n# 概述\n\n生成并显示二维码。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称      类型       默认值   必填   描述\nvalue   string   -     是    用来生成二维码的内容\n\n\n# 样式\n\n支持通用样式\n\n名称                 类型        默认值       必填   描述\ncolor              <color>   #000000   否    二维码颜色\nbackground-color   <color>   #ffffff   否    二维码背景颜色\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <qrcode value="https://iot.mi.com" style="color: #008cff;"></qrcode>\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"span",frontmatter:{},regularPath:"/zh/components/basic/span.html",relativePath:"zh/components/basic/span.md",key:"v-3809a908",path:"/zh/components/basic/span.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:44},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:72},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:177},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:870},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:882}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# span\n\n\n# 概述\n\n格式化的文本，只能作为<text>、<a>和<span>的子组件。\n\n\n# 子组件\n\n仅支持<span>\n\n\n# 属性\n\n名称      类型          默认值   必填   描述\nid      <string>    -     否    唯一标识\nstyle   <string>    -     否    样式声明\nclass   <string>    -     否    引用样式表\nfor     <array>     -     否    根据数据列表，循环展开当前标签\nif      <boolean>   -     否    根据数据 boolean 值，添加或移除当前标签\n\n\n# 样式\n\n名称                类型                                默认值                   必填   描述\ncolor             <color>                           rgba(0, 0, 0, 0.54)   否    文本颜色\nfont-size         <length>                          30px                  否    文本尺寸\nfont-style        normal | italic                   normal                否    -\nfont-weight       normal | bold | <number>          normal                否    当前平台仅支持normal与bold两种效果，当值为数字时，低于550为前者，否则为后者\ntext-decoration   underline | line-through | none   none                  否    -\n\n\n# 事件\n\n不支持\n\n\n# 示例代码\n\n<template>\n  <div>\n    <text>\n      <span>I am span,</span>\n      <span style="color: #f76160">I am span,</span>\n      <span style="color: #f76160;text-decoration: underline;">I am span,</span>\n    </text>\n  </div>\n</template>\n\n\n',normalizedContent:'# span\n\n\n# 概述\n\n格式化的文本，只能作为<text>、<a>和<span>的子组件。\n\n\n# 子组件\n\n仅支持<span>\n\n\n# 属性\n\n名称      类型          默认值   必填   描述\nid      <string>    -     否    唯一标识\nstyle   <string>    -     否    样式声明\nclass   <string>    -     否    引用样式表\nfor     <array>     -     否    根据数据列表，循环展开当前标签\nif      <boolean>   -     否    根据数据 boolean 值，添加或移除当前标签\n\n\n# 样式\n\n名称                类型                                默认值                   必填   描述\ncolor             <color>                           rgba(0, 0, 0, 0.54)   否    文本颜色\nfont-size         <length>                          30px                  否    文本尺寸\nfont-style        normal | italic                   normal                否    -\nfont-weight       normal | bold | <number>          normal                否    当前平台仅支持normal与bold两种效果，当值为数字时，低于550为前者，否则为后者\ntext-decoration   underline | line-through | none   none                  否    -\n\n\n# 事件\n\n不支持\n\n\n# 示例代码\n\n<template>\n  <div>\n    <text>\n      <span>i am span,</span>\n      <span style="color: #f76160">i am span,</span>\n      <span style="color: #f76160;text-decoration: underline;">i am span,</span>\n    </text>\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"text",frontmatter:{},regularPath:"/zh/components/basic/text.html",relativePath:"zh/components/basic/text.md",key:"v-e4b16414",path:"/zh/components/basic/text.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:42},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:61},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:76},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:1285},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1300}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# text\n\n\n# 概述\n\n文本内容写在标签内容区，支持转义字符"\\"。\n\n\n# 子组件\n\n仅支持<span>\n\n\n# 属性\n\n支持通用属性\n\n\n# 样式\n\n支持通用样式\n\n名称                类型                                默认值                   必填   描述\nlines             <number>                          -1                    否    文本行数，-1 代表不限定行数\ncolor             <color>                           rgba(0, 0, 0, 0.54)   否    文本颜色\nfont-size         <length>                          30px                  否    文本尺寸\nfont-style        normal | italic                   normal                否    \nfont-weight       normal | bold | <number>          normal                否    当前平台仅支持normal与bold两种效果，当值为数字时，低于550为前者，否则为后者\ntext-decoration   underline | line-through | none   none                  否    \ntext-align        left | center | right             left                  否    \ntext-indent       <length> | <percentage>           -                     否    规定文本块首行的缩进\nline-height       <length>                          -                     否    文本行高\ntext-overflow     clip | ellipsis                   clip                  否    在设置了行数的情况下生效\n\n示例\n\n * 单行省略\n   \n   text {\n     width: 150px;\n     lines: 1;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n * 多行省略，以两行为例\n   \n   text {\n     width: 100px;\n     lines: 2;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <text>这是一段文本</text>\n  </div>\n</template>\n\n\n',normalizedContent:'# text\n\n\n# 概述\n\n文本内容写在标签内容区，支持转义字符"\\"。\n\n\n# 子组件\n\n仅支持<span>\n\n\n# 属性\n\n支持通用属性\n\n\n# 样式\n\n支持通用样式\n\n名称                类型                                默认值                   必填   描述\nlines             <number>                          -1                    否    文本行数，-1 代表不限定行数\ncolor             <color>                           rgba(0, 0, 0, 0.54)   否    文本颜色\nfont-size         <length>                          30px                  否    文本尺寸\nfont-style        normal | italic                   normal                否    \nfont-weight       normal | bold | <number>          normal                否    当前平台仅支持normal与bold两种效果，当值为数字时，低于550为前者，否则为后者\ntext-decoration   underline | line-through | none   none                  否    \ntext-align        left | center | right             left                  否    \ntext-indent       <length> | <percentage>           -                     否    规定文本块首行的缩进\nline-height       <length>                          -                     否    文本行高\ntext-overflow     clip | ellipsis                   clip                  否    在设置了行数的情况下生效\n\n示例\n\n * 单行省略\n   \n   text {\n     width: 150px;\n     lines: 1;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n * 多行省略，以两行为例\n   \n   text {\n     width: 100px;\n     lines: 2;\n     text-overflow: ellipsis;\n   }\n   \n   \n   \n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div>\n    <text>这是一段文本</text>\n  </div>\n</template>\n\n\n',charsets:{cjk:!0}},{title:"容器组件",frontmatter:{},regularPath:"/zh/components/container/",relativePath:"zh/components/container/README.md",key:"v-4ba44c1e",path:"/zh/components/container/",headersStr:null,content:"# 容器组件\n\n一般来说，指可以包含子组件的组件。\n\n * div\n * list\n * list-item\n * scroll\n * stack\n * swiper",normalizedContent:"# 容器组件\n\n一般来说，指可以包含子组件的组件。\n\n * div\n * list\n * list-item\n * scroll\n * stack\n * swiper",charsets:{cjk:!0}},{title:"div",frontmatter:{},regularPath:"/zh/components/container/div.html",relativePath:"zh/components/container/div.md",key:"v-5b3f2b36",path:"/zh/components/container/div.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:10},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:43},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:55},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:70},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:85},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:100}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# div\n\n\n# 概述\n\n基础容器，用作页面结构的根节点或将内容进行分组。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n\n# 样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <div style="flex-direction: row;">\n      <text class="item color-1">1</text>\n      <text class="item color-2">2</text>\n      <text class="item color-3">3</text>\n    </div>\n  </div>\n</template>\n<style>\n  .page {\n    margin: 20px;\n    flex-direction: column;\n    background-color: white;\n  }\n\n  .item {\n    height: 100px;\n    width: 100px;\n    text-align: center;\n    margin-right: 10px;\n  }\n  \n  .color-1 {\n    background-color: #09ba07;\n  }\n  \n  .color-2 {\n    background-color: #f76160;\n  }\n  \n  .color-3 {\n    background-color: #0faeff;\n  }\n</style>\n\n\n',normalizedContent:'# div\n\n\n# 概述\n\n基础容器，用作页面结构的根节点或将内容进行分组。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n\n# 样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <div style="flex-direction: row;">\n      <text class="item color-1">1</text>\n      <text class="item color-2">2</text>\n      <text class="item color-3">3</text>\n    </div>\n  </div>\n</template>\n<style>\n  .page {\n    margin: 20px;\n    flex-direction: column;\n    background-color: white;\n  }\n\n  .item {\n    height: 100px;\n    width: 100px;\n    text-align: center;\n    margin-right: 10px;\n  }\n  \n  .color-1 {\n    background-color: #09ba07;\n  }\n  \n  .color-2 {\n    background-color: #f76160;\n  }\n  \n  .color-3 {\n    background-color: #0faeff;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"list-item",frontmatter:{},regularPath:"/zh/components/container/list-item.html",relativePath:"zh/components/container/list-item.md",key:"v-230dd856",path:"/zh/components/container/list-item.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:16},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:27},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:77},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:373},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:418},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:433},{level:3,title:"效果展示",slug:"效果展示",normalizedTitle:"效果展示",charIndex:1004}],headersStr:"概述 子组件 属性 样式 事件 示例代码 效果展示",content:"# list-item\n\n\n# 概述\n\n<list>的子组件，用来展示列表具体 item，宽度默认充满 list 组件。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n名称     类型         默认值   必填   描述\ntype   <string>   -     是    list-item 类型，值为自定义的字符串，如'loadMore'。相同的 type 的 list-item\n                             必须具备完全一致的 DOM 结构。因此，在 list-item 内部需谨慎使用 if 和 for，因为 if 和 for\n                             可能造成相同的 type 的 list-item 的 DOM 结构不一致，从而引发错误\n\n\n# 样式\n\n支持通用样式\n\n为了达到组件复用、优化性能的目的，请显示指定宽度和高度。\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\">\n      <list-item for=\"{{productList}}\" class=\"item\" type=\"list-item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      productList: [\n        { name: '衣服', price: '100' },\n        { name: '裤子', price: '200' }\n      ],\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .list {\n    width: 100%;\n    height: 100%;\n  }\n\n  .item {\n    height: 40px;\n  }\n</style>\n\n\n\n# 效果展示\n\n",normalizedContent:"# list-item\n\n\n# 概述\n\n<list>的子组件，用来展示列表具体 item，宽度默认充满 list 组件。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n名称     类型         默认值   必填   描述\ntype   <string>   -     是    list-item 类型，值为自定义的字符串，如'loadmore'。相同的 type 的 list-item\n                             必须具备完全一致的 dom 结构。因此，在 list-item 内部需谨慎使用 if 和 for，因为 if 和 for\n                             可能造成相同的 type 的 list-item 的 dom 结构不一致，从而引发错误\n\n\n# 样式\n\n支持通用样式\n\n为了达到组件复用、优化性能的目的，请显示指定宽度和高度。\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\">\n      <list-item for=\"{{productlist}}\" class=\"item\" type=\"list-item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      productlist: [\n        { name: '衣服', price: '100' },\n        { name: '裤子', price: '200' }\n      ],\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .list {\n    width: 100%;\n    height: 100%;\n  }\n\n  .item {\n    height: 40px;\n  }\n</style>\n\n\n\n# 效果展示\n\n",charsets:{cjk:!0}},{title:"list",frontmatter:{},regularPath:"/zh/components/container/list.html",relativePath:"zh/components/container/list.md",key:"v-3e59127a",path:"/zh/components/container/list.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:11},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:53},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:77},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:173},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:203},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1026},{level:3,title:"效果展示",slug:"效果展示",normalizedTitle:"效果展示",charIndex:2452},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:2463}],headersStr:"概述 子组件 属性 样式 事件 示例代码 效果展示 方法",content:"# list\n\n\n# 概述\n\n列表视图容器，包含一系列相同结构的列表项，连续、多行呈现同类数据。\n\n\n# 子组件\n\n仅支持<list-item>\n\n\n# 属性\n\n支持通用属性\n\n名称        类型          默认值     必填   描述\nbounces   <boolean>   false   否    是否边界回弹\n\n\n# 样式\n\n支持通用样式\n\n使用时需要显式地设置高度。\n\n\n# 事件\n\n支持通用事件\n\n名称              参数                                                    描述\nscroll          {scrollX: <number>, scrollY: <number>, scrollState:   列表滑动；\n                <stateValue>}                                         stateValue 取值说明：\n                                                                      0：list停止滑动\n                                                                      1：list正在通过用户的手势滑动\n                                                                      2：list正在滑动，用户已松手\nscrollbottom    -                                                     列表滑动到底部\nscrolltop       -                                                     列表滑动到顶部\nscrollend       -                                                     列表滑动结束\nscrolltouchup   -                                                     列表滑动过程中手指抬起\n\n\n# 示例代码\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\" bounces=\"true\" \n      onscroll=\"onScroll\" \n      onscrolltop=\"onScrollTop\" \n      onscrollbottom=\"onScrollBottom\"\n      onscrolltouchup=\"onScrollTouchup\">\n      <list-item for=\"{{productList}}\" class=\"item\" type=\"item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      productList: [\n        { name: '衣服', price: '100' },\n        { name: '裤子', price: '200' },\n        { name: '鞋子', price: '300' },\n        { name: '帽子', price: '60' },\n        { name: '雨伞', price: '300' },\n        { name: '书包', price: '60' },\n        { name: '书本', price: '30' }\n      ],\n    },\n    onScroll(e) {\n      console.log('### list onScroll evt: ', e)\n    },\n    onScrollTop(e) {\n      console.log('### list onScrollTop evt: ', e)\n    },\n    onScrollBottom(e) {\n      console.log('### list onScrollBottom evt: ', e)\n    },\n    onScrollTouchup(e) {\n      console.log('### list onScrollTouchup evt: ', e)\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n    background-color: #000;\n  }\n\n  .list {\n    width: 300px;\n    height: 200px;\n    border: 1px solid #fff;\n  }\n\n  text {\n   color: #fff;\n  }\n  .item {\n    height: 40px;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #fff;\n  }\n</style>\n\n\n\n# 效果展示\n\n\n\n\n# 方法\n\n名称         参数       描述\nscrollTo   Object   list 滚动到指定 item 位置\nscrollBy   Object   使 list 的内容滑动一定距离\n\nscrollTo 的参数说明：\n\n名称         类型                        默认值    必填   描述\nindex      number                    0      否    list 滚动的目标 item 位置\nbehavior   smooth / instant / auto   auto   否    是否平滑滑动，支持参数 smooth (平滑滚动)，instant (瞬间滚动)，默认值 auto，效果等同于\n                                                 instant\n\nscrollBy 的参数说明：\n\n名称         类型                        默认值    必填   描述\nleft       number                    0      否    从当前位置水平方向滑动距离，单位 px。值为正时向左滑动，为负时向右滑动。flex-direction 为 column\n                                                 或 column-reverse 时不生效\ntop        number                    0      否    从当前位置垂直方向滑动距离，单位 px。值为正时向上滑动，为负时向下滑动。flex-direction 为 row 或\n                                                 row-reverse 时不生效\nbehavior   smooth / instant / auto   auto   否    是否平滑滑动，支持参数 smooth (平滑滚动)，instant (瞬间滚动)，默认值 auto，效果等同于\n                                                 instant",normalizedContent:"# list\n\n\n# 概述\n\n列表视图容器，包含一系列相同结构的列表项，连续、多行呈现同类数据。\n\n\n# 子组件\n\n仅支持<list-item>\n\n\n# 属性\n\n支持通用属性\n\n名称        类型          默认值     必填   描述\nbounces   <boolean>   false   否    是否边界回弹\n\n\n# 样式\n\n支持通用样式\n\n使用时需要显式地设置高度。\n\n\n# 事件\n\n支持通用事件\n\n名称              参数                                                    描述\nscroll          {scrollx: <number>, scrolly: <number>, scrollstate:   列表滑动；\n                <statevalue>}                                         statevalue 取值说明：\n                                                                      0：list停止滑动\n                                                                      1：list正在通过用户的手势滑动\n                                                                      2：list正在滑动，用户已松手\nscrollbottom    -                                                     列表滑动到底部\nscrolltop       -                                                     列表滑动到顶部\nscrollend       -                                                     列表滑动结束\nscrolltouchup   -                                                     列表滑动过程中手指抬起\n\n\n# 示例代码\n\n<template>\n  <div class=\"page\">\n    <list class=\"list\" bounces=\"true\" \n      onscroll=\"onscroll\" \n      onscrolltop=\"onscrolltop\" \n      onscrollbottom=\"onscrollbottom\"\n      onscrolltouchup=\"onscrolltouchup\">\n      <list-item for=\"{{productlist}}\" class=\"item\" type=\"item\">\n        <text>{{$item.name}}: {{$item.price}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      productlist: [\n        { name: '衣服', price: '100' },\n        { name: '裤子', price: '200' },\n        { name: '鞋子', price: '300' },\n        { name: '帽子', price: '60' },\n        { name: '雨伞', price: '300' },\n        { name: '书包', price: '60' },\n        { name: '书本', price: '30' }\n      ],\n    },\n    onscroll(e) {\n      console.log('### list onscroll evt: ', e)\n    },\n    onscrolltop(e) {\n      console.log('### list onscrolltop evt: ', e)\n    },\n    onscrollbottom(e) {\n      console.log('### list onscrollbottom evt: ', e)\n    },\n    onscrolltouchup(e) {\n      console.log('### list onscrolltouchup evt: ', e)\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n    background-color: #000;\n  }\n\n  .list {\n    width: 300px;\n    height: 200px;\n    border: 1px solid #fff;\n  }\n\n  text {\n   color: #fff;\n  }\n  .item {\n    height: 40px;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid #fff;\n  }\n</style>\n\n\n\n# 效果展示\n\n\n\n\n# 方法\n\n名称         参数       描述\nscrollto   object   list 滚动到指定 item 位置\nscrollby   object   使 list 的内容滑动一定距离\n\nscrollto 的参数说明：\n\n名称         类型                        默认值    必填   描述\nindex      number                    0      否    list 滚动的目标 item 位置\nbehavior   smooth / instant / auto   auto   否    是否平滑滑动，支持参数 smooth (平滑滚动)，instant (瞬间滚动)，默认值 auto，效果等同于\n                                                 instant\n\nscrollby 的参数说明：\n\n名称         类型                        默认值    必填   描述\nleft       number                    0      否    从当前位置水平方向滑动距离，单位 px。值为正时向左滑动，为负时向右滑动。flex-direction 为 column\n                                                 或 column-reverse 时不生效\ntop        number                    0      否    从当前位置垂直方向滑动距离，单位 px。值为正时向上滑动，为负时向下滑动。flex-direction 为 row 或\n                                                 row-reverse 时不生效\nbehavior   smooth / instant / auto   auto   否    是否平滑滑动，支持参数 smooth (平滑滚动)，instant (瞬间滚动)，默认值 auto，效果等同于\n                                                 instant",charsets:{cjk:!0}},{title:"scroll",frontmatter:{},regularPath:"/zh/components/container/scroll.html",relativePath:"zh/components/container/scroll.md",key:"v-766a399c",path:"/zh/components/container/scroll.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:13},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:63},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:90},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:920},{level:3,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:2153},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:4846},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:5066},{level:3,title:"scrollTo方法Object参数",slug:"scrollto方法object参数",normalizedTitle:"scrollto方法object参数",charIndex:5262},{level:3,title:"scrollBy方法Object参数",slug:"scrollby方法object参数",normalizedTitle:"scrollby方法object参数",charIndex:5615},{level:3,title:"返回值（异步）",slug:"返回值-异步",normalizedTitle:"返回值（异步）",charIndex:5946},{level:2,title:"示例代码",slug:"示例代码-2",normalizedTitle:"示例代码",charIndex:2153}],headersStr:"概述 子组件 属性 样式 示例代码 事件 方法 scrollTo方法Object参数 scrollBy方法Object参数 返回值（异步） 示例代码",content:'# scroll\n\n\n# 概述\n\n滚动视图容器。竖向或水平方向滚动容器，竖向滚动需要设置定高，水平滚动需要设置定宽。\n\n\n# 子组件\n\n支持。也支持嵌套子 scroll。\n\n\n# 属性\n\n支持通用属性\n\n名称              类型                    默认值     必填   描述\nscroll-x        <boolean>             false   否    是否允许横向滚动\nscroll-y        <boolean>             false   否    是否允许纵向滚动\nscroll-top      <number> | <string>           否    设置竖向滚动条位置，内容顶部到 scroll 顶部的距离，如果有滚动吸附效果则先滚动再吸附\nscroll-bottom   <number> | <string>           否    设置竖向滚动条位置，内容底部到 scroll 底部的距离，如果有滚动吸附效果则先滚动再吸附。同时设置\n                                                   scroll-top 和scroll-bottom 以scroll-top为准\nscroll-left     <number> | <string>           否    设置横向滚动条位置，内容左侧到 scroll 左侧的距离，如果有滚动吸附效果则先滚动再吸附\nscroll-right    <number> | <string>           否    设设置横向滚动条位置，内容右侧到 scroll 右侧的距离，如果有滚动吸附效果则先滚动再吸附。同时设置\n                                                   scroll-left 和scroll-right 以scroll-left为准\nbounces         <boolean>             false   否    是否边界回弹\n\n\n# 样式\n\n支持通用样式\n\n名称                  类型                                   默认值      描述\nscroll-snap-type    -                                    none     与scroll-snap-align配合使用，作用在scroll组件上，表示scroll的滚动吸附类型。第一个参数为x或y，表示水平方向上滚动或竖直方向上滚动；第二个参数为\n                                                                  mandatory、proximity、\n                                                                  cross。mandatory：表示选择距离最近的锚点吸附；proximity：表示距离吸附锚点不到容器高度的 30%\n                                                                  时才会吸附；cross：表示子组件能够被吸附的边界出现在 scroll 视口内才会吸附。默认为 proximity\n                                                                  aiot-toolkit最低版本：1.1.4\nscroll-snap-align   none | start | center | end | edge   none     与scroll-snap-type配合使用，作用在scroll子组件上，表示子组件和scroll的对⻬形式。none：表示无需对⻬，默认值；start：表示组件和scroll起始边对⻬；center：表示组件和scroll中心对⻬；end：表示组件和scroll终止边对⻬；edge：在滚动方向上，组件和\n                                                                  scroll 起始边或者结束边对齐\n                                                                  aiot-toolkit最低版本：1.1.4\nscroll-snap-stop    normal | always                      normal   值为 always 时不能跨越元素进行吸附\n                                                                  aiot-toolkit最低版本：1.1.4\n\n\n# 示例代码\n\n * scroll-snap-type & scroll-snap-align\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x proximity;">\n           <text class="scroll-item color-1">A</text>\n           <text class="scroll-item color-2">B</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: start;">C</text>\n           <text class="scroll-item color-2">D</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">E</text>\n           <text class="scroll-item color-2">F</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: end;">G</text>\n           <text class="scroll-item color-2">H</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n * scroll-snap-stop\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x cross;scroll-snap-stop:always;">\n           <text class="scroll-item color-1">A</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">B</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">C</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">D</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">E</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">F</text>\n           <text class="scroll-item color-1">G</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n\n# 事件\n\n名称             参数                     描述\nscrolltop      -                      滚动到顶部触发\nscrollbottom   -                      滚动到底部触发\nscroll         { scrollX, scrollY }   滚动触发，scrollX 表示滚动的水平距离；scrollY 表示滚动的垂直距离\n\n\n# 方法\n\n名称              参数       返回值        描述\ngetScrollRect   无        <object>   获取滚动内容的尺寸\nscrollTo        Object   无          让滚动组件窗口滚动到某个坐标位置\nscrollBy        Object   无          使滚动组件窗口滚动一定距离\n\n\n# scrollTo方法Object参数\n\n名称         类型                        默认值    必填   描述\nleft       number                    -      否    滚动组件的横轴坐标值，不传表示横轴不滚动，负数按0处理，超出滚动范围按滚动边界处理\ntop        number                    -      否    滚动组件的纵轴坐标值，不传表示纵轴不滚动，负数按0处理，超出滚动范围按滚动边界处理\nbehavior   smooth / instant / auto   auto   否    滚动行为，smooth-平滑滚动，instant-瞬间滚动，auto-等同于instant\n\n\n# scrollBy方法Object参数\n\n名称         类型                        默认值    必填   描述\nleft       number                    -      否    滚动组件的横轴偏移量，可以是负数，超出滚动范围按滚动边界处理\ntop        number                    -      否    滚动组件的纵轴偏移量，可以是负数，超出滚动范围按滚动边界处理\nbehavior   smooth / instant / auto   auto   否    滚动行为，smooth-平滑滚动，instant-瞬间滚动，auto-等同于instant\n\n\n# 返回值（异步）\n\n属性       类型         描述\nwidth    <number>   滚动内容的宽度，包含border和padding\nheight   <number>   滚动内容的高度，包含border和padding\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n      <scroll id="scrollId" scroll-y="true" onscrolltop="handleScrollTop">\n          <div class="item">\n             <text>北京</text>\n          </div>\n          <div class="item">\n             <text>上海</text>\n          </div>\n          <div class="item">\n             <text>广州</text>\n          </div>\n          <div class="item">\n             <text>深圳</text>\n          </div>\n       </scroll>\n  </div>\n</template>\n\n<script>\n  export default {\n    onShow() {\n      this.$element(\'scrollId\').getScrollRect({\n        success({ width, height }) {\n          console.log(\'宽度\', width);\n          console.log(\'高度\', height);  \n        }\n      })\n\n      // this.scrollTo()\n      // this.scrollBy()\n    },\n    handleScrollTop() {\n      console.info(\'scrolled top.\')\n    },\n    scrollTo() {\n      this.$element(\'scrollId\').scrollTo({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    },\n    scrollBy() {\n      this.$element(\'scrollId\').scrollBy({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n  }\n\n  #scrollId {\n    width: 50%;\n    height: 100px;\n    flex-direction: column;\n    background-color: yellowgreen;\n  }\n\n  .item {\n    width: 100%;\n    height: 50px;\n    justify-content: center;\n  }\n</style>\n\n',normalizedContent:'# scroll\n\n\n# 概述\n\n滚动视图容器。竖向或水平方向滚动容器，竖向滚动需要设置定高，水平滚动需要设置定宽。\n\n\n# 子组件\n\n支持。也支持嵌套子 scroll。\n\n\n# 属性\n\n支持通用属性\n\n名称              类型                    默认值     必填   描述\nscroll-x        <boolean>             false   否    是否允许横向滚动\nscroll-y        <boolean>             false   否    是否允许纵向滚动\nscroll-top      <number> | <string>           否    设置竖向滚动条位置，内容顶部到 scroll 顶部的距离，如果有滚动吸附效果则先滚动再吸附\nscroll-bottom   <number> | <string>           否    设置竖向滚动条位置，内容底部到 scroll 底部的距离，如果有滚动吸附效果则先滚动再吸附。同时设置\n                                                   scroll-top 和scroll-bottom 以scroll-top为准\nscroll-left     <number> | <string>           否    设置横向滚动条位置，内容左侧到 scroll 左侧的距离，如果有滚动吸附效果则先滚动再吸附\nscroll-right    <number> | <string>           否    设设置横向滚动条位置，内容右侧到 scroll 右侧的距离，如果有滚动吸附效果则先滚动再吸附。同时设置\n                                                   scroll-left 和scroll-right 以scroll-left为准\nbounces         <boolean>             false   否    是否边界回弹\n\n\n# 样式\n\n支持通用样式\n\n名称                  类型                                   默认值      描述\nscroll-snap-type    -                                    none     与scroll-snap-align配合使用，作用在scroll组件上，表示scroll的滚动吸附类型。第一个参数为x或y，表示水平方向上滚动或竖直方向上滚动；第二个参数为\n                                                                  mandatory、proximity、\n                                                                  cross。mandatory：表示选择距离最近的锚点吸附；proximity：表示距离吸附锚点不到容器高度的 30%\n                                                                  时才会吸附；cross：表示子组件能够被吸附的边界出现在 scroll 视口内才会吸附。默认为 proximity\n                                                                  aiot-toolkit最低版本：1.1.4\nscroll-snap-align   none | start | center | end | edge   none     与scroll-snap-type配合使用，作用在scroll子组件上，表示子组件和scroll的对⻬形式。none：表示无需对⻬，默认值；start：表示组件和scroll起始边对⻬；center：表示组件和scroll中心对⻬；end：表示组件和scroll终止边对⻬；edge：在滚动方向上，组件和\n                                                                  scroll 起始边或者结束边对齐\n                                                                  aiot-toolkit最低版本：1.1.4\nscroll-snap-stop    normal | always                      normal   值为 always 时不能跨越元素进行吸附\n                                                                  aiot-toolkit最低版本：1.1.4\n\n\n# 示例代码\n\n * scroll-snap-type & scroll-snap-align\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x proximity;">\n           <text class="scroll-item color-1">a</text>\n           <text class="scroll-item color-2">b</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: start;">c</text>\n           <text class="scroll-item color-2">d</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">e</text>\n           <text class="scroll-item color-2">f</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: end;">g</text>\n           <text class="scroll-item color-2">h</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n * scroll-snap-stop\n   \n   <template>\n     <div class="page">\n       <div class="scroll-container">\n         <scroll class="box" scroll-x="true" style="scroll-snap-type: x cross;scroll-snap-stop:always;">\n           <text class="scroll-item color-1">a</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">b</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">c</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">d</text>\n           <text class="scroll-item color-1" style="scroll-snap-align: center;">e</text>\n           <text class="scroll-item color-2" style="scroll-snap-align: center;">f</text>\n           <text class="scroll-item color-1">g</text>\n         </scroll>\n       </div>\n     </div>\n   </template>\n   \n   <script>\n     export default {}\n   <\/script>\n   \n   <style>\n     .page {\n       padding: 60px;\n       flex-direction: column;\n     }\n   \n     .scroll-container {\n       width: 100%;\n     }\n   \n     .box {\n       margin-bottom: 30px;\n       height: 100px;\n       width: 200px;\n     }\n   \n     .scroll-item {\n       width: 80%;\n       height: 100px;\n       text-align: center;\n     }\n   \n     .color-1 {\n       background-color: cadetblue;\n     }\n   \n     .color-2 {\n       background-color: orangered;\n     }\n   </style>\n   \n\n\n\n\n# 事件\n\n名称             参数                     描述\nscrolltop      -                      滚动到顶部触发\nscrollbottom   -                      滚动到底部触发\nscroll         { scrollx, scrolly }   滚动触发，scrollx 表示滚动的水平距离；scrolly 表示滚动的垂直距离\n\n\n# 方法\n\n名称              参数       返回值        描述\ngetscrollrect   无        <object>   获取滚动内容的尺寸\nscrollto        object   无          让滚动组件窗口滚动到某个坐标位置\nscrollby        object   无          使滚动组件窗口滚动一定距离\n\n\n# scrollto方法object参数\n\n名称         类型                        默认值    必填   描述\nleft       number                    -      否    滚动组件的横轴坐标值，不传表示横轴不滚动，负数按0处理，超出滚动范围按滚动边界处理\ntop        number                    -      否    滚动组件的纵轴坐标值，不传表示纵轴不滚动，负数按0处理，超出滚动范围按滚动边界处理\nbehavior   smooth / instant / auto   auto   否    滚动行为，smooth-平滑滚动，instant-瞬间滚动，auto-等同于instant\n\n\n# scrollby方法object参数\n\n名称         类型                        默认值    必填   描述\nleft       number                    -      否    滚动组件的横轴偏移量，可以是负数，超出滚动范围按滚动边界处理\ntop        number                    -      否    滚动组件的纵轴偏移量，可以是负数，超出滚动范围按滚动边界处理\nbehavior   smooth / instant / auto   auto   否    滚动行为，smooth-平滑滚动，instant-瞬间滚动，auto-等同于instant\n\n\n# 返回值（异步）\n\n属性       类型         描述\nwidth    <number>   滚动内容的宽度，包含border和padding\nheight   <number>   滚动内容的高度，包含border和padding\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n      <scroll id="scrollid" scroll-y="true" onscrolltop="handlescrolltop">\n          <div class="item">\n             <text>北京</text>\n          </div>\n          <div class="item">\n             <text>上海</text>\n          </div>\n          <div class="item">\n             <text>广州</text>\n          </div>\n          <div class="item">\n             <text>深圳</text>\n          </div>\n       </scroll>\n  </div>\n</template>\n\n<script>\n  export default {\n    onshow() {\n      this.$element(\'scrollid\').getscrollrect({\n        success({ width, height }) {\n          console.log(\'宽度\', width);\n          console.log(\'高度\', height);  \n        }\n      })\n\n      // this.scrollto()\n      // this.scrollby()\n    },\n    handlescrolltop() {\n      console.info(\'scrolled top.\')\n    },\n    scrollto() {\n      this.$element(\'scrollid\').scrollto({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    },\n    scrollby() {\n      this.$element(\'scrollid\').scrollby({\n        top: 1000,\n        left: 0,\n        behavior: \'smooth\'\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    justify-content: center;\n    align-items: center;\n  }\n\n  #scrollid {\n    width: 50%;\n    height: 100px;\n    flex-direction: column;\n    background-color: yellowgreen;\n  }\n\n  .item {\n    width: 100%;\n    height: 50px;\n    justify-content: center;\n  }\n</style>\n\n',charsets:{cjk:!0}},{title:"表单组件",frontmatter:{},regularPath:"/zh/components/form/",relativePath:"zh/components/form/README.md",key:"v-056e8295",path:"/zh/components/form/",headersStr:null,content:"# 表单组件\n\n用来进行交互的组件，如提交数据等。\n\n * input\n * picker\n * switch\n * slider",normalizedContent:"# 表单组件\n\n用来进行交互的组件，如提交数据等。\n\n * input\n * picker\n * switch\n * slider",charsets:{cjk:!0}},{title:"swiper",frontmatter:{},regularPath:"/zh/components/container/swiper.html",relativePath:"zh/components/container/swiper.md",key:"v-8b166274",path:"/zh/components/container/swiper.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:13},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:29},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:41},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:799},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:1380},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:1614},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1713}],headersStr:"概述 子组件 属性 样式 事件 方法 示例代码",content:'# swiper\n\n\n# 概述\n\n滑块视图容器。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n名称               类型          默认值      必填   描述\nindex            <number>    ０        否    当前显示的子组件索引\nautoplay         <boolean>   false    否    渲染完成后，是否自动进行播放\ninterval         <number>    3000ms   否    自动播放时的时间间隔，单位毫秒\nindicator        <boolean>   true     否    是否启用 indicator，默认 true\nloop             <boolean>   true     否    是否开启循环模式\nduration         <number>    -        否    滑动动画时长（duration默认根据手指的速度动态计算）\nvertical         <boolean>   false    否    滑动方向是否为纵向，纵向时indicator 也为纵向\npreviousmargin   <string>    0px      否    前边距，可用于露出前一项的一小部分，支持单位：px和%\nnextmargin       <string>    0px      否    后边距，可用于露出后一项的一小部分，支持单位：px和%\nenableswipe      <boolean>   true     否    是否支持手势滑动swiper\n\n备注：previousmargin和nextmargin的总和不应该超过整个swiper大小的1/2，超过部分将会被截取。\n\n\n# 样式\n\n支持通用样式\n\n名称                                  类型                        默认值                            必填   描述\nindicator-color                     <color>                   rgba(0, 0, 0, 0.5)             否    indicator 填充颜色\nindicator-selected-color            <color>                   #33b4ff 或者 rgb(51, 180, 255)   否    indicator 选中时的颜色\nindicator-size                      <length>                  20px                           否    indicator 组件的直径大小\nindicator-[top|left|right|bottom]   <length> | <percentage>   -                              否    indicator相对于swiper的位置\n\n\n# 事件\n\n支持通用事件\n\n名称           参数                     描述\nchange       {index:currentIndex}   当前显示的组件索引变化时触发\nswipestart   {index:currentIndex}   子组件切换动画开始时触发（如果是手指拖动导致的切换，指的是手指按压开始拖动的时间点）\nswipeend     {index:currentIndex}   子组件切换动画结束时触发\n\n\n# 方法\n\n名称        参数                      描述\nswipeTo   {index: number(指定位置)}   swiper 滚动到 index 位置\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <swiper class="swiper">\n      <text class="item item-1">A</text>\n      <text class="item item-2">B</text>\n      <text class="item item-3">C</text>\n      <text class="item item-4">D</text>\n    </swiper>\n    \n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .swiper {\n    width: 300px;\n    height: 160px;\n    indicator-size: 10px;\n  }\n\n  .item {\n    text-align: center;\n    color: white;\n    font-size: 30px;\n  }\n\n  .item-1 {\n    background-color: #3f56ea;\n  }\n\n  .item-2 {\n    background-color: #00bfc9;\n  }\n\n  .item-3 {\n    background-color: #47cc47;\n  }\n\n  .item-4 {\n    background-color: #FF6A00;\n  }\n</style>\n\n\n',normalizedContent:'# swiper\n\n\n# 概述\n\n滑块视图容器。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n名称               类型          默认值      必填   描述\nindex            <number>    ０        否    当前显示的子组件索引\nautoplay         <boolean>   false    否    渲染完成后，是否自动进行播放\ninterval         <number>    3000ms   否    自动播放时的时间间隔，单位毫秒\nindicator        <boolean>   true     否    是否启用 indicator，默认 true\nloop             <boolean>   true     否    是否开启循环模式\nduration         <number>    -        否    滑动动画时长（duration默认根据手指的速度动态计算）\nvertical         <boolean>   false    否    滑动方向是否为纵向，纵向时indicator 也为纵向\npreviousmargin   <string>    0px      否    前边距，可用于露出前一项的一小部分，支持单位：px和%\nnextmargin       <string>    0px      否    后边距，可用于露出后一项的一小部分，支持单位：px和%\nenableswipe      <boolean>   true     否    是否支持手势滑动swiper\n\n备注：previousmargin和nextmargin的总和不应该超过整个swiper大小的1/2，超过部分将会被截取。\n\n\n# 样式\n\n支持通用样式\n\n名称                                  类型                        默认值                            必填   描述\nindicator-color                     <color>                   rgba(0, 0, 0, 0.5)             否    indicator 填充颜色\nindicator-selected-color            <color>                   #33b4ff 或者 rgb(51, 180, 255)   否    indicator 选中时的颜色\nindicator-size                      <length>                  20px                           否    indicator 组件的直径大小\nindicator-[top|left|right|bottom]   <length> | <percentage>   -                              否    indicator相对于swiper的位置\n\n\n# 事件\n\n支持通用事件\n\n名称           参数                     描述\nchange       {index:currentindex}   当前显示的组件索引变化时触发\nswipestart   {index:currentindex}   子组件切换动画开始时触发（如果是手指拖动导致的切换，指的是手指按压开始拖动的时间点）\nswipeend     {index:currentindex}   子组件切换动画结束时触发\n\n\n# 方法\n\n名称        参数                      描述\nswipeto   {index: number(指定位置)}   swiper 滚动到 index 位置\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <swiper class="swiper">\n      <text class="item item-1">a</text>\n      <text class="item item-2">b</text>\n      <text class="item item-3">c</text>\n      <text class="item item-4">d</text>\n    </swiper>\n    \n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .swiper {\n    width: 300px;\n    height: 160px;\n    indicator-size: 10px;\n  }\n\n  .item {\n    text-align: center;\n    color: white;\n    font-size: 30px;\n  }\n\n  .item-1 {\n    background-color: #3f56ea;\n  }\n\n  .item-2 {\n    background-color: #00bfc9;\n  }\n\n  .item-3 {\n    background-color: #47cc47;\n  }\n\n  .item-4 {\n    background-color: #ff6a00;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"input",frontmatter:{},regularPath:"/zh/components/form/input.html",relativePath:"zh/components/form/input.md",key:"v-51323614",path:"/zh/components/form/input.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:12},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:38},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:51},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:351},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:900},{level:3,title:"change 事件参数",slug:"change-事件参数",normalizedTitle:"change 事件参数",charIndex:985},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:1193},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1337}],headersStr:"概述 子组件 属性 样式 事件 change 事件参数 方法 示例代码",content:'# input\n\n\n# 概述\n\n提供可交互的界面，接收用户的输入。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称        类型                            默认值      必填   描述\ntype      button | checkbox | radio |   button   否    支持动态修改\nchecked   <boolean>                     false    否    当前组件的 checked 状态，type 为 checkbox 时生效，可触发 checked 伪类（checked\n                                                      伪类样式还未支持）\nname      <string>                      -        否    input 组件名称\nvalue     <string>                      -        否    input 组件的值\n\n\n# 样式\n\n支持通用样式\n\n名称          类型                        默认值                   必填   描述\ncolor       <color>                   rgba(0, 0, 0, 0.87)   否    文本颜色\nfont-size   <length>                  37.5px                否    文本尺寸\nwidth       <length> | <percentage>   -                     否    type 为 button 时，默认值为 128px\nheight      <length> | <percentage>   -                     否    type 为 button 时，默认值为 70px\n\n\n# 事件\n\n支持通用事件\n\n名称       参数                               描述\nchange   不同 type 参数不同，具体见下方 change 事件参数   input 组件的值、状态发生改变时触发，type 为 button 时无 change 事件\n\n\n# change 事件参数\n\n参数        CHECKBOX   RADIO   备注\nname      √          √       -\nvalue     √          √       -\nchecked   √          -       -\n\n\n# 方法\n\n名称      参数                                    描述\nfocus   {focus:true|false}，focus 不传默认为 true   使组件获得或者失去焦点，可触发 focus 伪类（focus 伪类样式还未支持）\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <div class="section">\n      <text class="title">input-button 组件</text>\n      <input class="button" type="button" value="按钮" @click="onButtonClick" />\n      <text>{{ buttonText }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-checkbox 组件</text>\n      <input class="checkbox" type="checkbox" checked="{{ checkboxChecked }}" @change="onCheckboxChange" />\n      <text>我的勾选状态: {{ checkboxChecked }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-radio 组件</text>\n      <div>\n        <input class="radio" type="radio" name="radio" value="1" checked="{{radioValue === \'1\'}}" @change="onRadioChange" />\n        <input class="radio" type="radio" name="radio" value="2" checked="{{radioValue === \'2\'}}" @change="onRadioChange" />\n        <input class="radio" type="radio" name="radio" value="3" checked="{{radioValue === \'3\'}}" @change="onRadioChange" />\n      </div>\n      <text>当前选中第{{ radioValue }}个</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      buttonText: \'\',\n      checkboxChecked: true,\n      radioValue: \'1\'\n    },\n    onTextChange(e) {\n      this.textValue = e.value\n    },\n    onButtonClick() {\n      this.buttonText = \'按钮被点击了\'\n    },\n    onCheckboxChange(e) {\n      this.checkboxChecked = e.checked\n    },\n    onRadioChange(e) {\n      this.radioValue = e.value\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .section {\n    flex-direction: column;\n    margin-bottom: 30px;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .button {\n    width: 140px;\n    height: 50px;\n    font-size: 25px;\n    color: white;\n  }\n\n  .checkbox, .radio {\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n  }\n</style>\n\n\n',normalizedContent:'# input\n\n\n# 概述\n\n提供可交互的界面，接收用户的输入。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称        类型                            默认值      必填   描述\ntype      button | checkbox | radio |   button   否    支持动态修改\nchecked   <boolean>                     false    否    当前组件的 checked 状态，type 为 checkbox 时生效，可触发 checked 伪类（checked\n                                                      伪类样式还未支持）\nname      <string>                      -        否    input 组件名称\nvalue     <string>                      -        否    input 组件的值\n\n\n# 样式\n\n支持通用样式\n\n名称          类型                        默认值                   必填   描述\ncolor       <color>                   rgba(0, 0, 0, 0.87)   否    文本颜色\nfont-size   <length>                  37.5px                否    文本尺寸\nwidth       <length> | <percentage>   -                     否    type 为 button 时，默认值为 128px\nheight      <length> | <percentage>   -                     否    type 为 button 时，默认值为 70px\n\n\n# 事件\n\n支持通用事件\n\n名称       参数                               描述\nchange   不同 type 参数不同，具体见下方 change 事件参数   input 组件的值、状态发生改变时触发，type 为 button 时无 change 事件\n\n\n# change 事件参数\n\n参数        checkbox   radio   备注\nname      √          √       -\nvalue     √          √       -\nchecked   √          -       -\n\n\n# 方法\n\n名称      参数                                    描述\nfocus   {focus:true|false}，focus 不传默认为 true   使组件获得或者失去焦点，可触发 focus 伪类（focus 伪类样式还未支持）\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <div class="section">\n      <text class="title">input-button 组件</text>\n      <input class="button" type="button" value="按钮" @click="onbuttonclick" />\n      <text>{{ buttontext }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-checkbox 组件</text>\n      <input class="checkbox" type="checkbox" checked="{{ checkboxchecked }}" @change="oncheckboxchange" />\n      <text>我的勾选状态: {{ checkboxchecked }}</text>\n    </div>\n    <div class="section">\n      <text class="title">input-radio 组件</text>\n      <div>\n        <input class="radio" type="radio" name="radio" value="1" checked="{{radiovalue === \'1\'}}" @change="onradiochange" />\n        <input class="radio" type="radio" name="radio" value="2" checked="{{radiovalue === \'2\'}}" @change="onradiochange" />\n        <input class="radio" type="radio" name="radio" value="3" checked="{{radiovalue === \'3\'}}" @change="onradiochange" />\n      </div>\n      <text>当前选中第{{ radiovalue }}个</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      buttontext: \'\',\n      checkboxchecked: true,\n      radiovalue: \'1\'\n    },\n    ontextchange(e) {\n      this.textvalue = e.value\n    },\n    onbuttonclick() {\n      this.buttontext = \'按钮被点击了\'\n    },\n    oncheckboxchange(e) {\n      this.checkboxchecked = e.checked\n    },\n    onradiochange(e) {\n      this.radiovalue = e.value\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .section {\n    flex-direction: column;\n    margin-bottom: 30px;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .button {\n    width: 140px;\n    height: 50px;\n    font-size: 25px;\n    color: white;\n  }\n\n  .checkbox, .radio {\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"picker",frontmatter:{},regularPath:"/zh/components/form/picker.html",relativePath:"zh/components/form/picker.md",key:"v-957e3b94",path:"/zh/components/form/picker.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:13},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:59},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:72},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:410},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:803},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:1067}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# picker\n\n\n# 概述\n\n滚动选择器，目前支持两种选择器，普通选择器，时间选择器。默认为普通选择器。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n普通选择器\n\n名称         类型         默认值   必填   描述\ntype       text       -     是    不支持动态修改\nrange      <array>    -     否    选择器的取值范围\nselected   <number>   0     否    选择器的默认取值，取值为 range 的索引\n\n时间选择器\n\n名称         类型         默认值    必填   描述\ntype       time       -      是    不支持动态修改\nselected   <string>   当前时间   否    选择器的默认取值，格式为 hh:mm\n\n\n# 样式\n\n支持通用样式\n\n名称                          类型         默认值       必填   描述\ncolor                       <color>    主题色       否    候选项字体颜色\nfont-size                   <length>   30px      否    候选项字体尺寸，单位px\nselected-color              <length>   #ffffff   否    选中项字体颜色\nselected-font-size          <length>   20px      否    选中项字体尺寸，单位px\nselected-background-color   <color>    -         否    选中项背景颜色\n\n\n# 事件\n\n普通选择器\n\n名称       参数                                             描述\nchange   {newValue:newValue, newSelected:newSelected}   滚动选择器选择值后确定时触发（newSelected 为索引）\n\n时间选择器\n\n名称       参数                           描述\nchange   {hour:hour, minute:minute}   滚动选择器选择值后确定时触发\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <text class="title">普通picker</text>\n    <picker \n      class="picker" \n      type="text" \n      range="{{pickerList}}" \n      selected="1" \n      onchange="onPickerChange">\n    </picker>\n    <text class="value">选择的值：{{v1}}</text>\n\n    <text class="title">时间picker</text>\n    <picker \n      class="picker" \n      type="time"\n      selected="12:00" \n      onchange="onTimePickerChange">\n    </picker>\n    <text class="value">选择的值：{{v2}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      pickerList: [\'apple\', \'peach\', \'pear\', \'banana\'],\n      v1: \'peach\',\n      v2: \'12:00\'\n    },\n    onPickerChange(e) {\n      this.v1 = e.newValue;\n    },\n    onTimePickerChange(e) {\n      this.v2 = e.hour + \':\' + e.minute;\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n    color: #000;\n  }\n\n  .value {\n    margin-top: 5px;\n    margin-bottom: 30px;\n    color: #090;\n  }\n\n  .picker {\n    font-size: 25px;\n    color: #000;\n    selected-font-size: 30px;\n    selected-color: #09f;\n    selected-background-color: #ccc;\n  }\n</style>\n\n\n',normalizedContent:'# picker\n\n\n# 概述\n\n滚动选择器，目前支持两种选择器，普通选择器，时间选择器。默认为普通选择器。\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n普通选择器\n\n名称         类型         默认值   必填   描述\ntype       text       -     是    不支持动态修改\nrange      <array>    -     否    选择器的取值范围\nselected   <number>   0     否    选择器的默认取值，取值为 range 的索引\n\n时间选择器\n\n名称         类型         默认值    必填   描述\ntype       time       -      是    不支持动态修改\nselected   <string>   当前时间   否    选择器的默认取值，格式为 hh:mm\n\n\n# 样式\n\n支持通用样式\n\n名称                          类型         默认值       必填   描述\ncolor                       <color>    主题色       否    候选项字体颜色\nfont-size                   <length>   30px      否    候选项字体尺寸，单位px\nselected-color              <length>   #ffffff   否    选中项字体颜色\nselected-font-size          <length>   20px      否    选中项字体尺寸，单位px\nselected-background-color   <color>    -         否    选中项背景颜色\n\n\n# 事件\n\n普通选择器\n\n名称       参数                                             描述\nchange   {newvalue:newvalue, newselected:newselected}   滚动选择器选择值后确定时触发（newselected 为索引）\n\n时间选择器\n\n名称       参数                           描述\nchange   {hour:hour, minute:minute}   滚动选择器选择值后确定时触发\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <text class="title">普通picker</text>\n    <picker \n      class="picker" \n      type="text" \n      range="{{pickerlist}}" \n      selected="1" \n      onchange="onpickerchange">\n    </picker>\n    <text class="value">选择的值：{{v1}}</text>\n\n    <text class="title">时间picker</text>\n    <picker \n      class="picker" \n      type="time"\n      selected="12:00" \n      onchange="ontimepickerchange">\n    </picker>\n    <text class="value">选择的值：{{v2}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      pickerlist: [\'apple\', \'peach\', \'pear\', \'banana\'],\n      v1: \'peach\',\n      v2: \'12:00\'\n    },\n    onpickerchange(e) {\n      this.v1 = e.newvalue;\n    },\n    ontimepickerchange(e) {\n      this.v2 = e.hour + \':\' + e.minute;\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n    color: #000;\n  }\n\n  .value {\n    margin-top: 5px;\n    margin-bottom: 30px;\n    color: #090;\n  }\n\n  .picker {\n    font-size: 25px;\n    color: #000;\n    selected-font-size: 30px;\n    selected-color: #09f;\n    selected-background-color: #ccc;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"slider",frontmatter:{},regularPath:"/zh/components/form/slider.html",relativePath:"zh/components/form/slider.md",key:"v-11f34956",path:"/zh/components/form/slider.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:13},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:27},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:40},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:217},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:614},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:930}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# slider\n\n\n# 概述\n\n滑动选择器\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称      类型         默认值   必填   描述\nmin     <number>   ０     否    -\nmax     <number>   100   否    -\nstep    <number>   1     否    -\nvalue   <number>   0     否    -\n\n\n# 样式\n\n支持通用样式\n\n名称                     类型         默认值                             必填   描述\ncolor                  <color>    #f0f0f0 或者 rgb(240, 240, 240)   否    背景条颜色\nselected-color         <color>    #009688 或者 rgb(0, 150, 136)     否    已选择颜色\nblock-color            <color>    -                               否    滑块的颜色\npadding-[left|right]   <length>   32px                            否    左右边距\n\n\n# 事件\n\n支持通用事件\n\n名称       参数                                                     描述\nchange   {progress:progressValue, isFromUser:isFromUserValue}   完成一次拖动后触发的事件\n                                                                isFromUser说明：\n                                                                该事件是否由于用户拖动触发\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <text class="title">slider 组件</text>\n    <slider class="slider" min="0" max="100" step="10" value="{{ initialSliderValue }}" onchange="onSliderChange"></slider>\n    <text>slider的值：{{ sliderValue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      initialSliderValue: 10,\n      sliderValue: null\n    },\n    onSliderChange (e) {\n      this.sliderValue = e.progress\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .slider {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n</style>\n\n\n',normalizedContent:'# slider\n\n\n# 概述\n\n滑动选择器\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称      类型         默认值   必填   描述\nmin     <number>   ０     否    -\nmax     <number>   100   否    -\nstep    <number>   1     否    -\nvalue   <number>   0     否    -\n\n\n# 样式\n\n支持通用样式\n\n名称                     类型         默认值                             必填   描述\ncolor                  <color>    #f0f0f0 或者 rgb(240, 240, 240)   否    背景条颜色\nselected-color         <color>    #009688 或者 rgb(0, 150, 136)     否    已选择颜色\nblock-color            <color>    -                               否    滑块的颜色\npadding-[left|right]   <length>   32px                            否    左右边距\n\n\n# 事件\n\n支持通用事件\n\n名称       参数                                                     描述\nchange   {progress:progressvalue, isfromuser:isfromuservalue}   完成一次拖动后触发的事件\n                                                                isfromuser说明：\n                                                                该事件是否由于用户拖动触发\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <text class="title">slider 组件</text>\n    <slider class="slider" min="0" max="100" step="10" value="{{ initialslidervalue }}" onchange="onsliderchange"></slider>\n    <text>slider的值：{{ slidervalue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      initialslidervalue: 10,\n      slidervalue: null\n    },\n    onsliderchange (e) {\n      this.slidervalue = e.progress\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .slider {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"switch",frontmatter:{},regularPath:"/zh/components/form/switch.html",relativePath:"zh/components/form/switch.md",key:"v-f63a1f14",path:"/zh/components/form/switch.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:13},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:26},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:39},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:149},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:373},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:476}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# switch\n\n\n# 概述\n\n开关选择\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称        类型          默认值     必填   描述\nchecked   <boolean>   false   否    可触发 checked 伪类（checked 伪类样式还未支持）\n\n\n# 样式\n\n支持通用样式\n\n名称            类型        默认值                             必填   描述\nthumb-color   <color>   #ffffff 或者 rgb(255, 255, 255)   否    滑块颜色\ntrack-color   <color>   #0d84ff 或者 rgb(13, 132, 255)    否    滑轨颜色\n\n\n# 事件\n\n支持通用事件\n\n名称       参数                       描述\nchange   {checked:checkedValue}   checked 状态改变时触发\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <text class="title">switch 组件</text>\n    <switch checked="{{ switchValue }}" class="switch" @change="onSwitchChange"></switch>\n    <text>状态：{{ switchValue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      switchValue: true\n    },\n    onSwitchChange(e) {\n      this.switchValue = e.checked\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .switch {\n    width: 100px;\n    margin-top: 10px;\n  }\n</style>\n\n\n',normalizedContent:'# switch\n\n\n# 概述\n\n开关选择\n\n\n# 子组件\n\n不支持\n\n\n# 属性\n\n支持通用属性\n\n名称        类型          默认值     必填   描述\nchecked   <boolean>   false   否    可触发 checked 伪类（checked 伪类样式还未支持）\n\n\n# 样式\n\n支持通用样式\n\n名称            类型        默认值                             必填   描述\nthumb-color   <color>   #ffffff 或者 rgb(255, 255, 255)   否    滑块颜色\ntrack-color   <color>   #0d84ff 或者 rgb(13, 132, 255)    否    滑轨颜色\n\n\n# 事件\n\n支持通用事件\n\n名称       参数                       描述\nchange   {checked:checkedvalue}   checked 状态改变时触发\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <text class="title">switch 组件</text>\n    <switch checked="{{ switchvalue }}" class="switch" @change="onswitchchange"></switch>\n    <text>状态：{{ switchvalue }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      switchvalue: true\n    },\n    onswitchchange(e) {\n      this.switchvalue = e.checked\n    }\n  }\n<\/script>\n\n<style>\n  .page {\n    flex-direction: column;\n    padding: 30px;\n    background-color: #ffffff;\n  }\n\n  .title {\n    font-weight: bold;\n  }\n\n  .switch {\n    width: 100px;\n    margin-top: 10px;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"组件通用说明",frontmatter:{},regularPath:"/zh/components/general/",relativePath:"zh/components/general/README.md",key:"v-740c98e3",path:"/zh/components/general/",headersStr:null,content:"# 组件通用说明\n\n本章节介绍所有组件通用的样式、属性、事件。",normalizedContent:"# 组件通用说明\n\n本章节介绍所有组件通用的样式、属性、事件。",charsets:{cjk:!0}},{title:"动画样式",frontmatter:{},regularPath:"/zh/components/general/animation-style.html",relativePath:"zh/components/general/animation-style.md",key:"v-1eaadfb6",path:"/zh/components/general/animation-style.html",headers:[{level:2,title:"动画样式列表",slug:"动画样式列表",normalizedTitle:"动画样式列表",charIndex:203},{level:2,title:"transform 操作",slug:"transform-操作",normalizedTitle:"transform 操作",charIndex:404},{level:2,title:"transform-origin 操作",slug:"transform-origin-操作",normalizedTitle:"transform-origin 操作",charIndex:514},{level:2,title:"animation-name 属性",slug:"animation-name-属性",normalizedTitle:"animation-name 属性",charIndex:3234},{level:2,title:"@keyframes 属性",slug:"keyframes-属性",normalizedTitle:"@keyframes 属性",charIndex:653},{level:2,title:"transition 过渡动画",slug:"transition-过渡动画",normalizedTitle:"transition 过渡动画",charIndex:4234},{level:3,title:"transition 使用示例",slug:"transition-使用示例",normalizedTitle:"transition 使用示例",charIndex:4334},{level:3,title:"transition-property 支持的通用样式属性",slug:"transition-property-支持的通用样式属性",normalizedTitle:"transition-property 支持的通用样式属性",charIndex:5195}],headersStr:"动画样式列表 transform 操作 transform-origin 操作 animation-name 属性 @keyframes 属性 transition 过渡动画 transition 使用示例 transition-property 支持的通用样式属性",content:'# 动画样式\n\nVela JS 应用支持开发者制作动画，提供了transform类、transform-origin类、animation类与transition类的动画样式属性，且参数格式与 CSS 对齐，更方便开发者上手适配动画。\n\ntransform可参考此文档。\n\ntransform-origin可参考此文档。\n\nanimation可参考此文档。\n\ntransition 可参考此文档。\n\n\n# 动画样式列表\n\n名称                           类型                                                       默认值    描述\ntransform                    <string>                                                 -      见下面 transform 操作\ntransform-origin             <string>                                                 -      见下面 transform-origin 操作\nanimation-name               <string>                                                 -      与@keyframes 的 name 相呼应，见下面@keyframes 属性\nanimation-delay              <time>                                                   0      目前支持的单位为[ s(秒) | ms(毫秒) ]\nanimation-duration           <time>                                                   0      目前支持的单位为[ s(秒) | ms(毫秒) ]\nanimation-iteration-count    <integer> | infinite                                     1      定义动画播放的次数，可设置为infinite无限次播放\nanimation-timing-function    linear | ease | ease-in | ease-out | ease-in-out |       ease   -\n                             cubic-bezier(<number>, <number>, <number>, <number>) |\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-property          <string>                                                 all    指定执行 transition 效果的通用样式属性名称，参见详情\ntransition-duration          <time>                                                   0s     指定 transition 执行时间\ntransition-timing-function   linear | ease | ease-in | ease-out | ease-in-out |       ease   指定 transition 执行时的时间函数。该参数释义与 animation 相同\n                             cubic-bezier(<number>, <number>, <number>, <number>) |\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-delay             <time>                                                   0s     指定 transition 开始执行的时间，即当改变元素属性值后多长时间开始执行 transition 效果\n\n注：\n\n * animation-timing-function 类型\n\ncubic-bezier(<number>, <number>, <number>, <number>) | step-start | step-end | steps(number_of_steps[, step-direction]?)其中：\n\nsteps(number_of_steps，step-direction)\n\n名称                类型                                                            默认值   必填   描述\nnumber_of_steps   <integer>                                                     -     是    表示等间隔步数的正整数\nstep-direction    jump-start | jump-end | jump-none | jump-both | start | end   end   否    指示函数左连续或右连续的关键字\n\n * cubic-bezier(x1, y1, x2, y2)\n\n参数 x1, y1, x2, y2 是 <number> 类型的值，代表当前定义的立方贝塞尔曲线中的 P1 和 P2 点的横坐标和纵坐标，x1 和 x2 必须在 [0，1] 范围内，否则当前值无效。\n\n\n# transform 操作\n\n向元素应用 2D 转换。该属性允许我们对元素进行旋转、缩放、移动。 支持的样式属性列表如下：\n\n名称           类型\ntranslate    <length> | <percent>\ntranslateX   <length> | <percent>\ntranslateY   <length> | <percent>\nscale        <number>\nscaleX       <number>\nscaleY       <number>\nrotate       <deg>\n\n\n# transform-origin 操作\n\n更改一个元素变形的原点，目前支持改变元素的 X 和 Y 轴。\n\n注意：\n\n * 使用此属性必须先使用 transform 属性。\n\n示例代码：\n\n/* 使用 % 值 */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 20% 40%;\n}\n/* 使用 px 值 */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 100px 100px;\n}\n\n\n\n# animation-name 属性\n\n指定所采用的一系列动画，属性值的每个名称代表一个由 @keyframes 属性定义的关键帧序列。该属性支持在组件中应用单个动画或多个动画 1070+ ，应用多个动画时动画同时开始执行。\n\n示例代码：\n\n/* 单个动画 */\nanimation-name: Color;\nanimation-name: translate;\nanimation-name: rotate;\n\n/* 多个动画 1070+ */\nanimation-name: Color, Opacity;\nanimation-name: Width, translate, rotate;\n\n\n\n# @keyframes 属性\n\n名称                    类型                                                             默认值       描述\nbackground-color      <color>                                                        -         -\nbackground-position   <length> |<percentage>| left | right | top | bottom | center   0px 0px   描述了背景图片在容器中绘制的位置，支持 1-4 个参数，详情见背景图样式\nopacity               <number>                                                       -         -\nwidth/height          <length>                                                       -         暂不支持百分比\ntransform             <string>                                                       -         可以对元素进行旋转、缩放、移动\n\n注：\n\n暂时不支持起始值(0%)或终止值(100%)缺省的情况，都需显式指定。\n\n\n# transition 过渡动画\n\ntransition 过渡动画是实现动画的另一种方式。过渡动画可以为元素定义在不同状态之间切换时的过渡效果，比如通过 JavaScript 实现的状态变化。\n\n\n# transition 使用示例\n\n共 4 个样式属性：transition-property、transition-duration、transition-timing-function、transition-delay，直接写在样式当中，使用示例如下：\n\n<template>\n  <div class="page">\n    <div class="div {{otherClass}}"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      otherClass: ""\n    },\n    onShow() {\n      const that = this\n      setTimeout(() => {\n        that.otherClass = "new-width"\n      }, 1000);\n    }\n  };\n<\/script>\n\n<style>\n.page {\n  padding: 60px;\n  align-items: center;\n}\n.div {\n  width: 100px;\n  height: 200px;\n  background-color: red;\n  transition-property: width;\n  transition-duration: 2000ms;\n  transition-timing-function: ease-in;\n  transition-delay: 500ms;\n}\n.new-width {\n  width: 300px;\n}\n</style>\n\n\n上述 4 个样式属性可简写到一个中，表示当触发 div 的 width 变化后 0.5s，以加速的方式变化至新的 width 值，过渡动画持续 2s：\n\n.div {\n  transition: width 2000ms ease-in 500ms;\n}\n\n\n\n# transition-property 支持的通用样式属性\n\nJS 应用中 transition-property 支持的通用样式属性列表如下：\n\n样式名称                                      备注\nwidth                                     √\nheight                                    √\nopacity                                   √\nvisibility                                √\ncolor                                     暂不支持\ntransform-origin                          暂不支持\ntransform                                 暂不支持\npadding                                   暂不支持\npadding-[left|top|right|bottom]           暂不支持\nmargin                                    暂不支持\nmargin-[left|top|right|bottom]            暂不支持\nborder                                    暂不支持\nborder-[left|top|right|bottom]            暂不支持\nborder-width                              √\nborder-[left|top|right|bottom]-width      暂不支持\nborder-color                              √\nborder-[left|top|right|bottom]-color      暂不支持\nborder-radius                             暂不支持\nborder-[top|bottom]-[left|right]-radius   暂不支持\nbackground                                暂不支持\nbackground-color                          √\nbackground-size                           暂不支持\nbackground-position                       √\nflex                                      暂不支持\nflex-grow                                 暂不支持\nflex-shrink                               暂不支持\nflex-basis                                暂不支持\n[left|top|right|bottom]                   暂不支持',normalizedContent:'# 动画样式\n\nvela js 应用支持开发者制作动画，提供了transform类、transform-origin类、animation类与transition类的动画样式属性，且参数格式与 css 对齐，更方便开发者上手适配动画。\n\ntransform可参考此文档。\n\ntransform-origin可参考此文档。\n\nanimation可参考此文档。\n\ntransition 可参考此文档。\n\n\n# 动画样式列表\n\n名称                           类型                                                       默认值    描述\ntransform                    <string>                                                 -      见下面 transform 操作\ntransform-origin             <string>                                                 -      见下面 transform-origin 操作\nanimation-name               <string>                                                 -      与@keyframes 的 name 相呼应，见下面@keyframes 属性\nanimation-delay              <time>                                                   0      目前支持的单位为[ s(秒) | ms(毫秒) ]\nanimation-duration           <time>                                                   0      目前支持的单位为[ s(秒) | ms(毫秒) ]\nanimation-iteration-count    <integer> | infinite                                     1      定义动画播放的次数，可设置为infinite无限次播放\nanimation-timing-function    linear | ease | ease-in | ease-out | ease-in-out |       ease   -\n                             cubic-bezier(<number>, <number>, <number>, <number>) |\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-property          <string>                                                 all    指定执行 transition 效果的通用样式属性名称，参见详情\ntransition-duration          <time>                                                   0s     指定 transition 执行时间\ntransition-timing-function   linear | ease | ease-in | ease-out | ease-in-out |       ease   指定 transition 执行时的时间函数。该参数释义与 animation 相同\n                             cubic-bezier(<number>, <number>, <number>, <number>) |\n                             step-start | step-end | steps(number_of_steps[,\n                             step-direction]?)\ntransition-delay             <time>                                                   0s     指定 transition 开始执行的时间，即当改变元素属性值后多长时间开始执行 transition 效果\n\n注：\n\n * animation-timing-function 类型\n\ncubic-bezier(<number>, <number>, <number>, <number>) | step-start | step-end | steps(number_of_steps[, step-direction]?)其中：\n\nsteps(number_of_steps，step-direction)\n\n名称                类型                                                            默认值   必填   描述\nnumber_of_steps   <integer>                                                     -     是    表示等间隔步数的正整数\nstep-direction    jump-start | jump-end | jump-none | jump-both | start | end   end   否    指示函数左连续或右连续的关键字\n\n * cubic-bezier(x1, y1, x2, y2)\n\n参数 x1, y1, x2, y2 是 <number> 类型的值，代表当前定义的立方贝塞尔曲线中的 p1 和 p2 点的横坐标和纵坐标，x1 和 x2 必须在 [0，1] 范围内，否则当前值无效。\n\n\n# transform 操作\n\n向元素应用 2d 转换。该属性允许我们对元素进行旋转、缩放、移动。 支持的样式属性列表如下：\n\n名称           类型\ntranslate    <length> | <percent>\ntranslatex   <length> | <percent>\ntranslatey   <length> | <percent>\nscale        <number>\nscalex       <number>\nscaley       <number>\nrotate       <deg>\n\n\n# transform-origin 操作\n\n更改一个元素变形的原点，目前支持改变元素的 x 和 y 轴。\n\n注意：\n\n * 使用此属性必须先使用 transform 属性。\n\n示例代码：\n\n/* 使用 % 值 */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 20% 40%;\n}\n/* 使用 px 值 */\ndiv {\n  transform: rotate(30deg); \n  transform-origin: 100px 100px;\n}\n\n\n\n# animation-name 属性\n\n指定所采用的一系列动画，属性值的每个名称代表一个由 @keyframes 属性定义的关键帧序列。该属性支持在组件中应用单个动画或多个动画 1070+ ，应用多个动画时动画同时开始执行。\n\n示例代码：\n\n/* 单个动画 */\nanimation-name: color;\nanimation-name: translate;\nanimation-name: rotate;\n\n/* 多个动画 1070+ */\nanimation-name: color, opacity;\nanimation-name: width, translate, rotate;\n\n\n\n# @keyframes 属性\n\n名称                    类型                                                             默认值       描述\nbackground-color      <color>                                                        -         -\nbackground-position   <length> |<percentage>| left | right | top | bottom | center   0px 0px   描述了背景图片在容器中绘制的位置，支持 1-4 个参数，详情见背景图样式\nopacity               <number>                                                       -         -\nwidth/height          <length>                                                       -         暂不支持百分比\ntransform             <string>                                                       -         可以对元素进行旋转、缩放、移动\n\n注：\n\n暂时不支持起始值(0%)或终止值(100%)缺省的情况，都需显式指定。\n\n\n# transition 过渡动画\n\ntransition 过渡动画是实现动画的另一种方式。过渡动画可以为元素定义在不同状态之间切换时的过渡效果，比如通过 javascript 实现的状态变化。\n\n\n# transition 使用示例\n\n共 4 个样式属性：transition-property、transition-duration、transition-timing-function、transition-delay，直接写在样式当中，使用示例如下：\n\n<template>\n  <div class="page">\n    <div class="div {{otherclass}}"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      otherclass: ""\n    },\n    onshow() {\n      const that = this\n      settimeout(() => {\n        that.otherclass = "new-width"\n      }, 1000);\n    }\n  };\n<\/script>\n\n<style>\n.page {\n  padding: 60px;\n  align-items: center;\n}\n.div {\n  width: 100px;\n  height: 200px;\n  background-color: red;\n  transition-property: width;\n  transition-duration: 2000ms;\n  transition-timing-function: ease-in;\n  transition-delay: 500ms;\n}\n.new-width {\n  width: 300px;\n}\n</style>\n\n\n上述 4 个样式属性可简写到一个中，表示当触发 div 的 width 变化后 0.5s，以加速的方式变化至新的 width 值，过渡动画持续 2s：\n\n.div {\n  transition: width 2000ms ease-in 500ms;\n}\n\n\n\n# transition-property 支持的通用样式属性\n\njs 应用中 transition-property 支持的通用样式属性列表如下：\n\n样式名称                                      备注\nwidth                                     √\nheight                                    √\nopacity                                   √\nvisibility                                √\ncolor                                     暂不支持\ntransform-origin                          暂不支持\ntransform                                 暂不支持\npadding                                   暂不支持\npadding-[left|top|right|bottom]           暂不支持\nmargin                                    暂不支持\nmargin-[left|top|right|bottom]            暂不支持\nborder                                    暂不支持\nborder-[left|top|right|bottom]            暂不支持\nborder-width                              √\nborder-[left|top|right|bottom]-width      暂不支持\nborder-color                              √\nborder-[left|top|right|bottom]-color      暂不支持\nborder-radius                             暂不支持\nborder-[top|bottom]-[left|right]-radius   暂不支持\nbackground                                暂不支持\nbackground-color                          √\nbackground-size                           暂不支持\nbackground-position                       √\nflex                                      暂不支持\nflex-grow                                 暂不支持\nflex-shrink                               暂不支持\nflex-basis                                暂不支持\n[left|top|right|bottom]                   暂不支持',charsets:{cjk:!0}},{title:"stack",frontmatter:{},regularPath:"/zh/components/container/stack.html",relativePath:"zh/components/container/stack.md",key:"v-1f35e996",path:"/zh/components/container/stack.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:12},{level:2,title:"子组件",slug:"子组件",normalizedTitle:"子组件",charIndex:21},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:78},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:93},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:108},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:123}],headersStr:"概述 子组件 属性 样式 事件 示例代码",content:'# stack\n\n\n# 概述\n\n基本容器，子组件排列方式为层叠排列，每个直接子组件按照先后顺序依次堆叠，覆盖前一个子组件。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n\n# 样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <stack class="stack">\n      <div class="box box1"></div>\n      <div class="box box2"></div>\n      <div class="box box3"></div>\n      <div class="box box4"></div>\n    </stack>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box {\n    border-radius: 8px;\n    width: 100px;\n    height: 100px;\n  }\n\n  .box1 {\n    width: 200px;\n    height: 200px;\n    background-color: #3f56ea;\n  }\n\n  .box2 {\n    left: 20px;\n    top: 20px;\n    background-color: #00bfc9;\n  }\n\n  .box3 {\n    left: 50px;\n    top: 50px;\n    background-color: #47cc47;\n  }\n\n  .box4 {\n    left: 80px;\n    top: 80px;\n    background-color: #FF6A00;\n  }\n</style>\n\n\n',normalizedContent:'# stack\n\n\n# 概述\n\n基本容器，子组件排列方式为层叠排列，每个直接子组件按照先后顺序依次堆叠，覆盖前一个子组件。\n\n\n# 子组件\n\n支持\n\n\n# 属性\n\n支持通用属性\n\n\n# 样式\n\n支持通用样式\n\n\n# 事件\n\n支持通用事件\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <stack class="stack">\n      <div class="box box1"></div>\n      <div class="box box2"></div>\n      <div class="box box3"></div>\n      <div class="box box4"></div>\n    </stack>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box {\n    border-radius: 8px;\n    width: 100px;\n    height: 100px;\n  }\n\n  .box1 {\n    width: 200px;\n    height: 200px;\n    background-color: #3f56ea;\n  }\n\n  .box2 {\n    left: 20px;\n    top: 20px;\n    background-color: #00bfc9;\n  }\n\n  .box3 {\n    left: 50px;\n    top: 50px;\n    background-color: #47cc47;\n  }\n\n  .box4 {\n    left: 80px;\n    top: 80px;\n    background-color: #ff6a00;\n  }\n</style>\n\n\n',charsets:{cjk:!0}},{title:"背景图样式",frontmatter:{},regularPath:"/zh/components/general/background-img-styles.html",relativePath:"zh/components/general/background-img-styles.md",key:"v-1052e756",path:"/zh/components/general/background-img-styles.html",headers:[{level:2,title:"background-size 属性",slug:"background-size-属性",normalizedTitle:"background-size 属性",charIndex:72},{level:2,title:"background-repeat 属性（暂未实现）",slug:"background-repeat-属性-暂未实现",normalizedTitle:"background-repeat 属性（暂未实现）",charIndex:1181},{level:2,title:"background-position 属性",slug:"background-position-属性",normalizedTitle:"background-position 属性",charIndex:2124},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:4387}],headersStr:"background-size 属性 background-repeat 属性（暂未实现） background-position 属性 支持明细",content:'# 背景图样式\n\n当需要往页面组件内添加一个图片作为组件背景的时候，开发者可以对这个图片背景的大小、重复放置的模式、放置位置进行调整。\n\n\n# background-size 属性\n\n该属性定义了背景图片的大小。\n\n参数的个数可以是一个或两个。\n\n有效参数列表如下：\n\n参数          描述\ncontain     等比例缩放背景图片以完全装入容器，可能容器部分显示空白（仅作为单一参数）\ncover       等比例缩放背景图片以完全覆盖容器，可能背景图片部分不可见（仅作为单一参数）\nauto        表示保持原图的尺寸不变。注意，此时原图的尺寸单位为物理分辨率，与手机屏幕分辨率单位一致，非JS 应用内的1px长\n<length>    描述图片的具体尺寸，单位：px或dp，不支持浮点计算设置浮点值会被向下取整\n<percent>   描述图片的尺寸占容器对应方向尺寸的百分比，不支持浮点计算设置浮点值会被向下取整\n\n当参数为两个的时候，第一个参数默认解析为水平轴的宽，第二个参数默认解析为竖直轴的高，如果只有一个参数，则将auto补充为第二个参数，然后按照双参数的规则解析。\n\n无效参数统一解析为默认值auto，即原图尺寸。\n\n示例\n\n<template>\n  <div class="page">\n    <text>图片大小 128 * 128</text>\n    <text>背景容器 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgBg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgBg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: 300px 200px;\n    background-repeat: no-repeat; // 暂未支持，以防支持之后样式显示异常建议加上\n  }\n</style>\n\n\n\n效果\n\n\n# background-repeat 属性（暂未实现）\n\n该属性定义了背景图片在组件中的重复方式，背景图片可以沿着水平轴、竖直轴、两个轴重复，或者不重复。\n\n参数的个数为一个。\n\n有效参数列表如下：\n\n参数          描述\nrepeat      在水平轴和竖直轴上同时重复绘制图片\nrepeat-x    只在水平轴上重复绘制\nrepeat-y    只在竖直轴上重复绘制\nno-repeat   不会重复绘制图片\n\n无效参数会被解析为默认值，即repeat。\n\n示例\n\n<div class="container">\n  <div class="img"></div>\n</div>\n\n<style>\n  .container {\n    width: 365px;\n    height: 365px;\n    background-color: #c7c7c7;\n  }\n  .img {\n    width: 100%;\n    height: 100%;\n    background-image: url(\'../common/logo.png\');\n    /* 等比例缩放背景图片到宽度为组件宽的一半 */\n    background-size: 50%;\n    /* 在水平方向和竖直方向上重复绘制 */\n    background-repeat: repeat;\n    /* 背景图片处于组件中央 */\n    background-position: center;\n  }\n</style>\n\n\n.img {\n  width: 100%;\n  height: 100%;\n  background-image: url(\'../common/logo.png\');\n  /* 等比例缩放背景图片到宽度为100px */\n  background-size: 100px;\n  /* 背景图片不重复绘制 */\n  background-repeat: no-repeat;\n  /* 背景图片距离组件左边缘20px，和上下边缘的距离比为3:7 */\n  background-position: left 20px top 30%;\n}\n\n\n\n# background-position 属性\n\n该属性定义了背景图片在组件中的位置。\n\n它可以使用1-4个值进行定义。如果使用两个非关键字值，第一个值表示水平位置，第二个值表示垂直位置。如果仅指定一个值，则第二个值默认是 center。如果使用三个或四个值，则长度百分比值是前面关键字值的偏移量。\n\n一个值的语法：\n\n值可能是：\n\n * 关键字 center，用来居中背景图片。\n * 关键字 top、left、bottom、right 中的一个。用来指定把背景图放在哪一个边界。另一个维度被设置成50%，所以背景图在此维度居中显示。\n * <length> 或 <percentage>。指定相对于左边界的 x 坐标，y 坐标被设置成 50%，背景图在y轴居中。\n\n两个值的语法：\n\n一个定义 x 坐标，另一个定义 y 坐标。每个值可以是：\n\n * 关键字 top、left、bottom、right 中的一个。如果这里给出 left 或 right，那么这个值定义 x 轴位置，另一个值定义 y 轴位置。如果这里给出 top 或 bottom，那么这个值定义 y 轴位置，另一个值定义 x 轴位置。\n * <length> 或 <percentage>。如果另一个值是 left 或 right，则该值定义相对于顶部边界的 Y。如果另一个值是 top 或 bottom，则该值定义相对于左边界的 X。如果两个值都是 <length> 或 <percentage> 值，则第一个定义 X，第二个定义 Y。\n\n注意： 如果一个值是 top 或 bottom，那么另一个值不可能是 top 或 bottom。如果一个值是 left 或 right，那么另一个值不可能是 left 或 right。也就是说，例如，top top 和 left right 是无效的。\n\n排序： 配对关键字时，位置并不重要，写成 top left 或 left top 其产生的效果是相同的。 使用 <length> 或 <percentage> 与关键字配对时顺序非常重要，定义 X 的值放在前面，然后是定义 Y 的值， right 20px 和 20px right 的效果是不相同的，前者有效但后者无效。left 20% 或 20% bottom 是有效的，因为 X 和 Y 值已明确定义且位置正确。\n\n默认值 是 left top 或者 0% 0%。\n\n三个值的语法：\n\n两个值是关键字值，第三个是前面值的偏移量：\n\n * 第一个值是关键字 top、left、bottom、right，或者 center。如果设置为 left 或 right，则定义了 X。如果设置为 top 或 bottom，则定义了 Y，另一个关键字值定义了 X。\n * <length> 或 <percentage>，如果是第二个值，则是第一个值的偏移量。如果是第三个值，则是第二个值的偏移量。\n * 单个长度或百分比值是其前面的关键字值的偏移量。一个关键字与两个 <length> 或 <percentage> 值的组合无效。\n\n四个值的语法：\n\n第一个和第三个值是定义 X 和 Y 的关键字值。第二个和第四个值是前面 X 和 Y 关键字值的偏移量：\n\n * 第一个值和第三个值是关键字值 top、left、bottom、 right 之一。如果设置为 left 或 right，则定义了 X。如果设置为 top 或 bottom，则定义了 Y，另一个关键字值定义了 X。\n * 第二个和第四个值是 <length> 或 <percentage>。第二个值是第一个关键字的偏移量。第四个值是第二个关键字的偏移量。\n\n无效参数全部解析为默认值（0px, 0px），即图片显示在组件的左上角。\n\n示例\n\n<template>\n  <div class="page">\n    <text>图片大小 128 * 128</text>\n    <text>背景容器 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgBg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgBg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: cover;\n    background-position: right bottom;\n    background-repeat: no-repeat; // 暂未支持，以防支持之后样式显示异常建议加上\n  }\n</style>\n\n\n效果\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   不支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    不支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持',normalizedContent:'# 背景图样式\n\n当需要往页面组件内添加一个图片作为组件背景的时候，开发者可以对这个图片背景的大小、重复放置的模式、放置位置进行调整。\n\n\n# background-size 属性\n\n该属性定义了背景图片的大小。\n\n参数的个数可以是一个或两个。\n\n有效参数列表如下：\n\n参数          描述\ncontain     等比例缩放背景图片以完全装入容器，可能容器部分显示空白（仅作为单一参数）\ncover       等比例缩放背景图片以完全覆盖容器，可能背景图片部分不可见（仅作为单一参数）\nauto        表示保持原图的尺寸不变。注意，此时原图的尺寸单位为物理分辨率，与手机屏幕分辨率单位一致，非js 应用内的1px长\n<length>    描述图片的具体尺寸，单位：px或dp，不支持浮点计算设置浮点值会被向下取整\n<percent>   描述图片的尺寸占容器对应方向尺寸的百分比，不支持浮点计算设置浮点值会被向下取整\n\n当参数为两个的时候，第一个参数默认解析为水平轴的宽，第二个参数默认解析为竖直轴的高，如果只有一个参数，则将auto补充为第二个参数，然后按照双参数的规则解析。\n\n无效参数统一解析为默认值auto，即原图尺寸。\n\n示例\n\n<template>\n  <div class="page">\n    <text>图片大小 128 * 128</text>\n    <text>背景容器 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgbg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgbg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: 300px 200px;\n    background-repeat: no-repeat; // 暂未支持，以防支持之后样式显示异常建议加上\n  }\n</style>\n\n\n\n效果\n\n\n# background-repeat 属性（暂未实现）\n\n该属性定义了背景图片在组件中的重复方式，背景图片可以沿着水平轴、竖直轴、两个轴重复，或者不重复。\n\n参数的个数为一个。\n\n有效参数列表如下：\n\n参数          描述\nrepeat      在水平轴和竖直轴上同时重复绘制图片\nrepeat-x    只在水平轴上重复绘制\nrepeat-y    只在竖直轴上重复绘制\nno-repeat   不会重复绘制图片\n\n无效参数会被解析为默认值，即repeat。\n\n示例\n\n<div class="container">\n  <div class="img"></div>\n</div>\n\n<style>\n  .container {\n    width: 365px;\n    height: 365px;\n    background-color: #c7c7c7;\n  }\n  .img {\n    width: 100%;\n    height: 100%;\n    background-image: url(\'../common/logo.png\');\n    /* 等比例缩放背景图片到宽度为组件宽的一半 */\n    background-size: 50%;\n    /* 在水平方向和竖直方向上重复绘制 */\n    background-repeat: repeat;\n    /* 背景图片处于组件中央 */\n    background-position: center;\n  }\n</style>\n\n\n.img {\n  width: 100%;\n  height: 100%;\n  background-image: url(\'../common/logo.png\');\n  /* 等比例缩放背景图片到宽度为100px */\n  background-size: 100px;\n  /* 背景图片不重复绘制 */\n  background-repeat: no-repeat;\n  /* 背景图片距离组件左边缘20px，和上下边缘的距离比为3:7 */\n  background-position: left 20px top 30%;\n}\n\n\n\n# background-position 属性\n\n该属性定义了背景图片在组件中的位置。\n\n它可以使用1-4个值进行定义。如果使用两个非关键字值，第一个值表示水平位置，第二个值表示垂直位置。如果仅指定一个值，则第二个值默认是 center。如果使用三个或四个值，则长度百分比值是前面关键字值的偏移量。\n\n一个值的语法：\n\n值可能是：\n\n * 关键字 center，用来居中背景图片。\n * 关键字 top、left、bottom、right 中的一个。用来指定把背景图放在哪一个边界。另一个维度被设置成50%，所以背景图在此维度居中显示。\n * <length> 或 <percentage>。指定相对于左边界的 x 坐标，y 坐标被设置成 50%，背景图在y轴居中。\n\n两个值的语法：\n\n一个定义 x 坐标，另一个定义 y 坐标。每个值可以是：\n\n * 关键字 top、left、bottom、right 中的一个。如果这里给出 left 或 right，那么这个值定义 x 轴位置，另一个值定义 y 轴位置。如果这里给出 top 或 bottom，那么这个值定义 y 轴位置，另一个值定义 x 轴位置。\n * <length> 或 <percentage>。如果另一个值是 left 或 right，则该值定义相对于顶部边界的 y。如果另一个值是 top 或 bottom，则该值定义相对于左边界的 x。如果两个值都是 <length> 或 <percentage> 值，则第一个定义 x，第二个定义 y。\n\n注意： 如果一个值是 top 或 bottom，那么另一个值不可能是 top 或 bottom。如果一个值是 left 或 right，那么另一个值不可能是 left 或 right。也就是说，例如，top top 和 left right 是无效的。\n\n排序： 配对关键字时，位置并不重要，写成 top left 或 left top 其产生的效果是相同的。 使用 <length> 或 <percentage> 与关键字配对时顺序非常重要，定义 x 的值放在前面，然后是定义 y 的值， right 20px 和 20px right 的效果是不相同的，前者有效但后者无效。left 20% 或 20% bottom 是有效的，因为 x 和 y 值已明确定义且位置正确。\n\n默认值 是 left top 或者 0% 0%。\n\n三个值的语法：\n\n两个值是关键字值，第三个是前面值的偏移量：\n\n * 第一个值是关键字 top、left、bottom、right，或者 center。如果设置为 left 或 right，则定义了 x。如果设置为 top 或 bottom，则定义了 y，另一个关键字值定义了 x。\n * <length> 或 <percentage>，如果是第二个值，则是第一个值的偏移量。如果是第三个值，则是第二个值的偏移量。\n * 单个长度或百分比值是其前面的关键字值的偏移量。一个关键字与两个 <length> 或 <percentage> 值的组合无效。\n\n四个值的语法：\n\n第一个和第三个值是定义 x 和 y 的关键字值。第二个和第四个值是前面 x 和 y 关键字值的偏移量：\n\n * 第一个值和第三个值是关键字值 top、left、bottom、 right 之一。如果设置为 left 或 right，则定义了 x。如果设置为 top 或 bottom，则定义了 y，另一个关键字值定义了 x。\n * 第二个和第四个值是 <length> 或 <percentage>。第二个值是第一个关键字的偏移量。第四个值是第二个关键字的偏移量。\n\n无效参数全部解析为默认值（0px, 0px），即图片显示在组件的左上角。\n\n示例\n\n<template>\n  <div class="page">\n    <text>图片大小 128 * 128</text>\n    <text>背景容器 300 * 200</text>\n    <image src= "../../common/logo.png">\n    <div class="imgbg"></div>\n  </div>\n</template>\n<style>\n  .page {\n    flex-direction: column;\n    align-items: center;\n    background-color: #000;\n  }\n  text {\n    color: #fff;\n    font-size: 24px;\n  }\n  .imgbg {\n    width: 300px;\n    height: 200px;\n    margin-top: 20px;\n    border: 2px solid yellowgreen;\n    background-color: yellowgreen;\n    background-image: url(\'../../common/logo.png\');\n    background-size: cover;\n    background-position: right bottom;\n    background-repeat: no-repeat; // 暂未支持，以防支持之后样式显示异常建议加上\n  }\n</style>\n\n\n效果\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   不支持\n小米手环 8 pro         不支持\nxiaomi watch s3    不支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持',charsets:{cjk:!0}},{title:"颜色配置",frontmatter:{},regularPath:"/zh/components/general/color.html",relativePath:"zh/components/general/color.md",key:"v-6ae4b354",path:"/zh/components/general/color.html",headers:[{level:2,title:"颜色值格式示例",slug:"颜色值格式示例",normalizedTitle:"颜色值格式示例",charIndex:74},{level:2,title:"透明",slug:"透明",normalizedTitle:"透明",charIndex:225},{level:2,title:"颜色名字",slug:"颜色名字",normalizedTitle:"颜色名字",charIndex:276}],headersStr:"颜色值格式示例 透明 颜色名字",content:"# 颜色配置\n\nVela JS 应用支持 rgb() and rgba() 颜色值设置，\n\n开发者可参考MDN 文档了解更多颜色值的信息。\n\n\n# 颜色值格式示例\n\n * '#f0f' (#rgb)\n * '#ff00ff' (#rrggbb)\n * 'rgb(255, 0, 255)'\n * 'rgba(255, 255, 255, 1.0)'\n * '#f0ff' (#rgba)\n * '#ff00ff00' (#rrggbbaa)\n\n\n# 透明\n\nrgba(0,0,0,0)还有另外一个简写版本：\n\n * 'transparent'\n\n\n# 颜色名字\n\n你也可以用下面的颜色配置：\n\n * aliceblue (#f0f8ff)\n * antiquewhite (#faebd7)\n * aqua (#00ffff)\n * aquamarine (#7fffd4)\n * azure (#f0ffff)\n * beige (#f5f5dc)\n * bisque (#ffe4c4)\n * black (#000000)\n * blanchedalmond (#ffebcd)\n * blue (#0000ff)\n * blueviolet (#8a2be2)\n * brown (#a52a2a)\n * burlywood (#deb887)\n * cadetblue (#5f9ea0)\n * chartreuse (#7fff00)\n * chocolate (#d2691e)\n * coral (#ff7f50)\n * cornflowerblue (#6495ed)\n * cornsilk (#fff8dc)\n * crimson (#dc143c)\n * cyan (#00ffff)\n * darkblue (#00008b)\n * darkcyan (#008b8b)\n * darkgoldenrod (#b8860b)\n * darkgray (#a9a9a9)\n * darkgreen (#006400)\n * darkgrey (#a9a9a9)\n * darkkhaki (#bdb76b)\n * darkmagenta (#8b008b)\n * darkolivegreen (#556b2f)\n * darkorange (#ff8c00)\n * darkorchid (#9932cc)\n * darkred (#8b0000)\n * darksalmon (#e9967a)\n * darkseagreen (#8fbc8f)\n * darkslateblue (#483d8b)\n * darkslategrey (#2f4f4f)\n * darkturquoise (#00ced1)\n * darkviolet (#9400d3)\n * deeppink (#ff1493)\n * deepskyblue (#00bfff)\n * dimgray (#696969)\n * dimgrey (#696969)\n * dodgerblue (#1e90ff)\n * firebrick (#b22222)\n * floralwhite (#fffaf0)\n * forestgreen (#228b22)\n * fuchsia (#ff00ff)\n * gainsboro (#dcdcdc)\n * ghostwhite (#f8f8ff)\n * gold (#ffd700)\n * goldenrod (#daa520)\n * gray (#808080)\n * green (#008000)\n * greenyellow (#adff2f)\n * grey (#808080)\n * honeydew (#f0fff0)\n * hotpink (#ff69b4)\n * indianred (#cd5c5c)\n * indigo (#4b0082)\n * ivory (#fffff0)\n * khaki (#f0e68c)\n * lavender (#e6e6fa)\n * lavenderblush (#fff0f5)\n * lawngreen (#7cfc00)\n * lemonchiffon (#fffacd)\n * lightblue (#add8e6)\n * lightcoral (#f08080)\n * lightcyan (#e0ffff)\n * lightgoldenrodyellow (#fafad2)\n * lightgray (#d3d3d3)\n * lightgreen (#90ee90)\n * lightgrey (#d3d3d3)\n * lightpink (#ffb6c1)\n * lightsalmon (#ffa07a)\n * lightseagreen (#20b2aa)\n * lightskyblue (#87cefa)\n * lightslategrey (#778899)\n * lightsteelblue (#b0c4de)\n * lightyellow (#ffffe0)\n * lime (#00ff00)\n * limegreen (#32cd32)\n * linen (#faf0e6)\n * magenta (#ff00ff)\n * maroon (#800000)\n * mediumaquamarine (#66cdaa)\n * mediumblue (#0000cd)\n * mediumorchid (#ba55d3)\n * mediumpurple (#9370db)\n * mediumseagreen (#3cb371)\n * mediumslateblue (#7b68ee)\n * mediumspringgreen (#00fa9a)\n * mediumturquoise (#48d1cc)\n * mediumvioletred (#c71585)\n * midnightblue (#191970)\n * mintcream (#f5fffa)\n * mistyrose (#ffe4e1)\n * moccasin (#ffe4b5)\n * navajowhite (#ffdead)\n * navy (#000080)\n * oldlace (#fdf5e6)\n * olive (#808000)\n * olivedrab (#6b8e23)\n * orange (#ffa500)\n * orangered (#ff4500)\n * orchid (#da70d6)\n * palegoldenrod (#eee8aa)\n * palegreen (#98fb98)\n * paleturquoise (#afeeee)\n * palevioletred (#db7093)\n * papayawhip (#ffefd5)\n * peachpuff (#ffdab9)\n * peru (#cd853f)\n * pink (#ffc0cb)\n * plum (#dda0dd)\n * powderblue (#b0e0e6)\n * purple (#800080)\n * rebeccapurple (#663399)\n * red (#ff0000)\n * rosybrown (#bc8f8f)\n * royalblue (#4169e1)\n * saddlebrown (#8b4513)\n * salmon (#fa8072)\n * sandybrown (#f4a460)\n * seagreen (#2e8b57)\n * seashell (#fff5ee)\n * sienna (#a0522d)\n * silver (#c0c0c0)\n * skyblue (#87ceeb)\n * slateblue (#6a5acd)\n * slategray (#708090)\n * snow (#fffafa)\n * springgreen (#00ff7f)\n * steelblue (#4682b4)\n * tan (#d2b48c)\n * teal (#008080)\n * thistle (#d8bfd8)\n * tomato (#ff6347)\n * turquoise (#40e0d0)\n * violet (#ee82ee)\n * wheat (#f5deb3)\n * white (#ffffff)\n * whitesmoke (#f5f5f5)\n * yellow (#ffff00)\n * yellowgreen (#9acd32)",normalizedContent:"# 颜色配置\n\nvela js 应用支持 rgb() and rgba() 颜色值设置，\n\n开发者可参考mdn 文档了解更多颜色值的信息。\n\n\n# 颜色值格式示例\n\n * '#f0f' (#rgb)\n * '#ff00ff' (#rrggbb)\n * 'rgb(255, 0, 255)'\n * 'rgba(255, 255, 255, 1.0)'\n * '#f0ff' (#rgba)\n * '#ff00ff00' (#rrggbbaa)\n\n\n# 透明\n\nrgba(0,0,0,0)还有另外一个简写版本：\n\n * 'transparent'\n\n\n# 颜色名字\n\n你也可以用下面的颜色配置：\n\n * aliceblue (#f0f8ff)\n * antiquewhite (#faebd7)\n * aqua (#00ffff)\n * aquamarine (#7fffd4)\n * azure (#f0ffff)\n * beige (#f5f5dc)\n * bisque (#ffe4c4)\n * black (#000000)\n * blanchedalmond (#ffebcd)\n * blue (#0000ff)\n * blueviolet (#8a2be2)\n * brown (#a52a2a)\n * burlywood (#deb887)\n * cadetblue (#5f9ea0)\n * chartreuse (#7fff00)\n * chocolate (#d2691e)\n * coral (#ff7f50)\n * cornflowerblue (#6495ed)\n * cornsilk (#fff8dc)\n * crimson (#dc143c)\n * cyan (#00ffff)\n * darkblue (#00008b)\n * darkcyan (#008b8b)\n * darkgoldenrod (#b8860b)\n * darkgray (#a9a9a9)\n * darkgreen (#006400)\n * darkgrey (#a9a9a9)\n * darkkhaki (#bdb76b)\n * darkmagenta (#8b008b)\n * darkolivegreen (#556b2f)\n * darkorange (#ff8c00)\n * darkorchid (#9932cc)\n * darkred (#8b0000)\n * darksalmon (#e9967a)\n * darkseagreen (#8fbc8f)\n * darkslateblue (#483d8b)\n * darkslategrey (#2f4f4f)\n * darkturquoise (#00ced1)\n * darkviolet (#9400d3)\n * deeppink (#ff1493)\n * deepskyblue (#00bfff)\n * dimgray (#696969)\n * dimgrey (#696969)\n * dodgerblue (#1e90ff)\n * firebrick (#b22222)\n * floralwhite (#fffaf0)\n * forestgreen (#228b22)\n * fuchsia (#ff00ff)\n * gainsboro (#dcdcdc)\n * ghostwhite (#f8f8ff)\n * gold (#ffd700)\n * goldenrod (#daa520)\n * gray (#808080)\n * green (#008000)\n * greenyellow (#adff2f)\n * grey (#808080)\n * honeydew (#f0fff0)\n * hotpink (#ff69b4)\n * indianred (#cd5c5c)\n * indigo (#4b0082)\n * ivory (#fffff0)\n * khaki (#f0e68c)\n * lavender (#e6e6fa)\n * lavenderblush (#fff0f5)\n * lawngreen (#7cfc00)\n * lemonchiffon (#fffacd)\n * lightblue (#add8e6)\n * lightcoral (#f08080)\n * lightcyan (#e0ffff)\n * lightgoldenrodyellow (#fafad2)\n * lightgray (#d3d3d3)\n * lightgreen (#90ee90)\n * lightgrey (#d3d3d3)\n * lightpink (#ffb6c1)\n * lightsalmon (#ffa07a)\n * lightseagreen (#20b2aa)\n * lightskyblue (#87cefa)\n * lightslategrey (#778899)\n * lightsteelblue (#b0c4de)\n * lightyellow (#ffffe0)\n * lime (#00ff00)\n * limegreen (#32cd32)\n * linen (#faf0e6)\n * magenta (#ff00ff)\n * maroon (#800000)\n * mediumaquamarine (#66cdaa)\n * mediumblue (#0000cd)\n * mediumorchid (#ba55d3)\n * mediumpurple (#9370db)\n * mediumseagreen (#3cb371)\n * mediumslateblue (#7b68ee)\n * mediumspringgreen (#00fa9a)\n * mediumturquoise (#48d1cc)\n * mediumvioletred (#c71585)\n * midnightblue (#191970)\n * mintcream (#f5fffa)\n * mistyrose (#ffe4e1)\n * moccasin (#ffe4b5)\n * navajowhite (#ffdead)\n * navy (#000080)\n * oldlace (#fdf5e6)\n * olive (#808000)\n * olivedrab (#6b8e23)\n * orange (#ffa500)\n * orangered (#ff4500)\n * orchid (#da70d6)\n * palegoldenrod (#eee8aa)\n * palegreen (#98fb98)\n * paleturquoise (#afeeee)\n * palevioletred (#db7093)\n * papayawhip (#ffefd5)\n * peachpuff (#ffdab9)\n * peru (#cd853f)\n * pink (#ffc0cb)\n * plum (#dda0dd)\n * powderblue (#b0e0e6)\n * purple (#800080)\n * rebeccapurple (#663399)\n * red (#ff0000)\n * rosybrown (#bc8f8f)\n * royalblue (#4169e1)\n * saddlebrown (#8b4513)\n * salmon (#fa8072)\n * sandybrown (#f4a460)\n * seagreen (#2e8b57)\n * seashell (#fff5ee)\n * sienna (#a0522d)\n * silver (#c0c0c0)\n * skyblue (#87ceeb)\n * slateblue (#6a5acd)\n * slategray (#708090)\n * snow (#fffafa)\n * springgreen (#00ff7f)\n * steelblue (#4682b4)\n * tan (#d2b48c)\n * teal (#008080)\n * thistle (#d8bfd8)\n * tomato (#ff6347)\n * turquoise (#40e0d0)\n * violet (#ee82ee)\n * wheat (#f5deb3)\n * white (#ffffff)\n * whitesmoke (#f5f5f5)\n * yellow (#ffff00)\n * yellowgreen (#9acd32)",charsets:{cjk:!0}},{title:"通用方法",frontmatter:{},regularPath:"/zh/components/general/methods.html",relativePath:"zh/components/general/methods.md",key:"v-c4cd1114",path:"/zh/components/general/methods.html",headers:[{level:3,title:"getBoundingClientRect(Object object)",slug:"getboundingclientrect-object-object",normalizedTitle:"getboundingclientrect(object object)",charIndex:140},{level:3,title:"focus(Object object)",slug:"focus-object-object",normalizedTitle:"focus(object object)",charIndex:1260}],headersStr:"getBoundingClientRect(Object object) focus(Object object)",content:"# 通用方法\n\n通用方法，是所有组件都可以调用的方法。在组件使用id标记 id 属性后，开发者可通过this.$element('idName')获取 dom 节点，再调用通用方法。\n\n通过 this.$element 获取到的 dom 对象，提供两个 api 供调用：\n\n\n# getBoundingClientRect(Object object)\n\n返回元素的大小及其相对于视窗的位置，需要在页面的 onShow 生命周期之后调用。\n\n# 参数\n\nObject object\n\n属性         类型         默认值   必填   描述\nsuccess    function         否    接口调用成功的回调函数\nfail       function         否    接口调用失败的回调函数\ncomplete   function         否    接口调用结束的回调函数（调用成功、失败都会执行）\n\n# object.success 回调函数参数说明\n\nObject rect\n\n属性       类型       描述\nleft     number   元素的左边界坐标\nright    number   元素的右边界坐标\ntop      number   元素的上边界坐标\nbottom   number   元素的下边界坐标\nwidth    number   元素的宽度\nheight   number   元素的高度\n\n# 代码示例\n\n<template>\n  <div>\n    <div id=\"box1\" class=\"box-normal\"></div>\n    <div id=\"box2\" class=\"box-normal\"></div>\n  </div>\n</template>\n<script>\n  export default {\n    onShow(){\n      this.$element('box1').getBoundingClientRect({\n        success: function(data) {\n          const { top, bottom, left, right, width, height } = data;\n          console.log(data);\n        },\n        fail: (errorData, errorCode) => {\n          console.log(`错误原因：${JSON.stringify(errorData)}, 错误代码：${errorCode}`)\n        },\n        complete: function() {\n          console.info('complete')\n        }\n      })\n    }\n  }\n<\/script>\n\n\n\n# focus(Object object)\n\n使组件获得或者失去焦点的方法\n\n# 参数\n\n属性      类型        默认值    必填   描述\nfocus   boolean   true   否    使组件获得或者失去焦点，聚焦时可触发 focus 伪类效果（focus 伪类样式还未支持）\n\n# 代码示例\n\n<script>\n  // 聚焦效果\n  this.$element('box1').focus();\n  // 聚焦效果\n  this.$element('box2').focus({focus:true});\n  // 失焦效果\n  this.$element('box3').focus({focus:false});\n<\/script>\n",normalizedContent:"# 通用方法\n\n通用方法，是所有组件都可以调用的方法。在组件使用id标记 id 属性后，开发者可通过this.$element('idname')获取 dom 节点，再调用通用方法。\n\n通过 this.$element 获取到的 dom 对象，提供两个 api 供调用：\n\n\n# getboundingclientrect(object object)\n\n返回元素的大小及其相对于视窗的位置，需要在页面的 onshow 生命周期之后调用。\n\n# 参数\n\nobject object\n\n属性         类型         默认值   必填   描述\nsuccess    function         否    接口调用成功的回调函数\nfail       function         否    接口调用失败的回调函数\ncomplete   function         否    接口调用结束的回调函数（调用成功、失败都会执行）\n\n# object.success 回调函数参数说明\n\nobject rect\n\n属性       类型       描述\nleft     number   元素的左边界坐标\nright    number   元素的右边界坐标\ntop      number   元素的上边界坐标\nbottom   number   元素的下边界坐标\nwidth    number   元素的宽度\nheight   number   元素的高度\n\n# 代码示例\n\n<template>\n  <div>\n    <div id=\"box1\" class=\"box-normal\"></div>\n    <div id=\"box2\" class=\"box-normal\"></div>\n  </div>\n</template>\n<script>\n  export default {\n    onshow(){\n      this.$element('box1').getboundingclientrect({\n        success: function(data) {\n          const { top, bottom, left, right, width, height } = data;\n          console.log(data);\n        },\n        fail: (errordata, errorcode) => {\n          console.log(`错误原因：${json.stringify(errordata)}, 错误代码：${errorcode}`)\n        },\n        complete: function() {\n          console.info('complete')\n        }\n      })\n    }\n  }\n<\/script>\n\n\n\n# focus(object object)\n\n使组件获得或者失去焦点的方法\n\n# 参数\n\n属性      类型        默认值    必填   描述\nfocus   boolean   true   否    使组件获得或者失去焦点，聚焦时可触发 focus 伪类效果（focus 伪类样式还未支持）\n\n# 代码示例\n\n<script>\n  // 聚焦效果\n  this.$element('box1').focus();\n  // 聚焦效果\n  this.$element('box2').focus({focus:true});\n  // 失焦效果\n  this.$element('box3').focus({focus:false});\n<\/script>\n",charsets:{cjk:!0}},{title:"通用事件",frontmatter:{},regularPath:"/zh/components/general/events.html",relativePath:"zh/components/general/events.md",key:"v-241e13dc",path:"/zh/components/general/events.html",headers:[{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:120},{level:2,title:"通用事件列表",slug:"通用事件列表",normalizedTitle:"通用事件列表",charIndex:272},{level:2,title:"事件对象",slug:"事件对象",normalizedTitle:"事件对象",charIndex:1349},{level:3,title:"1、TouchEvent 类型说明：",slug:"_1、touchevent-类型说明",normalizedTitle:"1、touchevent 类型说明：",charIndex:1358},{level:3,title:"2、Touch 类型说明",slug:"_2、touch-类型说明",normalizedTitle:"2、touch 类型说明",charIndex:1746},{level:3,title:"3、MouseEvent 类型说明",slug:"_3、mouseevent-类型说明",normalizedTitle:"3、mouseevent 类型说明",charIndex:2259},{level:2,title:"示例",slug:"示例",normalizedTitle:"示例",charIndex:120}],headersStr:"示例代码 通用事件列表 事件对象 1、TouchEvent 类型说明： 2、Touch 类型说明 3、MouseEvent 类型说明 示例",content:'# 通用事件\n\n通用事件，即所有组件都支持的事件回调。\n\n开发者可以在组件标签上使用on{eventName}（如onclick）或@{eventName}（如@click）注册回调事件。\n\n更详细的讲解，可查阅事件绑定文档了解。\n\n\n# 示例代码\n\n<template>\n  <div>\n      <text onclick="clickFunction1">line 1</text>\n      <text @click="clickFunction2">line 2</text>\n  </div>\n</template>\n\n\n\n# 通用事件列表\n\n名称           参数                                                  描述                            冒泡\ntouchstart   TouchEvent                                          手指刚触摸组件时触发                    支持\ntouchmove    TouchEvent                                          手指触摸后移动时触发                    支持\ntouchend     TouchEvent                                          手指触摸动作结束时触发                   支持\nclick        MouseEvent                                          组件被点击时触发                      支持\nlongpress    MouseEvent                                          组件被长按时触发                      支持\nswipe        { direction: <"left" | "right" | "up" | "down"> }   组件上快速滑动后触发（滑动方向有滚动条时不触发该事件）   不支持\n                                                                 参数说明：\n                                                                 left：　向左滑动；\n                                                                 right： 向右滑动；\n                                                                 up：　 向上滑动；\n                                                                 down：向下滑动；\n\n\n# 事件对象\n\n\n# 1、TouchEvent 类型说明：\n\n属性               类型          说明\ntouches          TouchList   触摸事件，当前停留在屏幕中的触摸点信息的数组\nchangedTouches   TouchList   触摸事件，当前变化的触摸点信息的数组。changedTouches 数据格式同 touches，\n                             表示有变化的触摸点，如从无变有（touchstart），位置变化（touchmove），从有变无（touchend），\n                             比如用户手指离开屏幕时，touches 数组中无数据，而 changedtouches 则会保存离开前的数据\n\n其中，TouchList 是 Touch 对象的集合。\n\n\n# 2、Touch 类型说明\n\n属性           类型       说明\nidentifier   number   触摸点的标识符。对于多点同时触摸则是 [0,1,2,3,...]，分别表示第一个手指、第二个手指...\n                      一次触摸动作(手指按下到手指离开的过程)，在整个屏幕移动过程中，该标识符不变，可以用来判断是否是同一次触摸过程\nclientX      number   距离可见区域左边沿的 X 轴坐标，不包含任何滚动偏移\nclientY      number   距离可见区域上边沿的 Y 轴坐标，不包含任何滚动偏移以及状态栏和 titlebar 的高度\npageX        number   距离可见区域左边沿的 X 轴坐标，包含任何滚动偏移\npageY        number   距离可见区域上边沿的 Y 轴坐标，包含任何滚动偏移。（不包含状态栏和 titlebar 的高度）\noffsetX      number   距离事件触发对象左边沿 X 轴的距离\noffsetY      number   距离事件触发对象上边沿 Y 轴的距离\n\n\n# 3、MouseEvent 类型说明\n\n属性        类型       说明\nclientX   number   距离可见区域左边沿的 X 轴坐标，不包含任何滚动偏移\nclientY   number   距离可见区域上边沿的 Y 轴坐标，不包含任何滚动偏移以及状态栏和 titlebar 的高度\npageX     number   距离可见区域左边沿的 X 轴坐标，包含任何滚动偏移\npageY     number   距离可见区域上边沿的 Y 轴坐标，包含任何滚动偏移。（不包含状态栏和 titlebar 的高度）\noffsetX   number   距离事件触发对象左边沿 X 轴的距离\noffsetY   number   距离事件触发对象上边沿 Y 轴的距离\n\n\n# 示例\n\n如下，在 div 上绑定了 click 和 touchmove 事件，触发事件时将事件打印出来。\n\n<template>\n  <div class="root-page">\n    <div class="touch-region" onclick="click" ontouchmove="move"></div>\n  </div>\n</template>\n\n<style>\n  .root-page {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .touch-region {\n    width: 80%;\n    height: 20%;\n    background-color: #444444;\n  }\n\n</style>\n\n<script>\n  export default {\n    private: {},\n    click(event) {\n      console.log("click event fired")\n    },\n    move(event) {\n      console.log("move event touches:" + JSON.stringify(event.touches))\n      console.log("move event changedTouches:" + JSON.stringify(event.changedTouches))\n    }\n  }\n\n<\/script>\n\n\n打印结果如下，click 事件：\n\nmove event touches:[\n  {\n    "offsetX": 296,\n    "identifier": 0,\n    "offsetY": 113.48148345947266,\n    "clientY": 113.48148345947266,\n    "clientX": 360,\n    "pageY": 113.48148345947266,\n    "pageX": 360\n  }\n]\n\n\nmove event changedTouches:[\n  {\n    "offsetX": 296,\n    "identifier": 0,\n    "offsetY": 113.48148345947266,\n    "clientY": 113.48148345947266,\n    "clientX": 360,\n    "pageY": 113.48148345947266,\n    "pageX": 360\n  }\n]\n\n\nclick event fired\n',normalizedContent:'# 通用事件\n\n通用事件，即所有组件都支持的事件回调。\n\n开发者可以在组件标签上使用on{eventname}（如onclick）或@{eventname}（如@click）注册回调事件。\n\n更详细的讲解，可查阅事件绑定文档了解。\n\n\n# 示例代码\n\n<template>\n  <div>\n      <text onclick="clickfunction1">line 1</text>\n      <text @click="clickfunction2">line 2</text>\n  </div>\n</template>\n\n\n\n# 通用事件列表\n\n名称           参数                                                  描述                            冒泡\ntouchstart   touchevent                                          手指刚触摸组件时触发                    支持\ntouchmove    touchevent                                          手指触摸后移动时触发                    支持\ntouchend     touchevent                                          手指触摸动作结束时触发                   支持\nclick        mouseevent                                          组件被点击时触发                      支持\nlongpress    mouseevent                                          组件被长按时触发                      支持\nswipe        { direction: <"left" | "right" | "up" | "down"> }   组件上快速滑动后触发（滑动方向有滚动条时不触发该事件）   不支持\n                                                                 参数说明：\n                                                                 left：　向左滑动；\n                                                                 right： 向右滑动；\n                                                                 up：　 向上滑动；\n                                                                 down：向下滑动；\n\n\n# 事件对象\n\n\n# 1、touchevent 类型说明：\n\n属性               类型          说明\ntouches          touchlist   触摸事件，当前停留在屏幕中的触摸点信息的数组\nchangedtouches   touchlist   触摸事件，当前变化的触摸点信息的数组。changedtouches 数据格式同 touches，\n                             表示有变化的触摸点，如从无变有（touchstart），位置变化（touchmove），从有变无（touchend），\n                             比如用户手指离开屏幕时，touches 数组中无数据，而 changedtouches 则会保存离开前的数据\n\n其中，touchlist 是 touch 对象的集合。\n\n\n# 2、touch 类型说明\n\n属性           类型       说明\nidentifier   number   触摸点的标识符。对于多点同时触摸则是 [0,1,2,3,...]，分别表示第一个手指、第二个手指...\n                      一次触摸动作(手指按下到手指离开的过程)，在整个屏幕移动过程中，该标识符不变，可以用来判断是否是同一次触摸过程\nclientx      number   距离可见区域左边沿的 x 轴坐标，不包含任何滚动偏移\nclienty      number   距离可见区域上边沿的 y 轴坐标，不包含任何滚动偏移以及状态栏和 titlebar 的高度\npagex        number   距离可见区域左边沿的 x 轴坐标，包含任何滚动偏移\npagey        number   距离可见区域上边沿的 y 轴坐标，包含任何滚动偏移。（不包含状态栏和 titlebar 的高度）\noffsetx      number   距离事件触发对象左边沿 x 轴的距离\noffsety      number   距离事件触发对象上边沿 y 轴的距离\n\n\n# 3、mouseevent 类型说明\n\n属性        类型       说明\nclientx   number   距离可见区域左边沿的 x 轴坐标，不包含任何滚动偏移\nclienty   number   距离可见区域上边沿的 y 轴坐标，不包含任何滚动偏移以及状态栏和 titlebar 的高度\npagex     number   距离可见区域左边沿的 x 轴坐标，包含任何滚动偏移\npagey     number   距离可见区域上边沿的 y 轴坐标，包含任何滚动偏移。（不包含状态栏和 titlebar 的高度）\noffsetx   number   距离事件触发对象左边沿 x 轴的距离\noffsety   number   距离事件触发对象上边沿 y 轴的距离\n\n\n# 示例\n\n如下，在 div 上绑定了 click 和 touchmove 事件，触发事件时将事件打印出来。\n\n<template>\n  <div class="root-page">\n    <div class="touch-region" onclick="click" ontouchmove="move"></div>\n  </div>\n</template>\n\n<style>\n  .root-page {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .touch-region {\n    width: 80%;\n    height: 20%;\n    background-color: #444444;\n  }\n\n</style>\n\n<script>\n  export default {\n    private: {},\n    click(event) {\n      console.log("click event fired")\n    },\n    move(event) {\n      console.log("move event touches:" + json.stringify(event.touches))\n      console.log("move event changedtouches:" + json.stringify(event.changedtouches))\n    }\n  }\n\n<\/script>\n\n\n打印结果如下，click 事件：\n\nmove event touches:[\n  {\n    "offsetx": 296,\n    "identifier": 0,\n    "offsety": 113.48148345947266,\n    "clienty": 113.48148345947266,\n    "clientx": 360,\n    "pagey": 113.48148345947266,\n    "pagex": 360\n  }\n]\n\n\nmove event changedtouches:[\n  {\n    "offsetx": 296,\n    "identifier": 0,\n    "offsety": 113.48148345947266,\n    "clienty": 113.48148345947266,\n    "clientx": 360,\n    "pagey": 113.48148345947266,\n    "pagex": 360\n  }\n]\n\n\nclick event fired\n',charsets:{cjk:!0}},{title:"通用属性",frontmatter:{},regularPath:"/zh/components/general/properties.html",relativePath:"zh/components/general/properties.md",key:"v-1e491f44",path:"/zh/components/general/properties.html",headers:[{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:54},{level:2,title:"常规属性",slug:"常规属性",normalizedTitle:"常规属性",charIndex:223},{level:2,title:"渲染属性",slug:"渲染属性",normalizedTitle:"渲染属性",charIndex:352},{level:2,title:"data 属性",slug:"data-属性",normalizedTitle:"data 属性",charIndex:616}],headersStr:"示例代码 常规属性 渲染属性 data 属性",content:'# 通用属性\n\n通用属性，即所有组件都支持的属性。\n\n开发者可以在所有的组件标签上都使用通用属性。\n\n\n# 示例代码\n\n<template>\n  <div>\n      <text id="text1" class="text-normal">line 1</text>\n      <text id="text2" class="text-normal red">line 2</text>\n  </div>\n</template>\n\n\n\n# 常规属性\n\n名称      类型         默认值   描述\nid      <string>   -     唯一标识\nstyle   <string>   -     样式声明\nclass   <string>   -     引用样式表\n\n\n# 渲染属性\n\n名称     类型          默认值   描述\nfor    <array>     -     根据数据列表，循环展开当前标签\nif     <boolean>   -     根据数据 boolean 值，添加或移除当前标签\nshow   <boolean>   -     根据数据 boolean 值，显示或隐藏当前标签，相当于控制{ display: flex | none }\n\n渲染属性工作方式详见template 模板。\n\n注意\n\n属性和样式不能混用，不能在属性字段中进行样式设置。\n\n\n# data 属性\n\n给组件绑定 data 属性，然后运行时通过 dataset 获取，方便进一步判断。\n\n示例：\n\n<template>\n  <div>\n    <div id="elNode1" data-person-name="Jack"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onReady () {\n      const el = this.$element(\'elNode1\')\n      const elData = el.dataset.personName\n      console.info(`输出data属性： ${elData}`)\n    }\n  }\n<\/script>\n',normalizedContent:'# 通用属性\n\n通用属性，即所有组件都支持的属性。\n\n开发者可以在所有的组件标签上都使用通用属性。\n\n\n# 示例代码\n\n<template>\n  <div>\n      <text id="text1" class="text-normal">line 1</text>\n      <text id="text2" class="text-normal red">line 2</text>\n  </div>\n</template>\n\n\n\n# 常规属性\n\n名称      类型         默认值   描述\nid      <string>   -     唯一标识\nstyle   <string>   -     样式声明\nclass   <string>   -     引用样式表\n\n\n# 渲染属性\n\n名称     类型          默认值   描述\nfor    <array>     -     根据数据列表，循环展开当前标签\nif     <boolean>   -     根据数据 boolean 值，添加或移除当前标签\nshow   <boolean>   -     根据数据 boolean 值，显示或隐藏当前标签，相当于控制{ display: flex | none }\n\n渲染属性工作方式详见template 模板。\n\n注意\n\n属性和样式不能混用，不能在属性字段中进行样式设置。\n\n\n# data 属性\n\n给组件绑定 data 属性，然后运行时通过 dataset 获取，方便进一步判断。\n\n示例：\n\n<template>\n  <div>\n    <div id="elnode1" data-person-name="jack"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onready () {\n      const el = this.$element(\'elnode1\')\n      const eldata = el.dataset.personname\n      console.info(`输出data属性： ${eldata}`)\n    }\n  }\n<\/script>\n',charsets:{cjk:!0}},{title:"通用样式",frontmatter:{},regularPath:"/zh/components/general/style.html",relativePath:"zh/components/general/style.md",key:"v-152fd816",path:"/zh/components/general/style.html",headers:[{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:108},{level:2,title:"属性列表",slug:"属性列表",normalizedTitle:"属性列表",charIndex:494}],headersStr:"示例代码 属性列表",content:'# 通用样式\n\n通用样式，即所有组件都可以支持的样式。\n\n它们均与 css 的属性样式用法保持一致，开发者可写在内联样式或<style>标签里，实现组件样式的定制化。\n\n关于组件样式的设置，可以参考此文档。\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <div class="box-normal" style="background-color:#f76160"></div>\n    <div class="box-normal"></div>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box-normal {\n    background-color: #09ba07;\n    width: 100px;\n    height: 100px;\n    border-radius: 8px;\n    margin-right: 10px;\n  }\n</style>\n\n\n\n\n\n# 属性列表\n\n注：通用样式均为非必填项。\n\n名称                                类型                                                             默认值          描述\nwidth                             <length> | <percentage>                                        -            未设置时使用组件自身内容需要的宽度\nheight                            <length> | <percentage>                                        -            未设置时使用组件自身内容需要的高度\nmin-width                         auto | <length> | <percentage>                                 auto         指定元素的最小宽度。该属性不能为负值，默认值 auto 为弹性元素的默认最小宽度，下同\nmin-height                        auto | <length> | <percentage>                                 auto         指定元素的最小高度\nmax-width                         none | <length> | <percentage>                                 none         指定元素的最大宽度。该属性不能为负值，默认值 none 表示不做限制，下同\nmax-height                        none | <length> | <percentage>                                 none         指定元素的最大高度\npadding                           <length>                                                       0            简写属性，在一个声明中设置所有的内边距属性，该属性可以有 1 到 4 个值，具体请参考MDN文档\npadding-[left|top|right|bottom]   <length>                                                       0            设置一个元素的某个方向的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值\nmargin                            <length>                                                       0            简写属性，在一个声明中设置所有的外边距属性，该属性可以有 1 到 4 个值，具体请参考MDN文档\nmargin-[left|top|right|bottom]    <length>                                                       0            设置一个元素的某个方向的外边距，该属性不能为负值\nborder                            -                                                              0            简写属性，在一个声明中设置所有的边框属性，可以按顺序设置属性 width style color，不设置的值为默认值\nborder-style                      solid                                                          solid        暂时仅支持 1 个值，为元素的所有边框设置样式\nborder-width                      <length>                                                       0            设置元素的所有边框宽度\nborder-color                      <color>                                                        black        设置元素的所有边框颜色，颜色值的填入请参考 颜色配置\nborder-radius                     <length> | <percentage>                                        0            border-radius 属性允许你设置元素的外边框圆角。设置时需要同时设置\n                                                                                                              border-width、border-color。radius 的幅度不会超过矩形较短边的一半\nbackground-color                  <color>                                                        -            颜色值的填入请参考 颜色配置\ncolor                             <color>                                                        -            颜色值的填入请参考 颜色配置\nbackground-image                  <uri>                                                          -            支持本地图片资源与网络图片资源；使用internal://协议图片需将aiot-toolkit升级到1.1.2以上版本\nbackground-size                   contain | cover | auto | <length> | <percentage>               auto auto    设置背景图片大小，详情见背景图样式\nbackground-repeat                 repeat | repeat-x | repeat-y | no-repeat                       repeat       [暂不支持] 设置是否及如何重复绘制背景图像，详情见背景图样式\nbackground-position               <length> |<percentage>| left | right | top | bottom | center   0px 0px      设置背景图片在容器中绘制的位置，支持 1-4 个参数，详情见背景图样式\nbox-shadow                        <length> <length> <color> |                                    -            设置元素的阴影效果，该属性可设置的值包括阴影的 X 轴偏移量、Y 轴偏移量、模糊半径、扩散半径和颜色。\n                                  <length> <length> <length> <color> |                                        写法举例：\n                                  <length> <length> <length> <length> <color>                                 box-shadow: 60px -16px teal，值分别对应：x轴偏移量、y轴偏移量、阴影颜色；\n                                                                                                              box-shadow: 10px 5px 5px\n                                                                                                              black，值分别对应：x轴偏移量、y轴偏移量、阴影模糊半径、阴影颜色；\n                                                                                                              box-shadow: 2px 2px 2px 1px rgba(0, 0, 0,\n                                                                                                              0.2)，值分别对应：x轴偏移量、y轴偏移量、阴影模糊半径、阴影扩散半径、阴影颜色\nopacity                           <number>                                                       1            opacity 属性指定了一个元素的透明度\ndisplay                           flex | none                                                    flex         JS 应用只支持 flex 布局；将当前元素的 display 设置为 none JS 应用页面将不渲染此元素\nvisibility                        visible | hidden                                               visible      visibility 属性控制显示或隐藏元素而不更改文档的布局\nflex                              <number>                                                       -            父容器为<div>、<list-item>时生效\nflex-grow                         <number>                                                       0            父容器为<div>、<list-item>时生效\nflex-shrink                       <number>                                                       1            父容器为<div>、<list-item>时生效\nflex-basis                        <number>                                                       -1           父容器为<div>、<list-item>时生效\nflex-direction                    <string>                                                       row          默认为横向row，父容器为<div>、<list-item>时生效\nalign-items                       <string>                                                       flex-start   align-items\n                                                                                                              定义了伸缩项目可以在伸缩容器的当前行的侧轴上对齐方式。flex-start(默认值)：伸缩项目在侧轴起点边的外边距紧靠住该行在侧轴起始的边。flex-end：伸缩项目在侧轴终点边的外边距靠住该行在侧轴终点的边\n                                                                                                              。center：伸缩项目的外边距盒在该行的侧轴上居中放置。baseline：伸缩项目根据他们的基线对齐。stretch：伸缩项目拉伸填充整个伸缩容器。此值会使项目的外边距盒的尺寸在遵照「min/max-width/height」属性的限制下尽可能接近所在行的尺寸\njustify-content                   <string>                                                       flex-start   justify-content\n                                                                                                              定义了伸缩项目沿着主轴线的对齐方式。flex-start(默认值)：伸缩项目向一行的起始位置靠齐。flex-end：伸缩项目向一行的结束位置靠齐。center：伸缩项目向一行的中间位置靠齐。space-between：伸缩项目会平均地分布在行里。第一个伸缩项目一行中的最开始位置，最后一个伸缩项目在一行中最终点位置。space-around：伸缩项目会平均地分布在行里，两端保留一半的空间\nposition                          absolute | relative                                            relative     支持 relative 和 absolute 属性值，且默认值为\n                                                                                                              relative；父容器为<list>、<swiper>时不生效\n[left|top|right|bottom]           <length>                                                       -            一般配合absolute布局使用，支持单位px，暂不支持百分比',normalizedContent:'# 通用样式\n\n通用样式，即所有组件都可以支持的样式。\n\n它们均与 css 的属性样式用法保持一致，开发者可写在内联样式或<style>标签里，实现组件样式的定制化。\n\n关于组件样式的设置，可以参考此文档。\n\n\n# 示例代码\n\n<template>\n  <div class="page">\n    <div class="box-normal" style="background-color:#f76160"></div>\n    <div class="box-normal"></div>\n  </div>\n</template>\n\n<style>\n  .page {\n    padding: 30px;\n    background-color: white;\n  }\n\n  .box-normal {\n    background-color: #09ba07;\n    width: 100px;\n    height: 100px;\n    border-radius: 8px;\n    margin-right: 10px;\n  }\n</style>\n\n\n\n\n\n# 属性列表\n\n注：通用样式均为非必填项。\n\n名称                                类型                                                             默认值          描述\nwidth                             <length> | <percentage>                                        -            未设置时使用组件自身内容需要的宽度\nheight                            <length> | <percentage>                                        -            未设置时使用组件自身内容需要的高度\nmin-width                         auto | <length> | <percentage>                                 auto         指定元素的最小宽度。该属性不能为负值，默认值 auto 为弹性元素的默认最小宽度，下同\nmin-height                        auto | <length> | <percentage>                                 auto         指定元素的最小高度\nmax-width                         none | <length> | <percentage>                                 none         指定元素的最大宽度。该属性不能为负值，默认值 none 表示不做限制，下同\nmax-height                        none | <length> | <percentage>                                 none         指定元素的最大高度\npadding                           <length>                                                       0            简写属性，在一个声明中设置所有的内边距属性，该属性可以有 1 到 4 个值，具体请参考mdn文档\npadding-[left|top|right|bottom]   <length>                                                       0            设置一个元素的某个方向的内边距，padding 区域指一个元素的内容和其边界之间的空间，该属性不能为负值\nmargin                            <length>                                                       0            简写属性，在一个声明中设置所有的外边距属性，该属性可以有 1 到 4 个值，具体请参考mdn文档\nmargin-[left|top|right|bottom]    <length>                                                       0            设置一个元素的某个方向的外边距，该属性不能为负值\nborder                            -                                                              0            简写属性，在一个声明中设置所有的边框属性，可以按顺序设置属性 width style color，不设置的值为默认值\nborder-style                      solid                                                          solid        暂时仅支持 1 个值，为元素的所有边框设置样式\nborder-width                      <length>                                                       0            设置元素的所有边框宽度\nborder-color                      <color>                                                        black        设置元素的所有边框颜色，颜色值的填入请参考 颜色配置\nborder-radius                     <length> | <percentage>                                        0            border-radius 属性允许你设置元素的外边框圆角。设置时需要同时设置\n                                                                                                              border-width、border-color。radius 的幅度不会超过矩形较短边的一半\nbackground-color                  <color>                                                        -            颜色值的填入请参考 颜色配置\ncolor                             <color>                                                        -            颜色值的填入请参考 颜色配置\nbackground-image                  <uri>                                                          -            支持本地图片资源与网络图片资源；使用internal://协议图片需将aiot-toolkit升级到1.1.2以上版本\nbackground-size                   contain | cover | auto | <length> | <percentage>               auto auto    设置背景图片大小，详情见背景图样式\nbackground-repeat                 repeat | repeat-x | repeat-y | no-repeat                       repeat       [暂不支持] 设置是否及如何重复绘制背景图像，详情见背景图样式\nbackground-position               <length> |<percentage>| left | right | top | bottom | center   0px 0px      设置背景图片在容器中绘制的位置，支持 1-4 个参数，详情见背景图样式\nbox-shadow                        <length> <length> <color> |                                    -            设置元素的阴影效果，该属性可设置的值包括阴影的 x 轴偏移量、y 轴偏移量、模糊半径、扩散半径和颜色。\n                                  <length> <length> <length> <color> |                                        写法举例：\n                                  <length> <length> <length> <length> <color>                                 box-shadow: 60px -16px teal，值分别对应：x轴偏移量、y轴偏移量、阴影颜色；\n                                                                                                              box-shadow: 10px 5px 5px\n                                                                                                              black，值分别对应：x轴偏移量、y轴偏移量、阴影模糊半径、阴影颜色；\n                                                                                                              box-shadow: 2px 2px 2px 1px rgba(0, 0, 0,\n                                                                                                              0.2)，值分别对应：x轴偏移量、y轴偏移量、阴影模糊半径、阴影扩散半径、阴影颜色\nopacity                           <number>                                                       1            opacity 属性指定了一个元素的透明度\ndisplay                           flex | none                                                    flex         js 应用只支持 flex 布局；将当前元素的 display 设置为 none js 应用页面将不渲染此元素\nvisibility                        visible | hidden                                               visible      visibility 属性控制显示或隐藏元素而不更改文档的布局\nflex                              <number>                                                       -            父容器为<div>、<list-item>时生效\nflex-grow                         <number>                                                       0            父容器为<div>、<list-item>时生效\nflex-shrink                       <number>                                                       1            父容器为<div>、<list-item>时生效\nflex-basis                        <number>                                                       -1           父容器为<div>、<list-item>时生效\nflex-direction                    <string>                                                       row          默认为横向row，父容器为<div>、<list-item>时生效\nalign-items                       <string>                                                       flex-start   align-items\n                                                                                                              定义了伸缩项目可以在伸缩容器的当前行的侧轴上对齐方式。flex-start(默认值)：伸缩项目在侧轴起点边的外边距紧靠住该行在侧轴起始的边。flex-end：伸缩项目在侧轴终点边的外边距靠住该行在侧轴终点的边\n                                                                                                              。center：伸缩项目的外边距盒在该行的侧轴上居中放置。baseline：伸缩项目根据他们的基线对齐。stretch：伸缩项目拉伸填充整个伸缩容器。此值会使项目的外边距盒的尺寸在遵照「min/max-width/height」属性的限制下尽可能接近所在行的尺寸\njustify-content                   <string>                                                       flex-start   justify-content\n                                                                                                              定义了伸缩项目沿着主轴线的对齐方式。flex-start(默认值)：伸缩项目向一行的起始位置靠齐。flex-end：伸缩项目向一行的结束位置靠齐。center：伸缩项目向一行的中间位置靠齐。space-between：伸缩项目会平均地分布在行里。第一个伸缩项目一行中的最开始位置，最后一个伸缩项目在一行中最终点位置。space-around：伸缩项目会平均地分布在行里，两端保留一半的空间\nposition                          absolute | relative                                            relative     支持 relative 和 absolute 属性值，且默认值为\n                                                                                                              relative；父容器为<list>、<swiper>时不生效\n[left|top|right|bottom]           <length>                                                       -            一般配合absolute布局使用，支持单位px，暂不支持百分比',charsets:{cjk:!0}},{title:"接口",frontmatter:{},regularPath:"/zh/features/",relativePath:"zh/features/README.md",key:"v-2a3a9f07",path:"/zh/features/",headersStr:null,content:"# 接口\n\n框架提供若干接口供应用调用以实现更多功能，包括以下几种接口：\n\n * 基本功能类接口：用以获取应用信息、平台信息、设备信息等；\n * 数据文件类接口：用以获取远程数据、上下载文件、本地数据存储等；\n * 系统能力接口：用来调用系统能力，例如获取网络状况、调节屏幕亮度等；\n * 媒体类接口：用来播放操作媒体文件，比如播放音乐文件等；\n\n每个接口称为一个 feature，每个 feature 包含若干个实现某具体功能的 api。",normalizedContent:"# 接口\n\n框架提供若干接口供应用调用以实现更多功能，包括以下几种接口：\n\n * 基本功能类接口：用以获取应用信息、平台信息、设备信息等；\n * 数据文件类接口：用以获取远程数据、上下载文件、本地数据存储等；\n * 系统能力接口：用来调用系统能力，例如获取网络状况、调节屏幕亮度等；\n * 媒体类接口：用来播放操作媒体文件，比如播放音乐文件等；\n\n每个接口称为一个 feature，每个 feature 包含若干个实现某具体功能的 api。",charsets:{cjk:!0}},{title:"基本功能",frontmatter:{},regularPath:"/zh/features/basic/",relativePath:"zh/features/basic/README.md",key:"v-09fdb16e",path:"/zh/features/basic/",headersStr:null,content:"# 基本功能\n\n获取应用、平台、框架、系统基本信息，以及应用内页面导航。\n\n * 应用上下文\n * 设备信息\n * 页面路由\n * 应用配置",normalizedContent:"# 基本功能\n\n获取应用、平台、框架、系统基本信息，以及应用内页面导航。\n\n * 应用上下文\n * 设备信息\n * 页面路由\n * 应用配置",charsets:{cjk:!0}},{title:"设备信息 device",frontmatter:{},regularPath:"/zh/features/basic/device.html",relativePath:"zh/features/basic/device.md",key:"v-536a2db2",path:"/zh/features/basic/device.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:18},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:57},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:152},{level:3,title:"device.getInfo(OBJECT)",slug:"device-getinfo-object",normalizedTitle:"device.getinfo(object)",charIndex:161},{level:3,title:"device.getDeviceId(OBJECT)",slug:"device-getdeviceid-object",normalizedTitle:"device.getdeviceid(object)",charIndex:1374},{level:3,title:"device.getSerial(OBJECT)",slug:"device-getserial-object",normalizedTitle:"device.getserial(object)",charIndex:1949},{level:3,title:"device.getTotalStorage(OBJECT)",slug:"device-gettotalstorage-object",normalizedTitle:"device.gettotalstorage(object)",charIndex:2508},{level:3,title:"device.getAvailableStorage(OBJECT)",slug:"device-getavailablestorage-object",normalizedTitle:"device.getavailablestorage(object)",charIndex:2990}],headersStr:"接口声明 导入模块 接口定义 device.getInfo(OBJECT) device.getDeviceId(OBJECT) device.getSerial(OBJECT) device.getTotalStorage(OBJECT) device.getAvailableStorage(OBJECT)",content:'# 设备信息 device\n\n\n# 接口声明\n\n{ "name": "system.device" }\n\n\n\n# 导入模块\n\nimport device from \'@system.device\' \n// 或 \nconst device = require(\'@system.device\')\n\n\n\n# 接口定义\n\n\n# device.getInfo(OBJECT)\n\n获取设备信息\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值                   类型       说明\nbrand                 string   设备品牌\nmanufacturer          string   设备生产商\nmodel                 string   设备型号\nproduct               string   设备代号\nosType                string   操作系统名称\nosVersionName         string   操作系统版本名称\nosVersionCode         number   操作系统版本号\nplatformVersionName   string   运行平台版本名称\nplatformVersionCode   number   运行平台版本号\nlanguage              string   系统语言\nregion                string   系统地区\nAPILevel              number   框架api版本\nscreenWidth           number   屏幕宽\nscreenHeight          number   屏幕高\nscreenDensity         number   屏幕密度，即：设备像素比（device pixel\n                               ratio），是设备物理像素和逻辑像素（DP）的比值，其计算公式为：DPR = 设备 PPI /\n                               160，PPI（pixels per inch）表示每英寸的像素数\nscreenShape           string   屏幕形状，可取值：rect 表示方形屏，circle 表示圆形屏，pill-shaped 表示胶囊形屏\ndeviceType            string   设备类型，可取值：watch、band、smartspeaker\n\n# 示例：\n\ndevice.getInfo({\n  success: function(ret) {\n    console.log(`handling success， brand = ${ret.brand}`)\n  }\n})\n\n\n\n# device.getDeviceId(OBJECT)\n\n获取设备唯一标识\n\n# 权限要求\n\n获取设备信息\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.DEVICE_INFO" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值        类型       说明\ndeviceId   String   设备唯一标识\n\n# 示例：\n\ndevice.getDeviceId({\n  success: function (data) {\n    console.log(`handling success: ${data.deviceId}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# device.getSerial(OBJECT)\n\n获取设备序列号\n\n# 权限要求\n\n获取设备信息\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.DEVICE_INFO" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值      类型       说明\nserial   String   设备序列号\n\ndevice.getSerial({\n    success: (data) => {\n        console.log(`handling success: ${data.serial}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.getTotalStorage(OBJECT)\n\n获取存储空间的总大小\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值            类型       说明\ntotalStorage   Number   存储空间的总大小，单位是 Byte\n\ndevice.getTotalStorage({\n    success: (data) => {\n        console.log(`handling success: ${data.totalStorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.getAvailableStorage(OBJECT)\n\n获取存储空间的可用大小\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值                类型       说明\navailableStorage   Number   存储空间的可用大小，单位是 Byte\n\ndevice.getAvailableStorage({\n    success: (data) => {\n        console.log(`handling success: ${data.availableStorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n',normalizedContent:'# 设备信息 device\n\n\n# 接口声明\n\n{ "name": "system.device" }\n\n\n\n# 导入模块\n\nimport device from \'@system.device\' \n// 或 \nconst device = require(\'@system.device\')\n\n\n\n# 接口定义\n\n\n# device.getinfo(object)\n\n获取设备信息\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值                   类型       说明\nbrand                 string   设备品牌\nmanufacturer          string   设备生产商\nmodel                 string   设备型号\nproduct               string   设备代号\nostype                string   操作系统名称\nosversionname         string   操作系统版本名称\nosversioncode         number   操作系统版本号\nplatformversionname   string   运行平台版本名称\nplatformversioncode   number   运行平台版本号\nlanguage              string   系统语言\nregion                string   系统地区\napilevel              number   框架api版本\nscreenwidth           number   屏幕宽\nscreenheight          number   屏幕高\nscreendensity         number   屏幕密度，即：设备像素比（device pixel\n                               ratio），是设备物理像素和逻辑像素（dp）的比值，其计算公式为：dpr = 设备 ppi /\n                               160，ppi（pixels per inch）表示每英寸的像素数\nscreenshape           string   屏幕形状，可取值：rect 表示方形屏，circle 表示圆形屏，pill-shaped 表示胶囊形屏\ndevicetype            string   设备类型，可取值：watch、band、smartspeaker\n\n# 示例：\n\ndevice.getinfo({\n  success: function(ret) {\n    console.log(`handling success， brand = ${ret.brand}`)\n  }\n})\n\n\n\n# device.getdeviceid(object)\n\n获取设备唯一标识\n\n# 权限要求\n\n获取设备信息\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.device_info" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值        类型       说明\ndeviceid   string   设备唯一标识\n\n# 示例：\n\ndevice.getdeviceid({\n  success: function (data) {\n    console.log(`handling success: ${data.deviceid}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# device.getserial(object)\n\n获取设备序列号\n\n# 权限要求\n\n获取设备信息\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.device_info" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值      类型       说明\nserial   string   设备序列号\n\ndevice.getserial({\n    success: (data) => {\n        console.log(`handling success: ${data.serial}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.gettotalstorage(object)\n\n获取存储空间的总大小\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值            类型       说明\ntotalstorage   number   存储空间的总大小，单位是 byte\n\ndevice.gettotalstorage({\n    success: (data) => {\n        console.log(`handling success: ${data.totalstorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n\n\n\n# device.getavailablestorage(object)\n\n获取存储空间的可用大小\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值                类型       说明\navailablestorage   number   存储空间的可用大小，单位是 byte\n\ndevice.getavailablestorage({\n    success: (data) => {\n        console.log(`handling success: ${data.availablestorage}`)\n    },\n    fail: (data, code) => {\n        console.log(`handling fail, code = ${code}`)\n    }\n})\n',charsets:{cjk:!0}},{title:"应用上下文 app",frontmatter:{},regularPath:"/zh/features/basic/app.html",relativePath:"zh/features/basic/app.md",key:"v-47aa0af6",path:"/zh/features/basic/app.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:16},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:31},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:114},{level:3,title:"app.getInfo()",slug:"app-getinfo",normalizedTitle:"app.getinfo()",charIndex:123},{level:3,title:"app.terminate()",slug:"app-terminate",normalizedTitle:"app.terminate()",charIndex:959},{level:3,title:"app.canIUse()",slug:"app-caniuse",normalizedTitle:"app.caniuse()",charIndex:1033},{level:3,title:"入参格式",slug:"入参格式",normalizedTitle:"入参格式",charIndex:1135}],headersStr:"接口声明 导入模块 接口定义 app.getInfo() app.terminate() app.canIUse() 入参格式",content:'# 应用上下文 app\n\n\n# 接口声明\n\n无需声明\n\n\n# 导入模块\n\nimport app from \'@system.app\' \n// 或 \nconst app = require(\'@system.app\')\n\n\n\n# 接口定义\n\n\n# app.getInfo()\n\n获取当前应用信息\n\n# 参数：\n\n无\n\n# 返回值：\n\n参数名           类型        说明\npackageName   String    应用包名\nicon          String    应用图标路径\nname          String    应用名称\nversionName   String    应用版本名称\nversionCode   Integer   应用版本号\nlogLevel      String    log 级别\nsource        Object    应用来源\n\n# source\n\n参数名           类型       说明\npackageName   String   来源 app 的包名，一级来源\ntype          String   来源类型，二级来源，值为 shortcut、push、url、barcode、nfc、bluetooth、other\n\n# 示例：\n\nconsole.log(JSON.stringify(app.getInfo()))\n\n\n// console 值打印\n{\n  // 应用包名\n  "packageName": "com.example.demo",\n  // 应用名称\n  "name": "demo",\n  // 应用版本名称\n  "versionName": "1.0.0",\n  // 应用版本号\n  "versionCode": 1,\n  // 应用图片\n  "icon": "/common/logo.png",\n  // log 级别\n  "logLevel": "debug",\n  // 应用来源\n  "source": {\n    // 来源app的包名\n    "packageName": "",\n    // 来源类型\n    "type": "shortcut"\n  }\n}\n\n\n\n# app.terminate()\n\n退出当前应用\n\n# 参数：\n\n无\n\n# 返回值：\n\n无\n\n# 示例：\n\napp.terminate()\n\n\n\n# app.canIUse()\n\n# 参数：\n\n类型       描述\nString   要查询的能力，格式见下方\n\n# 返回值：\n\n类型        描述\nBoolean   查询的能力是否支持\n\n\n# 入参格式\n\n# 查询接口\n\n// 查询feature下的方法是否支持\n\'@${featureName}.${method}\'\n// 查询某个feature是否支持\n\'@${featureName}\'\n\n\n示例\n\nimport app from \'@system.app\';\n\nif (app.canIUse(\'@system.router.push\')) {\n  // 可以使用方法@system.router.push\n}\nif (app.canIUse(\'@system.router\')) {\n  // 可以使用@system.router接口\n}\n\n\n# 查询组件\n\ntype取值可以是\'attr\'、\'style\'、\'method\'，分别对应组件的属性、样式、方法。\n\n// 查询组件下的属性、样式、方法是否支持\n`${componentName}.${type}.${name}`\n// 查询组件是否支持\n`${componentName}`\n\n\n示例\n\nimport app from \'@system.app\';\n\nif (app.canIUse(\'scroll\')) {\n  // 可以使用scroll组件\n}\nif (app.canIUse(\'scroll.attr.scroll-x\')) {\n  // 可以使用scroll组件的scroll-x属性\n}\n',normalizedContent:'# 应用上下文 app\n\n\n# 接口声明\n\n无需声明\n\n\n# 导入模块\n\nimport app from \'@system.app\' \n// 或 \nconst app = require(\'@system.app\')\n\n\n\n# 接口定义\n\n\n# app.getinfo()\n\n获取当前应用信息\n\n# 参数：\n\n无\n\n# 返回值：\n\n参数名           类型        说明\npackagename   string    应用包名\nicon          string    应用图标路径\nname          string    应用名称\nversionname   string    应用版本名称\nversioncode   integer   应用版本号\nloglevel      string    log 级别\nsource        object    应用来源\n\n# source\n\n参数名           类型       说明\npackagename   string   来源 app 的包名，一级来源\ntype          string   来源类型，二级来源，值为 shortcut、push、url、barcode、nfc、bluetooth、other\n\n# 示例：\n\nconsole.log(json.stringify(app.getinfo()))\n\n\n// console 值打印\n{\n  // 应用包名\n  "packagename": "com.example.demo",\n  // 应用名称\n  "name": "demo",\n  // 应用版本名称\n  "versionname": "1.0.0",\n  // 应用版本号\n  "versioncode": 1,\n  // 应用图片\n  "icon": "/common/logo.png",\n  // log 级别\n  "loglevel": "debug",\n  // 应用来源\n  "source": {\n    // 来源app的包名\n    "packagename": "",\n    // 来源类型\n    "type": "shortcut"\n  }\n}\n\n\n\n# app.terminate()\n\n退出当前应用\n\n# 参数：\n\n无\n\n# 返回值：\n\n无\n\n# 示例：\n\napp.terminate()\n\n\n\n# app.caniuse()\n\n# 参数：\n\n类型       描述\nstring   要查询的能力，格式见下方\n\n# 返回值：\n\n类型        描述\nboolean   查询的能力是否支持\n\n\n# 入参格式\n\n# 查询接口\n\n// 查询feature下的方法是否支持\n\'@${featurename}.${method}\'\n// 查询某个feature是否支持\n\'@${featurename}\'\n\n\n示例\n\nimport app from \'@system.app\';\n\nif (app.caniuse(\'@system.router.push\')) {\n  // 可以使用方法@system.router.push\n}\nif (app.caniuse(\'@system.router\')) {\n  // 可以使用@system.router接口\n}\n\n\n# 查询组件\n\ntype取值可以是\'attr\'、\'style\'、\'method\'，分别对应组件的属性、样式、方法。\n\n// 查询组件下的属性、样式、方法是否支持\n`${componentname}.${type}.${name}`\n// 查询组件是否支持\n`${componentname}`\n\n\n示例\n\nimport app from \'@system.app\';\n\nif (app.caniuse(\'scroll\')) {\n  // 可以使用scroll组件\n}\nif (app.caniuse(\'scroll.attr.scroll-x\')) {\n  // 可以使用scroll组件的scroll-x属性\n}\n',charsets:{cjk:!0}},{title:"页面路由 router",frontmatter:{},regularPath:"/zh/features/basic/router.html",relativePath:"zh/features/basic/router.md",key:"v-03d4060c",path:"/zh/features/basic/router.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:18},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:33},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:128},{level:3,title:"router.push(OBJECT)",slug:"router-push-object",normalizedTitle:"router.push(object)",charIndex:137},{level:3,title:"router.replace(OBJECT)",slug:"router-replace-object",normalizedTitle:"router.replace(object)",charIndex:1460},{level:3,title:"router.back(OBJECT)",slug:"router-back-object",normalizedTitle:"router.back(object)",charIndex:2074},{level:3,title:"router.clear()",slug:"router-clear",normalizedTitle:"router.clear()",charIndex:2911},{level:3,title:"router.getLength()",slug:"router-getlength",normalizedTitle:"router.getlength()",charIndex:2984},{level:3,title:"router.getState()",slug:"router-getstate",normalizedTitle:"router.getstate()",charIndex:3138},{level:3,title:"router.getPages()",slug:"router-getpages",normalizedTitle:"router.getpages()",charIndex:3440}],headersStr:"接口声明 导入模块 接口定义 router.push(OBJECT) router.replace(OBJECT) router.back(OBJECT) router.clear() router.getLength() router.getState() router.getPages()",content:"# 页面路由 router\n\n\n# 接口声明\n\n无需声明\n\n\n# 导入模块\n\nimport router from '@system.router' \n// 或 \nconst router = require('@system.router')\n\n\n\n# 接口定义\n\n\n# router.push(OBJECT)\n\n跳转到应用内的某个页面\n\n# 参数：\n\n参数       类型       必填   说明\nuri      String   是    要跳转到的 uri，可以是下面的格式：\n                       1、包含 schema 的完整 uri；\n                       2、以‘/’开头的应用内页面的路径；例：/about\n                       3、以非‘/’开头的应用内页面的名称；例：About\n                       4、特殊的，如果 uri 的值是\"/\"，则跳转到 path 为\"/\"的页，没有则跳转到首页\n                       \n                       支持包含 schema 的完整 uri。对于带有 schema 的 uri，处理流程如下：\n                       如果 schema 是 hap （参见 hap 链接），会跳转到 hap 链接所支持的类型\nparams   Object   否    跳转时需要传递的数据，参数可以在目标页面中通过this.param1的方式使用，param1 为 json\n                       中的参数名，param1 对应的值会统一转换为 String 类型。使用this.param1变量时，需要在目标页面中在\n                       public（应用外传参）或 protected (应用内传参)下定义 key 名相同的属性\n\n# params参数：\n\n参数                        类型       必填   说明\n___PARAM_LAUNCH_FLAG___   String   否    JS 应用启动参数，目前仅支持\"clearTask\"，在启动目标页面时会清除除此页面外的其他页面。详见页面启动模式\n\n# 示例：\n\n * 应用内切换页面\n   \n   * path 切换\n     \n     router.push({\n       uri: '/about',\n       params: {\n         testId: '1'\n       }\n     })\n     \n   \n   * name 切换\n     \n     // open page by name\n     router.push({\n       uri: 'About',\n       params: {\n         testId: '1'\n       }\n     })\n     \n   \n   * 切换页面并清除其他页面\n     \n     router.push({\n       uri: '/about',\n       params: {\n         ___PARAM_LAUNCH_FLAG___: 'clearTask'\n       }\n     })\n     \n\n\n# router.replace(OBJECT)\n\n用应用内的某个页面替换当前页面，并销毁被替换的页面\n\n# 参数：\n\n参数       类型       必填   说明\nuri      String   是    要跳转到的 uri，可以是下面的格式：\n                        1. 以\"/\"开头的应用内页面的路径；例：/about\n                        2. 以非\"/\"开头的应用内页面的名称；例：About\n                        3. 特殊的，如果 uri 的值是\"/\"，则跳转到 path 为\"/\"的页，没有则跳转到首页\nparams   Object   否    跳转时需要传递的数据，参数可以在目标页面中通过this.param1的方式使用，param1 为 json\n                       中的参数名，param1 对应的值会统一转换为 String 类型。使用this.param1变量时，需要在目标页面中在\n                       public（应用外传参）或 protected (应用内传参)下定义 key 名相同的属性\n\n# 示例：\n\nrouter.replace({\n  uri: '/test',\n  params: {\n    testId: '1'\n  }\n})\n\n\n\n# router.back(OBJECT)\n\n返回指定页面\n\n# 参数：\n\n参数     类型       必填   说明\npath   String   否    返回目标页面的路径，可以是以下几种取值：\n                      1. 不传该参数，返回上一页面\n                      2. 以\"/\"开头的应用内已打开页面的路径；例：/about\n                      3. 特殊的，如果 path 的值是\"/\"，则跳转到页面名称为\"/\"的页，没有则跳转到首页\n                     \n                     注意点：\n                      1. path 需要是以\"/\"开头的当前应用已经打开的页面路径，否则均视为无效参数，返回上一页面\n                      2. 若根据 path 未匹配到已经打开的页面，返回上一页面\n                      3. 若根据 path 参数匹配到多个页面，返回至最后打开的页面\n\n# 示例：\n\n// A页面, open page by name\nrouter.push({\n  uri: 'B'\n})\n// B页面, open page by name\nrouter.push({\n  uri: 'C'\n})\n// C页面, open page by name\nrouter.push({\n  uri: 'D'\n})\n// D页面, open page by name\nrouter.push({\n  uri: 'E'\n})\n// E页面不传入页面路径，返回至D页面\nrouter.back()\n// D页面不传入页面名称，返回至C页面\nrouter.back()\n// C页面传入页面路径，返回至A页面\nrouter.back({\n  path: '/A'\n})\n\n\n\n# router.clear()\n\n清空所有历史页面记录，仅保留当前页面\n\n# 参数：\n\n无\n\n# 示例：\n\nrouter.clear()\n\n\n\n# router.getLength()\n\n获取当前页面栈的页面数量\n\n# 返回值:\n\n类型       说明\nNumber   页面数量\n\n# 示例：\n\nvar length = router.getLength()\nconsole.log(`page's length = ${length}`)\n\n\n\n# router.getState()\n\n获取当前页面状态\n\n# 返回参数：\n\n参数名     类型       说明\nindex   Number   当前页面在页面栈中的位置\nname    String   当前页面的名称\npath    String   当前页面的路径\n\n# 示例：\n\nvar page = router.getState()\nconsole.log(`page index = ${page.index}`)\nconsole.log(`page name = ${page.name}`)\nconsole.log(`page path = ${page.path}`)\n\n\n\n# router.getPages()\n\n获取当前页面栈列表\n\n# 返回值：\n\n类型      说明\nArray   页面栈列表。数组每一项都为 Object 类型\n\n数组每一项构成：\n\n字段     类型       说明\nname   String   页面的名称\npath   String   页面的路径\n\n# 示例：\n\nvar stacks = router.getPages()\nconsole.log('栈底页面名称为：', stacks[0].name) // 如 list、detail 等\nconsole.log('栈底页面路径为：', stacks[0].path) // 如 /list、/detail、/home/preview\n",normalizedContent:"# 页面路由 router\n\n\n# 接口声明\n\n无需声明\n\n\n# 导入模块\n\nimport router from '@system.router' \n// 或 \nconst router = require('@system.router')\n\n\n\n# 接口定义\n\n\n# router.push(object)\n\n跳转到应用内的某个页面\n\n# 参数：\n\n参数       类型       必填   说明\nuri      string   是    要跳转到的 uri，可以是下面的格式：\n                       1、包含 schema 的完整 uri；\n                       2、以‘/’开头的应用内页面的路径；例：/about\n                       3、以非‘/’开头的应用内页面的名称；例：about\n                       4、特殊的，如果 uri 的值是\"/\"，则跳转到 path 为\"/\"的页，没有则跳转到首页\n                       \n                       支持包含 schema 的完整 uri。对于带有 schema 的 uri，处理流程如下：\n                       如果 schema 是 hap （参见 hap 链接），会跳转到 hap 链接所支持的类型\nparams   object   否    跳转时需要传递的数据，参数可以在目标页面中通过this.param1的方式使用，param1 为 json\n                       中的参数名，param1 对应的值会统一转换为 string 类型。使用this.param1变量时，需要在目标页面中在\n                       public（应用外传参）或 protected (应用内传参)下定义 key 名相同的属性\n\n# params参数：\n\n参数                        类型       必填   说明\n___param_launch_flag___   string   否    js 应用启动参数，目前仅支持\"cleartask\"，在启动目标页面时会清除除此页面外的其他页面。详见页面启动模式\n\n# 示例：\n\n * 应用内切换页面\n   \n   * path 切换\n     \n     router.push({\n       uri: '/about',\n       params: {\n         testid: '1'\n       }\n     })\n     \n   \n   * name 切换\n     \n     // open page by name\n     router.push({\n       uri: 'about',\n       params: {\n         testid: '1'\n       }\n     })\n     \n   \n   * 切换页面并清除其他页面\n     \n     router.push({\n       uri: '/about',\n       params: {\n         ___param_launch_flag___: 'cleartask'\n       }\n     })\n     \n\n\n# router.replace(object)\n\n用应用内的某个页面替换当前页面，并销毁被替换的页面\n\n# 参数：\n\n参数       类型       必填   说明\nuri      string   是    要跳转到的 uri，可以是下面的格式：\n                        1. 以\"/\"开头的应用内页面的路径；例：/about\n                        2. 以非\"/\"开头的应用内页面的名称；例：about\n                        3. 特殊的，如果 uri 的值是\"/\"，则跳转到 path 为\"/\"的页，没有则跳转到首页\nparams   object   否    跳转时需要传递的数据，参数可以在目标页面中通过this.param1的方式使用，param1 为 json\n                       中的参数名，param1 对应的值会统一转换为 string 类型。使用this.param1变量时，需要在目标页面中在\n                       public（应用外传参）或 protected (应用内传参)下定义 key 名相同的属性\n\n# 示例：\n\nrouter.replace({\n  uri: '/test',\n  params: {\n    testid: '1'\n  }\n})\n\n\n\n# router.back(object)\n\n返回指定页面\n\n# 参数：\n\n参数     类型       必填   说明\npath   string   否    返回目标页面的路径，可以是以下几种取值：\n                      1. 不传该参数，返回上一页面\n                      2. 以\"/\"开头的应用内已打开页面的路径；例：/about\n                      3. 特殊的，如果 path 的值是\"/\"，则跳转到页面名称为\"/\"的页，没有则跳转到首页\n                     \n                     注意点：\n                      1. path 需要是以\"/\"开头的当前应用已经打开的页面路径，否则均视为无效参数，返回上一页面\n                      2. 若根据 path 未匹配到已经打开的页面，返回上一页面\n                      3. 若根据 path 参数匹配到多个页面，返回至最后打开的页面\n\n# 示例：\n\n// a页面, open page by name\nrouter.push({\n  uri: 'b'\n})\n// b页面, open page by name\nrouter.push({\n  uri: 'c'\n})\n// c页面, open page by name\nrouter.push({\n  uri: 'd'\n})\n// d页面, open page by name\nrouter.push({\n  uri: 'e'\n})\n// e页面不传入页面路径，返回至d页面\nrouter.back()\n// d页面不传入页面名称，返回至c页面\nrouter.back()\n// c页面传入页面路径，返回至a页面\nrouter.back({\n  path: '/a'\n})\n\n\n\n# router.clear()\n\n清空所有历史页面记录，仅保留当前页面\n\n# 参数：\n\n无\n\n# 示例：\n\nrouter.clear()\n\n\n\n# router.getlength()\n\n获取当前页面栈的页面数量\n\n# 返回值:\n\n类型       说明\nnumber   页面数量\n\n# 示例：\n\nvar length = router.getlength()\nconsole.log(`page's length = ${length}`)\n\n\n\n# router.getstate()\n\n获取当前页面状态\n\n# 返回参数：\n\n参数名     类型       说明\nindex   number   当前页面在页面栈中的位置\nname    string   当前页面的名称\npath    string   当前页面的路径\n\n# 示例：\n\nvar page = router.getstate()\nconsole.log(`page index = ${page.index}`)\nconsole.log(`page name = ${page.name}`)\nconsole.log(`page path = ${page.path}`)\n\n\n\n# router.getpages()\n\n获取当前页面栈列表\n\n# 返回值：\n\n类型      说明\narray   页面栈列表。数组每一项都为 object 类型\n\n数组每一项构成：\n\n字段     类型       说明\nname   string   页面的名称\npath   string   页面的路径\n\n# 示例：\n\nvar stacks = router.getpages()\nconsole.log('栈底页面名称为：', stacks[0].name) // 如 list、detail 等\nconsole.log('栈底页面路径为：', stacks[0].path) // 如 /list、/detail、/home/preview\n",charsets:{cjk:!0}},{title:"数据文件",frontmatter:{},regularPath:"/zh/features/data/",relativePath:"zh/features/data/README.md",key:"v-193751b5",path:"/zh/features/data/",headersStr:null,content:"# 数据文件\n\n提供本地数据存储和文件操作相关的能力。\n\n * 数据存储\n * 文件存储",normalizedContent:"# 数据文件\n\n提供本地数据存储和文件操作相关的能力。\n\n * 数据存储\n * 文件存储",charsets:{cjk:!0}},{title:"文件存储 file",frontmatter:{},regularPath:"/zh/features/data/file.html",relativePath:"zh/features/data/file.md",key:"v-29de2bd6",path:"/zh/features/data/file.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:16},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:53},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:140},{level:3,title:"file.move(OBJECT)",slug:"file-move-object",normalizedTitle:"file.move(object)",charIndex:149},{level:3,title:"file.copy(OBJECT)",slug:"file-copy-object",normalizedTitle:"file.copy(object)",charIndex:790},{level:3,title:"file.list(OBJECT)",slug:"file-list-object",normalizedTitle:"file.list(object)",charIndex:1413},{level:3,title:"file.get(OBJECT)",slug:"file-get-object",normalizedTitle:"file.get(object)",charIndex:2365},{level:3,title:"file.delete(OBJECT)",slug:"file-delete-object",normalizedTitle:"file.delete(object)",charIndex:3455},{level:3,title:"file.writeText(OBJECT)",slug:"file-writetext-object",normalizedTitle:"file.writetext(object)",charIndex:3980},{level:3,title:"file.writeArrayBuffer(OBJECT)",slug:"file-writearraybuffer-object",normalizedTitle:"file.writearraybuffer(object)",charIndex:4698},{level:3,title:"file.readText(OBJECT)",slug:"file-readtext-object",normalizedTitle:"file.readtext(object)",charIndex:5487},{level:3,title:"file.readArrayBuffer(OBJECT)",slug:"file-readarraybuffer-object",normalizedTitle:"file.readarraybuffer(object)",charIndex:6111},{level:3,title:"file.access(OBJECT)",slug:"file-access-object",normalizedTitle:"file.access(object)",charIndex:6865},{level:3,title:"file.mkdir(OBJECT)",slug:"file-mkdir-object",normalizedTitle:"file.mkdir(object)",charIndex:7338},{level:3,title:"file.rmdir(OBJECT)",slug:"file-rmdir-object",normalizedTitle:"file.rmdir(object)",charIndex:7887}],headersStr:"接口声明 导入模块 接口定义 file.move(OBJECT) file.copy(OBJECT) file.list(OBJECT) file.get(OBJECT) file.delete(OBJECT) file.writeText(OBJECT) file.writeArrayBuffer(OBJECT) file.readText(OBJECT) file.readArrayBuffer(OBJECT) file.access(OBJECT) file.mkdir(OBJECT) file.rmdir(OBJECT)",content:"# 文件存储 file\n\n\n# 接口声明\n\n{ \"name\": \"system.file\" }\n\n\n\n# 导入模块\n\nimport file from '@system.file' \n// 或 \nconst file = require('@system.file')\n\n\n\n# 接口定义\n\n\n# file.move(OBJECT)\n\n将源文件移动到指定位置，接口中使用的 URI 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nsrcUri     String     是    源文件的 uri，不能是应用资源路径和 tmp 类型的 uri\ndstUri     String     是    目标文件的 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    Function   否    成功回调，返回目标文件的 uri\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.move({\n  srcUri: 'internal://cache/path/to/file',\n  dstUri: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`move success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.copy(OBJECT)\n\n将源文件复制一份并存储到指定位置，接口中使用的 URI 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nsrcUri     String     是    源文件的 uri\ndstUri     String     是    目标文件的 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    Function   否    成功回调，返回目标文件的 uri\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.copy({\n  srcUri: 'internal://cache/path/to/file',\n  dstUri: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`copy success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.list(OBJECT)\n\n获取指定目录下的文件列表，接口中使用的 URI 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        String     是    目录 uri\nsuccess    Function   否    成功回调，返回{fileList:[{uri:'file1', lastModifiedTime:1234456,\n                           length:123456} ...]}\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名        类型      说明\nfileList   Array   文件列表，每个文件的格式为{uri:'file1', lastModifiedTime:1234456,\n                   length:123456}\n\n# 每个文件的元信息：\n\n参数名                类型       说明\nuri                String   文件的 uri，该 uri 可以被其他组件或 Feature 访问\nlength             Number   文件大小，单位 B\nlastModifiedTime   Number   文件的保存是的时间戳，从 1970/01/01 00:00:00 GMT 到当前时间的毫秒数\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.list({\n  uri: 'internal://files/movies/',\n  success: function(data) {\n    console.log(data.fileList)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.get(OBJECT)\n\n获取本地文件的文件信息，接口中使用的 URI 描述请参考文件组织\n\n# 参数：\n\n参数名         类型         必填   说明\nuri         String     是    文件的 uri，不能是应用资源路径和 tmp 类型的 uri\nrecursive   Boolean    否    是否递归获取子目录文件列表。默认 false\nsuccess     Function   否    成功回调，返回{uri:'file1', length:123456,\n                            lastModifiedTime:1233456}\nfail        Function   否    失败回调\ncomplete    Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名                类型       说明\nuri                String   文件的 uri，该 uri 可以被其他组件或 Feature 访问\nlength             Number   文件大小，单位 B。当 type = dir 时，返回0\nlastModifiedTime   Number   文件的保存时的时间戳，从 1970/01/01 08:00:00 到当前时间的毫秒数\ntype               String   文件类型，dir：目录；file：文件\nsubFiles           Array    当 type = dir 时，返回目录中的文件列表，recursive 为 true 时，同时返回其子目录中的文件信息\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.get({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log(data.uri)\n    console.log(data.length)\n    console.log(data.lastModifiedTime)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.delete(OBJECT)\n\n删除本地存储的文件，接口中使用的 URI 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        String     是    需要删除的文件 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.delete({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writeText(OBJECT)\n\n写文本到文件\n\nWARNING\n\n当您使用文件写入接口时，请务必注意及时清理无用的文件，特别是在 IoT 设备内存较小的情况下，可以避免内存过载和应用崩溃的问题。\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        String     是    本地文件路径，不支持资源文件路径和 tmp 分区，如果文件不存在会创建文件\ntext       String     是    需要写入的字符串\nencoding   String     否    编码格式，默认 UTF-8\nappend     Boolean    否    是否追加模式，默认 false\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.writeText({\n  uri: 'internal://files/work/demo.txt',\n  text: 'test',\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writeArrayBuffer(OBJECT)\n\n写 Buffer 到文件\n\nWARNING\n\n当您使用文件写入接口时，请务必注意及时清理无用的文件，特别是在 IoT 设备内存较小的情况下，可以避免内存过载和应用崩溃的问题。\n\n# 参数：\n\n参数名        类型           必填   说明\nuri        String       是    本地文件路径，不支持资源文件路径和 tmp 分区，如果文件不存在会创建文件\nbuffer     Uint8Array   是    需要写入的 Buffer\nposition   Number       否    指向文件开始写入数据的位置的偏移量，默认 0\nappend     Boolean      否    是否追加模式，默认 false。当为 true 时，position 参数无效\nsuccess    Function     否    成功回调\nfail       Function     否    失败回调\ncomplete   Function     否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.writeArrayBuffer({\n  uri: 'internal://files/work/demo',\n  buffer: buffer,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readText(OBJECT)\n\n从文件中读取文本\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        String     是    本地文件路径，支持应用资源路径，例如：'/Common/demo.txt'\nencoding   String     否    编码格式，默认 UTF-8\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名    类型       说明\ntext   String   读取的文本\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n301   文件不存在\n\n# 示例：\n\nfile.readText({\n  uri: 'internal://files/work/demo.txt',\n  success: function(data) {\n    console.log('text: ' + data.text)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readArrayBuffer(OBJECT)\n\n从文件中读取 Buffer\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        String     是    本地文件路径，支持应用资源路径，例如：'/Common/demo.txt'\nposition   Number     否    读取的起始位置，默认值为文件的起始位置\nlength     Number     否    读取的长度，不填写则读取到文件结尾\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名      类型           说明\nbuffer   Uint8Array   读取的文件内容\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n301   文件不存在\n\n# 示例：\n\nfile.readArrayBuffer({\n  uri: 'internal://files/work/demo',\n  position: 100,\n  length: 100,\n  success: function(data) {\n    console.log('buffer.length: ' + data.buffer.length)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.access(OBJECT)\n\n判断文件或目录是否存在\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        String     是    目录或文件 uri\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.access({\n  uri: 'internal://files/test',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.mkdir(OBJECT)\n\n创建目录\n\n# 参数：\n\n参数名         类型         必填   说明\nuri         String     是    目录的 uri，不能是应用资源路径和 tmp 类型的 uri\nrecursive   Boolean    否    是否递归创建该目录的上级目录后再创建该目录。默认 false\nsuccess     Function   否    成功回调\nfail        Function   否    失败回调\ncomplete    Function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.mkdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.rmdir(OBJECT)\n\n删除目录\n\n# 参数：\n\n参数名         类型         必填   说明\nuri         String     是    目录的 uri，不能是应用资源路径和 tmp 类型的 uri\nrecursive   Boolean    否    是否递归删除子文件和子目录。默认 false\nsuccess     Function   否    成功回调\nfail        Function   否    失败回调\ncomplete    Function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nfile.rmdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# 文件存储 file\n\n\n# 接口声明\n\n{ \"name\": \"system.file\" }\n\n\n\n# 导入模块\n\nimport file from '@system.file' \n// 或 \nconst file = require('@system.file')\n\n\n\n# 接口定义\n\n\n# file.move(object)\n\n将源文件移动到指定位置，接口中使用的 uri 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nsrcuri     string     是    源文件的 uri，不能是应用资源路径和 tmp 类型的 uri\ndsturi     string     是    目标文件的 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    function   否    成功回调，返回目标文件的 uri\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.move({\n  srcuri: 'internal://cache/path/to/file',\n  dsturi: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`move success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.copy(object)\n\n将源文件复制一份并存储到指定位置，接口中使用的 uri 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nsrcuri     string     是    源文件的 uri\ndsturi     string     是    目标文件的 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    function   否    成功回调，返回目标文件的 uri\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.copy({\n  srcuri: 'internal://cache/path/to/file',\n  dsturi: 'internal://files/path/to/file',\n  success: function(uri) {\n    console.log(`copy success: ${uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.list(object)\n\n获取指定目录下的文件列表，接口中使用的 uri 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        string     是    目录 uri\nsuccess    function   否    成功回调，返回{filelist:[{uri:'file1', lastmodifiedtime:1234456,\n                           length:123456} ...]}\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名        类型      说明\nfilelist   array   文件列表，每个文件的格式为{uri:'file1', lastmodifiedtime:1234456,\n                   length:123456}\n\n# 每个文件的元信息：\n\n参数名                类型       说明\nuri                string   文件的 uri，该 uri 可以被其他组件或 feature 访问\nlength             number   文件大小，单位 b\nlastmodifiedtime   number   文件的保存是的时间戳，从 1970/01/01 00:00:00 gmt 到当前时间的毫秒数\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.list({\n  uri: 'internal://files/movies/',\n  success: function(data) {\n    console.log(data.filelist)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.get(object)\n\n获取本地文件的文件信息，接口中使用的 uri 描述请参考文件组织\n\n# 参数：\n\n参数名         类型         必填   说明\nuri         string     是    文件的 uri，不能是应用资源路径和 tmp 类型的 uri\nrecursive   boolean    否    是否递归获取子目录文件列表。默认 false\nsuccess     function   否    成功回调，返回{uri:'file1', length:123456,\n                            lastmodifiedtime:1233456}\nfail        function   否    失败回调\ncomplete    function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名                类型       说明\nuri                string   文件的 uri，该 uri 可以被其他组件或 feature 访问\nlength             number   文件大小，单位 b。当 type = dir 时，返回0\nlastmodifiedtime   number   文件的保存时的时间戳，从 1970/01/01 08:00:00 到当前时间的毫秒数\ntype               string   文件类型，dir：目录；file：文件\nsubfiles           array    当 type = dir 时，返回目录中的文件列表，recursive 为 true 时，同时返回其子目录中的文件信息\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.get({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log(data.uri)\n    console.log(data.length)\n    console.log(data.lastmodifiedtime)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.delete(object)\n\n删除本地存储的文件，接口中使用的 uri 描述请参考文件组织\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        string     是    需要删除的文件 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.delete({\n  uri: 'internal://files/path/to/file',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writetext(object)\n\n写文本到文件\n\nwarning\n\n当您使用文件写入接口时，请务必注意及时清理无用的文件，特别是在 iot 设备内存较小的情况下，可以避免内存过载和应用崩溃的问题。\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        string     是    本地文件路径，不支持资源文件路径和 tmp 分区，如果文件不存在会创建文件\ntext       string     是    需要写入的字符串\nencoding   string     否    编码格式，默认 utf-8\nappend     boolean    否    是否追加模式，默认 false\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.writetext({\n  uri: 'internal://files/work/demo.txt',\n  text: 'test',\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.writearraybuffer(object)\n\n写 buffer 到文件\n\nwarning\n\n当您使用文件写入接口时，请务必注意及时清理无用的文件，特别是在 iot 设备内存较小的情况下，可以避免内存过载和应用崩溃的问题。\n\n# 参数：\n\n参数名        类型           必填   说明\nuri        string       是    本地文件路径，不支持资源文件路径和 tmp 分区，如果文件不存在会创建文件\nbuffer     uint8array   是    需要写入的 buffer\nposition   number       否    指向文件开始写入数据的位置的偏移量，默认 0\nappend     boolean      否    是否追加模式，默认 false。当为 true 时，position 参数无效\nsuccess    function     否    成功回调\nfail       function     否    失败回调\ncomplete   function     否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.writearraybuffer({\n  uri: 'internal://files/work/demo',\n  buffer: buffer,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readtext(object)\n\n从文件中读取文本\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        string     是    本地文件路径，支持应用资源路径，例如：'/common/demo.txt'\nencoding   string     否    编码格式，默认 utf-8\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名    类型       说明\ntext   string   读取的文本\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n301   文件不存在\n\n# 示例：\n\nfile.readtext({\n  uri: 'internal://files/work/demo.txt',\n  success: function(data) {\n    console.log('text: ' + data.text)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.readarraybuffer(object)\n\n从文件中读取 buffer\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        string     是    本地文件路径，支持应用资源路径，例如：'/common/demo.txt'\nposition   number     否    读取的起始位置，默认值为文件的起始位置\nlength     number     否    读取的长度，不填写则读取到文件结尾\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名      类型           说明\nbuffer   uint8array   读取的文件内容\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n301   文件不存在\n\n# 示例：\n\nfile.readarraybuffer({\n  uri: 'internal://files/work/demo',\n  position: 100,\n  length: 100,\n  success: function(data) {\n    console.log('buffer.length: ' + data.buffer.length)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.access(object)\n\n判断文件或目录是否存在\n\n# 参数：\n\n参数名        类型         必填   说明\nuri        string     是    目录或文件 uri\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.access({\n  uri: 'internal://files/test',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.mkdir(object)\n\n创建目录\n\n# 参数：\n\n参数名         类型         必填   说明\nuri         string     是    目录的 uri，不能是应用资源路径和 tmp 类型的 uri\nrecursive   boolean    否    是否递归创建该目录的上级目录后再创建该目录。默认 false\nsuccess     function   否    成功回调\nfail        function   否    失败回调\ncomplete    function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.mkdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# file.rmdir(object)\n\n删除目录\n\n# 参数：\n\n参数名         类型         必填   说明\nuri         string     是    目录的 uri，不能是应用资源路径和 tmp 类型的 uri\nrecursive   boolean    否    是否递归删除子文件和子目录。默认 false\nsuccess     function   否    成功回调\nfail        function   否    失败回调\ncomplete    function   否    执行结束后的回调\n\n# fail 返回错误代码：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nfile.rmdir({\n  uri: 'internal://files/dir/',\n  success: function(data) {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{cjk:!0}},{title:"数据存储 storage",frontmatter:{},regularPath:"/zh/features/data/storage.html",relativePath:"zh/features/data/storage.md",key:"v-6fbd0d74",path:"/zh/features/data/storage.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:19},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:59},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:158},{level:3,title:"storage.get(OBJECT)",slug:"storage-get-object",normalizedTitle:"storage.get(object)",charIndex:165},{level:3,title:"storage.set(OBJECT)",slug:"storage-set-object",normalizedTitle:"storage.set(object)",charIndex:664},{level:3,title:"storage.clear(OBJECT)",slug:"storage-clear-object",normalizedTitle:"storage.clear(object)",charIndex:1135},{level:3,title:"storage.delete(OBJECT)",slug:"storage-delete-object",normalizedTitle:"storage.delete(object)",charIndex:1488}],headersStr:"接口声明 导入模块 方法 storage.get(OBJECT) storage.set(OBJECT) storage.clear(OBJECT) storage.delete(OBJECT)",content:"# 数据存储 storage\n\n\n# 接口声明\n\n{ \"name\": \"system.storage\" }\n\n\n\n# 导入模块\n\nimport storage from '@system.storage' \n// 或 \nconst storage = require('@system.storage')\n\n\n\n# 方法\n\n\n# storage.get(OBJECT)\n\n读取存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nkey        String     是    索引\ndefault    String     否    如果 key 不存在，返回 default。如果 default 未指定，返回长度为 0 的空字符串\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\nkey 对应的存储内容\n\n# 示例：\n\nstorage.get({\n  key: 'A1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.set(OBJECT)\n\n修改存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nkey        String     是    索引\nvalue      String     否    新值。如果新值是长度为 0 的空字符串，会删除以 key 为索引的数据项\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# 示例：\n\nstorage.set({\n  key: 'A1',\n  value: 'V1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.clear(OBJECT)\n\n清空存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# 示例：\n\nstorage.clear({\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.delete(OBJECT)\n\n删除存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nkey        String     是    索引\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# 示例：\n\nstorage.delete({\n  key: 'A1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# 数据存储 storage\n\n\n# 接口声明\n\n{ \"name\": \"system.storage\" }\n\n\n\n# 导入模块\n\nimport storage from '@system.storage' \n// 或 \nconst storage = require('@system.storage')\n\n\n\n# 方法\n\n\n# storage.get(object)\n\n读取存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nkey        string     是    索引\ndefault    string     否    如果 key 不存在，返回 default。如果 default 未指定，返回长度为 0 的空字符串\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\nkey 对应的存储内容\n\n# 示例：\n\nstorage.get({\n  key: 'a1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.set(object)\n\n修改存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nkey        string     是    索引\nvalue      string     否    新值。如果新值是长度为 0 的空字符串，会删除以 key 为索引的数据项\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# 示例：\n\nstorage.set({\n  key: 'a1',\n  value: 'v1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.clear(object)\n\n清空存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# 示例：\n\nstorage.clear({\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# storage.delete(object)\n\n删除存储内容\n\n# 参数：\n\n参数名        类型         必填   说明\nkey        string     是    索引\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# 示例：\n\nstorage.delete({\n  key: 'a1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{cjk:!0}},{title:"应用配置 configuration",frontmatter:{},regularPath:"/zh/features/basic/configuration.html",relativePath:"zh/features/basic/configuration.md",key:"v-6deb5754",path:"/zh/features/basic/configuration.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:25},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:40},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:163},{level:3,title:"configuration.getLocale()",slug:"configuration-getlocale",normalizedTitle:"configuration.getlocale()",charIndex:172}],headersStr:"接口声明 导入模块 接口定义 configuration.getLocale()",content:"# 应用配置 configuration\n\n\n# 接口声明\n\n无需声明\n\n\n# 导入模块\n\nimport configuration from '@system.configuration' \n// 或 \nconst configuration = require('@system.configuration')\n\n\n\n# 接口定义\n\n\n# configuration.getLocale()\n\n获取应用当前的语言环境。默认使用系统的语言环境，会因为设置或系统语言环境改变而发生变化\n\n# 参数：\n\n无\n\n# 返回值：\n\n参数名               类型       说明\nlanguage          String   语言\ncountryOrRegion   String   国家或地区\n\n# 示例：\n\nconst locale = configuration.getLocale()\nconsole.log(locale.language)\n",normalizedContent:"# 应用配置 configuration\n\n\n# 接口声明\n\n无需声明\n\n\n# 导入模块\n\nimport configuration from '@system.configuration' \n// 或 \nconst configuration = require('@system.configuration')\n\n\n\n# 接口定义\n\n\n# configuration.getlocale()\n\n获取应用当前的语言环境。默认使用系统的语言环境，会因为设置或系统语言环境改变而发生变化\n\n# 参数：\n\n无\n\n# 返回值：\n\n参数名               类型       说明\nlanguage          string   语言\ncountryorregion   string   国家或地区\n\n# 示例：\n\nconst locale = configuration.getlocale()\nconsole.log(locale.language)\n",charsets:{cjk:!0}},{title:"数据请求 fetch",frontmatter:{},regularPath:"/zh/features/network/fetch.html",relativePath:"zh/features/network/fetch.md",key:"v-e7e10654",path:"/zh/features/network/fetch.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:17},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:55},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:146},{level:3,title:"fetch.fetch(OBJECT)",slug:"fetch-fetch-object",normalizedTitle:"fetch.fetch(object)",charIndex:155},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:3784}],headersStr:"接口声明 导入模块 接口定义 fetch.fetch(OBJECT) 支持明细",content:"# 数据请求 fetch\n\n\n# 接口声明\n\n{ \"name\": \"system.fetch\" }\n\n\n\n# 导入模块\n\nimport fetch from '@system.fetch' \n// 或 \nconst fetch = require('@system.fetch')\n\n\n\n# 接口定义\n\n\n# fetch.fetch(OBJECT)\n\n获取网络数据\n\n# 参数：\n\n参数名            类型                          必填   说明\nurl            String                      是    资源 url\ndata           String/Object/ArrayBuffer   否    请求的参数，可以是字符串，或者是 js 对象、arraybuffer 对象。参考 data与Content-Type关系\n                                                部分\nheader         Object                      否    请求的 header，会将其所有属性设置到请求的 header 部分。User-Agent\n                                                设置示例：{\"Accept-Encoding\": \"gzip, deflate\",\"Accept-Language\":\n                                                \"zh-CN,en-US;q=0.8,en;q=0.6\"}\nmethod         String                      否    默认为 GET，可以是：OPTIONS，GET，HEAD，POST，PUT，DELETE，TRACE，CONNECT\nresponseType   String                      否    支持返回类型是 text，json，file，arraybuffer，默认会根据服务器返回 header 中的\n                                                Content-Type 确定返回类型，详见 success返回值\nsuccess        Function                    否    成功返回的回调函数\nfail           Function                    否    失败的回调函数，可能会因为权限失败\ncomplete       Function                    否    结束的回调函数（调用成功、失败都会执行）\n\n# data 与 Content-Type 关系\n\nDATA          CONTENT-TYPE                                   说明\nString        不设置                                            Content-Type 默认为 text/plain，data 值作为请求的 body\nString        任意 Type                                        data 值作为请求的 body\nObject        不设置                                            Content-Type 默认为 application/x-www-form-urlencoded，data 按照\n                                                             url 规则进行 encode 拼接作为请求的 body\nObject        application/x-www-form-urlencoded              data 按照 url 规则进行 encode 拼接作为请求的 body\nObject        application/x-www-form-urlencoded 之外的任意 type   -\nArrayBuffer   不设置                                            Content-Type 默认为 application/octet-stream，data 值作为请求的 body\nArrayBuffer   任意 Type                                        data 值作为请求的 body\n\n# success 返回值：\n\n参数名       类型                           说明\ncode      Integer                      服务器状态 code\ndata      String/Object /ArrayBuffer   参考 responseType与success中data关系 部分\nheaders   Object                       服务器 response 的所有 header\n\n# responseType 与 success 中 data 关系：\n\nRESPONSETYPE   DATA          说明\n无              String        服务器返回的 header 中 type 是 text/*或\n                             application/json、application/javascript、application/xml，值是文本内容，否则是存储的临时文件的\n                             uri，临时文件如果是图片或者视频内容，可以将图片设置到 image\ntext           String        返回普通文本\njson           Object        返回 js 对象\nfile           String        返回存储的临时文件的 uri\narraybuffer    ArrayBuffer   返回 ArrayBuffer 对象\n\n# 示例：\n\nfetch.fetch({\n  url: 'http://www.example.com',\n  responseType: 'text',\n  success: function(response) {\n    console.log(`the status code of the response: ${response.code}`)\n    console.log(`the data of the response: ${response.data}`)\n    console.log(\n      `the headers of the response: ${JSON.stringify(response.headers)}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errMsg = ${data}`)\n    console.log(`handling fail, errCode = ${code}`)\n  }\n})\n\n// 我们也可以使用promise的方式处理回调\nfetch\n  .fetch({\n    url: 'http://www.example.com',\n    responseType: 'text'\n  })\n  .then(res => {\n    const result = res.data\n\n    console.log(`the status code of the response: ${result.code}`)\n    console.log(`the data of the response: ${result.data}`)\n    console.log(\n      `the headers of the response: ${JSON.stringify(result.headers)}`\n    )\n  })\n  .catch(error => {\n    console.log(`handling fail, errMsg = ${error.data}`)\n    console.log(`handling fail, errCode = ${error.code}`)\n  })\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持",normalizedContent:"# 数据请求 fetch\n\n\n# 接口声明\n\n{ \"name\": \"system.fetch\" }\n\n\n\n# 导入模块\n\nimport fetch from '@system.fetch' \n// 或 \nconst fetch = require('@system.fetch')\n\n\n\n# 接口定义\n\n\n# fetch.fetch(object)\n\n获取网络数据\n\n# 参数：\n\n参数名            类型                          必填   说明\nurl            string                      是    资源 url\ndata           string/object/arraybuffer   否    请求的参数，可以是字符串，或者是 js 对象、arraybuffer 对象。参考 data与content-type关系\n                                                部分\nheader         object                      否    请求的 header，会将其所有属性设置到请求的 header 部分。user-agent\n                                                设置示例：{\"accept-encoding\": \"gzip, deflate\",\"accept-language\":\n                                                \"zh-cn,en-us;q=0.8,en;q=0.6\"}\nmethod         string                      否    默认为 get，可以是：options，get，head，post，put，delete，trace，connect\nresponsetype   string                      否    支持返回类型是 text，json，file，arraybuffer，默认会根据服务器返回 header 中的\n                                                content-type 确定返回类型，详见 success返回值\nsuccess        function                    否    成功返回的回调函数\nfail           function                    否    失败的回调函数，可能会因为权限失败\ncomplete       function                    否    结束的回调函数（调用成功、失败都会执行）\n\n# data 与 content-type 关系\n\ndata          content-type                                   说明\nstring        不设置                                            content-type 默认为 text/plain，data 值作为请求的 body\nstring        任意 type                                        data 值作为请求的 body\nobject        不设置                                            content-type 默认为 application/x-www-form-urlencoded，data 按照\n                                                             url 规则进行 encode 拼接作为请求的 body\nobject        application/x-www-form-urlencoded              data 按照 url 规则进行 encode 拼接作为请求的 body\nobject        application/x-www-form-urlencoded 之外的任意 type   -\narraybuffer   不设置                                            content-type 默认为 application/octet-stream，data 值作为请求的 body\narraybuffer   任意 type                                        data 值作为请求的 body\n\n# success 返回值：\n\n参数名       类型                           说明\ncode      integer                      服务器状态 code\ndata      string/object /arraybuffer   参考 responsetype与success中data关系 部分\nheaders   object                       服务器 response 的所有 header\n\n# responsetype 与 success 中 data 关系：\n\nresponsetype   data          说明\n无              string        服务器返回的 header 中 type 是 text/*或\n                             application/json、application/javascript、application/xml，值是文本内容，否则是存储的临时文件的\n                             uri，临时文件如果是图片或者视频内容，可以将图片设置到 image\ntext           string        返回普通文本\njson           object        返回 js 对象\nfile           string        返回存储的临时文件的 uri\narraybuffer    arraybuffer   返回 arraybuffer 对象\n\n# 示例：\n\nfetch.fetch({\n  url: 'http://www.example.com',\n  responsetype: 'text',\n  success: function(response) {\n    console.log(`the status code of the response: ${response.code}`)\n    console.log(`the data of the response: ${response.data}`)\n    console.log(\n      `the headers of the response: ${json.stringify(response.headers)}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errmsg = ${data}`)\n    console.log(`handling fail, errcode = ${code}`)\n  }\n})\n\n// 我们也可以使用promise的方式处理回调\nfetch\n  .fetch({\n    url: 'http://www.example.com',\n    responsetype: 'text'\n  })\n  .then(res => {\n    const result = res.data\n\n    console.log(`the status code of the response: ${result.code}`)\n    console.log(`the data of the response: ${result.data}`)\n    console.log(\n      `the headers of the response: ${json.stringify(result.headers)}`\n    )\n  })\n  .catch(error => {\n    console.log(`handling fail, errmsg = ${error.data}`)\n    console.log(`handling fail, errcode = ${error.code}`)\n  })\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   支持\n小米手环 8 pro         不支持\nxiaomi watch s3    支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持",charsets:{cjk:!0}},{title:"通用语法",frontmatter:{},regularPath:"/zh/features/grammar.html",relativePath:"zh/features/grammar.md",key:"v-45a492d4",path:"/zh/features/grammar.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:66},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:185},{level:2,title:"接口 api 调用",slug:"接口-api-调用",normalizedTitle:"接口 api 调用",charIndex:306},{level:3,title:"同步 api 调用",slug:"同步-api-调用",normalizedTitle:"同步 api 调用",charIndex:377},{level:3,title:"异步 api 调用",slug:"异步-api-调用",normalizedTitle:"异步 api 调用",charIndex:444},{level:3,title:"订阅 / 取消订阅 api",slug:"订阅-取消订阅-api",normalizedTitle:"订阅 / 取消订阅 api",charIndex:1198},{level:2,title:"通用错误码",slug:"通用错误码",normalizedTitle:"通用错误码",charIndex:894}],headersStr:"接口声明 导入模块 接口 api 调用 同步 api 调用 异步 api 调用 订阅 / 取消订阅 api 通用错误码",content:"# 通用语法\n\n框架提供各种接口来获取应用的基本信息或者调用系统能力，每个接口包含若干 api 来执行具体的任务。接口使用前需要进行接口声明、模块导入，然后才能调用该接口下定义的若干 api。\n\n\n# 接口声明\n\n在 manifest.json 文件的 features 字段下进行声明，例如：\n\n[{ \"name\": \"system.network\" }]\n\n\n\n# 导入模块\n\n使用接口前，需要在代码里导入接口模块，例如：\n\nimport network from '@system.network'\n// 或\nconst network = require('@system.network')\n\n\n\n# 接口 api 调用\n\n接口提供的 api 的调用方式大概有以下几种：\n\n * 同步 api\n * 异步 api\n * 订阅类 api\n\n\n# 同步 api 调用\n\n如果 api 没有返回值，一般会定义成同步 api，直接调用即可，例如：\n\naudio.play()\n\n\n\n# 异步 api 调用\n\n如果 api 有返回值，一般会定义成异步 api 的形式，这类 api 除了普通参数，还有“success \\ fail \\ complete“这三个通用参数——分别是 api 执行“成功 \\ 失败 \\ 完成“后的回调方法，调用时可以传入这三个参数来获取 api 执行成功的返回值或进行执行失败 \\ 完成后的处理，这三个通用参数的说明如下：\n\n名称         方法参数   参数类型     参数值                                     说明\nsuccess    data   any      api 执行的返回值，详见接口使用文档                     api 执行成功后触发\nfail       data   any      api 执行错误信息内容，一般是字符串，也可能是其他类型，详见接口使用文档   api 执行失败后触发\n           code   number   api 执行错误码，详见通用错误码                       \ncomplete   -      -        -                                       api 执行完成后触发\n\n代码示例：\n\nstorage.get({\n  key: 'A1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 订阅 / 取消订阅 api\n\n订阅类 api 不会立即返回结果，这类 api 需要开发者传入回调函数作为参数，该回调函数会在 api 完成时或者事件变化时被触发，可以执行多次。该通用回调函数参数说明如下：\n\n名称        方法参数   参数类型     参数值                               说明\nsuccess   data   any      api 执行的返回值，详见接口使用文档               api 调用成功或事件变更时触发，可能会触发多次\nfail      data   any      错误信息内容，一般是字符串，也可能是其他类型，详见接口使用文档   api 执行失败时触发。一旦触发该回调函数，success不会再次被调用，接口调用结束\n          code   number   api 执行错误码，详见通用错误码                  \n\n代码示例：\n\ngeolocation.subscribe({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 通用错误码\n\n所有接口的 api 在执行出现错误时，会返回统一定义的通用错误码或者 api 自己定义的特殊错误码。这里对通用错误码进行说明如下：\n\nCODE   定义\n200    系统通用错误，所有系统未知异常发生时抛出。比如框架申请内存空间失败等\n202    参数错误，调用时未按照 api 定义进行正确的传参\n203    该功能不支持\n204    请求超时\n300    I/O 错误",normalizedContent:"# 通用语法\n\n框架提供各种接口来获取应用的基本信息或者调用系统能力，每个接口包含若干 api 来执行具体的任务。接口使用前需要进行接口声明、模块导入，然后才能调用该接口下定义的若干 api。\n\n\n# 接口声明\n\n在 manifest.json 文件的 features 字段下进行声明，例如：\n\n[{ \"name\": \"system.network\" }]\n\n\n\n# 导入模块\n\n使用接口前，需要在代码里导入接口模块，例如：\n\nimport network from '@system.network'\n// 或\nconst network = require('@system.network')\n\n\n\n# 接口 api 调用\n\n接口提供的 api 的调用方式大概有以下几种：\n\n * 同步 api\n * 异步 api\n * 订阅类 api\n\n\n# 同步 api 调用\n\n如果 api 没有返回值，一般会定义成同步 api，直接调用即可，例如：\n\naudio.play()\n\n\n\n# 异步 api 调用\n\n如果 api 有返回值，一般会定义成异步 api 的形式，这类 api 除了普通参数，还有“success \\ fail \\ complete“这三个通用参数——分别是 api 执行“成功 \\ 失败 \\ 完成“后的回调方法，调用时可以传入这三个参数来获取 api 执行成功的返回值或进行执行失败 \\ 完成后的处理，这三个通用参数的说明如下：\n\n名称         方法参数   参数类型     参数值                                     说明\nsuccess    data   any      api 执行的返回值，详见接口使用文档                     api 执行成功后触发\nfail       data   any      api 执行错误信息内容，一般是字符串，也可能是其他类型，详见接口使用文档   api 执行失败后触发\n           code   number   api 执行错误码，详见通用错误码                       \ncomplete   -      -        -                                       api 执行完成后触发\n\n代码示例：\n\nstorage.get({\n  key: 'a1',\n  success: function(data) {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 订阅 / 取消订阅 api\n\n订阅类 api 不会立即返回结果，这类 api 需要开发者传入回调函数作为参数，该回调函数会在 api 完成时或者事件变化时被触发，可以执行多次。该通用回调函数参数说明如下：\n\n名称        方法参数   参数类型     参数值                               说明\nsuccess   data   any      api 执行的返回值，详见接口使用文档               api 调用成功或事件变更时触发，可能会触发多次\nfail      data   any      错误信息内容，一般是字符串，也可能是其他类型，详见接口使用文档   api 执行失败时触发。一旦触发该回调函数，success不会再次被调用，接口调用结束\n          code   number   api 执行错误码，详见通用错误码                  \n\n代码示例：\n\ngeolocation.subscribe({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 通用错误码\n\n所有接口的 api 在执行出现错误时，会返回统一定义的通用错误码或者 api 自己定义的特殊错误码。这里对通用错误码进行说明如下：\n\ncode   定义\n200    系统通用错误，所有系统未知异常发生时抛出。比如框架申请内存空间失败等\n202    参数错误，调用时未按照 api 定义进行正确的传参\n203    该功能不支持\n204    请求超时\n300    i/o 错误",charsets:{cjk:!0}},{title:"网络访问",frontmatter:{},regularPath:"/zh/features/network/",relativePath:"zh/features/network/README.md",key:"v-c0a10c6e",path:"/zh/features/network/",headersStr:null,content:"# 网络访问\n\n提供远程数据请求和本地蓝牙连接设备之间通信的能力。\n\n * 数据请求\n * 设备通信\n * 下载\n * 上传",normalizedContent:"# 网络访问\n\n提供远程数据请求和本地蓝牙连接设备之间通信的能力。\n\n * 数据请求\n * 设备通信\n * 下载\n * 上传",charsets:{cjk:!0}},{title:"设备通信 interconnect",frontmatter:{},regularPath:"/zh/features/network/interconnect.html",relativePath:"zh/features/network/interconnect.md",key:"v-3237d27c",path:"/zh/features/network/interconnect.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:128},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:173},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:290},{level:3,title:"interconnect.instance()",slug:"interconnect-instance",normalizedTitle:"interconnect.instance()",charIndex:299},{level:3,title:"connect.getReadyState(OBJECT)",slug:"connect-getreadystate-object",normalizedTitle:"connect.getreadystate(object)",charIndex:466},{level:3,title:"connect.diagnosis(OBJECT)",slug:"connect-diagnosis-object",normalizedTitle:"connect.diagnosis(object)",charIndex:1070},{level:3,title:"connect.send(OBJECT)",slug:"connect-send-object",normalizedTitle:"connect.send(object)",charIndex:1853},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:2383},{level:3,title:"connect.onmessage",slug:"connect-onmessage",normalizedTitle:"connect.onmessage",charIndex:2390},{level:3,title:"connect.onopen",slug:"connect-onopen",normalizedTitle:"connect.onopen",charIndex:2568},{level:3,title:"connect.onclose",slug:"connect-onclose",normalizedTitle:"connect.onclose",charIndex:2789},{level:3,title:"connect.onerror",slug:"connect-onerror",normalizedTitle:"connect.onerror",charIndex:3020},{level:2,title:"开发注意事项",slug:"开发注意事项",normalizedTitle:"开发注意事项",charIndex:3322}],headersStr:"接口声明 导入模块 接口定义 interconnect.instance() connect.getReadyState(OBJECT) connect.diagnosis(OBJECT) connect.send(OBJECT) 事件 connect.onmessage connect.onopen connect.onclose connect.onerror 开发注意事项",content:"# 设备通信 interconnect\n\n用于和搭配使用的手机 app 进行通信，收发手机 app 数据。 通信连接会自动建立，应用内不用关心连接的创建和销毁，但是可以注册回调函数来接收连接状态改变的信息，以便于进行相应处理，例如对用户进行提示。\n\n\n# 接口声明\n\n{ \"name\": \"system.interconnect\" }\n\n\n\n# 导入模块\n\nimport interconnect from '@system.interconnect'\n// 或\nconst interconnect = require('@system.interconnect')\n\n\n\n# 接口定义\n\n\n# interconnect.instance()\n\n获取连接对象，在 app 中以单例形式存在，后续的数据收发都是基于这个连接对象\n\n# 参数：\n\n无\n\n# 返回值：\n\ninterconnect 的链接实例 connect 对象\n\n# 示例：\n\nconst connect = interconnect.instance()\n\n\n\n# connect.getReadyState(OBJECT)\n\n获取 App 连接状态\n\n# OBJECT参数：\n\n参数名       类型         必填   说明\nsuccess   Function   否    成功回调\nfail      Function   否    失败回调\n\n# success 返回值：\n\n属性值      类型       说明\nstatus   Number   1：连接成功，2：连接断开\n\n# fail 返回值：\n\n参数值    类型       说明\ndata   String   错误信息\ncode   Number   错误码\n\n# 错误码说明：\n\n支持通用错误码\n\n错误码    说明\n1006   连接断开\n\n# 示例：\n\nconnect.getReadyState({\n  success: (data) => {\n    if (data.status === 1) {\n      console.log('连接成功')\n    } else if (data.status === 2) {\n      console.log('连接失败')\n    }\n  },\n  fail: (data, code) => {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# connect.diagnosis(OBJECT)\n\n诊断手表应用和对端应用的连接情况，如果连接成功则返回ok，连接失败则返回失败原因。如果调用时正在连接则等待连接结束后再返回最终状态。\n\n# Obejct参数：\n\n属性        类型         必填   说明\ntimeout   Number     否    等待诊断的超时时间，单位毫秒\n                          默认值：10000ms\nsuccess   Function   否    成功回调\nfail      Function   否    失败回调\n\n# success 返回值：\n\n属性值      类型       说明\nstatus   Number   0: OK 链接成功\n                  204：CONNECT_TIMEOUT 连接超时\n                  1001：APP_UNINSTALLED 对端应用未安装\n                  1000：OTHERS 其他链接错误\n\n# fail 返回值：\n\n参数值    类型       说明\ndata   String   错误信息\ncode   Number   错误码\n\n# 错误码说明：\n\n支持通用错误码\n\n# 示例：\n\nconnect.diagnosis({\n  success: function (data) {\n    console.log(`handling success, version = ${data.status}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# connect.send(OBJECT)\n\n发送数据到手机 App 端\n\n# Object参数：\n\n参数名       类型         必填   说明\ndata      Object     否    发送的数据\nsuccess   Function   否    成功回调\nfail      Function   否    失败回调\n\n# success 返回值：\n\n无\n\n# fail 返回值：\n\n参数值    类型       说明\ndata   String   错误信息\ncode   Number   错误码\n\n# 错误码说明：\n\n支持通用错误码\n\n错误码    说明\n204    链接超时\n1006   连接断开\n\n# 示例：\n\nconnect.send({\n  data: {},\n  success: ()=>{\n    console.log(`handling success`)\n  },\n  fail: (data, code)=> {\n    console.log(`handling fail, errMsg = ${data.data}, errCode = ${data.code}`)\n  }\n})\n\n\n\n# 事件\n\n\n# connect.onmessage\n\n接收手机 App 端数据\n\n# 回调参数：\n\n参数名    类型       说明\ndata   String   接收的数据\n\n# 示例：\n\nconnect.onmessage = (data) => {\n  console.log(`received message: ${data.data}`)\n}\n\n\n\n# connect.onopen\n\n连接打开时的回调函数\n\n# 回调参数：\n\n参数名             类型        说明\nisReconnected   Boolean   是否是重新连接\n\n# 示例：\n\nconnect.onOpen = function (data) {\n  console.log('connection opened isReconnected: ', data.isReconnected)\n}\n\n\n\n# connect.onclose\n\n连接关闭时的回调函数\n\n# 回调参数：\n\n参数名    类型       说明\ncode   Number   链接关闭状态码\ndata   String   连接关闭返回的数据\n\n# 示例：\n\nconnect.onclose = (data) => {\n  console.log(`connection closed, reason = ${data.data}, code = ${data.code}`)\n}\n\n\n\n# connect.onerror\n\n连接出错时的回调函数\n\n# 回调参数：\n\n参数名    类型       说明\ncode   Number   错误码，见错误码说明\ndata   String   错误信息\n\n# 错误码说明：\n\n支持通用错误码\n\n错误码    说明\n1000   未知错误\n1001   手机 APP 未安装\n1006   连接断开\n\n# 示例：\n\nconnect.onerror = (data)=> {\n  console.log(`connection error, errMsg = ${data.data}, errCode = ${data.code}`)\n}\n\n\n\n# 开发注意事项\n\ninterconnect 通信前提要保证快应用和三方应用安卓端两者的包名及签名保持一致。\n\n * 保证快应用 manifest.json 里 package 字段与 需要接入的三方app 安卓端包名一致。\n * 快应用签名需要使用三方应用安卓端签名，可以从.jks中提取证书及私钥，方法如下：\n\n 1. 先将 jks 转换成 p12，执行以下命令，输入相应密码后，在同级目录下生成对应的 p12 格式文件。\n\nkeytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype jks -deststoretype pkcs12\n\n\n 2. 再将 p12 转 pem，执行以下命令，输入上一步设置的 p12 文件密码后，在同级目录下生成对应的 pem 格式文件。\n\nopenssl pkcs12 -nodes -in keystore.p12 -out keystore.pem\n\n\n 3. 从 pem 格式文件中复制出私钥和证书：\n    把-----BEGIN PRIVATE KEY-----到-----END PRIVATE KEY-----的内容复制到private.pem中。\n    把-----BEGIN CERTIFICATE-----到-----END CERTIFICATE-----的内容复制到certificate.pem中。\n\n * 如果本地没有安装Openssl或想要更简便的操作流程，我们提供了在线签名生成工具。该工具是一个基于WebAssembly编写的Web应用，它可以在浏览器环境中直接生成 pem 格式的私钥和证书，无需将签名文件和密码上传到远程服务器，充分保证了用户的隐私安全。使用在线签名生成工具的步骤如下：\n   \n   1. 上传 p12 文件并输入对应的密码；\n   \n   2. 点击“生成签名”按钮，等待签名生成成功弹窗出现；\n   \n   3. 点击“下载签名”按钮，下载 pem 格式的私钥和证书；\n\n * 快应用需要将上述生成的私钥 private.pem 和证书 certificate.pem 放在快应用根目录 /sign/debug 和 /sign/release 下出包测试。\n\n * 在真机测试的时候建议先输入包名uninstall老包再安装新包，可以观察桌面图标卸载的话会删除应用图标保证彻底替换。\n\n参考附录\n\n 1. 小米穿戴第三方APP能力开放接口文档：点击下载\n 2. interconnect开发测试demo：点击下载",normalizedContent:"# 设备通信 interconnect\n\n用于和搭配使用的手机 app 进行通信，收发手机 app 数据。 通信连接会自动建立，应用内不用关心连接的创建和销毁，但是可以注册回调函数来接收连接状态改变的信息，以便于进行相应处理，例如对用户进行提示。\n\n\n# 接口声明\n\n{ \"name\": \"system.interconnect\" }\n\n\n\n# 导入模块\n\nimport interconnect from '@system.interconnect'\n// 或\nconst interconnect = require('@system.interconnect')\n\n\n\n# 接口定义\n\n\n# interconnect.instance()\n\n获取连接对象，在 app 中以单例形式存在，后续的数据收发都是基于这个连接对象\n\n# 参数：\n\n无\n\n# 返回值：\n\ninterconnect 的链接实例 connect 对象\n\n# 示例：\n\nconst connect = interconnect.instance()\n\n\n\n# connect.getreadystate(object)\n\n获取 app 连接状态\n\n# object参数：\n\n参数名       类型         必填   说明\nsuccess   function   否    成功回调\nfail      function   否    失败回调\n\n# success 返回值：\n\n属性值      类型       说明\nstatus   number   1：连接成功，2：连接断开\n\n# fail 返回值：\n\n参数值    类型       说明\ndata   string   错误信息\ncode   number   错误码\n\n# 错误码说明：\n\n支持通用错误码\n\n错误码    说明\n1006   连接断开\n\n# 示例：\n\nconnect.getreadystate({\n  success: (data) => {\n    if (data.status === 1) {\n      console.log('连接成功')\n    } else if (data.status === 2) {\n      console.log('连接失败')\n    }\n  },\n  fail: (data, code) => {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# connect.diagnosis(object)\n\n诊断手表应用和对端应用的连接情况，如果连接成功则返回ok，连接失败则返回失败原因。如果调用时正在连接则等待连接结束后再返回最终状态。\n\n# obejct参数：\n\n属性        类型         必填   说明\ntimeout   number     否    等待诊断的超时时间，单位毫秒\n                          默认值：10000ms\nsuccess   function   否    成功回调\nfail      function   否    失败回调\n\n# success 返回值：\n\n属性值      类型       说明\nstatus   number   0: ok 链接成功\n                  204：connect_timeout 连接超时\n                  1001：app_uninstalled 对端应用未安装\n                  1000：others 其他链接错误\n\n# fail 返回值：\n\n参数值    类型       说明\ndata   string   错误信息\ncode   number   错误码\n\n# 错误码说明：\n\n支持通用错误码\n\n# 示例：\n\nconnect.diagnosis({\n  success: function (data) {\n    console.log(`handling success, version = ${data.status}`)\n  },\n  fail: function (data, code) {\n    console.log(`handling fail, code = ${code}`)\n  },\n})\n\n\n\n# connect.send(object)\n\n发送数据到手机 app 端\n\n# object参数：\n\n参数名       类型         必填   说明\ndata      object     否    发送的数据\nsuccess   function   否    成功回调\nfail      function   否    失败回调\n\n# success 返回值：\n\n无\n\n# fail 返回值：\n\n参数值    类型       说明\ndata   string   错误信息\ncode   number   错误码\n\n# 错误码说明：\n\n支持通用错误码\n\n错误码    说明\n204    链接超时\n1006   连接断开\n\n# 示例：\n\nconnect.send({\n  data: {},\n  success: ()=>{\n    console.log(`handling success`)\n  },\n  fail: (data, code)=> {\n    console.log(`handling fail, errmsg = ${data.data}, errcode = ${data.code}`)\n  }\n})\n\n\n\n# 事件\n\n\n# connect.onmessage\n\n接收手机 app 端数据\n\n# 回调参数：\n\n参数名    类型       说明\ndata   string   接收的数据\n\n# 示例：\n\nconnect.onmessage = (data) => {\n  console.log(`received message: ${data.data}`)\n}\n\n\n\n# connect.onopen\n\n连接打开时的回调函数\n\n# 回调参数：\n\n参数名             类型        说明\nisreconnected   boolean   是否是重新连接\n\n# 示例：\n\nconnect.onopen = function (data) {\n  console.log('connection opened isreconnected: ', data.isreconnected)\n}\n\n\n\n# connect.onclose\n\n连接关闭时的回调函数\n\n# 回调参数：\n\n参数名    类型       说明\ncode   number   链接关闭状态码\ndata   string   连接关闭返回的数据\n\n# 示例：\n\nconnect.onclose = (data) => {\n  console.log(`connection closed, reason = ${data.data}, code = ${data.code}`)\n}\n\n\n\n# connect.onerror\n\n连接出错时的回调函数\n\n# 回调参数：\n\n参数名    类型       说明\ncode   number   错误码，见错误码说明\ndata   string   错误信息\n\n# 错误码说明：\n\n支持通用错误码\n\n错误码    说明\n1000   未知错误\n1001   手机 app 未安装\n1006   连接断开\n\n# 示例：\n\nconnect.onerror = (data)=> {\n  console.log(`connection error, errmsg = ${data.data}, errcode = ${data.code}`)\n}\n\n\n\n# 开发注意事项\n\ninterconnect 通信前提要保证快应用和三方应用安卓端两者的包名及签名保持一致。\n\n * 保证快应用 manifest.json 里 package 字段与 需要接入的三方app 安卓端包名一致。\n * 快应用签名需要使用三方应用安卓端签名，可以从.jks中提取证书及私钥，方法如下：\n\n 1. 先将 jks 转换成 p12，执行以下命令，输入相应密码后，在同级目录下生成对应的 p12 格式文件。\n\nkeytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype jks -deststoretype pkcs12\n\n\n 2. 再将 p12 转 pem，执行以下命令，输入上一步设置的 p12 文件密码后，在同级目录下生成对应的 pem 格式文件。\n\nopenssl pkcs12 -nodes -in keystore.p12 -out keystore.pem\n\n\n 3. 从 pem 格式文件中复制出私钥和证书：\n    把-----begin private key-----到-----end private key-----的内容复制到private.pem中。\n    把-----begin certificate-----到-----end certificate-----的内容复制到certificate.pem中。\n\n * 如果本地没有安装openssl或想要更简便的操作流程，我们提供了在线签名生成工具。该工具是一个基于webassembly编写的web应用，它可以在浏览器环境中直接生成 pem 格式的私钥和证书，无需将签名文件和密码上传到远程服务器，充分保证了用户的隐私安全。使用在线签名生成工具的步骤如下：\n   \n   1. 上传 p12 文件并输入对应的密码；\n   \n   2. 点击“生成签名”按钮，等待签名生成成功弹窗出现；\n   \n   3. 点击“下载签名”按钮，下载 pem 格式的私钥和证书；\n\n * 快应用需要将上述生成的私钥 private.pem 和证书 certificate.pem 放在快应用根目录 /sign/debug 和 /sign/release 下出包测试。\n\n * 在真机测试的时候建议先输入包名uninstall老包再安装新包，可以观察桌面图标卸载的话会删除应用图标保证彻底替换。\n\n参考附录\n\n 1. 小米穿戴第三方app能力开放接口文档：点击下载\n 2. interconnect开发测试demo：点击下载",charsets:{cjk:!0}},{title:"下载 request",frontmatter:{},regularPath:"/zh/features/network/request.html",relativePath:"zh/features/network/request.md",key:"v-9f8cb514",path:"/zh/features/network/request.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:17},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:57},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:156},{level:3,title:"request.download(OBJECT)",slug:"request-download-object",normalizedTitle:"request.download(object)",charIndex:165},{level:3,title:"request.onDownloadComplete(OBJECT)",slug:"request-ondownloadcomplete-object",normalizedTitle:"request.ondownloadcomplete(object)",charIndex:815},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:1499}],headersStr:"接口声明 导入模块 接口定义 request.download(OBJECT) request.onDownloadComplete(OBJECT) 支持明细",content:"# 下载 request\n\n\n# 接口声明\n\n{ \"name\": \"system.request\" }\n\n\n\n# 导入模块\n\nimport request from '@system.request' \n// 或 \nconst request = require('@system.request')\n\n\n\n# 接口定义\n\n\n# request.download(OBJECT)\n\n下载文件\n\n# 参数：\n\n参数名        类型         必填   说明\nurl        String     是    资源 url\nheader     String     否    请求的 header，会将其所有属性设置到请求的 header 部分\nfilename   String     否    下载文件名。默认从网络请求或 url 中获取\nsuccess    Function   否    成功返回的回调函数\nfail       Function   否    失败的回调函数\ncomplete   Function   否    结束的回调函数（调用成功、失败都会执行）\n\n# success 返回值：\n\n参数名     类型       说明\ntoken   String   下载的 token，根据此 token 获取下载状态\n\n# 示例：\n\nrequest.download({\n  url: 'http://www.example.com',\n  success: function(data) {\n    console.log(`handling success${data.token}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# request.onDownloadComplete(OBJECT)\n\n监听下载任务\n\n# 参数：\n\n参数名        类型         必填   说明\ntoken      String     是    download 接口返回的 token\nsuccess    Function   否    成功返回的回调函数\nfail       Function   否    失败的回调函数\ncomplete   Function   否    结束的回调函数（调用成功、失败都会执行）\n\n# success 返回值：\n\n参数名   类型       说明\nuri   String   下载文件的\n               Uri（默认情况下该文件处于应用缓存目录。如果文件类型为图片或者视频且要求用户可以在相册等应用内查看，则需要将该文件转存至公共目录，参考media接口中的方法实现即可）\n\n# fail 返回错误代码：\n\n错误码    说明\n1000   下载失败\n1001   下载任务不存在\n\n# 示例：\n\nrequest.onDownloadComplete({\n  token: '123',\n  success: function(data) {\n    console.log(`handling success${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持",normalizedContent:"# 下载 request\n\n\n# 接口声明\n\n{ \"name\": \"system.request\" }\n\n\n\n# 导入模块\n\nimport request from '@system.request' \n// 或 \nconst request = require('@system.request')\n\n\n\n# 接口定义\n\n\n# request.download(object)\n\n下载文件\n\n# 参数：\n\n参数名        类型         必填   说明\nurl        string     是    资源 url\nheader     string     否    请求的 header，会将其所有属性设置到请求的 header 部分\nfilename   string     否    下载文件名。默认从网络请求或 url 中获取\nsuccess    function   否    成功返回的回调函数\nfail       function   否    失败的回调函数\ncomplete   function   否    结束的回调函数（调用成功、失败都会执行）\n\n# success 返回值：\n\n参数名     类型       说明\ntoken   string   下载的 token，根据此 token 获取下载状态\n\n# 示例：\n\nrequest.download({\n  url: 'http://www.example.com',\n  success: function(data) {\n    console.log(`handling success${data.token}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# request.ondownloadcomplete(object)\n\n监听下载任务\n\n# 参数：\n\n参数名        类型         必填   说明\ntoken      string     是    download 接口返回的 token\nsuccess    function   否    成功返回的回调函数\nfail       function   否    失败的回调函数\ncomplete   function   否    结束的回调函数（调用成功、失败都会执行）\n\n# success 返回值：\n\n参数名   类型       说明\nuri   string   下载文件的\n               uri（默认情况下该文件处于应用缓存目录。如果文件类型为图片或者视频且要求用户可以在相册等应用内查看，则需要将该文件转存至公共目录，参考media接口中的方法实现即可）\n\n# fail 返回错误代码：\n\n错误码    说明\n1000   下载失败\n1001   下载任务不存在\n\n# 示例：\n\nrequest.ondownloadcomplete({\n  token: '123',\n  success: function(data) {\n    console.log(`handling success${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   支持\n小米手环 8 pro         不支持\nxiaomi watch s3    支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持",charsets:{cjk:!0}},{title:"上传 uploadtask",frontmatter:{},regularPath:"/zh/features/network/uploadtask.html",relativePath:"zh/features/network/uploadtask.md",key:"v-1cd28bd2",path:"/zh/features/network/uploadtask.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:20},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:63},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:174},{level:3,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:183},{level:3,title:"UploadTask uploadtask.uploadFile(OBJECT)",slug:"uploadtask-uploadtask-uploadfile-object",normalizedTitle:"uploadtask uploadtask.uploadfile(object)",charIndex:190},{level:2,title:"方法",slug:"方法-2",normalizedTitle:"方法",charIndex:183},{level:3,title:"UploadTask.abort()",slug:"uploadtask-abort",normalizedTitle:"uploadtask.abort()",charIndex:936},{level:3,title:"UploadTask.onProgressUpdate(callback)",slug:"uploadtask-onprogressupdate-callback",normalizedTitle:"uploadtask.onprogressupdate(callback)",charIndex:967},{level:3,title:"UploadTask.offProgressUpdate(function callback)",slug:"uploadtask-offprogressupdate-function-callback",normalizedTitle:"uploadtask.offprogressupdate(function callback)",charIndex:1314},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:2521}],headersStr:"接口声明 导入模块 接口定义 方法 UploadTask uploadtask.uploadFile(OBJECT) 方法 UploadTask.abort() UploadTask.onProgressUpdate(callback) UploadTask.offProgressUpdate(function callback) 支持明细",content:'# 上传 uploadtask\n\n\n# 接口声明\n\n{ "name": "system.uploadtask" }\n\n\n\n# 导入模块\n\nimport uploadtask from \'@system.uploadtask\' \n// 或 \nconst uploadtask = require(\'@system.uploadtask\')\n\n\n\n# 接口定义\n\n\n# 方法\n\n\n# UploadTask uploadtask.uploadFile(OBJECT)\n\n创建一个上传请求，每次成功调用 uploadtask.uploadFile 将返回本次请求的 UploadTask 实例\n\n# 参数：\n\n参数名        类型         必填   说明\nurl        String     是    开发者服务器接口地址\nfilePath   String     是    要上传文件资源的路径 (本地路径)\nname       String     是    文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容\nheader     Object     否    请求的 header，会将其所有属性设置到请求的 header 部分\nformData   Object     否    HTTP 请求中其他额外的 form data\ntimeout    Number     否    超时时间，单位为毫秒\nsuccess    Function   否    成功返回的回调函数\nfail       Function   否    失败的回调函数\ncomplete   Function   否    结束的回调函数（调用成功、失败都会执行）\n\n# success 返回值：\n\n参数名          类型        说明\nstatusCode   Integer   服务器状态 code\ndata         String    开发者服务器返回的数据\nheaders      Object    服务器 response 的所有 header\n\n\n# UploadTask\n\n\n# 方法\n\n\n# UploadTask.abort()\n\n中断上传任务\n\n\n# UploadTask.onProgressUpdate(callback)\n\n监听上传进度变化事件\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   Function   是    上传进度变化事件的回调函数\n\n# callback 返回值：\n\n参数名                        类型       说明\nprogress                   Number   上传进度百分比\ntotalBytesSent             Number   已经上传的数据长度，单位 Bytes\ntotalBytesExpectedToSend   Number   预期需要上传的数据总长度，单位 Bytes\n\n\n# UploadTask.offProgressUpdate(function callback)\n\n取消监听上传进度变化事件。callback 是可选的，如果不传则取消所有通过 onProgressUpdate 监听的上传进度变化事件\n\n# 示例：\n\nconst retUploadTask = uploadtask.uploadFile({\n  url: \'http://www.example.com\',\n  filePath: "internal://mass/download/test.png",\n  name: "testImg",\n  success: function(res){\n    console.log("Upload success.resp = " + JSON.stringify(res))\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errMsg = ${data)}`)\n    console.log(`handling fail, errCode = ${code}`)\n  }\n})\n// 中断请求任务\nretUploadTask.abort()\n\n// 监听上传进度事件\nretUploadTask.onProgressUpdate(res => {\n  console.log(\n    `listening upload progress update event, progressUpdate data = ${JSON.stringify(res)}`\n  )\n})\n\n// 取消监听上传进度事件\nretUploadTask.offProgressUpdate()\n\n\n取消特定的上传进度事件\n\nfunction cb(res) {\n  console.log(\n    `listening for upload progress update event 1, progressUpdate data = ${JSON.stringify(\n      res\n    )}`\n  )\n}\n\n// 此次监听会被取消\nretUploadTask.onProgressUpdate(cb)\n\n// event2 监听依然有效，不会被取消\nretUploadTask.onProgressUpdate((res) => {\n  console.log(\n    `listening for upload progress update event 2, progressUpdate data = ${JSON.stringify(\n      res\n    )}`\n  )\n})\n\nretUploadTask.offProgressUpdate(cb)\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   不支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持',normalizedContent:'# 上传 uploadtask\n\n\n# 接口声明\n\n{ "name": "system.uploadtask" }\n\n\n\n# 导入模块\n\nimport uploadtask from \'@system.uploadtask\' \n// 或 \nconst uploadtask = require(\'@system.uploadtask\')\n\n\n\n# 接口定义\n\n\n# 方法\n\n\n# uploadtask uploadtask.uploadfile(object)\n\n创建一个上传请求，每次成功调用 uploadtask.uploadfile 将返回本次请求的 uploadtask 实例\n\n# 参数：\n\n参数名        类型         必填   说明\nurl        string     是    开发者服务器接口地址\nfilepath   string     是    要上传文件资源的路径 (本地路径)\nname       string     是    文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容\nheader     object     否    请求的 header，会将其所有属性设置到请求的 header 部分\nformdata   object     否    http 请求中其他额外的 form data\ntimeout    number     否    超时时间，单位为毫秒\nsuccess    function   否    成功返回的回调函数\nfail       function   否    失败的回调函数\ncomplete   function   否    结束的回调函数（调用成功、失败都会执行）\n\n# success 返回值：\n\n参数名          类型        说明\nstatuscode   integer   服务器状态 code\ndata         string    开发者服务器返回的数据\nheaders      object    服务器 response 的所有 header\n\n\n# uploadtask\n\n\n# 方法\n\n\n# uploadtask.abort()\n\n中断上传任务\n\n\n# uploadtask.onprogressupdate(callback)\n\n监听上传进度变化事件\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   function   是    上传进度变化事件的回调函数\n\n# callback 返回值：\n\n参数名                        类型       说明\nprogress                   number   上传进度百分比\ntotalbytessent             number   已经上传的数据长度，单位 bytes\ntotalbytesexpectedtosend   number   预期需要上传的数据总长度，单位 bytes\n\n\n# uploadtask.offprogressupdate(function callback)\n\n取消监听上传进度变化事件。callback 是可选的，如果不传则取消所有通过 onprogressupdate 监听的上传进度变化事件\n\n# 示例：\n\nconst retuploadtask = uploadtask.uploadfile({\n  url: \'http://www.example.com\',\n  filepath: "internal://mass/download/test.png",\n  name: "testimg",\n  success: function(res){\n    console.log("upload success.resp = " + json.stringify(res))\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, errmsg = ${data)}`)\n    console.log(`handling fail, errcode = ${code}`)\n  }\n})\n// 中断请求任务\nretuploadtask.abort()\n\n// 监听上传进度事件\nretuploadtask.onprogressupdate(res => {\n  console.log(\n    `listening upload progress update event, progressupdate data = ${json.stringify(res)}`\n  )\n})\n\n// 取消监听上传进度事件\nretuploadtask.offprogressupdate()\n\n\n取消特定的上传进度事件\n\nfunction cb(res) {\n  console.log(\n    `listening for upload progress update event 1, progressupdate data = ${json.stringify(\n      res\n    )}`\n  )\n}\n\n// 此次监听会被取消\nretuploadtask.onprogressupdate(cb)\n\n// event2 监听依然有效，不会被取消\nretuploadtask.onprogressupdate((res) => {\n  console.log(\n    `listening for upload progress update event 2, progressupdate data = ${json.stringify(\n      res\n    )}`\n  )\n})\n\nretuploadtask.offprogressupdate(cb)\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   不支持\n小米手环 8 pro         不支持\nxiaomi watch s3    支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持',charsets:{cjk:!0}},{title:"音频 audio",frontmatter:{},regularPath:"/zh/features/other/audio.html",relativePath:"zh/features/other/audio.md",key:"v-130d5996",path:"/zh/features/other/audio.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:15},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:53},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:144},{level:3,title:"audio.play()",slug:"audio-play",normalizedTitle:"audio.play()",charIndex:151},{level:3,title:"audio.pause()",slug:"audio-pause",normalizedTitle:"audio.pause()",charIndex:207},{level:3,title:"audio.stop()",slug:"audio-stop",normalizedTitle:"audio.stop()",charIndex:265},{level:3,title:"audio.getPlayState(OBJECT)",slug:"audio-getplaystate-object",normalizedTitle:"audio.getplaystate(object)",charIndex:338},{level:2,title:"属性",slug:"属性",normalizedTitle:"属性",charIndex:1343},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:2668}],headersStr:"接口声明 导入模块 方法 audio.play() audio.pause() audio.stop() audio.getPlayState(OBJECT) 属性 事件",content:"# 音频 audio\n\n\n# 接口声明\n\n{ \"name\": \"system.audio\" }\n\n\n\n# 导入模块\n\nimport audio from '@system.audio' \n// 或 \nconst audio = require('@system.audio')\n\n\n\n# 方法\n\n\n# audio.play()\n\n开始播放音频\n\n# 参数\n\n无\n\n# 示例：\n\naudio.play()\n\n\n\n# audio.pause()\n\n暂停播放音频\n\n# 参数\n\n无\n\n# 示例：\n\naudio.pause()\n\n\n\n# audio.stop()\n\n停止音频播放，可以通过 play 重新播放音频\n\n# 参数\n\n无\n\n# 示例：\n\naudio.stop()\n\n\n\n# audio.getPlayState(OBJECT)\n\n获取当前播放状态数据\n\n# 参数\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值           类型       说明\nstate         String   播放状态,分别为'play'，'pause'，'stop'\nsrc           String   当前播放的音频媒体 uri，停止时返回空字符串\ncurrentTime   Number   当前音频的当前进度，单位秒，停止时返回-1\npercent       Number   当前播放进度百分比，范围0-100\nautoplay      Boolen   当前音频是否在自动播放\nloop          Boolen   当前音频是否在循环播放\nvolume        Number   当前音频的音量，默认当前系统媒体音量，音量变化范围[0.0,1.0]\nmuted         Boolen   当前音频是否在静音播放\nduration      Number   音频的播放时长，单位秒，未知返回 NaN\n\n# 示例：\n\naudio.getPlayState({\n  success: function(data) {\n    console.log(`handling success: state: ${data.state},src:${data.src},currentTime:${data.currentTime},autoplay:${data.autoplay},loop:${data.loop},volume: ${data.volume},muted:${data.muted},notificationVisible:${data.notificationVisible}`)\n  },\n  fail: function(data, code) {\n    console.log('handling fail, code=' + code)\n  }\n})\n\n\n\n# 属性\n\n名称            参数类型                                                     是否可读   是否可写   必填   描述\nsrc           String                                                   是      是      是    播放的音频媒体 uri\ncurrentTime   Number                                                   是      是      否    音频的当前进度，单位秒，对值设置可以调整播放进度\nduration      Number                                                   是      否      否    音频的播放时长，单位秒，未知返回 NaN\nautoplay      Boolean                                                  是      是      否    音频是否自动播放，默认 false\nloop          Boolean                                                  是      是      否    音频是否循环播放，默认 false\nvolume        Number                                                   是      是      否    音频的音量，默认当前系统媒体音量，音量变化范围[0.0,1.0]\nmuted         Boolean                                                  是      是      否    音频是否静音，默认 false\nstreamType    String                                                   是      否      否    使用音频的类型，可能的值有 music、voicecall，值为 music 时使用扬声器播放，voicecall\n                                                                                          时使用听筒播放（手表、手环设备不支持此配置），默认为 music\nmeta          Object<{title: string, artist: string, album: string}>   否      是      否    音频元数据信息，包括歌名、歌手、专辑名\n\n# 示例：\n\n// let currentTime = audio.currentTime\naudio.currentTime = 5\n\n\n\n# 事件\n\n名称               描述\nplay             在调用 play 方法后或者 autoplay 为 true 时的回调事件。被动触发场景举例：1. 蓝牙耳机控制播放音频\npause            在调用 pause 方法后的回调事件。被动触发场景举例：1. 音频焦点被抢占，例如：播放音频时收到来电；2.\n                 蓝牙耳机控制暂停音频\nstop             在调用 stop 方法后的回调事件。被动触发场景举例：1. 正在打电话时播放音频\nloadeddata       第一次获取到音频数据的回调事件\nended            播放结束时的回调事件\ndurationchange   播放时长变化时的回调事件\nerror            播放发生错误时的回调事件\n\n# 示例：\n\naudio.onplay = function() {\n  console.log(`audio starts to play`)\n}\naudio.onplay = null\n",normalizedContent:"# 音频 audio\n\n\n# 接口声明\n\n{ \"name\": \"system.audio\" }\n\n\n\n# 导入模块\n\nimport audio from '@system.audio' \n// 或 \nconst audio = require('@system.audio')\n\n\n\n# 方法\n\n\n# audio.play()\n\n开始播放音频\n\n# 参数\n\n无\n\n# 示例：\n\naudio.play()\n\n\n\n# audio.pause()\n\n暂停播放音频\n\n# 参数\n\n无\n\n# 示例：\n\naudio.pause()\n\n\n\n# audio.stop()\n\n停止音频播放，可以通过 play 重新播放音频\n\n# 参数\n\n无\n\n# 示例：\n\naudio.stop()\n\n\n\n# audio.getplaystate(object)\n\n获取当前播放状态数据\n\n# 参数\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值           类型       说明\nstate         string   播放状态,分别为'play'，'pause'，'stop'\nsrc           string   当前播放的音频媒体 uri，停止时返回空字符串\ncurrenttime   number   当前音频的当前进度，单位秒，停止时返回-1\npercent       number   当前播放进度百分比，范围0-100\nautoplay      boolen   当前音频是否在自动播放\nloop          boolen   当前音频是否在循环播放\nvolume        number   当前音频的音量，默认当前系统媒体音量，音量变化范围[0.0,1.0]\nmuted         boolen   当前音频是否在静音播放\nduration      number   音频的播放时长，单位秒，未知返回 nan\n\n# 示例：\n\naudio.getplaystate({\n  success: function(data) {\n    console.log(`handling success: state: ${data.state},src:${data.src},currenttime:${data.currenttime},autoplay:${data.autoplay},loop:${data.loop},volume: ${data.volume},muted:${data.muted},notificationvisible:${data.notificationvisible}`)\n  },\n  fail: function(data, code) {\n    console.log('handling fail, code=' + code)\n  }\n})\n\n\n\n# 属性\n\n名称            参数类型                                                     是否可读   是否可写   必填   描述\nsrc           string                                                   是      是      是    播放的音频媒体 uri\ncurrenttime   number                                                   是      是      否    音频的当前进度，单位秒，对值设置可以调整播放进度\nduration      number                                                   是      否      否    音频的播放时长，单位秒，未知返回 nan\nautoplay      boolean                                                  是      是      否    音频是否自动播放，默认 false\nloop          boolean                                                  是      是      否    音频是否循环播放，默认 false\nvolume        number                                                   是      是      否    音频的音量，默认当前系统媒体音量，音量变化范围[0.0,1.0]\nmuted         boolean                                                  是      是      否    音频是否静音，默认 false\nstreamtype    string                                                   是      否      否    使用音频的类型，可能的值有 music、voicecall，值为 music 时使用扬声器播放，voicecall\n                                                                                          时使用听筒播放（手表、手环设备不支持此配置），默认为 music\nmeta          object<{title: string, artist: string, album: string}>   否      是      否    音频元数据信息，包括歌名、歌手、专辑名\n\n# 示例：\n\n// let currenttime = audio.currenttime\naudio.currenttime = 5\n\n\n\n# 事件\n\n名称               描述\nplay             在调用 play 方法后或者 autoplay 为 true 时的回调事件。被动触发场景举例：1. 蓝牙耳机控制播放音频\npause            在调用 pause 方法后的回调事件。被动触发场景举例：1. 音频焦点被抢占，例如：播放音频时收到来电；2.\n                 蓝牙耳机控制暂停音频\nstop             在调用 stop 方法后的回调事件。被动触发场景举例：1. 正在打电话时播放音频\nloadeddata       第一次获取到音频数据的回调事件\nended            播放结束时的回调事件\ndurationchange   播放时长变化时的回调事件\nerror            播放发生错误时的回调事件\n\n# 示例：\n\naudio.onplay = function() {\n  console.log(`audio starts to play`)\n}\naudio.onplay = null\n",charsets:{cjk:!0}},{title:"其他",frontmatter:{},regularPath:"/zh/features/other/",relativePath:"zh/features/other/README.md",key:"v-603ef105",path:"/zh/features/other/",headersStr:null,content:"# 其他\n\n其他能力。\n\n * 音频\n * 弹窗",normalizedContent:"# 其他\n\n其他能力。\n\n * 音频\n * 弹窗",charsets:{cjk:!0}},{title:"权限定义",frontmatter:{},regularPath:"/zh/features/permission.html",relativePath:"zh/features/permission.md",key:"v-0d931942",path:"/zh/features/permission.html",headersStr:null,content:"# 权限定义\n\n某些接口在调用时需要用户进行相应的授权，例如录音功能等。所以在使用前需要进行权限声明。",normalizedContent:"# 权限定义\n\n某些接口在调用时需要用户进行相应的授权，例如录音功能等。所以在使用前需要进行权限声明。",charsets:{cjk:!0}},{title:"安全",frontmatter:{},regularPath:"/zh/features/security/",relativePath:"zh/features/security/README.md",key:"v-72cc1575",path:"/zh/features/security/",headersStr:null,content:"# 安全\n\n提供安全、加密相关能力。\n\n * 密码算法",normalizedContent:"# 安全\n\n提供安全、加密相关能力。\n\n * 密码算法",charsets:{cjk:!0}},{title:"密码算法 crypto",frontmatter:{},regularPath:"/zh/features/security/crypto.html",relativePath:"zh/features/security/crypto.md",key:"v-b2ba5494",path:"/zh/features/security/crypto.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:18},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:57},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:152},{level:3,title:"crypto.hashDigest(OBJECT)",slug:"crypto-hashdigest-object",normalizedTitle:"crypto.hashdigest(object)",charIndex:161},{level:3,title:"crypto.hmacDigest(OBJECT)",slug:"crypto-hmacdigest-object",normalizedTitle:"crypto.hmacdigest(object)",charIndex:573},{level:3,title:"crypto.sign(OBJECT)",slug:"crypto-sign-object",normalizedTitle:"crypto.sign(object)",charIndex:1251},{level:3,title:"crypto.verify(OBJECT)",slug:"crypto-verify-object",normalizedTitle:"crypto.verify(object)",charIndex:2172},{level:3,title:"crypto.encrypt(OBJECT)",slug:"crypto-encrypt-object",normalizedTitle:"crypto.encrypt(object)",charIndex:3085},{level:3,title:"crypto.decrypt(OBJECT)",slug:"crypto-decrypt-object",normalizedTitle:"crypto.decrypt(object)",charIndex:4416},{level:3,title:"crypto.btoa(STRING)",slug:"crypto-btoa-string",normalizedTitle:"crypto.btoa(string)",charIndex:5767},{level:3,title:"crypto.atob(STRING)",slug:"crypto-atob-string",normalizedTitle:"crypto.atob(string)",charIndex:5995},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:6224}],headersStr:"接口声明 导入模块 接口定义 crypto.hashDigest(OBJECT) crypto.hmacDigest(OBJECT) crypto.sign(OBJECT) crypto.verify(OBJECT) crypto.encrypt(OBJECT) crypto.decrypt(OBJECT) crypto.btoa(STRING) crypto.atob(STRING) 支持明细",content:"# 密码算法 crypto\n\n\n# 接口声明\n\n{ \"name\": \"system.crypto\" }\n\n\n\n# 导入模块\n\nimport crypto from '@system.crypto' \n// 或 \nconst crypto = require('@system.crypto')\n\n\n\n# 接口定义\n\n\n# crypto.hashDigest(OBJECT)\n\n创建数据的哈希摘要\n\n# 参数：\n\n参数名    类型                  必填   说明\ndata   String/Uint8Array   否    待计算内容，和uri二者必须有一个\nuri    String              否    待计算文件地址，和data二者必须有一个\nalgo   String              否    算法 默认： SHA256\n                                可选：MD5， SHA1，SHA256，SHA512\n\n# 返回值：\n\n类型       说明\nString   经过计算生成的摘要内容\n\n# 示例：\n\nconst digest = crypto.hashDigest({\n  data: 'hello',\n  algo: 'MD5'\n})\n\n\n\n# crypto.hmacDigest(OBJECT)\n\n创建加密 HMAC 摘要\n\n# 参数：\n\n参数名        类型         必填   说明\ndata       String     是    待计算数据\nalgo       String     否    算法 默认： SHA256\n                           可选：MD5， SHA1，SHA256，SHA512\nkey        String     是    密钥\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    完成回调\n\n# success 返回值 Object：\n\n参数值    类型       说明\ndata   String   摘要\n\n# 示例：\n\ncrypto.hmacDigest({\n  data: 'hello',\n  algo: 'SHA256',\n  key: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.hmacDigest success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.hmacDigest fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.sign(OBJECT)\n\n用于生成签名\n\n# 参数：\n\n参数名          类型                  必填   说明\ndata         String/Uint8Array   否    被签名文本，和uri二者必须有一个\nuri          String              否    被签名文件地址，和data二者必须有一个\nalgo         String              否    签名算法，默认：'RSA-SHA256'\n                                      可选：RSA-MD5， RSA-SHA1，RSA-SHA256，RSA-SHA512\nprivateKey   String              是    私钥\nsuccess      Function            否    成功回调\nfail         Function            否    失败回调\ncomplete     Function            否    完成回调\n\n# success 返回值 Object：\n\n参数值    类型                  说明\ndata   String/Uint8Array   如果输入为字符串，则返回经过base64编码的字符串；否则返回Uint8Array；如果只传uri，默认返回string\n\n# 示例：\n\ncrypto.sign({\n  data: 'hello',\n  algo: 'RSA-SHA256',\n  privateKey: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.sign success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.sign fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.verify(OBJECT)\n\n用于验证签名\n\n# 参数：\n\n参数名         类型                  必填   说明\ndata        String/Uint8Array   否    被签名文本，和uri二者必须有一个\nuri         String              否    被签名文件地址，和data二者必须有一个\nalgo        String              否    签名算法，默认：'RSA-SHA256'\n                                     可选：RSA-MD5， RSA-SHA1，RSA-SHA256，RSA-SHA512\nsignature   String/Uint8Array   是    签名\npublicKey   String              是    公钥\nsuccess     Function            否    成功回调\nfail        Function            否    失败回调\ncomplete    Function            否    完成回调\n\n# success 返回值 Boolean：\n\n类型        说明\nBoolean   校验结果，通过为true，不通过为false\n\n# 示例：\n\ncrypto.verify({\n  data: 'hello',\n  algo: 'RSA-SHA256',\n  publicKey: 'public key',\n  signature: 'signature',\n  success: function(data) {\n    console.log(`### crypto.verify success:`, data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.verify fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.encrypt(OBJECT)\n\n加密\n\n# 参数：\n\n参数名        类型                  必填   说明\ndata       String/Uint8Array   是    待加密数据\nalgo       String              否    加密算法 默认： RSA\n                                    可选：RSA， AES\nkey        String              是    加密使用到的密钥，经过 base64 编码后生成的字符串\noptions    Object              否    加密参数\nsuccess    Function            否    成功回调\nfail       Function            否    失败回调\ncomplete   Function            否    完成回调\n\n# RSA 参数options：\n\n参数名              类型       必填   说明\ntransformation   String   否    RSA 算法的加密模式和填充项，默认为\"RSA/None/PKCS1Padding\"\n\n# AES 参数options：\n\n参数名              类型       必填   说明\ntransformation   String   否    AES 算法的加密模式和填充项，默认为\"AES/CBC/PKCS7Padding\"\niv               String   否    AES 加解密的初始向量，经过 base64 编码后的字符串，默认值为 key 值\nivOffset         Number   否    AES 加解密的初始向量偏移，整数，默认值为 0\nivLen            Number   否    AES 加解密的初始向量字节长度，整数，默认值为 16\n\n# success 返回值 Object：\n\n参数值    类型                  说明\ndata   String/Uint8Array   如果输入为字符串，则返回经过base64编码的字符串；否则返回Uint8Array\n\n# 示例：\n\ncrypto.encrypt({\n  //待加密的文本内容\n  data: 'hello',\n  //base64编码后的加密公钥\n  key: crypto.btoa('KEYKEYKEYKEYKEYK'),\n  algo: 'AES',\n  success: function(res) {\n    console.log(`### crypto.encrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.encrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.decrypt(OBJECT)\n\n解密\n\n# 参数：\n\n参数名        类型                  必填   说明\ndata       String/Uint8Array   是    待解密数据\nalgo       String              否    解密算法 默认： RSA\n                                    可选：RSA， AES\nkey        String              是    加密或解密使用到的密钥，经过 base64 编码后生成的字符串\noptions    Object              否    解密参数\nsuccess    Function            否    成功回调\nfail       Function            否    失败回调\ncomplete   Function            否    完成回调\n\n# RSA 参数options：\n\n参数名              类型       必填   说明\ntransformation   String   否    RSA 算法的加密模式和填充项，默认为\"RSA/None/PKCS1Padding\"\n\n# AES 参数options：\n\n参数名              类型       必填   说明\ntransformation   String   否    AES 算法的加密模式和填充项，默认为\"AES/CBC/PKCS7Padding\"\niv               String   否    AES 加解密的初始向量，经过 base64 编码后的字符串，默认值为 key 值\nivOffset         Number   否    AES 加解密的初始向量偏移，整数，默认值为 0\nivLen            Number   否    AES 加解密的初始向量字节长度，整数，默认值为 16\n\n# success 返回值 Object：\n\n参数值    类型                  说明\ndata   String/Uint8Array   如果输入为字符串，则返回经过base64编码的字符串；否则返回Uint8Array\n\n# 示例：\n\ncrypto.decrypt({\n  //待解密的内容\n  data: 'WB96uM08PfYIHu5G1p6YwA==',\n  //base64编码后的加密公钥\n  key: crypto.btoa('KEYKEYKEYKEYKEYK'),\n  algo: 'AES',\n  success: function(res) {\n    console.log(`### crypto.decrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.decrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.btoa(STRING)\n\n从String对象中创建一个 base-64 编码的 ASCII 字符串，其中字符串中的每个字符都被视为一个二进制数据字节\n\n# 参数：\n\n类型       必填   说明\nString   是    待编码文本\n\n# 返回值 String：\n\n类型       说明\nString   经过编码之后的结果\n\n# 示例：\n\nconst encodeData = crypto.btoa('hello')\n\n\n\n# crypto.atob(STRING)\n\n对经过 base-64 编码的字符串进行解码\n\n# 参数：\n\n类型       必填   说明\nString   是    待解码文本\n\n# 返回值 String：\n\n类型       说明\nString   经过解码之后的结果\n\n# 示例：\n\nconst encodeString = crypto.btoa('hello')\nconst res = crypto.atob(encodeString)\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   不支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持",normalizedContent:"# 密码算法 crypto\n\n\n# 接口声明\n\n{ \"name\": \"system.crypto\" }\n\n\n\n# 导入模块\n\nimport crypto from '@system.crypto' \n// 或 \nconst crypto = require('@system.crypto')\n\n\n\n# 接口定义\n\n\n# crypto.hashdigest(object)\n\n创建数据的哈希摘要\n\n# 参数：\n\n参数名    类型                  必填   说明\ndata   string/uint8array   否    待计算内容，和uri二者必须有一个\nuri    string              否    待计算文件地址，和data二者必须有一个\nalgo   string              否    算法 默认： sha256\n                                可选：md5， sha1，sha256，sha512\n\n# 返回值：\n\n类型       说明\nstring   经过计算生成的摘要内容\n\n# 示例：\n\nconst digest = crypto.hashdigest({\n  data: 'hello',\n  algo: 'md5'\n})\n\n\n\n# crypto.hmacdigest(object)\n\n创建加密 hmac 摘要\n\n# 参数：\n\n参数名        类型         必填   说明\ndata       string     是    待计算数据\nalgo       string     否    算法 默认： sha256\n                           可选：md5， sha1，sha256，sha512\nkey        string     是    密钥\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    完成回调\n\n# success 返回值 object：\n\n参数值    类型       说明\ndata   string   摘要\n\n# 示例：\n\ncrypto.hmacdigest({\n  data: 'hello',\n  algo: 'sha256',\n  key: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.hmacdigest success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.hmacdigest fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.sign(object)\n\n用于生成签名\n\n# 参数：\n\n参数名          类型                  必填   说明\ndata         string/uint8array   否    被签名文本，和uri二者必须有一个\nuri          string              否    被签名文件地址，和data二者必须有一个\nalgo         string              否    签名算法，默认：'rsa-sha256'\n                                      可选：rsa-md5， rsa-sha1，rsa-sha256，rsa-sha512\nprivatekey   string              是    私钥\nsuccess      function            否    成功回调\nfail         function            否    失败回调\ncomplete     function            否    完成回调\n\n# success 返回值 object：\n\n参数值    类型                  说明\ndata   string/uint8array   如果输入为字符串，则返回经过base64编码的字符串；否则返回uint8array；如果只传uri，默认返回string\n\n# 示例：\n\ncrypto.sign({\n  data: 'hello',\n  algo: 'rsa-sha256',\n  privatekey: 'a secret',\n  success: function(res) {\n    console.log(`### crypto.sign success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.sign fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.verify(object)\n\n用于验证签名\n\n# 参数：\n\n参数名         类型                  必填   说明\ndata        string/uint8array   否    被签名文本，和uri二者必须有一个\nuri         string              否    被签名文件地址，和data二者必须有一个\nalgo        string              否    签名算法，默认：'rsa-sha256'\n                                     可选：rsa-md5， rsa-sha1，rsa-sha256，rsa-sha512\nsignature   string/uint8array   是    签名\npublickey   string              是    公钥\nsuccess     function            否    成功回调\nfail        function            否    失败回调\ncomplete    function            否    完成回调\n\n# success 返回值 boolean：\n\n类型        说明\nboolean   校验结果，通过为true，不通过为false\n\n# 示例：\n\ncrypto.verify({\n  data: 'hello',\n  algo: 'rsa-sha256',\n  publickey: 'public key',\n  signature: 'signature',\n  success: function(data) {\n    console.log(`### crypto.verify success:`, data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.verify fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.encrypt(object)\n\n加密\n\n# 参数：\n\n参数名        类型                  必填   说明\ndata       string/uint8array   是    待加密数据\nalgo       string              否    加密算法 默认： rsa\n                                    可选：rsa， aes\nkey        string              是    加密使用到的密钥，经过 base64 编码后生成的字符串\noptions    object              否    加密参数\nsuccess    function            否    成功回调\nfail       function            否    失败回调\ncomplete   function            否    完成回调\n\n# rsa 参数options：\n\n参数名              类型       必填   说明\ntransformation   string   否    rsa 算法的加密模式和填充项，默认为\"rsa/none/pkcs1padding\"\n\n# aes 参数options：\n\n参数名              类型       必填   说明\ntransformation   string   否    aes 算法的加密模式和填充项，默认为\"aes/cbc/pkcs7padding\"\niv               string   否    aes 加解密的初始向量，经过 base64 编码后的字符串，默认值为 key 值\nivoffset         number   否    aes 加解密的初始向量偏移，整数，默认值为 0\nivlen            number   否    aes 加解密的初始向量字节长度，整数，默认值为 16\n\n# success 返回值 object：\n\n参数值    类型                  说明\ndata   string/uint8array   如果输入为字符串，则返回经过base64编码的字符串；否则返回uint8array\n\n# 示例：\n\ncrypto.encrypt({\n  //待加密的文本内容\n  data: 'hello',\n  //base64编码后的加密公钥\n  key: crypto.btoa('keykeykeykeykeyk'),\n  algo: 'aes',\n  success: function(res) {\n    console.log(`### crypto.encrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.encrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.decrypt(object)\n\n解密\n\n# 参数：\n\n参数名        类型                  必填   说明\ndata       string/uint8array   是    待解密数据\nalgo       string              否    解密算法 默认： rsa\n                                    可选：rsa， aes\nkey        string              是    加密或解密使用到的密钥，经过 base64 编码后生成的字符串\noptions    object              否    解密参数\nsuccess    function            否    成功回调\nfail       function            否    失败回调\ncomplete   function            否    完成回调\n\n# rsa 参数options：\n\n参数名              类型       必填   说明\ntransformation   string   否    rsa 算法的加密模式和填充项，默认为\"rsa/none/pkcs1padding\"\n\n# aes 参数options：\n\n参数名              类型       必填   说明\ntransformation   string   否    aes 算法的加密模式和填充项，默认为\"aes/cbc/pkcs7padding\"\niv               string   否    aes 加解密的初始向量，经过 base64 编码后的字符串，默认值为 key 值\nivoffset         number   否    aes 加解密的初始向量偏移，整数，默认值为 0\nivlen            number   否    aes 加解密的初始向量字节长度，整数，默认值为 16\n\n# success 返回值 object：\n\n参数值    类型                  说明\ndata   string/uint8array   如果输入为字符串，则返回经过base64编码的字符串；否则返回uint8array\n\n# 示例：\n\ncrypto.decrypt({\n  //待解密的内容\n  data: 'wb96um08pfyihu5g1p6ywa==',\n  //base64编码后的加密公钥\n  key: crypto.btoa('keykeykeykeykeyk'),\n  algo: 'aes',\n  success: function(res) {\n    console.log(`### crypto.decrypt success:`, res.data)\n  },\n  fail: function(data, code) {\n    console.log(`### crypto.decrypt fail ### ${code}: ${data}`)\n  }\n})\n\n\n\n# crypto.btoa(string)\n\n从string对象中创建一个 base-64 编码的 ascii 字符串，其中字符串中的每个字符都被视为一个二进制数据字节\n\n# 参数：\n\n类型       必填   说明\nstring   是    待编码文本\n\n# 返回值 string：\n\n类型       说明\nstring   经过编码之后的结果\n\n# 示例：\n\nconst encodedata = crypto.btoa('hello')\n\n\n\n# crypto.atob(string)\n\n对经过 base-64 编码的字符串进行解码\n\n# 参数：\n\n类型       必填   说明\nstring   是    待解码文本\n\n# 返回值 string：\n\n类型       说明\nstring   经过解码之后的结果\n\n# 示例：\n\nconst encodestring = crypto.btoa('hello')\nconst res = crypto.atob(encodestring)\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   不支持\n小米手环 8 pro         不支持\nxiaomi watch s3    支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持",charsets:{cjk:!0}},{title:"系统能力",frontmatter:{},regularPath:"/zh/features/system/",relativePath:"zh/features/system/README.md",key:"v-6565b015",path:"/zh/features/system/",headersStr:null,content:"# 系统能力\n\n提供一些系统能力。\n\n * 网络信息\n * 振动\n * 屏幕亮度\n * 录音\n * 地理位置\n * 传感器\n * 事件\n * 电量信息\n * 系统音量\n * 解压缩",normalizedContent:"# 系统能力\n\n提供一些系统能力。\n\n * 网络信息\n * 振动\n * 屏幕亮度\n * 录音\n * 地理位置\n * 传感器\n * 事件\n * 电量信息\n * 系统音量\n * 解压缩",charsets:{cjk:!0}},{title:"闹钟 alarm",frontmatter:{},regularPath:"/zh/features/system/alarm.html",relativePath:"zh/features/system/alarm.md",key:"v-313eaafe",path:"/zh/features/system/alarm.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:15},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:53},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:144},{level:3,title:"alarm.setAlarm (OBJECT)",slug:"alarm-setalarm-object",normalizedTitle:"alarm.setalarm (object)",charIndex:153},{level:3,title:"alarm.getProvider()",slug:"alarm-getprovider",normalizedTitle:"alarm.getprovider()",charIndex:1229}],headersStr:"接口声明 导入模块 接口定义 alarm.setAlarm (OBJECT) alarm.getProvider()",content:"# 闹钟 alarm\n\n\n# 接口声明\n\n{ \"name\": \"system.alarm\" }\n\n\n\n# 导入模块\n\nimport alarm from '@system.alarm' \n// 或 \nconst alarm = require('@system.alarm')\n\n\n\n# 接口定义\n\n\n# alarm.setAlarm (OBJECT)\n\n设置闹钟，每次添加弹出提示框，同意后调用接口添加\n\n# 参数\n\n参数名        类型         必填   说明\nhour       Number     是    设置起闹小时[0，23]\nminute     Number     是    设置起闹分钟[0，59]\nmessage    String     否    闹钟名,建议长度不超过 10 字符,以保证最佳显示效果\nvibrate    Boolean    否    是否振动，默认 true\ndays       Array      否    重复周期\n                           默认是一次性闹钟\n                           [0,1,2,3,4,5,6] 每天\n                           [0,1,2,3,4]周一到周五\n                           [0,6]（0 表示周一 6 表示周日）\nringtone   String     否    默认铃声随系统，文件路径为数据文件或应用内的资源\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调（调用成功、失败都会执行）\n\n# fail 返回错误代码：\n\n错误码   说明\n201   用户拒绝\n202   参数错误\n300   I/O 错误\n\n# 示例\n\nalarm.setAlarm({\n    hour:18,\n    minute: 20,\n    message: '闹钟1',\n    days: [4],\n    ringtone: 'internal://mass/test/test.mp3',\n    success: function() {\n        console.log('handling success')\n    },\n    fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n    },\n    complete: function() {\n        console.log('handling complete')\n    }\n}\n\n\n\n# alarm.getProvider()\n\n获取服务提供商\n\n# 参数：\n\n无\n\n# 返回值:\n\n字符串，服务提供商的代号，如厂商的英文品牌名称，假如无此服务则返回空字符串\n\n# 示例\n\nconsole.log(alarm.getProvider())\n",normalizedContent:"# 闹钟 alarm\n\n\n# 接口声明\n\n{ \"name\": \"system.alarm\" }\n\n\n\n# 导入模块\n\nimport alarm from '@system.alarm' \n// 或 \nconst alarm = require('@system.alarm')\n\n\n\n# 接口定义\n\n\n# alarm.setalarm (object)\n\n设置闹钟，每次添加弹出提示框，同意后调用接口添加\n\n# 参数\n\n参数名        类型         必填   说明\nhour       number     是    设置起闹小时[0，23]\nminute     number     是    设置起闹分钟[0，59]\nmessage    string     否    闹钟名,建议长度不超过 10 字符,以保证最佳显示效果\nvibrate    boolean    否    是否振动，默认 true\ndays       array      否    重复周期\n                           默认是一次性闹钟\n                           [0,1,2,3,4,5,6] 每天\n                           [0,1,2,3,4]周一到周五\n                           [0,6]（0 表示周一 6 表示周日）\nringtone   string     否    默认铃声随系统，文件路径为数据文件或应用内的资源\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调（调用成功、失败都会执行）\n\n# fail 返回错误代码：\n\n错误码   说明\n201   用户拒绝\n202   参数错误\n300   i/o 错误\n\n# 示例\n\nalarm.setalarm({\n    hour:18,\n    minute: 20,\n    message: '闹钟1',\n    days: [4],\n    ringtone: 'internal://mass/test/test.mp3',\n    success: function() {\n        console.log('handling success')\n    },\n    fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n    },\n    complete: function() {\n        console.log('handling complete')\n    }\n}\n\n\n\n# alarm.getprovider()\n\n获取服务提供商\n\n# 参数：\n\n无\n\n# 返回值:\n\n字符串，服务提供商的代号，如厂商的英文品牌名称，假如无此服务则返回空字符串\n\n# 示例\n\nconsole.log(alarm.getprovider())\n",charsets:{cjk:!0}},{title:"屏幕亮度 brightness",frontmatter:{},regularPath:"/zh/features/system/brightness.html",relativePath:"zh/features/system/brightness.md",key:"v-2e6d3dd6",path:"/zh/features/system/brightness.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:22},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:65},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:176},{level:3,title:"brightness.getValue(OBJECT)",slug:"brightness-getvalue-object",normalizedTitle:"brightness.getvalue(object)",charIndex:185},{level:3,title:"brightness.setValue(OBJECT)",slug:"brightness-setvalue-object",normalizedTitle:"brightness.setvalue(object)",charIndex:648},{level:3,title:"brightness.getMode(OBJECT)",slug:"brightness-getmode-object",normalizedTitle:"brightness.getmode(object)",charIndex:1069},{level:3,title:"brightness.setMode(OBJECT)",slug:"brightness-setmode-object",normalizedTitle:"brightness.setmode(object)",charIndex:1535},{level:3,title:"brightness.setKeepScreenOn(OBJECT)",slug:"brightness-setkeepscreenon-object",normalizedTitle:"brightness.setkeepscreenon(object)",charIndex:1960}],headersStr:"接口声明 导入模块 接口定义 brightness.getValue(OBJECT) brightness.setValue(OBJECT) brightness.getMode(OBJECT) brightness.setMode(OBJECT) brightness.setKeepScreenOn(OBJECT)",content:"# 屏幕亮度 brightness\n\n\n# 接口声明\n\n{ \"name\": \"system.brightness\" }\n\n\n\n# 导入模块\n\nimport brightness from '@system.brightness' \n// 或 \nconst brightness = require('@system.brightness')\n\n\n\n# 接口定义\n\n\n# brightness.getValue(OBJECT)\n\n获得当前屏幕亮度值\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值     类型        说明\nvalue   Integer   屏幕亮度，取值范围 0-255\n\n# 示例：\n\nbrightness.getValue({\n  success: function(data) {\n    console.log(`handling success, value = ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setValue(OBJECT)\n\n设置当前屏幕亮度值\n\n# 参数：\n\n参数名        类型         必填   说明\nvalue      Integer    是    屏幕亮度，取值范围 0-255\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# 示例：\n\nbrightness.setValue({\n  value: 100,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.getMode(OBJECT)\n\n获得当前屏幕亮度模式\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值    类型        说明\nmode   Integer   0 为手动调节屏幕亮度，1 为自动调节屏幕亮度\n\n# 示例：\n\nbrightness.getMode({\n  success: function(data) {\n    console.log(`handling success, mode = ${data.mode}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setMode(OBJECT)\n\n设置当前屏幕亮度模式\n\n# 参数：\n\n参数名        类型         必填   说明\nmode       Integer    是    0 为手动调节屏幕亮度，1 为自动调节屏幕亮度\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# 示例：\n\nbrightness.setMode({\n  mode: 1,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setKeepScreenOn(OBJECT)\n\n设置是否保持常亮状态\n\n# 参数：\n\n参数名            类型         必填   说明\nkeepScreenOn   Boolean    是    是否保持屏幕常亮\nsuccess        Function   否    成功回调\nfail           Function   否    失败回调\ncomplete       Function   否    执行结束后的回调\n\n# 示例：\n\nbrightness.setKeepScreenOn({\n  keepScreenOn: true,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# 屏幕亮度 brightness\n\n\n# 接口声明\n\n{ \"name\": \"system.brightness\" }\n\n\n\n# 导入模块\n\nimport brightness from '@system.brightness' \n// 或 \nconst brightness = require('@system.brightness')\n\n\n\n# 接口定义\n\n\n# brightness.getvalue(object)\n\n获得当前屏幕亮度值\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值     类型        说明\nvalue   integer   屏幕亮度，取值范围 0-255\n\n# 示例：\n\nbrightness.getvalue({\n  success: function(data) {\n    console.log(`handling success, value = ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setvalue(object)\n\n设置当前屏幕亮度值\n\n# 参数：\n\n参数名        类型         必填   说明\nvalue      integer    是    屏幕亮度，取值范围 0-255\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# 示例：\n\nbrightness.setvalue({\n  value: 100,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.getmode(object)\n\n获得当前屏幕亮度模式\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值    类型        说明\nmode   integer   0 为手动调节屏幕亮度，1 为自动调节屏幕亮度\n\n# 示例：\n\nbrightness.getmode({\n  success: function(data) {\n    console.log(`handling success, mode = ${data.mode}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setmode(object)\n\n设置当前屏幕亮度模式\n\n# 参数：\n\n参数名        类型         必填   说明\nmode       integer    是    0 为手动调节屏幕亮度，1 为自动调节屏幕亮度\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# 示例：\n\nbrightness.setmode({\n  mode: 1,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# brightness.setkeepscreenon(object)\n\n设置是否保持常亮状态\n\n# 参数：\n\n参数名            类型         必填   说明\nkeepscreenon   boolean    是    是否保持屏幕常亮\nsuccess        function   否    成功回调\nfail           function   否    失败回调\ncomplete       function   否    执行结束后的回调\n\n# 示例：\n\nbrightness.setkeepscreenon({\n  keepscreenon: true,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{cjk:!0}},{title:"事件 event",frontmatter:{},regularPath:"/zh/features/system/event.html",relativePath:"zh/features/system/event.md",key:"v-5f8125a8",path:"/zh/features/system/event.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:15},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:53},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:144},{level:3,title:"event.publish (OBJECT)",slug:"event-publish-object",normalizedTitle:"event.publish (object)",charIndex:153},{level:3,title:"event.subscribe(OBJECT)",slug:"event-subscribe-object",normalizedTitle:"event.subscribe(object)",charIndex:814},{level:3,title:"event.unsubscribe(OBJECT)",slug:"event-unsubscribe-object",normalizedTitle:"event.unsubscribe(object)",charIndex:1319},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:1635}],headersStr:"接口声明 导入模块 接口定义 event.publish (OBJECT) event.subscribe(OBJECT) event.unsubscribe(OBJECT) 支持明细",content:"# 事件 event\n\n\n# 接口声明\n\n{ \"name\": \"system.event\" }\n\n\n\n# 导入模块\n\nimport event from '@system.event' \n// 或 \nconst event = require('@system.event')\n\n\n\n# 接口定义\n\n\n# event.publish (OBJECT)\n\n发布公共事件\n\n# 参数：\n\n参数名         类型       必填   说明\neventName   String   是    事件名称，公共事件保留名称被系统占用，请勿使用\noptions     Object   否    事件参数\n\n# options 参数：\n\n参数名           类型       必填   说明\nparams        Object   否    事件参数\npermissions   Array    否    订阅者的权限，拥有权限的包才能收到发送的事件\n\n# 系统支持的公共事件：\n\n系统内部事件名称                      订阅者所需权限   说明\nusual.event.BATTERY_CHANGED   无         电量改变，参数：level:0.0 - 1.0 之间\nusual.event.DISCHARGING       无         停止充电\nusual.event.CHARGING          无         开始充电\n\n# 返回值：\n\n无\n\n# 示例：\n\nevent.publish({\n  eventName: 'myEventName',\n  options: {\n    params: { age: 10, name: 'peter' },\n    permissions: ['com.example.demo']\n  }\n})\n\n\n\n# event.subscribe(OBJECT)\n\n订阅公共事件\n\n# 参数：\n\n参数名         类型         必填   说明\neventName   String     是    事件名称\ncallback    Function   是    回调函数\n\n# 回调参数：\n\n参数名       类型       必填   说明\nparams    Object   否    事件参数\npackage   String   否    事件推送者包名\n\n# 返回值：\n\n类型       必填   说明\nNumber   是    事件id，订阅失败返回undefined\n\n# 示例：\n\nconst evtId = event.subscribe({\n  eventName: 'myEventName',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\nconsole.log(evtId)\n\n\n\n# event.unsubscribe(OBJECT)\n\n取消订阅公共事件\n\n# 参数：\n\n参数名   类型       必填   说明\nid    Number   是    订阅id\n\n# 示例：\n\nconst evtId = event.subscribe({\n  eventName: 'myEventName',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\n\nevent.unsubscribe({ id: evtId })\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   不支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    不支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持",normalizedContent:"# 事件 event\n\n\n# 接口声明\n\n{ \"name\": \"system.event\" }\n\n\n\n# 导入模块\n\nimport event from '@system.event' \n// 或 \nconst event = require('@system.event')\n\n\n\n# 接口定义\n\n\n# event.publish (object)\n\n发布公共事件\n\n# 参数：\n\n参数名         类型       必填   说明\neventname   string   是    事件名称，公共事件保留名称被系统占用，请勿使用\noptions     object   否    事件参数\n\n# options 参数：\n\n参数名           类型       必填   说明\nparams        object   否    事件参数\npermissions   array    否    订阅者的权限，拥有权限的包才能收到发送的事件\n\n# 系统支持的公共事件：\n\n系统内部事件名称                      订阅者所需权限   说明\nusual.event.battery_changed   无         电量改变，参数：level:0.0 - 1.0 之间\nusual.event.discharging       无         停止充电\nusual.event.charging          无         开始充电\n\n# 返回值：\n\n无\n\n# 示例：\n\nevent.publish({\n  eventname: 'myeventname',\n  options: {\n    params: { age: 10, name: 'peter' },\n    permissions: ['com.example.demo']\n  }\n})\n\n\n\n# event.subscribe(object)\n\n订阅公共事件\n\n# 参数：\n\n参数名         类型         必填   说明\neventname   string     是    事件名称\ncallback    function   是    回调函数\n\n# 回调参数：\n\n参数名       类型       必填   说明\nparams    object   否    事件参数\npackage   string   否    事件推送者包名\n\n# 返回值：\n\n类型       必填   说明\nnumber   是    事件id，订阅失败返回undefined\n\n# 示例：\n\nconst evtid = event.subscribe({\n  eventname: 'myeventname',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\nconsole.log(evtid)\n\n\n\n# event.unsubscribe(object)\n\n取消订阅公共事件\n\n# 参数：\n\n参数名   类型       必填   说明\nid    number   是    订阅id\n\n# 示例：\n\nconst evtid = event.subscribe({\n  eventname: 'myeventname',\n  callback: function(res) {\n    if (res.package === 'com.example.demo') {\n      console.log(res.params)\n    }\n  }\n})\n\nevent.unsubscribe({ id: evtid })\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   不支持\n小米手环 8 pro         不支持\nxiaomi watch s3    不支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持",charsets:{cjk:!0}},{title:"地理位置 geolocation",frontmatter:{},regularPath:"/zh/features/system/geolocation.html",relativePath:"zh/features/system/geolocation.md",key:"v-3e60add8",path:"/zh/features/system/geolocation.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:23},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:67},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:182},{level:3,title:"geolocation.getLocation(OBJECT)",slug:"geolocation-getlocation-object",normalizedTitle:"geolocation.getlocation(object)",charIndex:191},{level:3,title:"geolocation.subscribe(OBJECT)",slug:"geolocation-subscribe-object",normalizedTitle:"geolocation.subscribe(object)",charIndex:1450},{level:3,title:"geolocation.unsubscribe()",slug:"geolocation-unsubscribe",normalizedTitle:"geolocation.unsubscribe()",charIndex:2328},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:2532}],headersStr:"接口声明 导入模块 接口定义 geolocation.getLocation(OBJECT) geolocation.subscribe(OBJECT) geolocation.unsubscribe() 支持明细",content:'# 地理位置 geolocation\n\n\n# 接口声明\n\n{ "name": "system.geolocation" }\n\n\n\n# 导入模块\n\nimport geolocation from \'@system.geolocation\' \n// 或 \nconst geolocation = require(\'@system.geolocation\')\n\n\n\n# 接口定义\n\n\n# geolocation.getLocation(OBJECT)\n\n获取地理位置\n\n# 权限要求\n\n精确设备定位\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.LOCATION" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\ntimeout    Number     否    设置超时时间，单位是 ms，默认值为 30000\nsuccess    Function   是    成功回调\nfail       Function   否    失败回调，可能是因为缺乏权限\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名            类型                                         说明\nlongitude      Number                                     经度，浮点数\nlatitude       Number                                     纬度，浮点数\naltitude       Number                                     海拔、高度，单位m，浮点数\nspeed          Number                                     速度值，单位m/s，浮点数\naccuracy       Number                                     精确度，值为正整数\naccuracyInfo   { horizontal: Number, vertical: Number }   精确度信息，包含水平和垂直方向精准度\n\n# fail 返回错误代码：\n\n错误码   说明\n203   该功能不支持\n204   超时返回\n\n# 示例：\n\ngeolocation.getLocation({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  }\n})\n\n\n\n# geolocation.subscribe(OBJECT)\n\n监听地理位置。如果多次调用，仅最后一次调用生效\n\n# 权限要求\n\n精确设备定位\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.LOCATION" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   Function   是    每次位置信息发生变化，都会被回调\nfail       Function   否    失败回调\n\n# callback 返回值：\n\n参数名         类型       说明\nlongitude   Number   经度，浮点数\nlatitude    Number   纬度，浮点数\naltitude    Number   海拔、高度，单位m，浮点数\nspeed       Number   速度值，单位m/s，浮点数\naccuracy    Number   精确度，值为正整数\n\n# fail 返回错误代码：\n\n错误码   说明\n203   该功能不支持\n\n# 示例：\n\ngeolocation.subscribe({\n  callback: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  }\n})\n\n\n\n# geolocation.unsubscribe()\n\n取消监听地理位置\n\n# 权限要求\n\n精确设备定位\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.LOCATION" }\n  ]\n}\n\n\n# 参数：\n\n无\n\n# 示例：\n\ngeolocation.unsubscribe()\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   不支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持',normalizedContent:'# 地理位置 geolocation\n\n\n# 接口声明\n\n{ "name": "system.geolocation" }\n\n\n\n# 导入模块\n\nimport geolocation from \'@system.geolocation\' \n// 或 \nconst geolocation = require(\'@system.geolocation\')\n\n\n\n# 接口定义\n\n\n# geolocation.getlocation(object)\n\n获取地理位置\n\n# 权限要求\n\n精确设备定位\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.location" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\ntimeout    number     否    设置超时时间，单位是 ms，默认值为 30000\nsuccess    function   是    成功回调\nfail       function   否    失败回调，可能是因为缺乏权限\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名            类型                                         说明\nlongitude      number                                     经度，浮点数\nlatitude       number                                     纬度，浮点数\naltitude       number                                     海拔、高度，单位m，浮点数\nspeed          number                                     速度值，单位m/s，浮点数\naccuracy       number                                     精确度，值为正整数\naccuracyinfo   { horizontal: number, vertical: number }   精确度信息，包含水平和垂直方向精准度\n\n# fail 返回错误代码：\n\n错误码   说明\n203   该功能不支持\n204   超时返回\n\n# 示例：\n\ngeolocation.getlocation({\n  success: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  }\n})\n\n\n\n# geolocation.subscribe(object)\n\n监听地理位置。如果多次调用，仅最后一次调用生效\n\n# 权限要求\n\n精确设备定位\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.location" }\n  ]\n}\n\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   function   是    每次位置信息发生变化，都会被回调\nfail       function   否    失败回调\n\n# callback 返回值：\n\n参数名         类型       说明\nlongitude   number   经度，浮点数\nlatitude    number   纬度，浮点数\naltitude    number   海拔、高度，单位m，浮点数\nspeed       number   速度值，单位m/s，浮点数\naccuracy    number   精确度，值为正整数\n\n# fail 返回错误代码：\n\n错误码   说明\n203   该功能不支持\n\n# 示例：\n\ngeolocation.subscribe({\n  callback: function(data) {\n    console.log(\n      `handling success: longitude = ${data.longitude}, latitude = ${\n        data.latitude\n      }, speed = ${data.speed}, altitude = ${data.altitude}`\n    )\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  }\n})\n\n\n\n# geolocation.unsubscribe()\n\n取消监听地理位置\n\n# 权限要求\n\n精确设备定位\n\n开发者需要在 manifest.json 里面配置权限：\n\n{\n  "permissions": [\n    { "name": "hapjs.permission.location" }\n  ]\n}\n\n\n# 参数：\n\n无\n\n# 示例：\n\ngeolocation.unsubscribe()\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   不支持\n小米手环 8 pro         不支持\nxiaomi watch s3    支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持',charsets:{cjk:!0}},{title:"网络信息 network",frontmatter:{},regularPath:"/zh/features/system/network.html",relativePath:"zh/features/system/network.md",key:"v-c77fdb78",path:"/zh/features/system/network.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:19},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:59},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:158},{level:3,title:"network.getType(OBJECT)",slug:"network-gettype-object",normalizedTitle:"network.gettype(object)",charIndex:167},{level:3,title:"network.subscribe(OBJECT)",slug:"network-subscribe-object",normalizedTitle:"network.subscribe(object)",charIndex:565},{level:3,title:"network.unsubscribe()",slug:"network-unsubscribe",normalizedTitle:"network.unsubscribe()",charIndex:1011},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:1090}],headersStr:"接口声明 导入模块 接口定义 network.getType(OBJECT) network.subscribe(OBJECT) network.unsubscribe() 支持明细",content:"# 网络信息 network\n\n\n# 接口声明\n\n{ \"name\": \"system.network\" }\n\n\n\n# 导入模块\n\nimport network from '@system.network' \n// 或 \nconst network = require('@system.network')\n\n\n\n# 接口定义\n\n\n# network.getType(OBJECT)\n\n获取网络类型\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调，可能是因为缺乏权限\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名    类型       说明\ntype   String   网络类型，可能的值为 2g，3g，4g，wifi，none，5g，bluetooth，others\n\n# 示例：\n\nnetwork.getType({\n  success: function(data) {\n    console.log(`handling success: ${data.type}`)\n  }\n})\n\n\n\n# network.subscribe(OBJECT)\n\n监听网络类型变化。如果多次调用，仅最后一次调用生效\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   Function   否    每次网络发生变化，都会被回调\nfail       Function   否    失败回调，可能是因为缺乏权限\n\n# callback 返回值：\n\n参数名    类型       说明\ntype   String   网络类型，可能的值为 2g，3g，4g，wifi，none，5g，bluetooth，others。注：网络类型为\n                none 以外的值并不保证设备一定能访问到目标服务器，需要请求接口进行判断\n\n# 示例：\n\nnetwork.subscribe({\n  callback: function(data) {\n    console.log('handling callback')\n  }\n})\n\n\n\n# network.unsubscribe()\n\n取消监听网络类型变化\n\n# 参数：\n\n无\n\n# 示例：\n\nnetwork.unsubscribe()\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持",normalizedContent:"# 网络信息 network\n\n\n# 接口声明\n\n{ \"name\": \"system.network\" }\n\n\n\n# 导入模块\n\nimport network from '@system.network' \n// 或 \nconst network = require('@system.network')\n\n\n\n# 接口定义\n\n\n# network.gettype(object)\n\n获取网络类型\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调，可能是因为缺乏权限\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名    类型       说明\ntype   string   网络类型，可能的值为 2g，3g，4g，wifi，none，5g，bluetooth，others\n\n# 示例：\n\nnetwork.gettype({\n  success: function(data) {\n    console.log(`handling success: ${data.type}`)\n  }\n})\n\n\n\n# network.subscribe(object)\n\n监听网络类型变化。如果多次调用，仅最后一次调用生效\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   function   否    每次网络发生变化，都会被回调\nfail       function   否    失败回调，可能是因为缺乏权限\n\n# callback 返回值：\n\n参数名    类型       说明\ntype   string   网络类型，可能的值为 2g，3g，4g，wifi，none，5g，bluetooth，others。注：网络类型为\n                none 以外的值并不保证设备一定能访问到目标服务器，需要请求接口进行判断\n\n# 示例：\n\nnetwork.subscribe({\n  callback: function(data) {\n    console.log('handling callback')\n  }\n})\n\n\n\n# network.unsubscribe()\n\n取消监听网络类型变化\n\n# 参数：\n\n无\n\n# 示例：\n\nnetwork.unsubscribe()\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   支持\n小米手环 8 pro         不支持\nxiaomi watch s3    支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持",charsets:{cjk:!0}},{title:"录音 record",frontmatter:{},regularPath:"/zh/features/system/record.html",relativePath:"zh/features/system/record.md",key:"v-47f675d6",path:"/zh/features/system/record.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:16},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:55},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:150},{level:3,title:"record.start(OBJECT)",slug:"record-start-object",normalizedTitle:"record.start(object)",charIndex:159},{level:3,title:"record.stop()",slug:"record-stop",normalizedTitle:"record.stop()",charIndex:1250}],headersStr:"接口声明 导入模块 接口定义 record.start(OBJECT) record.stop()",content:"# 录音 record\n\n\n# 接口声明\n\n{ \"name\": \"system.record\" }\n\n\n\n# 导入模块\n\nimport record from '@system.record' \n// 或 \nconst record = require('@system.record')\n\n\n\n# 接口定义\n\n\n# record.start(OBJECT)\n\n开始录音\n\n# 参数：\n\n参数名                类型         必填   说明\nduration           Number     否    录音时长，单位为 ms。如果 duration 为有效值将在达到指定值时停止录音\nsampleRate         Number     否    采样率。不同的音频格式所支持的采样率范围不同。默认设置为 8000，建议使用\n                                   8000/16000/32000/44100/48000\nnumberOfChannels   Number     否    录音通道数，有效值 1/2\nencodeBitRate      Number     否    编码码率。编码码率的取值与采样率和音频格式有关\nformat             String     否    音频格式，有效值 pcm/opus/wav。缺省为 pcm\nsuccess            Function   否    成功回调\nfail               Function   否    失败回调\ncomplete           Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名   类型       说明\nuri   String   录音文件的存储路径，在应用的缓存目录中\n\n# fail 返回错误码：\n\n错误码   说明\n205   录音已在进行中\n202   参数错误\n\n# 示例：\n\nrecord.start({\n  duration: 10000,\n  sampleRate: 8000,\n  numberOfChannels: 1,\n  encodeBitRate: 128000,\n  format: 'pcm',\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# record.stop()\n\n停止录音\n\n# 参数：\n\n无\n\n# 示例：\n\nrecord.stop()\n",normalizedContent:"# 录音 record\n\n\n# 接口声明\n\n{ \"name\": \"system.record\" }\n\n\n\n# 导入模块\n\nimport record from '@system.record' \n// 或 \nconst record = require('@system.record')\n\n\n\n# 接口定义\n\n\n# record.start(object)\n\n开始录音\n\n# 参数：\n\n参数名                类型         必填   说明\nduration           number     否    录音时长，单位为 ms。如果 duration 为有效值将在达到指定值时停止录音\nsamplerate         number     否    采样率。不同的音频格式所支持的采样率范围不同。默认设置为 8000，建议使用\n                                   8000/16000/32000/44100/48000\nnumberofchannels   number     否    录音通道数，有效值 1/2\nencodebitrate      number     否    编码码率。编码码率的取值与采样率和音频格式有关\nformat             string     否    音频格式，有效值 pcm/opus/wav。缺省为 pcm\nsuccess            function   否    成功回调\nfail               function   否    失败回调\ncomplete           function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名   类型       说明\nuri   string   录音文件的存储路径，在应用的缓存目录中\n\n# fail 返回错误码：\n\n错误码   说明\n205   录音已在进行中\n202   参数错误\n\n# 示例：\n\nrecord.start({\n  duration: 10000,\n  samplerate: 8000,\n  numberofchannels: 1,\n  encodebitrate: 128000,\n  format: 'pcm',\n  success: function(data) {\n    console.log(`handling success: ${data.uri}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# record.stop()\n\n停止录音\n\n# 参数：\n\n无\n\n# 示例：\n\nrecord.stop()\n",charsets:{cjk:!0}},{title:"传感器 sensor",frontmatter:{},regularPath:"/zh/features/system/sensor.html",relativePath:"zh/features/system/sensor.md",key:"v-6be89536",path:"/zh/features/system/sensor.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:17},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:56},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:151},{level:3,title:"sensor.subscribePressure(OBJECT)",slug:"sensor-subscribepressure-object",normalizedTitle:"sensor.subscribepressure(object)",charIndex:160},{level:3,title:"sensor.unsubscribePressure()",slug:"sensor-unsubscribepressure",normalizedTitle:"sensor.unsubscribepressure()",charIndex:536},{level:3,title:"sensor.subscribeAccelerometer(OBJECT)",slug:"sensor-subscribeaccelerometer-object",normalizedTitle:"sensor.subscribeaccelerometer(object)",charIndex:630},{level:3,title:"sensor.unsubscribeAccelerometer(OBJECT)",slug:"sensor-unsubscribeaccelerometer-object",normalizedTitle:"sensor.unsubscribeaccelerometer(object)",charIndex:1330},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:1440}],headersStr:"接口声明 导入模块 接口定义 sensor.subscribePressure(OBJECT) sensor.unsubscribePressure() sensor.subscribeAccelerometer(OBJECT) sensor.unsubscribeAccelerometer(OBJECT) 支持明细",content:"# 传感器 sensor\n\n\n# 接口声明\n\n{ \"name\": \"system.sensor\" }\n\n\n\n# 导入模块\n\nimport sensor from '@system.sensor' \n// 或 \nconst sensor = require('@system.sensor')\n\n\n\n# 接口定义\n\n\n# sensor.subscribePressure(OBJECT)\n\n监听压力、压强感应数据。如果多次调用，仅最后一次调用生效\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   Function   是    每次位置信息发生变化，都会被回调\n\n# callback 返回值：\n\n参数名        类型       说明\npressure   Number   压力、压强，单位hpa，百帕。小数点后四舍五入保留五位小数\n\n# 示例：\n\nsensor.subscribePressure({\n  callback: function(ret) {\n    console.log(`handling callback, pressure = ${ret.pressure}`)\n  }\n})\n\n\n\n# sensor.unsubscribePressure()\n\n取消压力、压强感应数据\n\n# 参数：\n\n无\n\n# 示例：\n\nsensor.unsubscribePressure()\n\n\n\n# sensor.subscribeAccelerometer(OBJECT)\n\n监听加速度感应数据\n\n# 参数：\n\n参数名        类型         必填   说明\ninterval   String     否    监听加速度数据回调函数的执行频率，默认normal\ncallback   Function   是    重力感应数据变化后会回调此函数\nfail       Function   否    订阅错误回调\n\n# interval 的合法值：\n\n值        说明\ngame     适用于更新游戏的回调频率，在 20ms/次 左右\nui       适用于更新 UI 的回调频率，在 60ms/次 左右\nnormal   普通的回调频率，在 200ms/次 左右\n\n# callback 返回值：\n\n参数名   类型        说明\nx     Integer   x 轴坐标\ny     Integer   y 轴坐标\nz     Integer   z 轴坐标\n\n# 示例：\n\nsensor.subscribeAccelerometer({\n  callback: function(ret) {\n    console.log(`handling callback, x = ${ret.x}, y = ${ret.y}, z = ${ret.z}`)\n  },\n  fail: function(msg, code) {\n    console.log(`handling callback, fail:`, msg, code)\n  }\n})\n\n\n\n# sensor.unsubscribeAccelerometer(OBJECT)\n\n取消监听加速度感应数据\n\n# 参数：\n\n无\n\n# 示例：\n\nsensor.unsubscribeAccelerometer()\n\n\n\n# 支持明细\n\n接口                         已支持设备产品                                      不支持设备产品\nsubscribePressure          Xiaomi Watch S3、小米手环 9 Pro、Xiaomi Watch S4   小米 S1 Pro 运动健康手表、小米手环 8 Pro、小米手环 9、Redmi Watch 4、Xiaomi\n                                                                        Watch H1、REDMI Watch 5\nunsubscribePressure        Xiaomi Watch S3、小米手环 9 Pro、Xiaomi Watch S4   小米 S1 Pro 运动健康手表、小米手环 8 Pro、小米手环 9、Redmi Watch 4、Xiaomi\n                                                                        Watch H1、REDMI Watch 5\nsubscribeAccelerometer     小米手环 9、小米手环 9 Pro                            Xiaomi Watch S3、小米 S1 Pro 运动健康手表、小米手环 8 Pro、Redmi Watch\n                                                                        4、Xiaomi Watch H1、Xiaomi Watch S4、REDMI Watch 5\nunsubscribeAccelerometer   小米手环 9、小米手环 9 Pro                            Xiaomi Watch S3、小米 S1 Pro 运动健康手表、小米手环 8 Pro、Redmi Watch\n                                                                        4、Xiaomi Watch H1、Xiaomi Watch S4、REDMI Watch 5",normalizedContent:"# 传感器 sensor\n\n\n# 接口声明\n\n{ \"name\": \"system.sensor\" }\n\n\n\n# 导入模块\n\nimport sensor from '@system.sensor' \n// 或 \nconst sensor = require('@system.sensor')\n\n\n\n# 接口定义\n\n\n# sensor.subscribepressure(object)\n\n监听压力、压强感应数据。如果多次调用，仅最后一次调用生效\n\n# 参数：\n\n参数名        类型         必填   说明\ncallback   function   是    每次位置信息发生变化，都会被回调\n\n# callback 返回值：\n\n参数名        类型       说明\npressure   number   压力、压强，单位hpa，百帕。小数点后四舍五入保留五位小数\n\n# 示例：\n\nsensor.subscribepressure({\n  callback: function(ret) {\n    console.log(`handling callback, pressure = ${ret.pressure}`)\n  }\n})\n\n\n\n# sensor.unsubscribepressure()\n\n取消压力、压强感应数据\n\n# 参数：\n\n无\n\n# 示例：\n\nsensor.unsubscribepressure()\n\n\n\n# sensor.subscribeaccelerometer(object)\n\n监听加速度感应数据\n\n# 参数：\n\n参数名        类型         必填   说明\ninterval   string     否    监听加速度数据回调函数的执行频率，默认normal\ncallback   function   是    重力感应数据变化后会回调此函数\nfail       function   否    订阅错误回调\n\n# interval 的合法值：\n\n值        说明\ngame     适用于更新游戏的回调频率，在 20ms/次 左右\nui       适用于更新 ui 的回调频率，在 60ms/次 左右\nnormal   普通的回调频率，在 200ms/次 左右\n\n# callback 返回值：\n\n参数名   类型        说明\nx     integer   x 轴坐标\ny     integer   y 轴坐标\nz     integer   z 轴坐标\n\n# 示例：\n\nsensor.subscribeaccelerometer({\n  callback: function(ret) {\n    console.log(`handling callback, x = ${ret.x}, y = ${ret.y}, z = ${ret.z}`)\n  },\n  fail: function(msg, code) {\n    console.log(`handling callback, fail:`, msg, code)\n  }\n})\n\n\n\n# sensor.unsubscribeaccelerometer(object)\n\n取消监听加速度感应数据\n\n# 参数：\n\n无\n\n# 示例：\n\nsensor.unsubscribeaccelerometer()\n\n\n\n# 支持明细\n\n接口                         已支持设备产品                                      不支持设备产品\nsubscribepressure          xiaomi watch s3、小米手环 9 pro、xiaomi watch s4   小米 s1 pro 运动健康手表、小米手环 8 pro、小米手环 9、redmi watch 4、xiaomi\n                                                                        watch h1、redmi watch 5\nunsubscribepressure        xiaomi watch s3、小米手环 9 pro、xiaomi watch s4   小米 s1 pro 运动健康手表、小米手环 8 pro、小米手环 9、redmi watch 4、xiaomi\n                                                                        watch h1、redmi watch 5\nsubscribeaccelerometer     小米手环 9、小米手环 9 pro                            xiaomi watch s3、小米 s1 pro 运动健康手表、小米手环 8 pro、redmi watch\n                                                                        4、xiaomi watch h1、xiaomi watch s4、redmi watch 5\nunsubscribeaccelerometer   小米手环 9、小米手环 9 pro                            xiaomi watch s3、小米 s1 pro 运动健康手表、小米手环 8 pro、redmi watch\n                                                                        4、xiaomi watch h1、xiaomi watch s4、redmi watch 5",charsets:{cjk:!0}},{title:"振动 vibrator",frontmatter:{},regularPath:"/zh/features/system/vibrator.html",relativePath:"zh/features/system/vibrator.md",key:"v-b4635a54",path:"/zh/features/system/vibrator.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:18},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:59},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:162},{level:3,title:"vibrator.vibrate(OBJECT)",slug:"vibrator-vibrate-object",normalizedTitle:"vibrator.vibrate(object)",charIndex:171},{level:3,title:"vibrator.start(OBJECT)",slug:"vibrator-start-object",normalizedTitle:"vibrator.start(object)",charIndex:344},{level:3,title:"vibrator.stop(Number)",slug:"vibrator-stop-number",normalizedTitle:"vibrator.stop(number)",charIndex:1095},{level:3,title:"vibrator.getSystemDefaultMode()",slug:"vibrator-getsystemdefaultmode",normalizedTitle:"vibrator.getsystemdefaultmode()",charIndex:1249},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:1399}],headersStr:"接口声明 导入模块 接口定义 vibrator.vibrate(OBJECT) vibrator.start(OBJECT) vibrator.stop(Number) vibrator.getSystemDefaultMode() 支持明细",content:'# 振动 vibrator\n\n\n# 接口声明\n\n{ "name": "system.vibrator" }\n\n\n\n# 导入模块\n\nimport vibrator from \'@system.vibrator\' \n// 或 \nconst vibrator = require(\'@system.vibrator\')\n\n\n\n# 接口定义\n\n\n# vibrator.vibrate(OBJECT)\n\n触发振动\n\n# 参数：\n\n参数     类型       必填   说明\nmode   String   否    振动模式，"long"表示长振动，"short"表示短振动。默认为 long\n\n# 示例：\n\nvibrator.vibrate({\n  mode: \'long\'\n})\n\n\n\n# vibrator.start(OBJECT)\n\n开始振动\n\n# 参数：\n\n参数         类型         必填   说明\nduration   Number     是    振动持续时间(单位 ms)，必须为正整数\ninterval   Number     是    振动间隔时间(单位 ms)，必须为正整数\ncount      Number     是    振动次数，必须为正整数\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名   类型       说明\nid    Number   唯一的 ID，标识振动任务\n\n# fail 返回值：\n\n错误码   说明\n205   任务已存在\n202   参数错误\n\n# 示例：\n\nvibrator.start({\n  duration: 1000,\n  interval: 1000,\n  count: 10,\n  success: function (data) {\n    console.log(`handling success, id = ${data.id}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errorMsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# vibrator.stop(Number)\n\n停止振动\n\n# 参数：\n\n类型       必填   说明\nNumber   是    振动任务 ID\n\n# 返回值：\n\n类型        说明\nBoolean   true：成功；false：失败\n\n# 示例：\n\nvibrator.stop(1)\n\n\n\n# vibrator.getSystemDefaultMode()\n\n获取系统默认振动模式\n\n# 参数：\n\n无\n\n# 返回值：\n\n类型       说明\nNumber   0：关闭振动；1：标准振动；2：加强振动\n\n# 示例：\n\nvibrator.getSystemDefaultMode()\n\n\n\n# 支持明细\n\n接口                     已支持设备产品                                                     不支持设备产品\nvibrate                小米 S1 Pro 运动健康手表、小米手环 8 Pro、小米手环 9、Redmi Watch 4、Xiaomi     -\n                       Watch H1、Xiaomi Watch S3、小米手环 9 Pro、Xiaomi Watch S4、REDMI\n                       Watch 5\nstart                  -                                                           Xiaomi Watch S3、小米手环 9 Pro、Xiaomi Watch S4、REDMI Watch 5、小米\n                                                                                   S1 Pro 运动健康手表、小米手环 8 Pro、小米手环 9、Redmi Watch 4、Xiaomi Watch\n                                                                                   H1\nstop                   -                                                           Xiaomi Watch S3、小米手环 9 Pro、Xiaomi Watch S4、REDMI Watch 5、小米\n                                                                                   S1 Pro 运动健康手表、小米手环 8 Pro、小米手环 9、Redmi Watch 4、Xiaomi Watch\n                                                                                   H1\ngetSystemDefaultMode   -                                                           Xiaomi Watch S3、小米手环 9 Pro、Xiaomi Watch S4、REDMI Watch 5、小米\n                                                                                   S1 Pro 运动健康手表、小米手环 8 Pro、小米手环 9、Redmi Watch 4、Xiaomi Watch\n                                                                                   H1',normalizedContent:'# 振动 vibrator\n\n\n# 接口声明\n\n{ "name": "system.vibrator" }\n\n\n\n# 导入模块\n\nimport vibrator from \'@system.vibrator\' \n// 或 \nconst vibrator = require(\'@system.vibrator\')\n\n\n\n# 接口定义\n\n\n# vibrator.vibrate(object)\n\n触发振动\n\n# 参数：\n\n参数     类型       必填   说明\nmode   string   否    振动模式，"long"表示长振动，"short"表示短振动。默认为 long\n\n# 示例：\n\nvibrator.vibrate({\n  mode: \'long\'\n})\n\n\n\n# vibrator.start(object)\n\n开始振动\n\n# 参数：\n\n参数         类型         必填   说明\nduration   number     是    振动持续时间(单位 ms)，必须为正整数\ninterval   number     是    振动间隔时间(单位 ms)，必须为正整数\ncount      number     是    振动次数，必须为正整数\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名   类型       说明\nid    number   唯一的 id，标识振动任务\n\n# fail 返回值：\n\n错误码   说明\n205   任务已存在\n202   参数错误\n\n# 示例：\n\nvibrator.start({\n  duration: 1000,\n  interval: 1000,\n  count: 10,\n  success: function (data) {\n    console.log(`handling success, id = ${data.id}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}, errormsg=${data}`)\n  },\n  complete: function () {\n    console.log(`handling complete`)\n  }\n})\n\n\n\n# vibrator.stop(number)\n\n停止振动\n\n# 参数：\n\n类型       必填   说明\nnumber   是    振动任务 id\n\n# 返回值：\n\n类型        说明\nboolean   true：成功；false：失败\n\n# 示例：\n\nvibrator.stop(1)\n\n\n\n# vibrator.getsystemdefaultmode()\n\n获取系统默认振动模式\n\n# 参数：\n\n无\n\n# 返回值：\n\n类型       说明\nnumber   0：关闭振动；1：标准振动；2：加强振动\n\n# 示例：\n\nvibrator.getsystemdefaultmode()\n\n\n\n# 支持明细\n\n接口                     已支持设备产品                                                     不支持设备产品\nvibrate                小米 s1 pro 运动健康手表、小米手环 8 pro、小米手环 9、redmi watch 4、xiaomi     -\n                       watch h1、xiaomi watch s3、小米手环 9 pro、xiaomi watch s4、redmi\n                       watch 5\nstart                  -                                                           xiaomi watch s3、小米手环 9 pro、xiaomi watch s4、redmi watch 5、小米\n                                                                                   s1 pro 运动健康手表、小米手环 8 pro、小米手环 9、redmi watch 4、xiaomi watch\n                                                                                   h1\nstop                   -                                                           xiaomi watch s3、小米手环 9 pro、xiaomi watch s4、redmi watch 5、小米\n                                                                                   s1 pro 运动健康手表、小米手环 8 pro、小米手环 9、redmi watch 4、xiaomi watch\n                                                                                   h1\ngetsystemdefaultmode   -                                                           xiaomi watch s3、小米手环 9 pro、xiaomi watch s4、redmi watch 5、小米\n                                                                                   s1 pro 运动健康手表、小米手环 8 pro、小米手环 9、redmi watch 4、xiaomi watch\n                                                                                   h1',charsets:{cjk:!0}},{title:"系统音量 volume",frontmatter:{},regularPath:"/zh/features/system/volume.html",relativePath:"zh/features/system/volume.md",key:"v-017e4d94",path:"/zh/features/system/volume.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:18},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:57},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:152},{level:3,title:"volume.getMediaValue (OBJECT)",slug:"volume-getmediavalue-object",normalizedTitle:"volume.getmediavalue (object)",charIndex:161},{level:3,title:"volume.setMediaValue (OBJECT)",slug:"volume-setmediavalue-object",normalizedTitle:"volume.setmediavalue (object)",charIndex:619},{level:2,title:"事件",slug:"事件",normalizedTitle:"事件",charIndex:1064},{level:3,title:"volume.onMediaValueChanged",slug:"volume-onmediavaluechanged",normalizedTitle:"volume.onmediavaluechanged",charIndex:1071}],headersStr:"接口声明 导入模块 接口定义 volume.getMediaValue (OBJECT) volume.setMediaValue (OBJECT) 事件 volume.onMediaValueChanged",content:"# 系统音量 volume\n\n\n# 接口声明\n\n{ \"name\": \"system.volume\" }\n\n\n\n# 导入模块\n\nimport volume from '@system.volume' \n// 或 \nconst volume = require('@system.volume')\n\n\n\n# 接口定义\n\n\n# volume.getMediaValue (OBJECT)\n\n获取当前多媒体音量\n\n# 参数\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值     类型       说明\nvalue   Number   系统媒体当前音量，0.0-1.0 之间\n\n# 示例\n\nvolume.getMediaValue({\n  success: function(data) {\n    console.log(`handling success: ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# volume.setMediaValue (OBJECT)\n\n设置当前多媒体音量\n\n# 参数\n\n参数名        类型         必填   说明\nvalue      Number     是    设置的音量，0.0-1.0 之间\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# fail 返回值：\n\n支持通用错误码\n\n# 示例\n\nvolume.setMediaValue({\n  value: 0.5,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 事件\n\n\n# volume.onMediaValueChanged\n\n多媒体音量发生变化事触发\n\n# 回调Object参数：\n\n参数名     类型       必填   说明\nvalue   Number   是    系统媒体当前音量，范围：0.0-1.0 之间\n\n# 示例\n\nvolume.onMediaValueChanged = function(res) {\n  console.log('volume media value changed:', res.value)\n}\n",normalizedContent:"# 系统音量 volume\n\n\n# 接口声明\n\n{ \"name\": \"system.volume\" }\n\n\n\n# 导入模块\n\nimport volume from '@system.volume' \n// 或 \nconst volume = require('@system.volume')\n\n\n\n# 接口定义\n\n\n# volume.getmediavalue (object)\n\n获取当前多媒体音量\n\n# 参数\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数值     类型       说明\nvalue   number   系统媒体当前音量，0.0-1.0 之间\n\n# 示例\n\nvolume.getmediavalue({\n  success: function(data) {\n    console.log(`handling success: ${data.value}`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# volume.setmediavalue (object)\n\n设置当前多媒体音量\n\n# 参数\n\n参数名        类型         必填   说明\nvalue      number     是    设置的音量，0.0-1.0 之间\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# fail 返回值：\n\n支持通用错误码\n\n# 示例\n\nvolume.setmediavalue({\n  value: 0.5,\n  success: function() {\n    console.log('handling success')\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 事件\n\n\n# volume.onmediavaluechanged\n\n多媒体音量发生变化事触发\n\n# 回调object参数：\n\n参数名     类型       必填   说明\nvalue   number   是    系统媒体当前音量，范围：0.0-1.0 之间\n\n# 示例\n\nvolume.onmediavaluechanged = function(res) {\n  console.log('volume media value changed:', res.value)\n}\n",charsets:{cjk:!0}},{title:"解压缩 zip",frontmatter:{},regularPath:"/zh/features/system/zip.html",relativePath:"zh/features/system/zip.md",key:"v-4adbc144",path:"/zh/features/system/zip.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:14},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:50},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:131},{level:3,title:"zip.decompress(OBJECT)",slug:"zip-decompress-object",normalizedTitle:"zip.decompress(object)",charIndex:140}],headersStr:"接口声明 导入模块 接口定义 zip.decompress(OBJECT)",content:"# 解压缩 zip\n\n\n# 接口声明\n\n{ \"name\": \"system.zip\" }\n\n\n\n# 导入模块\n\nimport zip from '@system.zip'\n// 或\nconst zip = require('@system.zip')\n\n\n\n# 接口定义\n\n\n# zip.decompress(OBJECT)\n\n解压文件\n\n# 参数：\n\n参数名        类型         必填   说明\nsrcUri     String     是    源文件的 uri，不能是 tmp 类型的 uri\ndstUri     String     是    目标目录的 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n无\n\n# fail 返回值：\n\n错误码   说明\n202   参数错误\n300   I/O 错误\n\n# 示例：\n\nzip.decompress({\n  srcUri: 'internal://cache/test.zip',\n  dstUri: 'internal://files/unzip/',\n  success: function() {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",normalizedContent:"# 解压缩 zip\n\n\n# 接口声明\n\n{ \"name\": \"system.zip\" }\n\n\n\n# 导入模块\n\nimport zip from '@system.zip'\n// 或\nconst zip = require('@system.zip')\n\n\n\n# 接口定义\n\n\n# zip.decompress(object)\n\n解压文件\n\n# 参数：\n\n参数名        类型         必填   说明\nsrcuri     string     是    源文件的 uri，不能是 tmp 类型的 uri\ndsturi     string     是    目标目录的 uri，不能是应用资源路径和 tmp 类型的 uri\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n无\n\n# fail 返回值：\n\n错误码   说明\n202   参数错误\n300   i/o 错误\n\n# 示例：\n\nzip.decompress({\n  srcuri: 'internal://cache/test.zip',\n  dsturi: 'internal://files/unzip/',\n  success: function() {\n    console.log(`handling success`)\n  },\n  fail: function(data, code) {\n    console.log(`handling fail, code = ${code}`)\n  }\n})\n",charsets:{cjk:!0}},{title:"概述",frontmatter:{},regularPath:"/zh/guide/",relativePath:"zh/guide/README.md",key:"v-3d8677b5",path:"/zh/guide/",headers:[{level:2,title:"应用特点",slug:"应用特点",normalizedTitle:"应用特点",charIndex:194},{level:2,title:"应用场景",slug:"应用场景",normalizedTitle:"应用场景",charIndex:102},{level:2,title:"技术优势",slug:"技术优势",normalizedTitle:"技术优势",charIndex:1072},{level:3,title:"前端开发范式",slug:"前端开发范式",normalizedTitle:"前端开发范式",charIndex:1120},{level:3,title:"统一的API和组件",slug:"统一的api和组件",normalizedTitle:"统一的api和组件",charIndex:1280},{level:3,title:"高性能渲染",slug:"高性能渲染",normalizedTitle:"高性能渲染",charIndex:474},{level:3,title:"多屏适配",slug:"多屏适配",normalizedTitle:"多屏适配",charIndex:1571},{level:2,title:"应用开发流程",slug:"应用开发流程",normalizedTitle:"应用开发流程",charIndex:1833},{level:3,title:"环境搭建",slug:"环境搭建",normalizedTitle:"环境搭建",charIndex:1844},{level:3,title:"应用开发",slug:"应用开发",normalizedTitle:"应用开发",charIndex:1833},{level:3,title:"运行调试",slug:"运行调试",normalizedTitle:"运行调试",charIndex:2324},{level:3,title:"打包发布",slug:"打包发布",normalizedTitle:"打包发布",charIndex:2405}],headersStr:"应用特点 应用场景 技术优势 前端开发范式 统一的API和组件 高性能渲染 多屏适配 应用开发流程 环境搭建 应用开发 运行调试 打包发布",content:"# 概述\n\nXiaomi Vela JS 应用是小米公司开发的一种应用类型，它是基于小米的物联网嵌入式软件平台 Xiaomi Vela OS 开发的。本文将介绍 Xiaomi Vela JS 应用的特点、应用场景以及开发支持，帮助开发者更好地了解和使用这一应用类型。\n\n如果您想快速了解如何开发 Xiaomi Vela JS 应用，并且希望快速上手，请直接访问 快速入门 章节。\n\n\n# 应用特点\n\nXiaomi Vela JS 应用是一种基于 Xiaomi Vela OS 操作系统的轻量级应用模式，旨在为智能穿戴设备提供更加流畅和便捷的用户体验。它具备以下显著特点：\n\n * 轻量化： Xiaomi Vela JS 应用采用了轻量级的架构设计，与传统的应用程序相比，Xiaomi Vela JS 应用具有更小的体积，这使得它们能够快速加载和运行，尤其适合内存和处理能力有限的穿戴设备。\n * 跨平台兼容性： Xiaomi Vela JS 应用支持跨端运行，开发者可以一次开发，实现在多种设备上的运行，这大大提高了开发效率和应用的普及率。\n * 高性能渲染： 系统优化了渲染能力，使得应用的动画和交互更为流畅，提升了用户的使用体验。\n * 安全性能： Xiaomi Vela OS 通过三重隔离机制确保了应用的安全性，保护了用户数据和设备的安全。\n * 开发支持： 小米提供了全面的开发支持 Xiaomi Vela JS 应用的开发工具和文档齐全，开发者可以轻松上手，快速构建高质量的应用。小米提供了包括AIoT-IDE在内的一系列开发工具，支持开发者在Ubuntu、Windows、MacOS等操作系统上进行Xiaomi Vela JS 应用的开发和调试。\n\n\n# 应用场景\n\nXiaomi Vela JS 应用的应用场景广泛，已落地多款产品，覆盖了智能穿戴设备上的多种使用情形：\n\n * 健康监测： 应用可以实时监测用户的心率、睡眠质量等健康数据，为用户提供健康建议和预警。\n * 运动辅助： 在用户进行运动时，应用能够记录运动数据，提供运动指导和健康管理。\n * 消息提醒： 应用能够显示手机等设备的消息提醒，方便用户在不拿出手机的情况下查看重要信息。\n * 移动支付： 应用可以集成支付功能，用户可以直接在穿戴设备上完成支付操作，提高支付的便捷性。\n * 智能控制： 作为智能家居的控制中心，应用可以远程操控家中的智能设备，如灯光、空调等。\n * 日常工具： 提供天气预报、闹钟、计时器等日常工具功能，满足用户的多样化需求。\n\n\n# 技术优势\n\n相较于传统的应用框架，Xiaomi Vela JS 应用具有以下技术优势：\n\n\n# 前端开发范式\n\nXiaomi Vela JS 应用采用JavaScript语言开发，并且支持前端MVVM高效的开发范式，响应式UI框架，易学易用。使得开发者可以降低上手难度，缩短开发周期。这种模式贴合主流前端开发者的思维习惯，使得开发者能够快速构建出功能丰富、交互友好的应用，同时降低了学习成本。参考开发语法。\n\n\n# 统一的API和组件\n\nXiaomi Vela JS 应用提供了统一的JS接口和UI组件，使得开发者无需关心底层硬件和操作系统的差异，简化了开发流程，同时保证了应用的质量和用户体验。\n\n\n# 高性能渲染\n\n * 通过架构优化，让复杂计算下沉到原生层，解决 JS 语言的性能瓶颈，从而拥有媲美原生的运行效率和流畅体验。\n * 提供丰富的动效能力，包括30+插值和物理动效，可用于过渡、转场等动画效果，使用户界面更加生动、有趣和富有表现力。\n * 充分挖掘硬件性能，最大限度利用 GPU 和 CPU 的硬件加速能力，让复杂UI 界面和动画更加流畅，达到 60 fps 满帧效果。\n\n\n# 多屏适配\n\n多屏适配是Xiaomi Vela JS 应用框架的另一大特色，具体表现在：\n\n * 适配规范： 框架支持不同形状、尺寸和分辨率的屏幕自适应，确保应用在各种设备上都能提供良好的视觉体验。\n * 设计规范： Vela提供了一套多屏设计的技术规范，帮助开发者按照设计稿完成应用的多屏适配。\n * 多屏UI模拟器： AIoT-IDE提供了多屏UI模拟器，使开发者能够快速预览应用在不同屏幕上的效果，进行必要的调整。\n * 适配案例： 提供了对常见页面元素进行多屏适配的代码示例以及整站案例，供开发者参考和学习。\n\n\n# 应用开发流程\n\n\n# 环境搭建\n\n小米提供了包括AIoT-IDE在内的一系列开发工具，支持开发者在Ubuntu、Windows、MacOS等操作系统上进行Xiaomi Vela JS 应用的开发和调试。 AIoT-IDE是Xiaomi Vela JS 应用的集成开发环境，提供了项目初始化、编码、调试等一系列功能。请参考安装环境初始化项目。\n\n\n# 应用开发\n\n初始化项目后请参考项目结构了解项目中各文件和目录的作用。项目由配置文件（manifest.json）、模板代码（ux文件）、 样式代码（css文件）、逻辑代码（js文件）以及资源文件（图片、音频等）组成。请参考项目配置对项目相关信息进行配置。\n\n应用开发范式遵循声明式UI，和传统Web开发范式类似。项目中的页面以及组件均由ux后缀文件编写，文件由template 模板、style 样式和script 脚本3 个部分组成。开发者可以通过编写ux文件使用UI组件、自定义组件和样式描述页面结构和呈现效果，使用js脚本定义页面数据、实现生命周期接口、通用方法、事件处理等。 请参考编写页面UI进一步了解页面开发。\n\n\n# 运行调试\n\nAIoT-IDE提供内置的模拟器，支持开发者启动模拟器在IDE中直接运行和调试应用，实时查看运行效果。请参考运行调试了解如何运行和调试应用。\n\n\n# 打包发布\n\n应用开发完成后，开发者可以使用AIoT-IDE提供的打包功能将应用打包成安装包，请参考打包项目了解如何打包应用。项目打包成功后请参考发布进行应用发布。",normalizedContent:"# 概述\n\nxiaomi vela js 应用是小米公司开发的一种应用类型，它是基于小米的物联网嵌入式软件平台 xiaomi vela os 开发的。本文将介绍 xiaomi vela js 应用的特点、应用场景以及开发支持，帮助开发者更好地了解和使用这一应用类型。\n\n如果您想快速了解如何开发 xiaomi vela js 应用，并且希望快速上手，请直接访问 快速入门 章节。\n\n\n# 应用特点\n\nxiaomi vela js 应用是一种基于 xiaomi vela os 操作系统的轻量级应用模式，旨在为智能穿戴设备提供更加流畅和便捷的用户体验。它具备以下显著特点：\n\n * 轻量化： xiaomi vela js 应用采用了轻量级的架构设计，与传统的应用程序相比，xiaomi vela js 应用具有更小的体积，这使得它们能够快速加载和运行，尤其适合内存和处理能力有限的穿戴设备。\n * 跨平台兼容性： xiaomi vela js 应用支持跨端运行，开发者可以一次开发，实现在多种设备上的运行，这大大提高了开发效率和应用的普及率。\n * 高性能渲染： 系统优化了渲染能力，使得应用的动画和交互更为流畅，提升了用户的使用体验。\n * 安全性能： xiaomi vela os 通过三重隔离机制确保了应用的安全性，保护了用户数据和设备的安全。\n * 开发支持： 小米提供了全面的开发支持 xiaomi vela js 应用的开发工具和文档齐全，开发者可以轻松上手，快速构建高质量的应用。小米提供了包括aiot-ide在内的一系列开发工具，支持开发者在ubuntu、windows、macos等操作系统上进行xiaomi vela js 应用的开发和调试。\n\n\n# 应用场景\n\nxiaomi vela js 应用的应用场景广泛，已落地多款产品，覆盖了智能穿戴设备上的多种使用情形：\n\n * 健康监测： 应用可以实时监测用户的心率、睡眠质量等健康数据，为用户提供健康建议和预警。\n * 运动辅助： 在用户进行运动时，应用能够记录运动数据，提供运动指导和健康管理。\n * 消息提醒： 应用能够显示手机等设备的消息提醒，方便用户在不拿出手机的情况下查看重要信息。\n * 移动支付： 应用可以集成支付功能，用户可以直接在穿戴设备上完成支付操作，提高支付的便捷性。\n * 智能控制： 作为智能家居的控制中心，应用可以远程操控家中的智能设备，如灯光、空调等。\n * 日常工具： 提供天气预报、闹钟、计时器等日常工具功能，满足用户的多样化需求。\n\n\n# 技术优势\n\n相较于传统的应用框架，xiaomi vela js 应用具有以下技术优势：\n\n\n# 前端开发范式\n\nxiaomi vela js 应用采用javascript语言开发，并且支持前端mvvm高效的开发范式，响应式ui框架，易学易用。使得开发者可以降低上手难度，缩短开发周期。这种模式贴合主流前端开发者的思维习惯，使得开发者能够快速构建出功能丰富、交互友好的应用，同时降低了学习成本。参考开发语法。\n\n\n# 统一的api和组件\n\nxiaomi vela js 应用提供了统一的js接口和ui组件，使得开发者无需关心底层硬件和操作系统的差异，简化了开发流程，同时保证了应用的质量和用户体验。\n\n\n# 高性能渲染\n\n * 通过架构优化，让复杂计算下沉到原生层，解决 js 语言的性能瓶颈，从而拥有媲美原生的运行效率和流畅体验。\n * 提供丰富的动效能力，包括30+插值和物理动效，可用于过渡、转场等动画效果，使用户界面更加生动、有趣和富有表现力。\n * 充分挖掘硬件性能，最大限度利用 gpu 和 cpu 的硬件加速能力，让复杂ui 界面和动画更加流畅，达到 60 fps 满帧效果。\n\n\n# 多屏适配\n\n多屏适配是xiaomi vela js 应用框架的另一大特色，具体表现在：\n\n * 适配规范： 框架支持不同形状、尺寸和分辨率的屏幕自适应，确保应用在各种设备上都能提供良好的视觉体验。\n * 设计规范： vela提供了一套多屏设计的技术规范，帮助开发者按照设计稿完成应用的多屏适配。\n * 多屏ui模拟器： aiot-ide提供了多屏ui模拟器，使开发者能够快速预览应用在不同屏幕上的效果，进行必要的调整。\n * 适配案例： 提供了对常见页面元素进行多屏适配的代码示例以及整站案例，供开发者参考和学习。\n\n\n# 应用开发流程\n\n\n# 环境搭建\n\n小米提供了包括aiot-ide在内的一系列开发工具，支持开发者在ubuntu、windows、macos等操作系统上进行xiaomi vela js 应用的开发和调试。 aiot-ide是xiaomi vela js 应用的集成开发环境，提供了项目初始化、编码、调试等一系列功能。请参考安装环境初始化项目。\n\n\n# 应用开发\n\n初始化项目后请参考项目结构了解项目中各文件和目录的作用。项目由配置文件（manifest.json）、模板代码（ux文件）、 样式代码（css文件）、逻辑代码（js文件）以及资源文件（图片、音频等）组成。请参考项目配置对项目相关信息进行配置。\n\n应用开发范式遵循声明式ui，和传统web开发范式类似。项目中的页面以及组件均由ux后缀文件编写，文件由template 模板、style 样式和script 脚本3 个部分组成。开发者可以通过编写ux文件使用ui组件、自定义组件和样式描述页面结构和呈现效果，使用js脚本定义页面数据、实现生命周期接口、通用方法、事件处理等。 请参考编写页面ui进一步了解页面开发。\n\n\n# 运行调试\n\naiot-ide提供内置的模拟器，支持开发者启动模拟器在ide中直接运行和调试应用，实时查看运行效果。请参考运行调试了解如何运行和调试应用。\n\n\n# 打包发布\n\n应用开发完成后，开发者可以使用aiot-ide提供的打包功能将应用打包成安装包，请参考打包项目了解如何打包应用。项目打包成功后请参考发布进行应用发布。",charsets:{cjk:!0}},{title:"最佳实践",frontmatter:{},regularPath:"/zh/guide/best-practice/",relativePath:"zh/guide/best-practice/README.md",key:"v-409d1ed6",path:"/zh/guide/best-practice/",headersStr:null,content:"# 最佳实践\n\n这部分主要介绍一些应用开发规范和最佳实践，如何降低应用时延和内存占用。帮助开发者开发更简洁、高性能、高扩展性的应用。",normalizedContent:"# 最佳实践\n\n这部分主要介绍一些应用开发规范和最佳实践，如何降低应用时延和内存占用。帮助开发者开发更简洁、高性能、高扩展性的应用。",charsets:{cjk:!0}},{title:"常用业务优化",frontmatter:{},regularPath:"/zh/guide/best-practice/business.html",relativePath:"zh/guide/best-practice/business.md",key:"v-ecfda394",path:"/zh/guide/best-practice/business.html",headers:[{level:2,title:"list与长文案优化",slug:"list与长文案优化",normalizedTitle:"list与长文案优化",charIndex:13},{level:2,title:"Swiper 多图优化",slug:"swiper-多图优化",normalizedTitle:"swiper 多图优化",charIndex:1760},{level:2,title:"设备帧率的优化建议",slug:"设备帧率的优化建议",normalizedTitle:"设备帧率的优化建议",charIndex:4022},{level:2,title:"其他优化建议",slug:"其他优化建议",normalizedTitle:"其他优化建议",charIndex:4151}],headersStr:"list与长文案优化 Swiper 多图优化 设备帧率的优化建议 其他优化建议",content:'# 常用业务优化\n\n\n# list与长文案优化\n\n说明\n\nlist过长以及长文案（例如大段的隐私协议，用户协议）显示时，所能用到的优化手段\n\n * list\n   \n   list列表，在初始化渲染时，原则上，如果内容超过10条，建议使用分页式渲染，或是触底发送请求新的数据，切勿初始化渲染大量数据，会造成页面渲染卡顿。\n\n * 长文案\n   \n   长文案一般是需要在小的设备屏幕上显示大量的文字内容，例如“用户协议”，“隐私协议”，“未成年人保护协议”等等\n   \n   * 通常建议是用二维码显示协议链接，通过扫码在手机上浏览也是一种比较常用的设计。\n   * 如果产品需要一次性全量渲染，会一定程度上造成页面的渲染卡顿，影响首次渲染的用户体验，这里推荐的是分块渲染文案。下面是代码示例：\n\n\x3c!-- 渲染文案的区域,同时绑定handleScroll滚动监听 --\x3e\n<template>\n  <scroll id="scroll" scroll-y="true" class="scroll" onscroll="handleScroll">\n    <div id="content" class="connent">\n      <block if="{{currentKey >= 0}}">\n        <text class="header-1">{{contentArray[0]}}</text>\n      </block>\n        <block if="{{currentKey >= 1}}">\n        <text class="header-1">{{contentArray[1]}}</text>\n      </block>\n        <block if="{{currentKey >= 2}}">\n        <text class="header-1">{{contentArray[2]}}</text>\n      </block>\n    </div>\n  </scroll>\n</template>\n\x3c!-- 把文案内容以数组形式保存，并记录当前所渲染的文案的序列号 --\x3e\n<script>\nexport default {\n  data:{\n    contentArray:[\n      {\n        content:\'文案一..........\'\n      },\n      {\n        content:\'文案二..........\'\n      },\n      {\n        content:\'文案三..........\'\n      }\n    ],\n    //当前所需所渲染到的文案序列号\n    currentKey:0,\n    //当前总高度\n    currentTHEight:0,\n  }\n  //onReady时先给当前总高度赋一次值\n  onReady(){\n    this.$element(\'content\').getBoundingClientRect({\n      success: (data) => {\n        const { height } = data;\n        this.currentTHEight = height\n      }\n    })\n  }\n  //实时判断滚动高度与总体高度，如果快触底了，则进行下一个文案的加载,同时给总高度重新赋值\n  handleScroll(e) {\n    if(currentTHEight - e.scrollY <40){\n        this.currentKey = currentKey + 1\n    }\n    this.$element(\'content\').getBoundingClientRect({\n      success: (data) => {\n        const { height } = data;\n        this.currentTHEight = height\n      }\n    })\n  }\n}\n\n<\/script>\n\n\n\n# Swiper 多图优化\n\n说明\n\n当使用swiper轮播图时，如果图片很多。请避免同时渲染多张图片。保证可视区内以及左右图片的渲染即可\n\n假设现在一个相册有200张图片需要展示，就需要在swiper中创建200个子组件，无疑对性能是不友好的，因此考虑swiper只显示3个子组件，在左右滑动过程中动态更新子组件中的图片来实现Swiper中的数据懒加载。右滑懒加载主要过程如下：\n\n * 右滑懒加载实现过程 假设有5张图片的数组为data=[0,1,2,3,4]，现在需要将这5张图片在含有3个子组件的swiper中展示。\n   \n   1. 当用户点击第一张图，swiper中的数据为data[0],data[1],data[2]\n   2. 当从第一张图片滑动到第二张图片的时候，swiper的数组仍然为data[0],data[1],data[2]\n   3. 当从第2张滑动到第3张图片时，需要修改swiper第一个组件的数据为第三张图片的下一个数据data[3]，并且将swiper的loop属性设置为true，此时swiper的数据为data[3],data[1],data[2]；\n   4. 当从data[3]滑动到data[4]时需要注意的是data[4]是最后一条数据，如果最后一条数据也不在swiper的最后一个组件中，需要将swiper中的所有数据进行重置为data[len-3],data[len-2],data[len-1]，以保证最后一张图片一定在swiper最后的一个组件中，并将loop设置为false，不允许从最后一张滑动到第一张。\n\nSwiper懒加载实例\n * 具体实现思路\n\n在代码中通过@change事件监听swiper的滑动。判断左滑右滑逻辑如下：\n\n// 判断右滑\nif (\n  (!(this.currentIndex === 0 && index === length - 1) && index > this.currentIndex) ||\n  (index === 0 && this.currentIndex === length - 1)\n) {\n}else{\n}\n\n\n右滑的逻辑如下：\n\n//更新数据索引\nthis.dataIndex = this.dataIndex + 1\n//更新下一次右滑的索引\nconst updateIndex = this.dataIndex + 1\nif (updateIndex < this.bigThumbnailInfo.length) {\n  //下一次右滑更新为当前的下一张\n  updateItem = this.bigThumbnailInfo[updateIndex]\n  // 如果滑动前是\n  if (this.currentIndex === 0) {\n    //未滑动前是第一张，右滑更新swiper的最后一个\n    this.data[length - 1] = updateItem\n    resIndex = length - 1\n  } else {\n    // console.info("右滑：更新左边的")\n    this.data[this.currentIndex - 1] = updateItem\n    resIndex = this.currentIndex - 1\n  }\n}\n\n\n左滑代码逻辑如下：\n\n//更新数据索引\nthis.dataIndex = this.dataIndex - 1\n//更新下一次右滑的索引\nconst updateIndex = this.dataIndex - 1\n//下一次左滑更新为当前的上一张\nupdateItem = this.bigThumbnailInfo[updateIndex]\nif (this.currentIndex === length - 1) {\n  //未滑动前在最后一张，左滑更新swiper第一个\n  this.data[0] = updateItem\n  resIndex = 0\n} else {\n  this.data[this.currentIndex + 1] = updateItem\n  resIndex = this.currentIndex + 1\n}\n\n\n判断如果当前是最后一张图片代码如下：\n\nthis.data = [\n  this.bigThumbnailInfo[len - 3],\n  this.bigThumbnailInfo[len - 2],\n  this.bigThumbnailInfo[len - 1]\n]\nindexTemp = 2\nthis.swiperIndex = this.currentIndex\nthis.isloop = false\n\n\n判断即将更新的图片是第一张图片：\n\nthis.data = [\n  this.bigThumbnailInfo[0],\n  this.bigThumbnailInfo[1],\n  this.bigThumbnailInfo[2]\n]\nindexTemp = 0\nthis.swiperIndex = this.currentIndex\nthis.isloop = false\n\n\n如果不是第一张也不是最后一张图片，设置swiper的loop为true:\n\nthis.isloop = true\n\n\n\n# 设备帧率的优化建议\n\n * 有背景图或者图片的时候，尽量减少设置border-radius，使用带圆角的图片\n * 图片大小与div或者image组件大小保持一致，尽量不缩放图片\n * 减少动态样式修改\n * 减少标签的嵌套层级\n * 减少回流重绘\n\n\n# 其他优化建议\n\n * 增加try catch捕获异常\n * 数据请求较慢的场景建议增加loading',normalizedContent:'# 常用业务优化\n\n\n# list与长文案优化\n\n说明\n\nlist过长以及长文案（例如大段的隐私协议，用户协议）显示时，所能用到的优化手段\n\n * list\n   \n   list列表，在初始化渲染时，原则上，如果内容超过10条，建议使用分页式渲染，或是触底发送请求新的数据，切勿初始化渲染大量数据，会造成页面渲染卡顿。\n\n * 长文案\n   \n   长文案一般是需要在小的设备屏幕上显示大量的文字内容，例如“用户协议”，“隐私协议”，“未成年人保护协议”等等\n   \n   * 通常建议是用二维码显示协议链接，通过扫码在手机上浏览也是一种比较常用的设计。\n   * 如果产品需要一次性全量渲染，会一定程度上造成页面的渲染卡顿，影响首次渲染的用户体验，这里推荐的是分块渲染文案。下面是代码示例：\n\n\x3c!-- 渲染文案的区域,同时绑定handlescroll滚动监听 --\x3e\n<template>\n  <scroll id="scroll" scroll-y="true" class="scroll" onscroll="handlescroll">\n    <div id="content" class="connent">\n      <block if="{{currentkey >= 0}}">\n        <text class="header-1">{{contentarray[0]}}</text>\n      </block>\n        <block if="{{currentkey >= 1}}">\n        <text class="header-1">{{contentarray[1]}}</text>\n      </block>\n        <block if="{{currentkey >= 2}}">\n        <text class="header-1">{{contentarray[2]}}</text>\n      </block>\n    </div>\n  </scroll>\n</template>\n\x3c!-- 把文案内容以数组形式保存，并记录当前所渲染的文案的序列号 --\x3e\n<script>\nexport default {\n  data:{\n    contentarray:[\n      {\n        content:\'文案一..........\'\n      },\n      {\n        content:\'文案二..........\'\n      },\n      {\n        content:\'文案三..........\'\n      }\n    ],\n    //当前所需所渲染到的文案序列号\n    currentkey:0,\n    //当前总高度\n    currenttheight:0,\n  }\n  //onready时先给当前总高度赋一次值\n  onready(){\n    this.$element(\'content\').getboundingclientrect({\n      success: (data) => {\n        const { height } = data;\n        this.currenttheight = height\n      }\n    })\n  }\n  //实时判断滚动高度与总体高度，如果快触底了，则进行下一个文案的加载,同时给总高度重新赋值\n  handlescroll(e) {\n    if(currenttheight - e.scrolly <40){\n        this.currentkey = currentkey + 1\n    }\n    this.$element(\'content\').getboundingclientrect({\n      success: (data) => {\n        const { height } = data;\n        this.currenttheight = height\n      }\n    })\n  }\n}\n\n<\/script>\n\n\n\n# swiper 多图优化\n\n说明\n\n当使用swiper轮播图时，如果图片很多。请避免同时渲染多张图片。保证可视区内以及左右图片的渲染即可\n\n假设现在一个相册有200张图片需要展示，就需要在swiper中创建200个子组件，无疑对性能是不友好的，因此考虑swiper只显示3个子组件，在左右滑动过程中动态更新子组件中的图片来实现swiper中的数据懒加载。右滑懒加载主要过程如下：\n\n * 右滑懒加载实现过程 假设有5张图片的数组为data=[0,1,2,3,4]，现在需要将这5张图片在含有3个子组件的swiper中展示。\n   \n   1. 当用户点击第一张图，swiper中的数据为data[0],data[1],data[2]\n   2. 当从第一张图片滑动到第二张图片的时候，swiper的数组仍然为data[0],data[1],data[2]\n   3. 当从第2张滑动到第3张图片时，需要修改swiper第一个组件的数据为第三张图片的下一个数据data[3]，并且将swiper的loop属性设置为true，此时swiper的数据为data[3],data[1],data[2]；\n   4. 当从data[3]滑动到data[4]时需要注意的是data[4]是最后一条数据，如果最后一条数据也不在swiper的最后一个组件中，需要将swiper中的所有数据进行重置为data[len-3],data[len-2],data[len-1]，以保证最后一张图片一定在swiper最后的一个组件中，并将loop设置为false，不允许从最后一张滑动到第一张。\n\nswiper懒加载实例\n * 具体实现思路\n\n在代码中通过@change事件监听swiper的滑动。判断左滑右滑逻辑如下：\n\n// 判断右滑\nif (\n  (!(this.currentindex === 0 && index === length - 1) && index > this.currentindex) ||\n  (index === 0 && this.currentindex === length - 1)\n) {\n}else{\n}\n\n\n右滑的逻辑如下：\n\n//更新数据索引\nthis.dataindex = this.dataindex + 1\n//更新下一次右滑的索引\nconst updateindex = this.dataindex + 1\nif (updateindex < this.bigthumbnailinfo.length) {\n  //下一次右滑更新为当前的下一张\n  updateitem = this.bigthumbnailinfo[updateindex]\n  // 如果滑动前是\n  if (this.currentindex === 0) {\n    //未滑动前是第一张，右滑更新swiper的最后一个\n    this.data[length - 1] = updateitem\n    resindex = length - 1\n  } else {\n    // console.info("右滑：更新左边的")\n    this.data[this.currentindex - 1] = updateitem\n    resindex = this.currentindex - 1\n  }\n}\n\n\n左滑代码逻辑如下：\n\n//更新数据索引\nthis.dataindex = this.dataindex - 1\n//更新下一次右滑的索引\nconst updateindex = this.dataindex - 1\n//下一次左滑更新为当前的上一张\nupdateitem = this.bigthumbnailinfo[updateindex]\nif (this.currentindex === length - 1) {\n  //未滑动前在最后一张，左滑更新swiper第一个\n  this.data[0] = updateitem\n  resindex = 0\n} else {\n  this.data[this.currentindex + 1] = updateitem\n  resindex = this.currentindex + 1\n}\n\n\n判断如果当前是最后一张图片代码如下：\n\nthis.data = [\n  this.bigthumbnailinfo[len - 3],\n  this.bigthumbnailinfo[len - 2],\n  this.bigthumbnailinfo[len - 1]\n]\nindextemp = 2\nthis.swiperindex = this.currentindex\nthis.isloop = false\n\n\n判断即将更新的图片是第一张图片：\n\nthis.data = [\n  this.bigthumbnailinfo[0],\n  this.bigthumbnailinfo[1],\n  this.bigthumbnailinfo[2]\n]\nindextemp = 0\nthis.swiperindex = this.currentindex\nthis.isloop = false\n\n\n如果不是第一张也不是最后一张图片，设置swiper的loop为true:\n\nthis.isloop = true\n\n\n\n# 设备帧率的优化建议\n\n * 有背景图或者图片的时候，尽量减少设置border-radius，使用带圆角的图片\n * 图片大小与div或者image组件大小保持一致，尽量不缩放图片\n * 减少动态样式修改\n * 减少标签的嵌套层级\n * 减少回流重绘\n\n\n# 其他优化建议\n\n * 增加try catch捕获异常\n * 数据请求较慢的场景建议增加loading',charsets:{cjk:!0}},{title:"电量信息 battery",frontmatter:{},regularPath:"/zh/features/system/battery.html",relativePath:"zh/features/system/battery.md",key:"v-3ec58cf4",path:"/zh/features/system/battery.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:19},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:59},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:158},{level:3,title:"battery.getStatus(OBJECT)",slug:"battery-getstatus-object",normalizedTitle:"battery.getstatus(object)",charIndex:167},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:659}],headersStr:"接口声明 导入模块 接口定义 battery.getStatus(OBJECT) 支持明细",content:"# 电量信息 battery\n\n\n# 接口声明\n\n{ \"name\": \"system.battery\" }\n\n\n\n# 导入模块\n\nimport battery from '@system.battery' \n// 或 \nconst battery = require('@system.battery')\n\n\n\n# 接口定义\n\n\n# battery.getStatus(OBJECT)\n\n获取当前设备的电量信息\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    Function   否    成功回调\nfail       Function   否    失败回调\ncomplete   Function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名        类型        说明\ncharging   Boolean   是否正在充电\nlevel      Number    当前电量，0.0 - 1.0 之间\n\n# 示例\n\nbattery.getStatus({\n  success: function(data) {\n      console.log(`handling success: ${data.level}`)\n  },\n  fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   不支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    不支持\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持",normalizedContent:"# 电量信息 battery\n\n\n# 接口声明\n\n{ \"name\": \"system.battery\" }\n\n\n\n# 导入模块\n\nimport battery from '@system.battery' \n// 或 \nconst battery = require('@system.battery')\n\n\n\n# 接口定义\n\n\n# battery.getstatus(object)\n\n获取当前设备的电量信息\n\n# 参数：\n\n参数名        类型         必填   说明\nsuccess    function   否    成功回调\nfail       function   否    失败回调\ncomplete   function   否    执行结束后的回调\n\n# success 返回值：\n\n参数名        类型        说明\ncharging   boolean   是否正在充电\nlevel      number    当前电量，0.0 - 1.0 之间\n\n# 示例\n\nbattery.getstatus({\n  success: function(data) {\n      console.log(`handling success: ${data.level}`)\n  },\n  fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n  }\n})\n\n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   不支持\n小米手环 8 pro         不支持\nxiaomi watch s3    不支持\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持",charsets:{cjk:!0}},{title:"启动时延优化",frontmatter:{},regularPath:"/zh/guide/best-practice/start.html",relativePath:"zh/guide/best-practice/start.md",key:"v-dc126788",path:"/zh/guide/best-practice/start.html",headers:[{level:2,title:"避免setTimeout延迟",slug:"避免settimeout延迟",normalizedTitle:"避免settimeout延迟",charIndex:13},{level:2,title:"首页数据缓存",slug:"首页数据缓存",normalizedTitle:"首页数据缓存",charIndex:2627},{level:2,title:"logo页避免http请求",slug:"logo页避免http请求",normalizedTitle:"logo页避免http请求",charIndex:2740},{level:2,title:"UI先行",slug:"ui先行",normalizedTitle:"ui先行",charIndex:2806},{level:2,title:"隐私页信息使用静态数据",slug:"隐私页信息使用静态数据",normalizedTitle:"隐私页信息使用静态数据",charIndex:2879},{level:2,title:"减少从console打印",slug:"减少从console打印",normalizedTitle:"减少从console打印",charIndex:2968},{level:2,title:"图片缓存/裁剪",slug:"图片缓存-裁剪",normalizedTitle:"图片缓存/裁剪",charIndex:3588},{level:2,title:"通信类应用通信之前使用diagnosis方法判断连接状态",slug:"通信类应用通信之前使用diagnosis方法判断连接状态",normalizedTitle:"通信类应用通信之前使用diagnosis方法判断连接状态",charIndex:5141},{level:2,title:"使用interconnect传输多条数据",slug:"使用interconnect传输多条数据",normalizedTitle:"使用interconnect传输多条数据",charIndex:5973}],headersStr:"避免setTimeout延迟 首页数据缓存 logo页避免http请求 UI先行 隐私页信息使用静态数据 减少从console打印 图片缓存/裁剪 通信类应用通信之前使用diagnosis方法判断连接状态 使用interconnect传输多条数据",content:"# 启动时延优化\n\n\n# 避免setTimeout延迟\n\nlogo页如非必要，在执行页面跳转时，不要增加setTimeout延迟跳转。如果是需要等待异步结果返回，例如获取storage后决定跳转的下一个页面，建议将异步方法封装成同步，使用await，等待结果返回后立即执行跳转。以storage为例：\n\n// ❌不推荐写法\nonInit(){\n  this.checkifHome()\n  setTimeout(() => {\n    if(!this.ifHome){\n      router.push({uri:'pages/home'})\n    }\n  },1000)\n}\ncheckifHome(){\n  const that = this \n  storage.get({\n    key: 'ifHome',\n    success: function(data) {\n      that.ifHome = data\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅推荐写法一\nonInit(){\n  storage.get({\n    key: 'ifHome',\n    success: function(data) {\n      if(!data){\n        router.push({uri:'pages/home'})\n      }\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅推荐写法二\nasync onInit(){\n  const ifHome = await checkifHome()\n  if(!ifHome){\n    router.push({uri:'pages/home'})\n  }\n}\ncheckifHome(){\n  return new Promise((resolve, reject) => {\n    storage.get({\n      key: 'ifHome',\n      success: function(data) {\n        resolve(data) \n      },\n      fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n        reject(code)\n      }\n    })\n  })\n}\n\n\n// ✅推荐写法三\n//可统一封装promise.js,方便其他异步接口复用\nexport function promisify(fn) {\n  if (typeof fn !== 'function') {\n    throw Error('[promisify] the type of `fn` should be function');\n  }\n\n  return (opts={}) => {\n    let { success, fail, complete, ...args } = opts;\n\n    if (typeof success === 'function' || typeof fail === 'function' || typeof complete === 'function') {\n      console.warn('[promisify] [WARN] The `success`, `fail` and `complete` callback will be ignored');\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        fn({\n          ...args,\n          success: data => resolve(data),\n          fail: (data, code) => {\n            let err = new Error(data);\n            err.code = code;\n            reject(err);\n          }\n        });\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n}\n\n//统一封装storage方法\nimport storage from '@system.storage';\nimport {promisify} from './promise';\n\nconst _get = promisify(storage.get);\nconst _set = promisify(storage.set);\nconst _clear = promisify(storage.clear);\nconst _delete = promisify(storage.delete);\nexport default {\n  getItem(key) {\n    return _get({key});\n  },\n\n  setItem(key, value) {\n    return _set({key, value});\n  },\n\n  deleteItem(key) {\n    return _delete({key});\n  },\n\n  clear() {\n    return _clear();\n  },\n}\n\n//logo.ux\nasync onInit(){\n   const ifHome = await storage.getItem('ifHome')\n  if(!ifHome){\n     router.push({uri:'pages/home'})\n  }\n}\n\n\n\n# 首页数据缓存\n\n首页数据如果二次进入，需要再次展示的，可以考虑在应用（或首页）退出时增加上缓存，下次进入从logo页读取缓存后将数据存储在全局，首页page在onInit时直接读取，然后同时发起异步请求进行更新即可；\n\n\n# logo页避免http请求\n\n建议不要在logo页引入http请求，尽可能放到首页执行，防止弱网或者无网情况阻塞页面跳转；\n\n\n# UI先行\n\n如音乐类应用，进入应用建议默认状态为不播放，可以UI先行，如果歌曲信息获取成功立即展示，无需等到audio资源加载完成展示；\n\n\n# 隐私页信息使用静态数据\n\n隐私页的数据代码里使用静态的数据，不用动态获取。需要展示长文本的，可以通过二维码扫码查看，二维码直接本地写死一个h5链接，不要通过接口去获取；\n\n\n# 减少从console打印\n\n尽可能减少console打印，特别是长日志，很影响性能，避免很长的（>10行）console打印，尽可能减少json对象的打印，如果是debug期间需要打印日志，建议使用console.debug，并且配置quickapp.config.js（具体配置如下），在打release包的时候过滤掉console.debug的日志；\n\nconst TerserPlugin = require(\"terser-webpack-plugin\")\nconst webpack = require(\"webpack\")\n\nmodule.exports = {\n  postHook: (config) => {\n    if (config.mode === \"production\") {\n      config.optimization.minimize = true\n      config.optimization.minimizer = [\n        new TerserPlugin({\n          terserOptions: {\n            compress: {\n              pure_funcs: [\"console.debug\"]\n            }\n          }\n        })\n      ]\n    }\n  }\n}\n\n\n\n# 图片缓存/裁剪\n\n如果有较大的（>100kb）动态图片，建议首次加载增加loading页，下载并缓存到本地，后续通过internal://files/XXX.png加载（重要：一般非必要不建议引入在线大图，引入的大图尺寸也不要超过屏幕尺寸，且大小不超过200kb，尽量使用本地图片代替在线图片，或者在线图片里支持resize-尺寸裁剪）\n\n//login.ux\nexport function downloadFile(url) {// 下载图片\n  return new Promise((resolve, reject) => {\n    if(!url){\n      resolve('')\n    }\n    request.download({\n      url,\n      success: function (ret) {\n        const token = ret.token\n        request.onDownloadComplete({\n          token: token,\n          success: function (ret) {\n            console.info(`### request.download ### ret`,ret)\n            resolve(ret.uri)\n          },\n          fail: function (msg, code) {\n            console.info(`### request.onDownloadComplete ### ${code}: ${msg}`)\n            resolve(null)\n          }\n        })\n      }\n    })\n  })\n}\nconst formUrl = 'http://XXX.cdn.homeBg.png'\ndownloadFile(formUrl).then(url => {\n  global.homeBgUrl = url; //url => 'internal://files/homeBg.png'\n})\n \n//home.ux\n<image class=\"w-466 h-466\" src=\"{{bgImage}}\" alt=\"../../common/images/homeBg.png\"></image>\n//....\n  computed:{\n    bgImage() {\n      const img =  global.homeBgUrl || 'http://XXX.cdn.homeBg.png'\n      return img\n    }\n  }\n//....\n \n //logo页\n global.homeBgUrl = await storage.getItem('homeBgUrl')\n \n //根据条件变化，及时进行图片清理\n logoOut(){\n   file.delete({\n    uri:global.homeBgUrl,\n    success: function(data) {\n      console.info(`###delFile sucess ${data}`)\n      resolve(true)\n    },\n    fail: function(data, code) {\n      resolve(false)\n      console.log(`###delFile fail, code = ${code}`)\n    }\n  })\n}\n\n\n\n# 通信类应用通信之前使用diagnosis方法判断连接状态\n\n使用interconnect实现手表app和手机app的通信时，摒弃之前的轮询调用getApkStatus方法，改用新api diagnosis\n\ndata: {\n   status: '',\n   connectNum: 3,\n   conn: null\n},\nonInit() {\n   this.conn = interconnect.instance();\n   this.connectStatus();\n}, \n\n\n// ❌ 不推荐写法\nconnectStatus() {\n  let status = this.conn.getApkStatus();\n  if (status === 'CONNECTED' || this.connectNum === 0){\n    this.status = status;\n    // do something\n  } else if (this.connectNum > 0) {\n    this.connectNum --;\n    setTimeout(() => {\n      this.connectStatus()\n    },500)\n  }\n}\n\n\n// ✅推荐写法\nconnectStatus() {\n  this.conn.diagnosis({\n    success: (data) => {\n      console.log(`handling success, status= ${data.status}`)\n      // do something\n    },\n    fail: (data,code) => {\n      console.log(`handling fail, code = ${code}`)\n      // do something\n    }\n  })\n}  \n\n\n\n# 使用interconnect传输多条数据\n\n手表app向手机app传输多条数据时，若传输数量不大，建议直接一次性发送，无需增加延迟发送\n\n// ❌不推荐写法\nsendMsg(list) {\n  for (let x in list) { \n    setTimeout(() => {\n      this.conn.send({\n        data: list[x],\n        success: ()=>{ },\n        fail: (data: {data, code})=> { }\n      })\n    },x*500) \n  }\n}\n\n\n// ✅推荐写法\nsendMsg(list) {\n  for (let x in list) {            \n    this.conn.send({\n      data: list[x],\n      success: ()=>{ },\n      fail: (data: {data, code})=> { }\n    })\n  }\n}\n",normalizedContent:"# 启动时延优化\n\n\n# 避免settimeout延迟\n\nlogo页如非必要，在执行页面跳转时，不要增加settimeout延迟跳转。如果是需要等待异步结果返回，例如获取storage后决定跳转的下一个页面，建议将异步方法封装成同步，使用await，等待结果返回后立即执行跳转。以storage为例：\n\n// ❌不推荐写法\noninit(){\n  this.checkifhome()\n  settimeout(() => {\n    if(!this.ifhome){\n      router.push({uri:'pages/home'})\n    }\n  },1000)\n}\ncheckifhome(){\n  const that = this \n  storage.get({\n    key: 'ifhome',\n    success: function(data) {\n      that.ifhome = data\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅推荐写法一\noninit(){\n  storage.get({\n    key: 'ifhome',\n    success: function(data) {\n      if(!data){\n        router.push({uri:'pages/home'})\n      }\n    },\n    fail: function(data, code) {\n      console.log(`handling fail, code = ${code}`)\n    }\n  })\n}\n\n\n// ✅推荐写法二\nasync oninit(){\n  const ifhome = await checkifhome()\n  if(!ifhome){\n    router.push({uri:'pages/home'})\n  }\n}\ncheckifhome(){\n  return new promise((resolve, reject) => {\n    storage.get({\n      key: 'ifhome',\n      success: function(data) {\n        resolve(data) \n      },\n      fail: function(data, code) {\n        console.log(`handling fail, code = ${code}`)\n        reject(code)\n      }\n    })\n  })\n}\n\n\n// ✅推荐写法三\n//可统一封装promise.js,方便其他异步接口复用\nexport function promisify(fn) {\n  if (typeof fn !== 'function') {\n    throw error('[promisify] the type of `fn` should be function');\n  }\n\n  return (opts={}) => {\n    let { success, fail, complete, ...args } = opts;\n\n    if (typeof success === 'function' || typeof fail === 'function' || typeof complete === 'function') {\n      console.warn('[promisify] [warn] the `success`, `fail` and `complete` callback will be ignored');\n    }\n\n    return new promise((resolve, reject) => {\n      try {\n        fn({\n          ...args,\n          success: data => resolve(data),\n          fail: (data, code) => {\n            let err = new error(data);\n            err.code = code;\n            reject(err);\n          }\n        });\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n}\n\n//统一封装storage方法\nimport storage from '@system.storage';\nimport {promisify} from './promise';\n\nconst _get = promisify(storage.get);\nconst _set = promisify(storage.set);\nconst _clear = promisify(storage.clear);\nconst _delete = promisify(storage.delete);\nexport default {\n  getitem(key) {\n    return _get({key});\n  },\n\n  setitem(key, value) {\n    return _set({key, value});\n  },\n\n  deleteitem(key) {\n    return _delete({key});\n  },\n\n  clear() {\n    return _clear();\n  },\n}\n\n//logo.ux\nasync oninit(){\n   const ifhome = await storage.getitem('ifhome')\n  if(!ifhome){\n     router.push({uri:'pages/home'})\n  }\n}\n\n\n\n# 首页数据缓存\n\n首页数据如果二次进入，需要再次展示的，可以考虑在应用（或首页）退出时增加上缓存，下次进入从logo页读取缓存后将数据存储在全局，首页page在oninit时直接读取，然后同时发起异步请求进行更新即可；\n\n\n# logo页避免http请求\n\n建议不要在logo页引入http请求，尽可能放到首页执行，防止弱网或者无网情况阻塞页面跳转；\n\n\n# ui先行\n\n如音乐类应用，进入应用建议默认状态为不播放，可以ui先行，如果歌曲信息获取成功立即展示，无需等到audio资源加载完成展示；\n\n\n# 隐私页信息使用静态数据\n\n隐私页的数据代码里使用静态的数据，不用动态获取。需要展示长文本的，可以通过二维码扫码查看，二维码直接本地写死一个h5链接，不要通过接口去获取；\n\n\n# 减少从console打印\n\n尽可能减少console打印，特别是长日志，很影响性能，避免很长的（>10行）console打印，尽可能减少json对象的打印，如果是debug期间需要打印日志，建议使用console.debug，并且配置quickapp.config.js（具体配置如下），在打release包的时候过滤掉console.debug的日志；\n\nconst terserplugin = require(\"terser-webpack-plugin\")\nconst webpack = require(\"webpack\")\n\nmodule.exports = {\n  posthook: (config) => {\n    if (config.mode === \"production\") {\n      config.optimization.minimize = true\n      config.optimization.minimizer = [\n        new terserplugin({\n          terseroptions: {\n            compress: {\n              pure_funcs: [\"console.debug\"]\n            }\n          }\n        })\n      ]\n    }\n  }\n}\n\n\n\n# 图片缓存/裁剪\n\n如果有较大的（>100kb）动态图片，建议首次加载增加loading页，下载并缓存到本地，后续通过internal://files/xxx.png加载（重要：一般非必要不建议引入在线大图，引入的大图尺寸也不要超过屏幕尺寸，且大小不超过200kb，尽量使用本地图片代替在线图片，或者在线图片里支持resize-尺寸裁剪）\n\n//login.ux\nexport function downloadfile(url) {// 下载图片\n  return new promise((resolve, reject) => {\n    if(!url){\n      resolve('')\n    }\n    request.download({\n      url,\n      success: function (ret) {\n        const token = ret.token\n        request.ondownloadcomplete({\n          token: token,\n          success: function (ret) {\n            console.info(`### request.download ### ret`,ret)\n            resolve(ret.uri)\n          },\n          fail: function (msg, code) {\n            console.info(`### request.ondownloadcomplete ### ${code}: ${msg}`)\n            resolve(null)\n          }\n        })\n      }\n    })\n  })\n}\nconst formurl = 'http://xxx.cdn.homebg.png'\ndownloadfile(formurl).then(url => {\n  global.homebgurl = url; //url => 'internal://files/homebg.png'\n})\n \n//home.ux\n<image class=\"w-466 h-466\" src=\"{{bgimage}}\" alt=\"../../common/images/homebg.png\"></image>\n//....\n  computed:{\n    bgimage() {\n      const img =  global.homebgurl || 'http://xxx.cdn.homebg.png'\n      return img\n    }\n  }\n//....\n \n //logo页\n global.homebgurl = await storage.getitem('homebgurl')\n \n //根据条件变化，及时进行图片清理\n logoout(){\n   file.delete({\n    uri:global.homebgurl,\n    success: function(data) {\n      console.info(`###delfile sucess ${data}`)\n      resolve(true)\n    },\n    fail: function(data, code) {\n      resolve(false)\n      console.log(`###delfile fail, code = ${code}`)\n    }\n  })\n}\n\n\n\n# 通信类应用通信之前使用diagnosis方法判断连接状态\n\n使用interconnect实现手表app和手机app的通信时，摒弃之前的轮询调用getapkstatus方法，改用新api diagnosis\n\ndata: {\n   status: '',\n   connectnum: 3,\n   conn: null\n},\noninit() {\n   this.conn = interconnect.instance();\n   this.connectstatus();\n}, \n\n\n// ❌ 不推荐写法\nconnectstatus() {\n  let status = this.conn.getapkstatus();\n  if (status === 'connected' || this.connectnum === 0){\n    this.status = status;\n    // do something\n  } else if (this.connectnum > 0) {\n    this.connectnum --;\n    settimeout(() => {\n      this.connectstatus()\n    },500)\n  }\n}\n\n\n// ✅推荐写法\nconnectstatus() {\n  this.conn.diagnosis({\n    success: (data) => {\n      console.log(`handling success, status= ${data.status}`)\n      // do something\n    },\n    fail: (data,code) => {\n      console.log(`handling fail, code = ${code}`)\n      // do something\n    }\n  })\n}  \n\n\n\n# 使用interconnect传输多条数据\n\n手表app向手机app传输多条数据时，若传输数量不大，建议直接一次性发送，无需增加延迟发送\n\n// ❌不推荐写法\nsendmsg(list) {\n  for (let x in list) { \n    settimeout(() => {\n      this.conn.send({\n        data: list[x],\n        success: ()=>{ },\n        fail: (data: {data, code})=> { }\n      })\n    },x*500) \n  }\n}\n\n\n// ✅推荐写法\nsendmsg(list) {\n  for (let x in list) {            \n    this.conn.send({\n      data: list[x],\n      success: ()=>{ },\n      fail: (data: {data, code})=> { }\n    })\n  }\n}\n",charsets:{cjk:!0}},{title:"内存优化",frontmatter:{},regularPath:"/zh/guide/best-practice/memory.html",relativePath:"zh/guide/best-practice/memory.md",key:"v-2336a5d6",path:"/zh/guide/best-practice/memory.html",headers:[{level:2,title:"代码注意事项",slug:"代码注意事项",normalizedTitle:"代码注意事项",charIndex:101},{level:2,title:"减少打包代码体积",slug:"减少打包代码体积",normalizedTitle:"减少打包代码体积",charIndex:3506}],headersStr:"代码注意事项 减少打包代码体积",content:'# 内存优化\n\n由于运动手表整体内存较小，对于三方应用内存占用量要求比较高。根据之前遇到的问题，给出一份三方应用开发时的注意事项清单，以帮助开发者尽量降低应用的内存占用，符合手表应用验收标准。\n\n\n# 代码注意事项\n\n 1. 和 UI 无关，不需要绑定的数据，不要声明到 viewModel 的数据里，减少 observer 或者数据代理\n\n<template>\n  <div>\n    <text>{{name}}</text>     \n  </div>\n</template>\n\n<script>\n  const someObj = { a: 1 } // 推荐写法\n  export default {\n    protected: {\n      name: \'aaa\',\n      someObj: { // 不推荐写法\n        a: 1\n      }\n    }\n  }\n<\/script>\n\n\n 2. 页面对象更新时，尽量原地更新，不要重新赋值，开辟新的内存空间\n\nexport default {\n  protected: {\n    list: [{\n      name: \'aa\',\n      age: 22\n    }]\n  },\n  \n  onClick() {\n    // 不推荐写法\n    this.list = [{\n      name: \'bb\',\n      age: 21\n    }]\n    // 推荐写法\n    this.list[0].name = \'bb\',\n    this.list[0].age = 21\n  }\n}\n\n\n 3. 页面中声明的属性和方法不要缓存到全局上\n\n页面销毁时，为清理内存，会将页面对象相关的属性和方法尽量解除引用。如果被引用到全局，就无法清理其占用的内存，并且在其他地方调用该缓存的属性和方法，可能引起报错。\n\nexport default {\n  protected: {\n    list: [{\n      name: \'aa\',\n      age: 22\n    }]\n  },\n  \n  onShow() {\n    this.$app.$def.somearray.push(this.foo) // 不推荐写法\n  }，\n  \n  foo() {\n    this.list.push({\n      name: \'bb\',\n      age: 21\n    })\n  }\n}\n\n\n 4. 页面销毁时，清除未执行完的定时器\n\nexport default {\n  protected: {\n    timer: null\n  }\n  \n  onShow() {\n    this.timer = setTimeout(()=>{}, 1000000)\n  }\n  \n  onDestroy() {\n    if(this.timer){\n      clearTimeout(this.timer)\n    }\n  }\n}\n\n\n 5. 读取文件数据，用完后及时释放\n\nlet foo = await storage.getItem(\'key\')\nlet bar = await file.readText(\'path\')\n\nlet fooObj = JSON.parse(foo)\nlet barObj = JSON.parse(bar)\n\n// 用完后及时释放\nfoo = null\nbar = null\n\nfooObj = null\nbarObj = null\n\n\n 6. 调用runGC方法\n\n通过执行全局对象global上的runGC方法，及时进行垃圾回收，避免内存泄漏。不要频繁调用，防止页面卡顿。\n\nglobal.runGC()\n\n\n 7. static属性\n\ntemplate模板中提供了static属性支持，如果绑定的变量后面不会再改变，添加static标记有助于框架减少实现动态节点，减少内存，也会降低页面销毁删除对象的时间。\n\n<template>\n  <div>\n    <text static >{{name}}</text>\n    <image static src="/assets/icon/a.png"/>   \n  </div>\n</template>\n\n<script>\n  export default {\n    protected: {\n      name: \'aaa\'\n    }\n  }\n<\/script>\n\n\n另外，还支持在 template 上使用.static修饰符修饰节点的某个静态属性，适用于节点的该属性值仅在初始时被赋值一次，之后不会再变更。使用语法：attr.static="{{ attrValue }}"\n\n注意\n\n * 节点的 if / for 静态属性只能通过 .static 修饰词进行修饰\n * 节点的 static 属性优先级比 .static高。对于声明了 static 属性的节点，可以不需要额外声明某个属性的静态修饰词 attr.static\n\n<template>\n  <div>\n    <div if.static="{{ bool }}">\n      <text style="{{ styl }}" someattr="{{ some }}" class="{{ cls }}" static>{{name}}</text>\n\n      <input style="{{ styl }}" name="{{ some }}" class="{{ cls }}" value="{{ name }}" static />\n    </div>\n\n    <text\n      if.static="{{ bool }}"\n      style.static="{{ styl }}"\n      someattr.static="{{ some }}"\n      class.static="{{ cls }}"\n      value.static\n    >{{name}}</text>\n\n    <input\n      if.static="{{ bool }}"\n      style.static="{{ styl }}"\n      someattr.static="{{ some }}"\n      class.static="{{ cls }}"\n      value.static="{{name}}"\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      name: \'aaa\',\n      bool: true,\n      cls: \'basic-text\',\n      some: \'someattr\',\n      styl: {\n        backgroundColor: \'#d1d1d1\'\n      }\n    }\n  }\n<\/script>\n\n\nblock组件是一个逻辑区块节点，如果增加了static属性，表示block包含的所有节点都是静态数据绑定，绑定的数据只计算一次，后面不会再发生改变，适用于绑定一些枚举值或者不可变的列表数据等，有效减少内存占用。\n\n<template>\n  \x3c!-- block 内部节点数据只计算一次只渲染一次 --\x3e\n  <block static>\n    <text class="{{cls}}">标题： {{title}}</text>\n    <text>条件渲染</text>\n    <list>\n      <list-item for="{{list}}" type="item">\n        <text>{{$item}}</text>\n      </list-item>\n    </list>\n  </block>\n</template>\n<script>\n  export default {\n    private: {\n      title: \'我是标题1\',\n      cls: \'txt-cls\',\n      display: true,\n      list: [\'a\', \'b\', \'c\']\n    }\n  }\n<\/script>\n\n\n\n# 减少打包代码体积\n\n 1. 减少不必要的三方依赖，选用轻量的三方依赖\n\n对于package.json中的三方依赖，去除没有用到的依赖，对于必要的大型依赖，尽可能替换成轻量的依赖。\n\n 2. 使用全局方法\n\n将通用的方法、常量和对象实例统一挂在global上，在页面中不用再import，需要用的时候直接从global上取。\n\n// global.js\nimport foo from \'./foo\'\nimport bar from \'./bar\'\n\nglobal.foo = foo\nglobal.bar = bar\n\n// app.ux\nimport  \'./global\'\n\n\n// pages/xxx/index.js\nconst {foo, bar} = global\n\nexport default {\n    // 调用foo、bar\n    //......\n}\n\n\n以QQ音乐为例，以下为优化前后效果对比：\n\n       优化前       替换轻量级依赖   使用全局方法\n代码行数   21965     13156     6807\n最大内存   4842844   3295928   1872528\n\n 3. 在保证图片质量的前提下，尽量用低分辨率图片\n    大尺寸图片在加载时会占用较多内存，可以先将大尺寸图片缩放成小尺寸图片，再进行压缩(https://tinypng.com)，减少图片的体积。\n\n 4. 去除没有用到的css和js\n    对于css中没有用到的样式，js中没有用到的变量和函数，可以删除或者注释，精简代码。\n\n 5. 尽可能减少页面数量\n    在不影响业务需求的前提下，用最少的页面去实现，减少代码体积，简化应用逻辑。',normalizedContent:'# 内存优化\n\n由于运动手表整体内存较小，对于三方应用内存占用量要求比较高。根据之前遇到的问题，给出一份三方应用开发时的注意事项清单，以帮助开发者尽量降低应用的内存占用，符合手表应用验收标准。\n\n\n# 代码注意事项\n\n 1. 和 ui 无关，不需要绑定的数据，不要声明到 viewmodel 的数据里，减少 observer 或者数据代理\n\n<template>\n  <div>\n    <text>{{name}}</text>     \n  </div>\n</template>\n\n<script>\n  const someobj = { a: 1 } // 推荐写法\n  export default {\n    protected: {\n      name: \'aaa\',\n      someobj: { // 不推荐写法\n        a: 1\n      }\n    }\n  }\n<\/script>\n\n\n 2. 页面对象更新时，尽量原地更新，不要重新赋值，开辟新的内存空间\n\nexport default {\n  protected: {\n    list: [{\n      name: \'aa\',\n      age: 22\n    }]\n  },\n  \n  onclick() {\n    // 不推荐写法\n    this.list = [{\n      name: \'bb\',\n      age: 21\n    }]\n    // 推荐写法\n    this.list[0].name = \'bb\',\n    this.list[0].age = 21\n  }\n}\n\n\n 3. 页面中声明的属性和方法不要缓存到全局上\n\n页面销毁时，为清理内存，会将页面对象相关的属性和方法尽量解除引用。如果被引用到全局，就无法清理其占用的内存，并且在其他地方调用该缓存的属性和方法，可能引起报错。\n\nexport default {\n  protected: {\n    list: [{\n      name: \'aa\',\n      age: 22\n    }]\n  },\n  \n  onshow() {\n    this.$app.$def.somearray.push(this.foo) // 不推荐写法\n  }，\n  \n  foo() {\n    this.list.push({\n      name: \'bb\',\n      age: 21\n    })\n  }\n}\n\n\n 4. 页面销毁时，清除未执行完的定时器\n\nexport default {\n  protected: {\n    timer: null\n  }\n  \n  onshow() {\n    this.timer = settimeout(()=>{}, 1000000)\n  }\n  \n  ondestroy() {\n    if(this.timer){\n      cleartimeout(this.timer)\n    }\n  }\n}\n\n\n 5. 读取文件数据，用完后及时释放\n\nlet foo = await storage.getitem(\'key\')\nlet bar = await file.readtext(\'path\')\n\nlet fooobj = json.parse(foo)\nlet barobj = json.parse(bar)\n\n// 用完后及时释放\nfoo = null\nbar = null\n\nfooobj = null\nbarobj = null\n\n\n 6. 调用rungc方法\n\n通过执行全局对象global上的rungc方法，及时进行垃圾回收，避免内存泄漏。不要频繁调用，防止页面卡顿。\n\nglobal.rungc()\n\n\n 7. static属性\n\ntemplate模板中提供了static属性支持，如果绑定的变量后面不会再改变，添加static标记有助于框架减少实现动态节点，减少内存，也会降低页面销毁删除对象的时间。\n\n<template>\n  <div>\n    <text static >{{name}}</text>\n    <image static src="/assets/icon/a.png"/>   \n  </div>\n</template>\n\n<script>\n  export default {\n    protected: {\n      name: \'aaa\'\n    }\n  }\n<\/script>\n\n\n另外，还支持在 template 上使用.static修饰符修饰节点的某个静态属性，适用于节点的该属性值仅在初始时被赋值一次，之后不会再变更。使用语法：attr.static="{{ attrvalue }}"\n\n注意\n\n * 节点的 if / for 静态属性只能通过 .static 修饰词进行修饰\n * 节点的 static 属性优先级比 .static高。对于声明了 static 属性的节点，可以不需要额外声明某个属性的静态修饰词 attr.static\n\n<template>\n  <div>\n    <div if.static="{{ bool }}">\n      <text style="{{ styl }}" someattr="{{ some }}" class="{{ cls }}" static>{{name}}</text>\n\n      <input style="{{ styl }}" name="{{ some }}" class="{{ cls }}" value="{{ name }}" static />\n    </div>\n\n    <text\n      if.static="{{ bool }}"\n      style.static="{{ styl }}"\n      someattr.static="{{ some }}"\n      class.static="{{ cls }}"\n      value.static\n    >{{name}}</text>\n\n    <input\n      if.static="{{ bool }}"\n      style.static="{{ styl }}"\n      someattr.static="{{ some }}"\n      class.static="{{ cls }}"\n      value.static="{{name}}"\n    />\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      name: \'aaa\',\n      bool: true,\n      cls: \'basic-text\',\n      some: \'someattr\',\n      styl: {\n        backgroundcolor: \'#d1d1d1\'\n      }\n    }\n  }\n<\/script>\n\n\nblock组件是一个逻辑区块节点，如果增加了static属性，表示block包含的所有节点都是静态数据绑定，绑定的数据只计算一次，后面不会再发生改变，适用于绑定一些枚举值或者不可变的列表数据等，有效减少内存占用。\n\n<template>\n  \x3c!-- block 内部节点数据只计算一次只渲染一次 --\x3e\n  <block static>\n    <text class="{{cls}}">标题： {{title}}</text>\n    <text>条件渲染</text>\n    <list>\n      <list-item for="{{list}}" type="item">\n        <text>{{$item}}</text>\n      </list-item>\n    </list>\n  </block>\n</template>\n<script>\n  export default {\n    private: {\n      title: \'我是标题1\',\n      cls: \'txt-cls\',\n      display: true,\n      list: [\'a\', \'b\', \'c\']\n    }\n  }\n<\/script>\n\n\n\n# 减少打包代码体积\n\n 1. 减少不必要的三方依赖，选用轻量的三方依赖\n\n对于package.json中的三方依赖，去除没有用到的依赖，对于必要的大型依赖，尽可能替换成轻量的依赖。\n\n 2. 使用全局方法\n\n将通用的方法、常量和对象实例统一挂在global上，在页面中不用再import，需要用的时候直接从global上取。\n\n// global.js\nimport foo from \'./foo\'\nimport bar from \'./bar\'\n\nglobal.foo = foo\nglobal.bar = bar\n\n// app.ux\nimport  \'./global\'\n\n\n// pages/xxx/index.js\nconst {foo, bar} = global\n\nexport default {\n    // 调用foo、bar\n    //......\n}\n\n\n以qq音乐为例，以下为优化前后效果对比：\n\n       优化前       替换轻量级依赖   使用全局方法\n代码行数   21965     13156     6807\n最大内存   4842844   3295928   1872528\n\n 3. 在保证图片质量的前提下，尽量用低分辨率图片\n    大尺寸图片在加载时会占用较多内存，可以先将大尺寸图片缩放成小尺寸图片，再进行压缩(https://tinypng.com)，减少图片的体积。\n\n 4. 去除没有用到的css和js\n    对于css中没有用到的样式，js中没有用到的变量和函数，可以删除或者注释，精简代码。\n\n 5. 尽可能减少页面数量\n    在不影响业务需求的前提下，用最少的页面去实现，减少代码体积，简化应用逻辑。',charsets:{cjk:!0}},{title:"设计指南",frontmatter:{},regularPath:"/zh/guide/design/",relativePath:"zh/guide/design/README.md",key:"v-729846c2",path:"/zh/guide/design/",headersStr:null,content:"# 设计指南\n\nvela 设备设计相关注意事项。\n\n * 多屏设计",normalizedContent:"# 设计指南\n\nvela 设备设计相关注意事项。\n\n * 多屏设计",charsets:{cjk:!0}},{title:"多屏设计",frontmatter:{},regularPath:"/zh/guide/design/multi-screens.html",relativePath:"zh/guide/design/multi-screens.md",key:"v-7065f1d4",path:"/zh/guide/design/multi-screens.html",headers:[{level:2,title:"小米智能穿戴设备",slug:"小米智能穿戴设备",normalizedTitle:"小米智能穿戴设备",charIndex:11},{level:2,title:"设计建议",slug:"设计建议",normalizedTitle:"设计建议",charIndex:794},{level:2,title:"弧形屏幕适配安全区域",slug:"弧形屏幕适配安全区域",normalizedTitle:"弧形屏幕适配安全区域",charIndex:1115}],headersStr:"小米智能穿戴设备 设计建议 弧形屏幕适配安全区域",content:"# 多屏设计\n\n\n# 小米智能穿戴设备\n\n目前搭载vela系统的小米可穿戴设备主要为智能手表、手环产品。手表屏幕形状为圆形或矩形，手环产品为矩形和胶囊型屏幕为主。\n\n已发布的vela穿戴设备数据参考：\n\n设备类型   设备型号                    屏幕形状     屏幕尺寸     分辨率       PPI   DPR\n手表     Xiaomi Watch S1 Pro     圆形       1.47英寸   480x480   326   2.0\n手表     Xiaomi Watch H1         圆形       1.43英寸   466x466   326   2.0\n手表     Xiaomi Watch S3         圆形       1.43英寸   466x466   326   2.0\n手表     Xiaomi Watch S4 sport   圆形       1.43英寸   466x466   326   2.0\n手表     Xiaomi Watch S4         圆形       1.43英寸   466x466   326   2.0\n手表     REDMI Watch 5           矩形       2.07英寸   432x514   324   2.0\n手环     小米手环8 Pro               矩形       1.74英寸   336x480   336   2.1\n手环     小米手环9                   跑道型胶囊屏   1.62英寸   192x490   325   2\n手环     小米手环9 Pro               矩形       1.74英寸   336x480   336   2.1\n\n\n# 设计建议\n\n产品接入时可以根据应用场景及可适配的产品形态来做设计决策。若所属产品场景在手环、手表等多种屏幕形态都能很好的交互，建议出三类设计稿满足胶囊形、圆形、矩形屏的交互方案。\n\n不同形状屏幕数据参考：\n\n屏幕形状     圆屏        矩形屏          胶囊屏\n长宽比范围    W/H=1     0.5<=W/H<1   0.3<W/H<0.5\n推荐长宽比例   1         0.7          0.39\n推荐分辨率    466x466   336x480      192x490\n\n推荐设计三套UI交互适配三类主要屏幕，若圆屏矩形屏能够复用的话可以设计圆形、矩形屏采用一套，胶囊屏采用一套。\n\n\n# 弧形屏幕适配安全区域\n\n对于圆形以及胶囊形屏幕，弧形的屏幕边缘会带来一些显示问题，在UI设计时需要考虑屏幕的安全区域问题，将主体功能设计在屏幕安全区域内。\n\n比如，文本显示或内容列表，需要考虑边缘位置的显示完整性和可交互性。\n\n图示里灰色区域分别为圆屏、胶囊屏安全区。",normalizedContent:"# 多屏设计\n\n\n# 小米智能穿戴设备\n\n目前搭载vela系统的小米可穿戴设备主要为智能手表、手环产品。手表屏幕形状为圆形或矩形，手环产品为矩形和胶囊型屏幕为主。\n\n已发布的vela穿戴设备数据参考：\n\n设备类型   设备型号                    屏幕形状     屏幕尺寸     分辨率       ppi   dpr\n手表     xiaomi watch s1 pro     圆形       1.47英寸   480x480   326   2.0\n手表     xiaomi watch h1         圆形       1.43英寸   466x466   326   2.0\n手表     xiaomi watch s3         圆形       1.43英寸   466x466   326   2.0\n手表     xiaomi watch s4 sport   圆形       1.43英寸   466x466   326   2.0\n手表     xiaomi watch s4         圆形       1.43英寸   466x466   326   2.0\n手表     redmi watch 5           矩形       2.07英寸   432x514   324   2.0\n手环     小米手环8 pro               矩形       1.74英寸   336x480   336   2.1\n手环     小米手环9                   跑道型胶囊屏   1.62英寸   192x490   325   2\n手环     小米手环9 pro               矩形       1.74英寸   336x480   336   2.1\n\n\n# 设计建议\n\n产品接入时可以根据应用场景及可适配的产品形态来做设计决策。若所属产品场景在手环、手表等多种屏幕形态都能很好的交互，建议出三类设计稿满足胶囊形、圆形、矩形屏的交互方案。\n\n不同形状屏幕数据参考：\n\n屏幕形状     圆屏        矩形屏          胶囊屏\n长宽比范围    w/h=1     0.5<=w/h<1   0.3<w/h<0.5\n推荐长宽比例   1         0.7          0.39\n推荐分辨率    466x466   336x480      192x490\n\n推荐设计三套ui交互适配三类主要屏幕，若圆屏矩形屏能够复用的话可以设计圆形、矩形屏采用一套，胶囊屏采用一套。\n\n\n# 弧形屏幕适配安全区域\n\n对于圆形以及胶囊形屏幕，弧形的屏幕边缘会带来一些显示问题，在ui设计时需要考虑屏幕的安全区域问题，将主体功能设计在屏幕安全区域内。\n\n比如，文本显示或内容列表，需要考虑边缘位置的显示完整性和可交互性。\n\n图示里灰色区域分别为圆屏、胶囊屏安全区。",charsets:{cjk:!0}},{title:"开发者物料",frontmatter:{},regularPath:"/zh/guide/developer-materials/",relativePath:"zh/guide/developer-materials/index.md",key:"v-7c187e6a",path:"/zh/guide/developer-materials/",headersStr:null,content:"# 开发者物料\n\n开发者物料表示快应用平台为开发者提供的各种资源和工具，当前包含拓展组件，未来会增加页面模板、功能接口、开发工具等更多支持。欢迎每一位开发者与我们联系vela-appframework@xiaomi.com，分享您的需求或贡献您的物料资源，共同推动技术的进步和创新，建设更加繁荣的快应用生态。\n\n拓展组件本质是开发者编写的自定义组件，其他开发者如果想要使用拓展组件，只需将项目地址中的组件文件夹拷贝到自己的工程目录中，通过<import>方式引入到页面中使用。同时，拓展组件为开发者提供丰富的属性配置和回调事件。\n\n拓展组件的这种设计方式可以在防止页面与组件产生不必要耦合关系的规则下，保证页面对组件的管理能力，帮助开发者更好地组织逻辑与代码，提升项目的可维护性。",normalizedContent:"# 开发者物料\n\n开发者物料表示快应用平台为开发者提供的各种资源和工具，当前包含拓展组件，未来会增加页面模板、功能接口、开发工具等更多支持。欢迎每一位开发者与我们联系vela-appframework@xiaomi.com，分享您的需求或贡献您的物料资源，共同推动技术的进步和创新，建设更加繁荣的快应用生态。\n\n拓展组件本质是开发者编写的自定义组件，其他开发者如果想要使用拓展组件，只需将项目地址中的组件文件夹拷贝到自己的工程目录中，通过<import>方式引入到页面中使用。同时，拓展组件为开发者提供丰富的属性配置和回调事件。\n\n拓展组件的这种设计方式可以在防止页面与组件产生不必要耦合关系的规则下，保证页面对组件的管理能力，帮助开发者更好地组织逻辑与代码，提升项目的可维护性。",charsets:{cjk:!0}},{title:"拓展组件",frontmatter:{},regularPath:"/zh/guide/developer-materials/extension-components.html",relativePath:"zh/guide/developer-materials/extension-components.md",key:"v-215b5716",path:"/zh/guide/developer-materials/extension-components.html",headers:[{level:2,title:"input-method",slug:"input-method",normalizedTitle:"input-method",charIndex:11},{level:3,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:28},{level:3,title:"示例预览",slug:"示例预览",normalizedTitle:"示例预览",charIndex:81},{level:3,title:"项目地址",slug:"项目地址",normalizedTitle:"项目地址",charIndex:151}],headersStr:"input-method 概述 示例预览 项目地址",content:"# 拓展组件\n\n\n# input-method\n\n\n# 概述\n\n输入法组件，适配不同屏幕形状，支持两种主流键盘布局——全键盘模式和九键模式下的中英文输入\n\n\n# 示例预览\n\n# 全键盘模式\n\n * 圆形屏幕\n\n\n\n * 矩形屏幕\n\n\n\n * 胶囊屏幕\n\n\n\n# 九键模式\n\n * 圆形屏幕\n\n\n\n\n# 项目地址\n\n * Github",normalizedContent:"# 拓展组件\n\n\n# input-method\n\n\n# 概述\n\n输入法组件，适配不同屏幕形状，支持两种主流键盘布局——全键盘模式和九键模式下的中英文输入\n\n\n# 示例预览\n\n# 全键盘模式\n\n * 圆形屏幕\n\n\n\n * 矩形屏幕\n\n\n\n * 胶囊屏幕\n\n\n\n# 九键模式\n\n * 圆形屏幕\n\n\n\n\n# 项目地址\n\n * github",charsets:{cjk:!0}},{title:"框架简介",frontmatter:{},regularPath:"/zh/guide/framework/",relativePath:"zh/guide/framework/README.md",key:"v-f53a3056",path:"/zh/guide/framework/",headers:[{level:2,title:"文件结构",slug:"文件结构",normalizedTitle:"文件结构",charIndex:113},{level:2,title:"应用框架",slug:"应用框架",normalizedTitle:"应用框架",charIndex:9},{level:3,title:"路由管理",slug:"路由管理",normalizedTitle:"路由管理",charIndex:269},{level:3,title:"数据绑定",slug:"数据绑定",normalizedTitle:"数据绑定",charIndex:390},{level:3,title:"界面组件",slug:"界面组件",normalizedTitle:"界面组件",charIndex:473},{level:3,title:"原生接口",slug:"原生接口",normalizedTitle:"原生接口",charIndex:596}],headersStr:"文件结构 应用框架 路由管理 数据绑定 界面组件 原生接口",content:"# 框架简介\n\n本应用框架是一套以前端开发技术栈为主进行应用开发的框架，采用流行的前端开发模式，贴合主流前端开发者的思维习惯，同时大幅提升应用的性能，提供大量前端环境无法使用的系统能力，以及很多第三方服务的对接能力。\n\n\n# 文件结构\n\n应用由一个 manifest.json 和多个页面 ux 文件组成。manifest.json 文件中定义应用描述、功能权限声明、系统配置和页面路由等信息；页面 ux 文件中完成单个页面的具体实现，包括 UI 模板、样式单、数据定义和回调事件处理等。具体使用参看项目结构。\n\n\n# 应用框架\n\n\n# 路由管理\n\n框架负责管理整个应用的页面路由，实现页面间的无缝切换，管理每个页面的完整生命周期。开发者需要将页面在 manifest.json 中进行注册，在代码中通过框架提供的接口方法实现页面的切换。具体使用参看项目配置、页面切换。\n\n\n# 数据绑定\n\n数据绑定可以让数据与视图非常简单地保持同步。当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新。数据绑定的具体使用参看模板语法。\n\n\n# 界面组件\n\n框架提供了一套基础的界面组件，界面组件标签除了支持常用的 HTML5 标签，例如<div>，<input>等之外，还提供与原生 UI 相关的组件标签，例如<switch>，<slider>，<list>等。具体使用参看组件。\n\n\n# 原生接口\n\n框架还提供丰富的原生接口，既有通用的系统功能，也有第三方服务的对接，如网络请求、本地存储等等。这些 API 可以大大节省开发者工作量，快速开发出应用。具体使用参看接口。",normalizedContent:"# 框架简介\n\n本应用框架是一套以前端开发技术栈为主进行应用开发的框架，采用流行的前端开发模式，贴合主流前端开发者的思维习惯，同时大幅提升应用的性能，提供大量前端环境无法使用的系统能力，以及很多第三方服务的对接能力。\n\n\n# 文件结构\n\n应用由一个 manifest.json 和多个页面 ux 文件组成。manifest.json 文件中定义应用描述、功能权限声明、系统配置和页面路由等信息；页面 ux 文件中完成单个页面的具体实现，包括 ui 模板、样式单、数据定义和回调事件处理等。具体使用参看项目结构。\n\n\n# 应用框架\n\n\n# 路由管理\n\n框架负责管理整个应用的页面路由，实现页面间的无缝切换，管理每个页面的完整生命周期。开发者需要将页面在 manifest.json 中进行注册，在代码中通过框架提供的接口方法实现页面的切换。具体使用参看项目配置、页面切换。\n\n\n# 数据绑定\n\n数据绑定可以让数据与视图非常简单地保持同步。当做数据修改的时候，只需要在逻辑层修改数据，视图层就会做相应的更新。数据绑定的具体使用参看模板语法。\n\n\n# 界面组件\n\n框架提供了一套基础的界面组件，界面组件标签除了支持常用的 html5 标签，例如<div>，<input>等之外，还提供与原生 ui 相关的组件标签，例如<switch>，<slider>，<list>等。具体使用参看组件。\n\n\n# 原生接口\n\n框架还提供丰富的原生接口，既有通用的系统功能，也有第三方服务的对接，如网络请求、本地存储等等。这些 api 可以大大节省开发者工作量，快速开发出应用。具体使用参看接口。",charsets:{cjk:!0}},{title:"项目配置",frontmatter:{},regularPath:"/zh/guide/framework/manifest.html",relativePath:"zh/guide/framework/manifest.md",key:"v-59058056",path:"/zh/guide/framework/manifest.html",headers:[{level:2,title:"manifest",slug:"manifest",normalizedTitle:"manifest",charIndex:8},{level:3,title:"config",slug:"config",normalizedTitle:"config",charIndex:753},{level:3,title:"minAPILevel",slug:"minapilevel",normalizedTitle:"minapilevel",charIndex:567},{level:3,title:"router",slug:"router",normalizedTitle:"router",charIndex:813},{level:3,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:2073},{level:3,title:"display",slug:"display",normalizedTitle:"display",charIndex:871},{level:3,title:"权限说明",slug:"权限说明",normalizedTitle:"权限说明",charIndex:3470}],headersStr:"manifest config minAPILevel router 示例代码 display 权限说明",content:'# 项目配置\n\nmanifest.json文件中包含了应用描述、接口声明、页面路由信息。\n\n\n# manifest\n\n属性               类型              默认值     必填   描述\npackage          String          -       是    应用包名，确认与原生应用的包名不一致，推荐采用 com.company.module\n                                              的格式，如：com.example.demo\nname             String          -       是    应用名称，6 个汉字以内，与应用商店保存的名称一致，用于在桌面图标、弹窗等处显示应用名称\nicon             String          -       是    应用图标，提供 192x192 大小的即可\nversionName      String          -       否    应用版本名称，如："1.0"\nversionCode      Integer         -       是    应用版本号，从1自增，推荐每次重新上传包时versionCode+1\nminAPILevel      Integer         1       否    支持的最小 API 标准版本号，兼容性检查，避免上线后在低版本平台运行并导致不兼容；如果不填按照内测版本处理\nfeatures         Array           -       否    接口列表，绝大部分接口都需要在这里声明，否则不能调用，详见每个接口的文档说明\nconfig           Object          -       是    系统配置信息，详见下面说明\nrouter           Object          -       是    路由信息，详见下面说明\ndisplay          Object          -       否    UI 显示相关配置，详见下面说明\ndeviceTypeList   Array<String>   watch   否    可选值有：watch、tv、car、phone，现只支持watch\npermissions      Array           -       否    权限申请，示例：[{ "name": "hapjs.permission.LOCATION" }]\n\n\n# config\n\n用于定义系统配置和全局数据。\n\n属性            类型        默认值   描述\nlogLevel      String    log   打印日志等级，分为 off、error、warn、info、log、debug\ndesignWidth   Integer   -     页面设计基准宽度，根据实际设备宽度来缩放元素大小\nbackground    Object    -     后台运行配置信息，可使用 features 字段申请需要在后台使用的接口（同时仍需在最外层的 features\n                              字段中声明）。可申请的接口为：\n                              system.audio\n                              system.geolocation\n                              system.request 等\n                              详细用法参见 后台运行 脚本\n\n\n# minAPILevel\n\n支持的最小 API 标准版本号，标识开发者的 rpk 包能兼容运行在最小实现了该版本 API 标准的设备上，其值默认为1。当使用了 1 及以上的 API 标准版本新增特性时，就必须确保 minAPILevel 最低为该版本号，避免上线后在实现了更低版本 API 标准的设备上运行出错。\n\n示例如下：\n\n{\n  "minAPILevel": 1\n}\n\n\n\n# router\n\n用于定义页面的组成和相关配置信息，如果页面没有配置路由信息，则在编译打包时跳过。\n\n属性      类型       默认值   必填   描述\nentry   String   -     是    首页名称，使用分包功能时，建议将首页定义在基础包\npages   Object   -     是    页面配置列表，key 值为页面名称（对应页面目录名，例如 Hello 对应\'Hello\'目录），value\n                            为页面详细配置 page，详见下面说明\n\n示例代码：\n\n"router": {\n  "entry": "Demo",\n  "pages": {\n    "Demo": {\n      "component": "index"\n    }\n  }\n}\n\n\n# router.pages\n\n用于定义单个页面路由信息。\n\n属性           类型       默认值        必填   描述\ncomponent    String   -          是    页面对应的组件名，与 ux 文件名保持一致，例如"hello" 对应 "hello.ux"\npath         String   /<页面名称>    否    页面路径，例如"/user",不填则默认为/<页面名称>\n                                      path 必须唯一，不能和其他 page 的 path 相同\n                                      下面 page 的 path 因为缺失，会被设置为"/Index"：\n                                      "Index": {"component": "index"}\nlaunchMode   String   standard   否    声明页面的启动模式，支持"singleTask"，"standard"两种页面启动模式\n                                      标识为"singleTask"模式时每次打开目标页面都会打开已有的目标页面并回调 onRefresh\n                                      生命周期函数，清除该页面上打开的其他页面，没有打开过此页面时会创建新的目标页面实例\n                                      标识为"standard"模式时会每次打开新的目标页面（多次打开目标页面地址时会存在多个相同页面）\n\n\n# 示例代码\n\n{\n  "package": "com.company.unit",\n  "name": "appName",\n  "icon": "/Common/icon.png",\n  "versionName": "1.0",\n  "versionCode": 1,\n  "minPlatformVersion": 1000,\n  "features": [{ "name": "system.network" }],\n  "router": {\n    "entry": "Hello",\n    "pages": {\n      "Hello": {\n        "component": "hello",\n        "path": "/"\n      }\n    }\n  }\n}\n\n\n\n# display\n\n用于定义与 UI 显示相关的配置。\n\n如果在 display 对象下定义以下属性值，则生效范围为此JS 应用全部页面；\n\n属性                类型       默认值       描述\nbackgroundColor   String   #ffffff   窗口背景颜色\n\n\n# 权限说明\n\n权限名                            FEATURE              API           描述       权限错误码\nhapjs.permission.LOCATION      system.geolocation   getLocation   地理位置     400： 拒绝授予权限\n                                                    subscribe              402： 权限错误（未声明该权限）\n                                                    unsubscribe\nhapjs.permission.DEVICE_INFO   system.device        getSerial     获取设备信息   400： 拒绝授予权限\n                                                    getDeviceId            402： 权限错误（未声明该权限）',normalizedContent:'# 项目配置\n\nmanifest.json文件中包含了应用描述、接口声明、页面路由信息。\n\n\n# manifest\n\n属性               类型              默认值     必填   描述\npackage          string          -       是    应用包名，确认与原生应用的包名不一致，推荐采用 com.company.module\n                                              的格式，如：com.example.demo\nname             string          -       是    应用名称，6 个汉字以内，与应用商店保存的名称一致，用于在桌面图标、弹窗等处显示应用名称\nicon             string          -       是    应用图标，提供 192x192 大小的即可\nversionname      string          -       否    应用版本名称，如："1.0"\nversioncode      integer         -       是    应用版本号，从1自增，推荐每次重新上传包时versioncode+1\nminapilevel      integer         1       否    支持的最小 api 标准版本号，兼容性检查，避免上线后在低版本平台运行并导致不兼容；如果不填按照内测版本处理\nfeatures         array           -       否    接口列表，绝大部分接口都需要在这里声明，否则不能调用，详见每个接口的文档说明\nconfig           object          -       是    系统配置信息，详见下面说明\nrouter           object          -       是    路由信息，详见下面说明\ndisplay          object          -       否    ui 显示相关配置，详见下面说明\ndevicetypelist   array<string>   watch   否    可选值有：watch、tv、car、phone，现只支持watch\npermissions      array           -       否    权限申请，示例：[{ "name": "hapjs.permission.location" }]\n\n\n# config\n\n用于定义系统配置和全局数据。\n\n属性            类型        默认值   描述\nloglevel      string    log   打印日志等级，分为 off、error、warn、info、log、debug\ndesignwidth   integer   -     页面设计基准宽度，根据实际设备宽度来缩放元素大小\nbackground    object    -     后台运行配置信息，可使用 features 字段申请需要在后台使用的接口（同时仍需在最外层的 features\n                              字段中声明）。可申请的接口为：\n                              system.audio\n                              system.geolocation\n                              system.request 等\n                              详细用法参见 后台运行 脚本\n\n\n# minapilevel\n\n支持的最小 api 标准版本号，标识开发者的 rpk 包能兼容运行在最小实现了该版本 api 标准的设备上，其值默认为1。当使用了 1 及以上的 api 标准版本新增特性时，就必须确保 minapilevel 最低为该版本号，避免上线后在实现了更低版本 api 标准的设备上运行出错。\n\n示例如下：\n\n{\n  "minapilevel": 1\n}\n\n\n\n# router\n\n用于定义页面的组成和相关配置信息，如果页面没有配置路由信息，则在编译打包时跳过。\n\n属性      类型       默认值   必填   描述\nentry   string   -     是    首页名称，使用分包功能时，建议将首页定义在基础包\npages   object   -     是    页面配置列表，key 值为页面名称（对应页面目录名，例如 hello 对应\'hello\'目录），value\n                            为页面详细配置 page，详见下面说明\n\n示例代码：\n\n"router": {\n  "entry": "demo",\n  "pages": {\n    "demo": {\n      "component": "index"\n    }\n  }\n}\n\n\n# router.pages\n\n用于定义单个页面路由信息。\n\n属性           类型       默认值        必填   描述\ncomponent    string   -          是    页面对应的组件名，与 ux 文件名保持一致，例如"hello" 对应 "hello.ux"\npath         string   /<页面名称>    否    页面路径，例如"/user",不填则默认为/<页面名称>\n                                      path 必须唯一，不能和其他 page 的 path 相同\n                                      下面 page 的 path 因为缺失，会被设置为"/index"：\n                                      "index": {"component": "index"}\nlaunchmode   string   standard   否    声明页面的启动模式，支持"singletask"，"standard"两种页面启动模式\n                                      标识为"singletask"模式时每次打开目标页面都会打开已有的目标页面并回调 onrefresh\n                                      生命周期函数，清除该页面上打开的其他页面，没有打开过此页面时会创建新的目标页面实例\n                                      标识为"standard"模式时会每次打开新的目标页面（多次打开目标页面地址时会存在多个相同页面）\n\n\n# 示例代码\n\n{\n  "package": "com.company.unit",\n  "name": "appname",\n  "icon": "/common/icon.png",\n  "versionname": "1.0",\n  "versioncode": 1,\n  "minplatformversion": 1000,\n  "features": [{ "name": "system.network" }],\n  "router": {\n    "entry": "hello",\n    "pages": {\n      "hello": {\n        "component": "hello",\n        "path": "/"\n      }\n    }\n  }\n}\n\n\n\n# display\n\n用于定义与 ui 显示相关的配置。\n\n如果在 display 对象下定义以下属性值，则生效范围为此js 应用全部页面；\n\n属性                类型       默认值       描述\nbackgroundcolor   string   #ffffff   窗口背景颜色\n\n\n# 权限说明\n\n权限名                            feature              api           描述       权限错误码\nhapjs.permission.location      system.geolocation   getlocation   地理位置     400： 拒绝授予权限\n                                                    subscribe              402： 权限错误（未声明该权限）\n                                                    unsubscribe\nhapjs.permission.device_info   system.device        getserial     获取设备信息   400： 拒绝授予权限\n                                                    getdeviceid            402： 权限错误（未声明该权限）',charsets:{cjk:!0}},{title:"弹窗 prompt",frontmatter:{},regularPath:"/zh/features/other/prompt.html",relativePath:"zh/features/other/prompt.md",key:"v-f182da4c",path:"/zh/features/other/prompt.html",headers:[{level:2,title:"接口声明",slug:"接口声明",normalizedTitle:"接口声明",charIndex:16},{level:2,title:"导入模块",slug:"导入模块",normalizedTitle:"导入模块",charIndex:55},{level:2,title:"接口定义",slug:"接口定义",normalizedTitle:"接口定义",charIndex:150},{level:3,title:"prompt.showToast(OBJECT)",slug:"prompt-showtoast-object",normalizedTitle:"prompt.showtoast(object)",charIndex:159}],headersStr:"接口声明 导入模块 接口定义 prompt.showToast(OBJECT)",content:"# 弹窗 prompt\n\n\n# 接口声明\n\n{ \"name\": \"system.prompt\" }\n\n\n\n# 导入模块\n\nimport prompt from '@system.prompt' \n// 或 \nconst prompt = require('@system.prompt')\n\n\n\n# 接口定义\n\n\n# prompt.showToast(OBJECT)\n\n显示 Toast 提示信息\n\n# 参数\n\n参数名        类型       必填   说明\nmessage    String   是    显示的文本信息\nduration   Number   否    显示持续时间，单位ms，默认值1500，建议区间：1500-10000\n\n# 示例：\n\nprompt.showToast({\n  message: 'Message Info',\n  duration: 2000\n})\n",normalizedContent:"# 弹窗 prompt\n\n\n# 接口声明\n\n{ \"name\": \"system.prompt\" }\n\n\n\n# 导入模块\n\nimport prompt from '@system.prompt' \n// 或 \nconst prompt = require('@system.prompt')\n\n\n\n# 接口定义\n\n\n# prompt.showtoast(object)\n\n显示 toast 提示信息\n\n# 参数\n\n参数名        类型       必填   说明\nmessage    string   是    显示的文本信息\nduration   number   否    显示持续时间，单位ms，默认值1500，建议区间：1500-10000\n\n# 示例：\n\nprompt.showtoast({\n  message: 'message info',\n  duration: 2000\n})\n",charsets:{cjk:!0}},{title:"框架扩展能力",frontmatter:{},regularPath:"/zh/guide/framework/other/",relativePath:"zh/guide/framework/other/README.md",key:"v-2e7d0c96",path:"/zh/guide/framework/other/",headersStr:null,content:"# 框架扩展能力\n\n框架其他扩展能力。\n\n * 多语言覆盖\n * 后台运行\n * hap 链接\n * 页面启动模式\n * 多屏适配",normalizedContent:"# 框架扩展能力\n\n框架其他扩展能力。\n\n * 多语言覆盖\n * 后台运行\n * hap 链接\n * 页面启动模式\n * 多屏适配",charsets:{cjk:!0}},{title:"hap 链接",frontmatter:{},regularPath:"/zh/guide/framework/other/hap-schema.html",relativePath:"zh/guide/framework/other/hap-schema.md",key:"v-0b125b94",path:"/zh/guide/framework/other/hap-schema.html",headersStr:null,content:"# hap 链接\n\nhap链接 指在router模块中支持的以hap://开头的uri，使用场景见页面路由。\n\n目前支持的 hap 链接以hap://app/开头，支持打开指定的JS 应用，格式如下：\n\nhap://app/<package>/[path][?key=value]\n\n参数说明：\n\n * package: 应用包名，必选\n * path: 应用内页面的 path，可选，默认为首页\n * key-value: 希望传给页面的参数，可选，可以有多个",normalizedContent:"# hap 链接\n\nhap链接 指在router模块中支持的以hap://开头的uri，使用场景见页面路由。\n\n目前支持的 hap 链接以hap://app/开头，支持打开指定的js 应用，格式如下：\n\nhap://app/<package>/[path][?key=value]\n\n参数说明：\n\n * package: 应用包名，必选\n * path: 应用内页面的 path，可选，默认为首页\n * key-value: 希望传给页面的参数，可选，可以有多个",charsets:{cjk:!0}},{title:"后台运行",frontmatter:{},regularPath:"/zh/guide/framework/other/background-running.html",relativePath:"zh/guide/framework/other/background-running.md",key:"v-b7c47b54",path:"/zh/guide/framework/other/background-running.html",headers:[{level:2,title:"配置方法",slug:"配置方法",normalizedTitle:"配置方法",charIndex:382}],headersStr:"配置方法",content:'# 后台运行\n\n为了节省系统资源，通常情况下，应用切换到后台后将会停止运行，等到再次切换回前台时重新运行。但音乐\\运动等类型的应用，退到后台后可能仍然需要继续运行，为满足此类需求，加入了对后台运行的支持。后台运行模式的工作原理如下：\n\n在应用切换到后台时，系统将会检查是否满足后台运行的条件，如果满足，应用将继续运行，否则将被停止。此条件包括：\n\n 1. manifest.json中声明了后台运行接口\n\n 2. 当前至少有一个（已在manifest.json中声明的）后台运行接口正在运行\n\n实践建议：\n\n * 后台运行需要消耗较多的系统资源，应用需要根据自身需求审慎使用。针对申请后台运行的应用，上线审核时将会审核其后台运行的需求是否合理。\n * 后台运行接口的导入和后台执行的工作放到app.ux中，而不是放到页面中，以免避免页面切换和销毁的影响。\n\n\n# 配置方法\n\nmanifest.json 中声明所需的后台运行接口。后台运行接口包括：\n\n 1. 音频播放： system.audio\n 2. 上传下载： system.request\n 3. 地理位置： system.geolocation\n\n{\n  "package": "com.hybrid.demo.sample",\n  //  ......\n\n  "config": {\n    "logLevel": "trace",\n    "background": {\n      "features":[\n        "system.audio",\n        "system.request"\n      ]\n    }\n  }\n  //  ......\n}\n',normalizedContent:'# 后台运行\n\n为了节省系统资源，通常情况下，应用切换到后台后将会停止运行，等到再次切换回前台时重新运行。但音乐\\运动等类型的应用，退到后台后可能仍然需要继续运行，为满足此类需求，加入了对后台运行的支持。后台运行模式的工作原理如下：\n\n在应用切换到后台时，系统将会检查是否满足后台运行的条件，如果满足，应用将继续运行，否则将被停止。此条件包括：\n\n 1. manifest.json中声明了后台运行接口\n\n 2. 当前至少有一个（已在manifest.json中声明的）后台运行接口正在运行\n\n实践建议：\n\n * 后台运行需要消耗较多的系统资源，应用需要根据自身需求审慎使用。针对申请后台运行的应用，上线审核时将会审核其后台运行的需求是否合理。\n * 后台运行接口的导入和后台执行的工作放到app.ux中，而不是放到页面中，以免避免页面切换和销毁的影响。\n\n\n# 配置方法\n\nmanifest.json 中声明所需的后台运行接口。后台运行接口包括：\n\n 1. 音频播放： system.audio\n 2. 上传下载： system.request\n 3. 地理位置： system.geolocation\n\n{\n  "package": "com.hybrid.demo.sample",\n  //  ......\n\n  "config": {\n    "loglevel": "trace",\n    "background": {\n      "features":[\n        "system.audio",\n        "system.request"\n      ]\n    }\n  }\n  //  ......\n}\n',charsets:{cjk:!0}},{title:"多语言覆盖",frontmatter:{},regularPath:"/zh/guide/framework/other/i18n.html",relativePath:"zh/guide/framework/other/i18n.md",key:"v-439574d4",path:"/zh/guide/framework/other/i18n.html",headers:[{level:2,title:"定义资源文件",slug:"定义资源文件",normalizedTitle:"定义资源文件",charIndex:161},{level:3,title:"资源文件命名查找规则及建议",slug:"资源文件命名查找规则及建议",normalizedTitle:"资源文件命名查找规则及建议",charIndex:298},{level:3,title:"资源文件支持的配置语法",slug:"资源文件支持的配置语法",normalizedTitle:"资源文件支持的配置语法",charIndex:749},{level:2,title:"页面中引用资源",slug:"页面中引用资源",normalizedTitle:"页面中引用资源",charIndex:1229},{level:3,title:"简单格式化方法",slug:"简单格式化方法",normalizedTitle:"简单格式化方法",charIndex:1311},{level:3,title:"单复数格式化方法",slug:"单复数格式化方法",normalizedTitle:"单复数格式化方法",charIndex:2823},{level:2,title:"获取系统语言",slug:"获取系统语言",normalizedTitle:"获取系统语言",charIndex:4751},{level:2,title:"修改地区语言后的回调",slug:"修改地区语言后的回调",normalizedTitle:"修改地区语言后的回调",charIndex:4935}],headersStr:"定义资源文件 资源文件命名查找规则及建议 资源文件支持的配置语法 页面中引用资源 简单格式化方法 单复数格式化方法 获取系统语言 修改地区语言后的回调",content:"# 多语言覆盖\n\nVela 的能力会覆盖多个国家地区，框架支持多语言的能力后，可以做到让一个JS 应用产品（一个 RPK 文件）同时支持多个语言版本的切换，开发者无需开发多个不同语言的源码项目，避免给项目维护带来困难。\n\n使用系统默认的语言，开发者配置多语言的方式非常简单，只需要定义资源与引用资源两个步骤即可。\n\n\n# 定义资源文件\n\n资源文件用于存放多个语言的业务信息定义，与其它技术平台类似（它们使用properties文件或者xml文件的格式），JS 应用平台使用JSON文件保存资源定义；\n\n在项目源码src目录下定义i18n文件夹，内部放置每个语言地区下的资源定义文件即可。\n\n\n# 资源文件命名查找规则及建议\n\n文件命名可使用当前系统获取到的语言以及国家信息，例如文件名可定义为：zh-CN.json、zh.json。\n\n如果开发者当前产品仅计划支持一种语言，同时还希望用到多语言能力，那么仅声明一个名称为defaults.json的文件即可。\n\nJSON文件名匹配优先级，优先级高的匹配到就停止查找，否则就向下一级查找。\n\n优先级匹配规则如下：\n\n<语言代码>-<国家代码>\n\n<语言代码>\n\ndefaults\n\n默认i18n配置文件首个\n\n命名建议：\n\n * 如果需要精确匹配语言+地区进行多语言配置建议使用<语言代码>-<国家代码>.json命名资源文件；\n\n * 不需要匹配地区的建议使用<语言代码>.json命名资源文件；\n\n * defaults.json可以作为默认选项单独使用，也可配合以上两种方式结合使用；\n\n * 不推荐使用系统最终的兜底默认首个的方案，可能会造成不符合预期的显示结果。\n\n温馨提示\n\n<语言代码>-<国家代码> 可参考：支持的语言列表。\n\n\n# 资源文件支持的配置语法\n\n# 基础文本配置\n\n{\n  \"message\": {\n    \"hello\": \"hello world\"\n  }\n}\n\n\n# 数组配置\n\n匹配到会把数据内容序列化转成文本输出，此种配置不支持与插值语法混用。\n\n{\n  \"message\": {\n    \"array\": [\"a\", 2, {\"c\": 3}]\n  }\n}\n\n\n# 命名插值配置\n\n支持使用{}占位符进行命名插值，调用时通过具名参数传入替代占位内容。\n\n{\n  \"message\": {\n    \"hello\": \"{msg} world\"\n  }\n}\n\n\n# 列表插值配置\n\n支持使用{}占位符进行列表插值，通过配置列表取值索引，在调用时传入备选列表进行取值替代占位内容。\n\n{\n  \"message\": {\n    \"hello\": \"{0} world\"\n  }\n}\n\n\n# 单复数语法配置\n\n支持使用|占位符进行单复数语法配置，不同的选择项使用占位符分隔。\n\n{\n  \"message\": {\n    car: 'car | cars',\n  }\n}\n\n\n\n# 页面中引用资源\n\n使用多语言配置的方式主要通过ViewModel 实例上$t与$tc函数实现，这些方法可以在<template>或<script>中使用。\n\n\n# 简单格式化方法\n\nthis.$t(path, opts)\n\n参数说明：\n\n参数     类型               是否必填   说明\npath   String           是      获取多语言配置的资源路径，对象取值通过.连接，例如：”message.hello“\nopts   Array | Object   否      进行插值替换的配置项，可以传入对象或数组，配合配置中的差值配置使用\n                               若传入对象则需要指定配置的命名key进行传参\n                               若传入数组取值为传入列表对应的列表插值配置的index值\n\n使用示例：\n\n使用基础文本配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 显示结果 hello world --\x3e\n    <text>{{ $t('message.hello') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // 简单格式化：\n      console.log(this.$t('message.hello')) // hello world\n    }\n  }\n<\/script>\n\n\n使用数组配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 直接显示数组，显示结果 [\"a\", 2, {\"c\": 3}] --\x3e\n    <text>{{ $t('message.array') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // 简单格式化：\n      console.log(this.$t('message.array')) // [\"a\", 2, {\"c\": 3}]\n    }\n  }\n<\/script>\n\n\n使用命名插值配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 显示结果 hello world --\x3e\n    <text>{{ $t('message.hello', { msg: 'hello' }) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // 简单格式化：\n      console.log(this.$t('message.hello', { msg: 'hello' }))  // hello world\n    }\n  }\n<\/script>\n\n\n使用列表插值配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 显示结果 hello world --\x3e\n    <text>{{ $t('message.hello', ['hello', 'hi']) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // 简单格式化：\n      console.log(this.$t('message.hello', ['hello', 'hi'])) // hello world\n    }\n  }\n<\/script>\n\n\n\n# 单复数格式化方法\n\nthis.$tc(path, choice, opts)\n\n参数说明：\n\n参数       类型               是否必填   说明\npath     String           是      获取多语言配置的资源路径，对象取值通过.连接，例如：”message.hello“\nchoice   Number           否      用于判断使用第几个选项的值，在不传入第三个参数时也可用作插值显示\n                                 特殊值说明：\n                                 值必须是整数，错参报错不显示返回空字符串\n                                 单复数判断忽略正负符号\n                                 0作为偶数处理\nopts     Array | Object   否      进行插值替换的配置项，可以传入对象或数组，配合配置中的差值配置使用\n                                 若传入对象则需要指定配置的命名key进行传参\n                                 若传入数组取值为传入列表对应的列表插值配置的index值\n\n单复数配置说明：\n\n目前单复数在资源文件中支持两种写法并支持与插值语法混用。\n\n两段式配置：单数|复数；\n\n三段式配置：空值|单数|复数。\n\n配置示例：\n\n{\n  \"message\": {\n    car: 'car | cars', // 两段式配置\n    apple: 'no apples | one apple | {count} apples' // 三段式配置\n  }\n}\n\n\n使用示例：\n\n<template>\n  <div>\n    \x3c!-- 两段单复数 --\x3e\n    \x3c!-- 显示结果 cars --\x3e\n    <text>{{ $tc('message.car', 0) }}</text>\n    \x3c!-- 显示结果 car --\x3e\n    <text>{{ $tc('message.car', 1) }}</text>\n    \x3c!-- 显示结果 cars --\x3e\n    <text>{{ $tc('message.car', 2) }}</text>\n\n    \x3c!-- 三段单复数 --\x3e\n    \x3c!-- 显示结果 no apples --\x3e\n    <text>{{ $tc('message.apple', 0) }}</text>\n    \x3c!-- 显示结果 one apple --\x3e\n    <text>{{ $tc('message.apple', 1) }}</text>\n    \x3c!-- 显示结果 2 apples --\x3e\n    <text>{{ $tc('message.apple', 2) }}</text>\n    \x3c!-- 三段单复数混合插值使用 --\x3e\n    \x3c!-- 显示结果 6 apples --\x3e\n    <text>{{ $tc('message.apple', 2, {count: 6}) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    onInit () {\n      // 两段单复数：\n      console.log(this.$tc('message.car', 0)) // cars\n      console.log(this.$tc('message.car', 1)) // car\n      console.log(this.$tc('message.car', 2)) // cars\n\n      // 三段单复数：\n      console.log(this.$tc('message.apple', 0)) // no apples\n      console.log(this.$tc('message.apple', 1)) // one apple\n      console.log(this.$tc('message.apple', 2)) // 2 apples\n      console.log(this.$tc('message.apple', 2, {count: 6})) // 6 apples\n    }\n  }\n<\/script>\n\n\n\n# 获取系统语言\n\n上面的能力用于资源内容的格式化，在某些场景下开发者可能需要获取当前系统的地区语言locale并进行更改，来完成不同的逻辑处理。比如：\n\n * 不同的 locale 对应的页面布局不同；\n\n * 开发者为用户提供设置某种语言的能力；\n\n框架system.configuration提供了相关功能，文档参考：应用配置 configuration。\n\n\n# 修改地区语言后的回调\n\n当用户在系统设置切换地区语言，会触发 onConfigurationChanged 回调，且返回来的 event.type 值为locale。\n\n详情可参考文档。\n\n示例代码：\n\n// 监听语言变化\nonConfigurationChanged(event) {\n  if (event && event.type && event.type === 'locale') {\n    console.log('locale or language changed!')\n  }\n}\n",normalizedContent:"# 多语言覆盖\n\nvela 的能力会覆盖多个国家地区，框架支持多语言的能力后，可以做到让一个js 应用产品（一个 rpk 文件）同时支持多个语言版本的切换，开发者无需开发多个不同语言的源码项目，避免给项目维护带来困难。\n\n使用系统默认的语言，开发者配置多语言的方式非常简单，只需要定义资源与引用资源两个步骤即可。\n\n\n# 定义资源文件\n\n资源文件用于存放多个语言的业务信息定义，与其它技术平台类似（它们使用properties文件或者xml文件的格式），js 应用平台使用json文件保存资源定义；\n\n在项目源码src目录下定义i18n文件夹，内部放置每个语言地区下的资源定义文件即可。\n\n\n# 资源文件命名查找规则及建议\n\n文件命名可使用当前系统获取到的语言以及国家信息，例如文件名可定义为：zh-cn.json、zh.json。\n\n如果开发者当前产品仅计划支持一种语言，同时还希望用到多语言能力，那么仅声明一个名称为defaults.json的文件即可。\n\njson文件名匹配优先级，优先级高的匹配到就停止查找，否则就向下一级查找。\n\n优先级匹配规则如下：\n\n<语言代码>-<国家代码>\n\n<语言代码>\n\ndefaults\n\n默认i18n配置文件首个\n\n命名建议：\n\n * 如果需要精确匹配语言+地区进行多语言配置建议使用<语言代码>-<国家代码>.json命名资源文件；\n\n * 不需要匹配地区的建议使用<语言代码>.json命名资源文件；\n\n * defaults.json可以作为默认选项单独使用，也可配合以上两种方式结合使用；\n\n * 不推荐使用系统最终的兜底默认首个的方案，可能会造成不符合预期的显示结果。\n\n温馨提示\n\n<语言代码>-<国家代码> 可参考：支持的语言列表。\n\n\n# 资源文件支持的配置语法\n\n# 基础文本配置\n\n{\n  \"message\": {\n    \"hello\": \"hello world\"\n  }\n}\n\n\n# 数组配置\n\n匹配到会把数据内容序列化转成文本输出，此种配置不支持与插值语法混用。\n\n{\n  \"message\": {\n    \"array\": [\"a\", 2, {\"c\": 3}]\n  }\n}\n\n\n# 命名插值配置\n\n支持使用{}占位符进行命名插值，调用时通过具名参数传入替代占位内容。\n\n{\n  \"message\": {\n    \"hello\": \"{msg} world\"\n  }\n}\n\n\n# 列表插值配置\n\n支持使用{}占位符进行列表插值，通过配置列表取值索引，在调用时传入备选列表进行取值替代占位内容。\n\n{\n  \"message\": {\n    \"hello\": \"{0} world\"\n  }\n}\n\n\n# 单复数语法配置\n\n支持使用|占位符进行单复数语法配置，不同的选择项使用占位符分隔。\n\n{\n  \"message\": {\n    car: 'car | cars',\n  }\n}\n\n\n\n# 页面中引用资源\n\n使用多语言配置的方式主要通过viewmodel 实例上$t与$tc函数实现，这些方法可以在<template>或<script>中使用。\n\n\n# 简单格式化方法\n\nthis.$t(path, opts)\n\n参数说明：\n\n参数     类型               是否必填   说明\npath   string           是      获取多语言配置的资源路径，对象取值通过.连接，例如：”message.hello“\nopts   array | object   否      进行插值替换的配置项，可以传入对象或数组，配合配置中的差值配置使用\n                               若传入对象则需要指定配置的命名key进行传参\n                               若传入数组取值为传入列表对应的列表插值配置的index值\n\n使用示例：\n\n使用基础文本配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 显示结果 hello world --\x3e\n    <text>{{ $t('message.hello') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // 简单格式化：\n      console.log(this.$t('message.hello')) // hello world\n    }\n  }\n<\/script>\n\n\n使用数组配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 直接显示数组，显示结果 [\"a\", 2, {\"c\": 3}] --\x3e\n    <text>{{ $t('message.array') }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // 简单格式化：\n      console.log(this.$t('message.array')) // [\"a\", 2, {\"c\": 3}]\n    }\n  }\n<\/script>\n\n\n使用命名插值配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 显示结果 hello world --\x3e\n    <text>{{ $t('message.hello', { msg: 'hello' }) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // 简单格式化：\n      console.log(this.$t('message.hello', { msg: 'hello' }))  // hello world\n    }\n  }\n<\/script>\n\n\n使用列表插值配置对应取值示例：\n\n<template>\n  <div>\n    \x3c!-- 显示结果 hello world --\x3e\n    <text>{{ $t('message.hello', ['hello', 'hi']) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // 简单格式化：\n      console.log(this.$t('message.hello', ['hello', 'hi'])) // hello world\n    }\n  }\n<\/script>\n\n\n\n# 单复数格式化方法\n\nthis.$tc(path, choice, opts)\n\n参数说明：\n\n参数       类型               是否必填   说明\npath     string           是      获取多语言配置的资源路径，对象取值通过.连接，例如：”message.hello“\nchoice   number           否      用于判断使用第几个选项的值，在不传入第三个参数时也可用作插值显示\n                                 特殊值说明：\n                                 值必须是整数，错参报错不显示返回空字符串\n                                 单复数判断忽略正负符号\n                                 0作为偶数处理\nopts     array | object   否      进行插值替换的配置项，可以传入对象或数组，配合配置中的差值配置使用\n                                 若传入对象则需要指定配置的命名key进行传参\n                                 若传入数组取值为传入列表对应的列表插值配置的index值\n\n单复数配置说明：\n\n目前单复数在资源文件中支持两种写法并支持与插值语法混用。\n\n两段式配置：单数|复数；\n\n三段式配置：空值|单数|复数。\n\n配置示例：\n\n{\n  \"message\": {\n    car: 'car | cars', // 两段式配置\n    apple: 'no apples | one apple | {count} apples' // 三段式配置\n  }\n}\n\n\n使用示例：\n\n<template>\n  <div>\n    \x3c!-- 两段单复数 --\x3e\n    \x3c!-- 显示结果 cars --\x3e\n    <text>{{ $tc('message.car', 0) }}</text>\n    \x3c!-- 显示结果 car --\x3e\n    <text>{{ $tc('message.car', 1) }}</text>\n    \x3c!-- 显示结果 cars --\x3e\n    <text>{{ $tc('message.car', 2) }}</text>\n\n    \x3c!-- 三段单复数 --\x3e\n    \x3c!-- 显示结果 no apples --\x3e\n    <text>{{ $tc('message.apple', 0) }}</text>\n    \x3c!-- 显示结果 one apple --\x3e\n    <text>{{ $tc('message.apple', 1) }}</text>\n    \x3c!-- 显示结果 2 apples --\x3e\n    <text>{{ $tc('message.apple', 2) }}</text>\n    \x3c!-- 三段单复数混合插值使用 --\x3e\n    \x3c!-- 显示结果 6 apples --\x3e\n    <text>{{ $tc('message.apple', 2, {count: 6}) }}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    oninit () {\n      // 两段单复数：\n      console.log(this.$tc('message.car', 0)) // cars\n      console.log(this.$tc('message.car', 1)) // car\n      console.log(this.$tc('message.car', 2)) // cars\n\n      // 三段单复数：\n      console.log(this.$tc('message.apple', 0)) // no apples\n      console.log(this.$tc('message.apple', 1)) // one apple\n      console.log(this.$tc('message.apple', 2)) // 2 apples\n      console.log(this.$tc('message.apple', 2, {count: 6})) // 6 apples\n    }\n  }\n<\/script>\n\n\n\n# 获取系统语言\n\n上面的能力用于资源内容的格式化，在某些场景下开发者可能需要获取当前系统的地区语言locale并进行更改，来完成不同的逻辑处理。比如：\n\n * 不同的 locale 对应的页面布局不同；\n\n * 开发者为用户提供设置某种语言的能力；\n\n框架system.configuration提供了相关功能，文档参考：应用配置 configuration。\n\n\n# 修改地区语言后的回调\n\n当用户在系统设置切换地区语言，会触发 onconfigurationchanged 回调，且返回来的 event.type 值为locale。\n\n详情可参考文档。\n\n示例代码：\n\n// 监听语言变化\nonconfigurationchanged(event) {\n  if (event && event.type && event.type === 'locale') {\n    console.log('locale or language changed!')\n  }\n}\n",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/zh/guide/framework/other/language-list.html",relativePath:"zh/guide/framework/other/language-list.md",key:"v-14d28e38",path:"/zh/guide/framework/other/language-list.html",headersStr:null,content:"支持的语言列表如下：\n\n<语言代码>-<国家代码>   中文           英语\naz-AZ           阿塞拜疆语        Azerbaijani\nms-MY           马来语          Bahasa Melayu\nbs-BA           波斯尼亚语        Bosnian\nca-ES           加泰罗尼亚语       Catalan\ncs-CZ           捷克语          Czech\nda-DK           丹麦语          Danish\nde-DE           德语           German\net-EE           爱沙尼亚语        Estonian\nen-AU           英语（澳大利亚）     English (Australia)\nen-IN           英语（印度）       English (India)\nen-GB           英语（英国）       English (United Kingdom)\nen-US           英语（美国）       English (United States)\nes-ES           西班牙语（西班牙）    Spanish (Spain)\nes-US           西班牙语（拉美）     Spanish (Latin America)\neu-ES           巴斯克语         Basque\nfr-FR           法语           French\ngl-ES           加利西亚语        Galician\nha-NG           豪萨语          Hausa\nhr-HR           克罗地亚语        Croatian\nin-ID           印尼语          Indonesian\nit-IT           意大利语         Italian\nlv-LV           拉脱维亚语        Latvian\nlt-LT           立陶宛语         Lithuanian\nhu-HU           匈牙利语         Hungarian\nmt-MT           马耳他语         Maltese\nnl-NL           荷兰语          Dutch\nnb-NO           挪威语          Norwegian\nuz-UZ           乌兹别克语        Uzbek\npl-PL           波兰语          Polish\npt-BR           葡萄牙语（巴西）     Portuguese (Brazil)\npt-PT           葡萄牙语（葡萄牙）    Portuguese (Portugal)\nro-RO           罗马尼亚语        Romanian\nsq-AL           阿尔巴尼亚语       Albanian\nsk-SK           斯洛伐克语        Slovak\nsl-SI           斯洛文尼亚语       Slovenian\nfi-FI           芬兰语          Finnish\nsv-SE           瑞典语          Swedish\nvi-VN           越南语          Vietnamese\ntr-TR           土耳其语         Turkish\nel-GR           希腊语          Greek\nbe-BY           白俄罗斯语        Belarusian\nbg-BG           保加利亚语        Bulgarian\nkk-KZ           哈萨克语         Kazakh\nmk-MK           马其顿语         Macedonian\nru-RU           俄语           Russian\nsr-RS           塞尔维亚语        Serbian\nuk-UA           乌克兰语         Ukrainian\nka-GE           格鲁吉亚语        Georgian\nhy-AM           亚美尼亚语        Armenian\niw-IL           希伯来语         Hebrew\nur-IN           乌尔都语（印度）     Urdu (India)\nur-PK           乌尔都语（巴基斯坦）   Urdu (Pakistan)\nar-EG           阿拉伯语         Arabic\nfa-IR           波斯语          Persian\nne-IN           尼泊尔语（印度）     Nepali (India)\nne-NP           尼泊尔语（尼泊尔）    Nepali (Nepal)\nmr-IN           马拉地语         Marathi\nhi-IN           印地语          Hindi\nas-IN           阿萨姆语         Assamese\nbn-IN           孟加拉语 （印度）    Bengali (India)\nbn-BD           孟加拉语 （孟加拉）   Bengali (Bangladesh)\npa-IN           旁遮普语         Punjabi\ngu-IN           古吉拉特语        Gujarati\nor-IN           奥里雅语         Oriya\nta-IN           泰米尔语         Tamil\nte-IN           泰卢固语         Telugu\nkn-IN           卡纳达语         Kannada\nml-IN           马拉雅拉姆语       Malayalam\nth-TH           泰语           Thai\nlo-LA           老挝语          Lao\nmy-MM           缅甸语          Burmese\nkm-KH           高棉 （柬埔寨语）    Khmer\nko-KR           韩语           Korean\nja-JP           日语           Japanese\nzh-CN           中国（简体）       Chinese (Simplified)\nzh-TW           中国（台湾繁体）     Chinese (Taiwan Traditional)\nzh-HK           中国（香港繁体）     Chinese (Hong Kong Traditional)\nsw-KE           斯瓦希里语        Swahili",normalizedContent:"支持的语言列表如下：\n\n<语言代码>-<国家代码>   中文           英语\naz-az           阿塞拜疆语        azerbaijani\nms-my           马来语          bahasa melayu\nbs-ba           波斯尼亚语        bosnian\nca-es           加泰罗尼亚语       catalan\ncs-cz           捷克语          czech\nda-dk           丹麦语          danish\nde-de           德语           german\net-ee           爱沙尼亚语        estonian\nen-au           英语（澳大利亚）     english (australia)\nen-in           英语（印度）       english (india)\nen-gb           英语（英国）       english (united kingdom)\nen-us           英语（美国）       english (united states)\nes-es           西班牙语（西班牙）    spanish (spain)\nes-us           西班牙语（拉美）     spanish (latin america)\neu-es           巴斯克语         basque\nfr-fr           法语           french\ngl-es           加利西亚语        galician\nha-ng           豪萨语          hausa\nhr-hr           克罗地亚语        croatian\nin-id           印尼语          indonesian\nit-it           意大利语         italian\nlv-lv           拉脱维亚语        latvian\nlt-lt           立陶宛语         lithuanian\nhu-hu           匈牙利语         hungarian\nmt-mt           马耳他语         maltese\nnl-nl           荷兰语          dutch\nnb-no           挪威语          norwegian\nuz-uz           乌兹别克语        uzbek\npl-pl           波兰语          polish\npt-br           葡萄牙语（巴西）     portuguese (brazil)\npt-pt           葡萄牙语（葡萄牙）    portuguese (portugal)\nro-ro           罗马尼亚语        romanian\nsq-al           阿尔巴尼亚语       albanian\nsk-sk           斯洛伐克语        slovak\nsl-si           斯洛文尼亚语       slovenian\nfi-fi           芬兰语          finnish\nsv-se           瑞典语          swedish\nvi-vn           越南语          vietnamese\ntr-tr           土耳其语         turkish\nel-gr           希腊语          greek\nbe-by           白俄罗斯语        belarusian\nbg-bg           保加利亚语        bulgarian\nkk-kz           哈萨克语         kazakh\nmk-mk           马其顿语         macedonian\nru-ru           俄语           russian\nsr-rs           塞尔维亚语        serbian\nuk-ua           乌克兰语         ukrainian\nka-ge           格鲁吉亚语        georgian\nhy-am           亚美尼亚语        armenian\niw-il           希伯来语         hebrew\nur-in           乌尔都语（印度）     urdu (india)\nur-pk           乌尔都语（巴基斯坦）   urdu (pakistan)\nar-eg           阿拉伯语         arabic\nfa-ir           波斯语          persian\nne-in           尼泊尔语（印度）     nepali (india)\nne-np           尼泊尔语（尼泊尔）    nepali (nepal)\nmr-in           马拉地语         marathi\nhi-in           印地语          hindi\nas-in           阿萨姆语         assamese\nbn-in           孟加拉语 （印度）    bengali (india)\nbn-bd           孟加拉语 （孟加拉）   bengali (bangladesh)\npa-in           旁遮普语         punjabi\ngu-in           古吉拉特语        gujarati\nor-in           奥里雅语         oriya\nta-in           泰米尔语         tamil\nte-in           泰卢固语         telugu\nkn-in           卡纳达语         kannada\nml-in           马拉雅拉姆语       malayalam\nth-th           泰语           thai\nlo-la           老挝语          lao\nmy-mm           缅甸语          burmese\nkm-kh           高棉 （柬埔寨语）    khmer\nko-kr           韩语           korean\nja-jp           日语           japanese\nzh-cn           中国（简体）       chinese (simplified)\nzh-tw           中国（台湾繁体）     chinese (taiwan traditional)\nzh-hk           中国（香港繁体）     chinese (hong kong traditional)\nsw-ke           斯瓦希里语        swahili",charsets:{cjk:!0}},{title:"JS 独立打包",frontmatter:{},regularPath:"/zh/guide/framework/other/js-chunk.html",relativePath:"zh/guide/framework/other/js-chunk.md",key:"v-31bdf494",path:"/zh/guide/framework/other/js-chunk.html",headers:[{level:2,title:"配置方法",slug:"配置方法",normalizedTitle:"配置方法",charIndex:198},{level:2,title:"抽取对象",slug:"抽取对象",normalizedTitle:"抽取对象",charIndex:256}],headersStr:"配置方法 抽取对象",content:"# JS 独立打包\n\n当不同页面同时引入同一 JS 资源时，默认情况下编译工具会将该 JS 资源代码打包至该页面文件中。由于打包后相关页面文件都包含了重复的 JS 代码，会造成最终打包生成的 rpk 包体积较大。\n\n当 app.ux 或页面文件两次或以上引用到同一 JS 资源时，会将该 JS 资源抽取到独立的文件中，使得相关文件共用同一份 JS 代码，可有效减少整个 rpk 包体积。\n\n\n# 配置方法\n\n本功能配合编译工具使用，编译项目时携带参数：--split-chunks-mode=smart\n\n\n# 抽取对象\n\n所有被引用两次或以上的 JS 资源均会被抽取至独立文件中，包括：\n\n * 普通 JS 文件\n\n * 子组件\n\n * node_modules 中被引用的外部库",normalizedContent:"# js 独立打包\n\n当不同页面同时引入同一 js 资源时，默认情况下编译工具会将该 js 资源代码打包至该页面文件中。由于打包后相关页面文件都包含了重复的 js 代码，会造成最终打包生成的 rpk 包体积较大。\n\n当 app.ux 或页面文件两次或以上引用到同一 js 资源时，会将该 js 资源抽取到独立的文件中，使得相关文件共用同一份 js 代码，可有效减少整个 rpk 包体积。\n\n\n# 配置方法\n\n本功能配合编译工具使用，编译项目时携带参数：--split-chunks-mode=smart\n\n\n# 抽取对象\n\n所有被引用两次或以上的 js 资源均会被抽取至独立文件中，包括：\n\n * 普通 js 文件\n\n * 子组件\n\n * node_modules 中被引用的外部库",charsets:{cjk:!0}},{title:"页面启动模式",frontmatter:{},regularPath:"/zh/guide/framework/other/launch-mode.html",relativePath:"zh/guide/framework/other/launch-mode.md",key:"v-5f42e590",path:"/zh/guide/framework/other/launch-mode.html",headers:[{level:2,title:"静态声明",slug:"静态声明",normalizedTitle:"静态声明",charIndex:27},{level:3,title:"页面启动模式参数：",slug:"页面启动模式参数",normalizedTitle:"页面启动模式参数：",charIndex:105},{level:3,title:"示例：",slug:"示例",normalizedTitle:"示例：",charIndex:502},{level:2,title:"动态声明",slug:"动态声明",normalizedTitle:"动态声明",charIndex:1418},{level:3,title:"页面启动模式参数：",slug:"页面启动模式参数-2",normalizedTitle:"页面启动模式参数：",charIndex:105},{level:3,title:"示例：",slug:"示例-2",normalizedTitle:"示例：",charIndex:502}],headersStr:"静态声明 页面启动模式参数： 示例： 动态声明 页面启动模式参数： 示例：",content:'# 页面启动模式\n\n用于定义页面的启动行为。\n\n\n# 静态声明\n\n在 manifest 文件中页面路由信息 router.page 可增加启动模式字段 launchMode，用于声明该页面的启动模式。\n\n\n# 页面启动模式参数：\n\n属性           类型       默认值        必填   描述\nlaunchMode   String   standard   否    声明页面的启动模式，支持"singleTask"，"standard"两种页面启动模式。\n                                      标识为"singleTask"模式时每次打开目标页面都会打开已有的目标页面并回调 onRefresh\n                                      生命周期函数，清除该页面上打开的其他页面，没有打开过此页面时会创建新的目标页面实例。\n                                      标识为"standard"模式时会每次打开新的目标页面（多次打开目标页面地址时会存在多个相同页面）\n\n\n# 示例：\n\n"router": {\n    "entry": "PageA",\n    "pages": {\n      "PageA": {\n        "launchMode": "singleTask",\n        "component": "index"\n      },\n      "PageB": {\n        "launchMode": "standard",\n        "component": "index"\n      },\n      "PageC": {\n        "launchMode": "singleTask",\n        "component": "index"\n      }\n    }\n  }\n\n\n打开页面的行为逻辑：\n\n若按顺序启动 PageA -> PageB -> PageC -> PageB -> PageC -> PageA\n\n * 打开 PageA，首次打开时页面栈为空 页面栈为PageA\n * 打开 PageB，PageB 的启动模式为 standard，即在 PageA 之上新建 PageB 的页面实例并显示 页面栈为PageA,PageB\n * 打开 PageC，首次打开 PageC，即在 PageB 之上新建 PageC 的页面实例并显示 页面栈为PageA,PageB,PageC\n * 打开 PageB，PageB 的启动模式为 standard，即在 PageC 之上新建 PageB 的页面实例并显示 页面栈为PageA,PageB,PageC,PageB\n * 打开 PageC，PageC 页面实例已存在，即销毁 PageC 之上的页面实例 PageB，回到之前打开的 PageC 的页面实例并回调此页面生命周期的 onRefresh 函数 页面栈为PageA,PageB,PageC\n * 打开 PageA，PageA 页面实例已存在，即销毁 PageA 之上的页面实例 PageB 和 PageC，回到之前打开的 PageA 的页面实例并回调此页面生命周期的 onRefresh 函数 页面栈为PageA\n\n\n# 动态声明\n\n动态声明有两种方式。一种是在 router.push 中携带启动标识参数，另一种是在打开页面的链接中携带启动标识参数。启动标识参数可以控制页面打开行为。\n\n\n# 页面启动模式参数：\n\n参数                        类型       必填   说明\n___PARAM_LAUNCH_FLAG___   String   否    跳转 JS 应用页面时传递的页面参数。携带 clearTask\n                                        时启动目标页面会清除此页面外的其他页面，存在多个目标页面时只保留最先打开的目标页面并回调 onRefresh\n                                        生命周期。如不存在目标页面时将清除所有页面并新建目标页面实例\n\n\n# 示例：\n\nrouter.push({\n  uri: \'/PageB\',\n  params: {\n    ___PARAM_LAUNCH_FLAG___: \'clearTask\'\n  }\n})\n\n\n打开页面的行为逻辑：\n\n若已经打开页面栈为 PageA -> PageB -> PageC，此时以 clearTask 标识启动 PageB\n\n * 销毁 PageC 页面实例\n * 销毁 PageA 页面实例\n * PageB 页面实例已存在，回到此页面实例并回调此页面生命周期的 onRefresh 函数\n\n若已经打开页面栈为 PageA -> PageC，此时以 clearTask 标识启动 PageB\n\n * 销毁 PageC 页面实例\n * 销毁 PageA 页面实例\n * PageB 页面实例不存在，新建 PageB 页面实例并显示',normalizedContent:'# 页面启动模式\n\n用于定义页面的启动行为。\n\n\n# 静态声明\n\n在 manifest 文件中页面路由信息 router.page 可增加启动模式字段 launchmode，用于声明该页面的启动模式。\n\n\n# 页面启动模式参数：\n\n属性           类型       默认值        必填   描述\nlaunchmode   string   standard   否    声明页面的启动模式，支持"singletask"，"standard"两种页面启动模式。\n                                      标识为"singletask"模式时每次打开目标页面都会打开已有的目标页面并回调 onrefresh\n                                      生命周期函数，清除该页面上打开的其他页面，没有打开过此页面时会创建新的目标页面实例。\n                                      标识为"standard"模式时会每次打开新的目标页面（多次打开目标页面地址时会存在多个相同页面）\n\n\n# 示例：\n\n"router": {\n    "entry": "pagea",\n    "pages": {\n      "pagea": {\n        "launchmode": "singletask",\n        "component": "index"\n      },\n      "pageb": {\n        "launchmode": "standard",\n        "component": "index"\n      },\n      "pagec": {\n        "launchmode": "singletask",\n        "component": "index"\n      }\n    }\n  }\n\n\n打开页面的行为逻辑：\n\n若按顺序启动 pagea -> pageb -> pagec -> pageb -> pagec -> pagea\n\n * 打开 pagea，首次打开时页面栈为空 页面栈为pagea\n * 打开 pageb，pageb 的启动模式为 standard，即在 pagea 之上新建 pageb 的页面实例并显示 页面栈为pagea,pageb\n * 打开 pagec，首次打开 pagec，即在 pageb 之上新建 pagec 的页面实例并显示 页面栈为pagea,pageb,pagec\n * 打开 pageb，pageb 的启动模式为 standard，即在 pagec 之上新建 pageb 的页面实例并显示 页面栈为pagea,pageb,pagec,pageb\n * 打开 pagec，pagec 页面实例已存在，即销毁 pagec 之上的页面实例 pageb，回到之前打开的 pagec 的页面实例并回调此页面生命周期的 onrefresh 函数 页面栈为pagea,pageb,pagec\n * 打开 pagea，pagea 页面实例已存在，即销毁 pagea 之上的页面实例 pageb 和 pagec，回到之前打开的 pagea 的页面实例并回调此页面生命周期的 onrefresh 函数 页面栈为pagea\n\n\n# 动态声明\n\n动态声明有两种方式。一种是在 router.push 中携带启动标识参数，另一种是在打开页面的链接中携带启动标识参数。启动标识参数可以控制页面打开行为。\n\n\n# 页面启动模式参数：\n\n参数                        类型       必填   说明\n___param_launch_flag___   string   否    跳转 js 应用页面时传递的页面参数。携带 cleartask\n                                        时启动目标页面会清除此页面外的其他页面，存在多个目标页面时只保留最先打开的目标页面并回调 onrefresh\n                                        生命周期。如不存在目标页面时将清除所有页面并新建目标页面实例\n\n\n# 示例：\n\nrouter.push({\n  uri: \'/pageb\',\n  params: {\n    ___param_launch_flag___: \'cleartask\'\n  }\n})\n\n\n打开页面的行为逻辑：\n\n若已经打开页面栈为 pagea -> pageb -> pagec，此时以 cleartask 标识启动 pageb\n\n * 销毁 pagec 页面实例\n * 销毁 pagea 页面实例\n * pageb 页面实例已存在，回到此页面实例并回调此页面生命周期的 onrefresh 函数\n\n若已经打开页面栈为 pagea -> pagec，此时以 cleartask 标识启动 pageb\n\n * 销毁 pagec 页面实例\n * 销毁 pagea 页面实例\n * pageb 页面实例不存在，新建 pageb 页面实例并显示',charsets:{cjk:!0}},{title:"页面切换",frontmatter:{},regularPath:"/zh/guide/framework/page-switch.html",relativePath:"zh/guide/framework/page-switch.md",key:"v-4af7c6e8",path:"/zh/guide/framework/page-switch.html",headers:[{level:2,title:"通过接口 router 切换页面和传递参数",slug:"通过接口-router-切换页面和传递参数",normalizedTitle:"通过接口 router 切换页面和传递参数",charIndex:11},{level:3,title:"切换页面",slug:"切换页面",normalizedTitle:"切换页面",charIndex:23},{level:3,title:"传递参数",slug:"传递参数",normalizedTitle:"传递参数",charIndex:28},{level:2,title:"接收参数",slug:"接收参数",normalizedTitle:"接收参数",charIndex:1628}],headersStr:"通过接口 router 切换页面和传递参数 切换页面 传递参数 接收参数",content:'# 页面切换\n\n\n# 通过接口 router 切换页面和传递参数\n\n\n# 切换页面\n\nrouter 接口在使用前，需要先导入模块。\n\n通过router.push(OBJECT)可以完成页面切换，其支持的参数uri的格式详细描述参见页面路由。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="跳转到新页面" onclick="routePage"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // 导入模块\n  import router from \'@system.router\'\n\n  export default {\n    routePage () {\n      // 跳转到应用内的某个页面，当前页面无法返回\n      router.replace({\n        uri: \'/Pages/newPage\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# 传递参数\n\nrouter接口的参数params可配置页面跳转时需要传递的参数。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="携带参数跳转页面" onclick="routePageReplaceWithParams"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // 导入模块\n  import router from \'@system.router\'\n\n  export default {\n    private: {\n      title: \'Hello, world!\'\n    },\n\n    onInit () {\n      console.info(\'接口router切换页面并传递参数\')\n    },\n\n    routePageReplaceWithParams () {\n      // 跳转到应用内的某个页面\n      router.replace({\n        uri: \'/PageParams/receiveparams\',\n        params: { key: this.title }\n      })\n    }\n  }\n<\/script>\n\n\n\n# 接收参数\n\n现在，开发者已经了解了通过接口router在页面之间传递参数的方法，如何接收参数呢？\n\n其实很简单，接口router传递的参数的接收方法完全一致：在页面的 ViewModel 的protected属性中声明使用的属性。\n\n注意\n\n * protected内定义的属性，允许被应用内部页面请求传递的数据覆盖，不允许被应用外部请求传递的数据覆盖\n * 若希望参数允许被应用外部请求传递的数据覆盖，请在页面的 ViewModel 的public属性中声明使用的属性\n\n示例如下：\n\n<template>\n  <div class="page">\n    <text>page</text>\n    \x3c!-- template中显示页面传递的参数 --\x3e\n    <text>{{key}}</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n</style>\n\n<script>\n  export default {\n    protected: {\n      key: \'\'\n    },\n    onInit () {\n      // js中输出页面传递的参数\n      console.info(\'key: \' + this.key)\n    }\n  }\n<\/script>\n',normalizedContent:'# 页面切换\n\n\n# 通过接口 router 切换页面和传递参数\n\n\n# 切换页面\n\nrouter 接口在使用前，需要先导入模块。\n\n通过router.push(object)可以完成页面切换，其支持的参数uri的格式详细描述参见页面路由。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="跳转到新页面" onclick="routepage"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // 导入模块\n  import router from \'@system.router\'\n\n  export default {\n    routepage () {\n      // 跳转到应用内的某个页面，当前页面无法返回\n      router.replace({\n        uri: \'/pages/newpage\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# 传递参数\n\nrouter接口的参数params可配置页面跳转时需要传递的参数。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <input class="btn" type="button" value="携带参数跳转页面" onclick="routepagereplacewithparams"></input>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 70px;\n    border-radius: 30px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  // 导入模块\n  import router from \'@system.router\'\n\n  export default {\n    private: {\n      title: \'hello, world!\'\n    },\n\n    oninit () {\n      console.info(\'接口router切换页面并传递参数\')\n    },\n\n    routepagereplacewithparams () {\n      // 跳转到应用内的某个页面\n      router.replace({\n        uri: \'/pageparams/receiveparams\',\n        params: { key: this.title }\n      })\n    }\n  }\n<\/script>\n\n\n\n# 接收参数\n\n现在，开发者已经了解了通过接口router在页面之间传递参数的方法，如何接收参数呢？\n\n其实很简单，接口router传递的参数的接收方法完全一致：在页面的 viewmodel 的protected属性中声明使用的属性。\n\n注意\n\n * protected内定义的属性，允许被应用内部页面请求传递的数据覆盖，不允许被应用外部请求传递的数据覆盖\n * 若希望参数允许被应用外部请求传递的数据覆盖，请在页面的 viewmodel 的public属性中声明使用的属性\n\n示例如下：\n\n<template>\n  <div class="page">\n    <text>page</text>\n    \x3c!-- template中显示页面传递的参数 --\x3e\n    <text>{{key}}</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n</style>\n\n<script>\n  export default {\n    protected: {\n      key: \'\'\n    },\n    oninit () {\n      // js中输出页面传递的参数\n      console.info(\'key: \' + this.key)\n    }\n  }\n<\/script>\n',charsets:{cjk:!0}},{title:"项目结构",frontmatter:{},regularPath:"/zh/guide/framework/project-structure.html",relativePath:"zh/guide/framework/project-structure.md",key:"v-6904fb64",path:"/zh/guide/framework/project-structure.html",headers:[{level:2,title:"应用资源",slug:"应用资源",normalizedTitle:"应用资源",charIndex:11},{level:2,title:"ux模板",slug:"ux模板",normalizedTitle:"ux模板",charIndex:344},{level:2,title:"文件存储",slug:"文件存储",normalizedTitle:"文件存储",charIndex:1207},{level:2,title:"URI",slug:"uri",normalizedTitle:"uri",charIndex:1544},{level:2,title:"资源和文件访问规则",slug:"资源和文件访问规则",normalizedTitle:"资源和文件访问规则",charIndex:2208}],headersStr:"应用资源 ux模板 文件存储 URI 资源和文件访问规则",content:'# 项目结构\n\n\n# 应用资源\n\n一个应用包含：描述项目配置信息的manifest 文件，放置项目公共资源脚本的app.ux 文件，多个描述页面的ux 文件，典型示例如下：\n\n应用根目录：\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-CN.json\n|   └── en-US.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# ux模板\n\n一个页面通常都由三部分组成：页面结构、样式和逻辑交互。这三部分，可以放在一个ux文件中，也可以作为独立的文件。\n\n如果放在一个ux文件中，则ux文件需要包含三标签：template、style和script。\n\n示例：\n\n<template>\n  <div class="page">\n    <text class="title">欢迎打开{{title}}</text>\n    <input class="btn" type="button" value="跳转到详情页" onclick="routeDetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // 页面数据对象\n    private: {\n      title: \'示例页面\'\n    },\n    // 按钮点击后的回调\n    routeDetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\n如果将页面结构、样式和逻辑交互分开作为独立的文件，可以使用如下目录结构：\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\n说明\n\n如果作为独立的文件，将ux/css/js文件分开后，ux文件中不能包含template标签。\n\n\n# 文件存储\n\n在应用平台中是按分区来存储文件的，目前支持以下分区：\n\n 1. Cache，一般用于存储缓存文件，比如通过 fetch 接口下载的文件会存储在该分区中，该分区中的文件可能因存储空间不够被系统删除；\n 2. Files，一般用于存储比较小的永久文件，该分区中的文件由应用自己管理；\n 3. Mass，一般用于存储比较大的文件，但该分区并不保证一直可用；\n 4. Temp，表示从外部映射过来的临时文件，出于安全性考虑，临时文件是只读的，并且只能通过调用特定的 API 获取，比如 file.readText 方法。另外临时文件的访问是临时的，应用重启后无法访问到临时文件，需要通过特定 API 重新获取。\n\n另外应用资源也作为一个特殊的只读分区进行处理。\n\n\n# URI\n\nURI 用于标识应用资源和文件，组件和接口通过 URI 来访问应用资源和文件。\n\n资源类型    URI                     只读   示例                                  说明\n应用资源    /path                   是    /Common/header.png                  -\nCache   internal://cache/path   否    internal://cache/fetch-123456.png   -\nFiles   internal://files/path   否    internal://files/image/demo.png     -\nMass    internal://mass/path    否    internal://mass/video/demo.mp4      -\nTemp    internal://tmp/path     是    internal://tmp/xxxxx                由系统动态生成\n\nURI 允许的字符是0-9a-zA-Z_-./%:(不包含引号)，URI 中不能出现..，URI 支持目录结构，目录由斜线\'/\'分隔。\n\ninternal URI 表示的是应用私有文件，即在指定 internal URI 时，无需指定应用标识，同一个 internal URI 对于不同的应用会指向不同的文件。\n\n\n# 资源和文件访问规则\n\n应用资源路径分为绝对路径和相对路径，以"/"开头的路径表示绝对路径，比如 /Common/a.png，不以"/"开头的路径是相对路径，比如 a.png 和 ../Common/a.png 等。\n\n应用资源文件分为代码文件和资源文件，代码文件是指 .js/.css/.ux 等包含代码的文件，其他文件则是资源文件，这类文件一般只当作数据来使用，比如图片、视频等。\n\n 1. 在代码文件中，导入其他代码文件时，使用相对路径，比如：../Common/component.ux；\n 2. 在代码文件中，引用资源文件(如：图片、视频等)时，一般情况下使用相对路径，比如：./abc.png；\n 3. 当代码文件需要被导入时，如果导入文件与被导入文件在同一个目录，被导入文件引用资源文件时可以使用相对路径，但如果不在同一目录，必须使用绝对路径，因为被导入文件编译时会被复制到导入文件中，编译后目录会发生变化。比如 a.css 文件被 b.ux 导入，如果 a.css 与 b.ux 在同一个目录，a.css 引用资源文件时可以写相对路径：abc.png，如果不在同一个目录，必须写绝对路径：/Common/abc.png，再比如当 a.ux 文件被 b.ux 文件导入时，如果 a.ux 与 b.ux 在同一个目录，a.ux 引用资源文件时可以写相对路径：a.png，如果不在同一个目录，a.ux 引用资源必须写绝对路径：/Common/abc.png；\n 4. 在 CSS 中，与前端开发一致，使用 url(PATH)的方式访问资源文件，如：url(/Common/abc.png)。',normalizedContent:'# 项目结构\n\n\n# 应用资源\n\n一个应用包含：描述项目配置信息的manifest 文件，放置项目公共资源脚本的app.ux 文件，多个描述页面的ux 文件，典型示例如下：\n\n应用根目录：\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-cn.json\n|   └── en-us.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# ux模板\n\n一个页面通常都由三部分组成：页面结构、样式和逻辑交互。这三部分，可以放在一个ux文件中，也可以作为独立的文件。\n\n如果放在一个ux文件中，则ux文件需要包含三标签：template、style和script。\n\n示例：\n\n<template>\n  <div class="page">\n    <text class="title">欢迎打开{{title}}</text>\n    <input class="btn" type="button" value="跳转到详情页" onclick="routedetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // 页面数据对象\n    private: {\n      title: \'示例页面\'\n    },\n    // 按钮点击后的回调\n    routedetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\n如果将页面结构、样式和逻辑交互分开作为独立的文件，可以使用如下目录结构：\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\n说明\n\n如果作为独立的文件，将ux/css/js文件分开后，ux文件中不能包含template标签。\n\n\n# 文件存储\n\n在应用平台中是按分区来存储文件的，目前支持以下分区：\n\n 1. cache，一般用于存储缓存文件，比如通过 fetch 接口下载的文件会存储在该分区中，该分区中的文件可能因存储空间不够被系统删除；\n 2. files，一般用于存储比较小的永久文件，该分区中的文件由应用自己管理；\n 3. mass，一般用于存储比较大的文件，但该分区并不保证一直可用；\n 4. temp，表示从外部映射过来的临时文件，出于安全性考虑，临时文件是只读的，并且只能通过调用特定的 api 获取，比如 file.readtext 方法。另外临时文件的访问是临时的，应用重启后无法访问到临时文件，需要通过特定 api 重新获取。\n\n另外应用资源也作为一个特殊的只读分区进行处理。\n\n\n# uri\n\nuri 用于标识应用资源和文件，组件和接口通过 uri 来访问应用资源和文件。\n\n资源类型    uri                     只读   示例                                  说明\n应用资源    /path                   是    /common/header.png                  -\ncache   internal://cache/path   否    internal://cache/fetch-123456.png   -\nfiles   internal://files/path   否    internal://files/image/demo.png     -\nmass    internal://mass/path    否    internal://mass/video/demo.mp4      -\ntemp    internal://tmp/path     是    internal://tmp/xxxxx                由系统动态生成\n\nuri 允许的字符是0-9a-za-z_-./%:(不包含引号)，uri 中不能出现..，uri 支持目录结构，目录由斜线\'/\'分隔。\n\ninternal uri 表示的是应用私有文件，即在指定 internal uri 时，无需指定应用标识，同一个 internal uri 对于不同的应用会指向不同的文件。\n\n\n# 资源和文件访问规则\n\n应用资源路径分为绝对路径和相对路径，以"/"开头的路径表示绝对路径，比如 /common/a.png，不以"/"开头的路径是相对路径，比如 a.png 和 ../common/a.png 等。\n\n应用资源文件分为代码文件和资源文件，代码文件是指 .js/.css/.ux 等包含代码的文件，其他文件则是资源文件，这类文件一般只当作数据来使用，比如图片、视频等。\n\n 1. 在代码文件中，导入其他代码文件时，使用相对路径，比如：../common/component.ux；\n 2. 在代码文件中，引用资源文件(如：图片、视频等)时，一般情况下使用相对路径，比如：./abc.png；\n 3. 当代码文件需要被导入时，如果导入文件与被导入文件在同一个目录，被导入文件引用资源文件时可以使用相对路径，但如果不在同一目录，必须使用绝对路径，因为被导入文件编译时会被复制到导入文件中，编译后目录会发生变化。比如 a.css 文件被 b.ux 导入，如果 a.css 与 b.ux 在同一个目录，a.css 引用资源文件时可以写相对路径：abc.png，如果不在同一个目录，必须写绝对路径：/common/abc.png，再比如当 a.ux 文件被 b.ux 文件导入时，如果 a.ux 与 b.ux 在同一个目录，a.ux 引用资源文件时可以写相对路径：a.png，如果不在同一个目录，a.ux 引用资源必须写绝对路径：/common/abc.png；\n 4. 在 css 中，与前端开发一致，使用 url(path)的方式访问资源文件，如：url(/common/abc.png)。',charsets:{cjk:!0}},{title:"script 脚本",frontmatter:{},regularPath:"/zh/guide/framework/script/",relativePath:"zh/guide/framework/script/README.md",key:"v-a06bb43a",path:"/zh/guide/framework/script/",headers:[{level:2,title:"语法",slug:"语法",normalizedTitle:"语法",charIndex:62},{level:3,title:"模块声明",slug:"模块声明",normalizedTitle:"模块声明",charIndex:86},{level:3,title:"代码引用",slug:"代码引用",normalizedTitle:"代码引用",charIndex:177},{level:2,title:"页面数据对象",slug:"页面数据对象",normalizedTitle:"页面数据对象",charIndex:314},{level:2,title:"生命周期接口",slug:"生命周期接口",normalizedTitle:"生命周期接口",charIndex:38},{level:2,title:"自定义方法",slug:"自定义方法",normalizedTitle:"自定义方法",charIndex:45},{level:2,title:"全局对象和方法",slug:"全局对象和方法",normalizedTitle:"全局对象和方法",charIndex:848},{level:2,title:"通用方法",slug:"通用方法",normalizedTitle:"通用方法",charIndex:51}],headersStr:"语法 模块声明 代码引用 页面数据对象 生命周期接口 自定义方法 全局对象和方法 通用方法",content:"# script 脚本\n\nux 文件中用来定义页面的逻辑代码，包括数据对象、生命周期接口、自定义方法、通用方法等。\n\n\n# 语法\n\n支持 ES5 / ES6 语法\n\n\n# 模块声明\n\n可以通过 import 引入功能模块，在代码中调用模块方法（具体参看接口部分文档说明）：\n\nimport fetch from '@system.fetch'\n\n\n\n# 代码引用\n\nJS 代码引用推荐使用import来导入，例如：\n\nimport utils from '../common/utils.js'\n\n\n注意\n\nJS 应用环境不是 node 环境，不要引用 node 原生模块，如 import fs from 'fs'。\n\n\n# 页面数据对象\n\n页面文件中可以定义页面级的数据对象，用于在模板中绑定和在页面方法中操作。例如：\n\n<template>\n  <div>\n    <text>{{a}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面的数据对象，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      a: 1\n    }\n  }\n<\/script>\n\n\n其他详细说明参见页面数据对象。\n\n\n# 生命周期接口\n\n应用和页面都有预定义的一系列生命周期，可在脚本中声明若干生命周期钩子函数，在执行到该特定生命周期阶段时，会调用这些钩子函数，例如：\n\n// 会在应用/页面被初始化的时候执行这个函数\nonInit() {\n  console.log('page initialized！')\n}\n\n\n其他详细说明参见生命周期。\n\n\n# 自定义方法\n\n开发者可以在应用/页面 ux 文件中按需声明自定义方法，包括一些工具方法、事件回调方法等，例如：\n\nonBtnClick(){\n  console.log('button clicked!')\n}\n\n\n\n# 全局对象和方法\n\n开发者在应用ux文件(app.ux)中声明的属性和方法，可以在任意页面中通过this.$app.$def进行方法，详情参考全局对象和方法。\n\n\n# 通用方法\n\n框架提供了一些预定义的通用方法供页面/组件调用，详情参考通用方法。",normalizedContent:"# script 脚本\n\nux 文件中用来定义页面的逻辑代码，包括数据对象、生命周期接口、自定义方法、通用方法等。\n\n\n# 语法\n\n支持 es5 / es6 语法\n\n\n# 模块声明\n\n可以通过 import 引入功能模块，在代码中调用模块方法（具体参看接口部分文档说明）：\n\nimport fetch from '@system.fetch'\n\n\n\n# 代码引用\n\njs 代码引用推荐使用import来导入，例如：\n\nimport utils from '../common/utils.js'\n\n\n注意\n\njs 应用环境不是 node 环境，不要引用 node 原生模块，如 import fs from 'fs'。\n\n\n# 页面数据对象\n\n页面文件中可以定义页面级的数据对象，用于在模板中绑定和在页面方法中操作。例如：\n\n<template>\n  <div>\n    <text>{{a}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面的数据对象，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      a: 1\n    }\n  }\n<\/script>\n\n\n其他详细说明参见页面数据对象。\n\n\n# 生命周期接口\n\n应用和页面都有预定义的一系列生命周期，可在脚本中声明若干生命周期钩子函数，在执行到该特定生命周期阶段时，会调用这些钩子函数，例如：\n\n// 会在应用/页面被初始化的时候执行这个函数\noninit() {\n  console.log('page initialized！')\n}\n\n\n其他详细说明参见生命周期。\n\n\n# 自定义方法\n\n开发者可以在应用/页面 ux 文件中按需声明自定义方法，包括一些工具方法、事件回调方法等，例如：\n\nonbtnclick(){\n  console.log('button clicked!')\n}\n\n\n\n# 全局对象和方法\n\n开发者在应用ux文件(app.ux)中声明的属性和方法，可以在任意页面中通过this.$app.$def进行方法，详情参考全局对象和方法。\n\n\n# 通用方法\n\n框架提供了一些预定义的通用方法供页面/组件调用，详情参考通用方法。",charsets:{cjk:!0}},{title:"生命周期",frontmatter:{},regularPath:"/zh/guide/framework/script/lifecycle.html",relativePath:"zh/guide/framework/script/lifecycle.md",key:"v-4f788836",path:"/zh/guide/framework/script/lifecycle.html",headers:[{level:2,title:"生命周期图",slug:"生命周期图",normalizedTitle:"生命周期图",charIndex:180},{level:2,title:"页面的生命周期",slug:"页面的生命周期",normalizedTitle:"页面的生命周期",charIndex:11},{level:3,title:"onInit()",slug:"oninit",normalizedTitle:"oninit()",charIndex:294},{level:3,title:"onReady()",slug:"onready",normalizedTitle:"onready()",charIndex:761},{level:3,title:"onShow(), onHide()",slug:"onshow-onhide",normalizedTitle:"onshow(), onhide()",charIndex:919},{level:3,title:"onDestroy()",slug:"ondestroy",normalizedTitle:"ondestroy()",charIndex:1275},{level:3,title:"onBackPress()",slug:"onbackpress",normalizedTitle:"onbackpress()",charIndex:1796},{level:3,title:"onRefresh(query)",slug:"onrefresh-query",normalizedTitle:"onrefresh(query)",charIndex:2030},{level:3,title:"onConfigurationChanged(event)",slug:"onconfigurationchanged-event",normalizedTitle:"onconfigurationchanged(event)",charIndex:2377},{level:2,title:"APP的生命周期",slug:"app的生命周期",normalizedTitle:"app的生命周期",charIndex:2744}],headersStr:"生命周期图 页面的生命周期 onInit() onReady() onShow(), onHide() onDestroy() onBackPress() onRefresh(query) onConfigurationChanged(event) APP的生命周期",content:"# 生命周期\n\n * 页面的生命周期：onInit、onReady、onShow、onHide、onDestroy、onBackPress、onRefresh、onConfigurationChanged\n * 页面的状态：显示、隐藏、销毁\n * APP 的生命周期：onCreate、onShow、onHide、onDestroy 、onError\n\n\n# 生命周期图\n\n\n\n\n# 页面的生命周期\n\n由于页面通过ViewModel渲染，那么页面的生命周期指的也就是ViewModel的生命周期，包括常见的：onInit, onReady, onShow 在页面创建时触发调用。\n\n\n# onInit()\n\n表示ViewModel的数据已经准备好，可以开始使用页面中的数据。\n\n示例如下：\n\nprivate: {\n  // 生命周期的文本列表\n  lcList: []\n},\nonInit () {\n  this.lcList.push('onInit')\n\n  console.info(`触发：onInit`)\n  // 执行：获取ViewModel的lcList属性：onInit\n  console.info(`执行：获取ViewModel的lcList属性：${this.lcList}`)\n  // $app信息\n  console.info(`获取：manifest.json的config.data的数据：${this.$app.$data.name}`)\n  console.info(`获取：APP文件中的数据：${this.$app.$def.data1.name}`)\n  console.info(`执行：APP文件中的方法`, this.$app.$def.method1())\n}\n\n\n\n# onReady()\n\n表示ViewModel的模板已经编译完成，可以开始获取 DOM 节点（如：this.$element(idxxx)）。\n\n示例如下：\n\nonReady () {\n  this.lcList.push('onReady')\n  console.info(`触发：onReady`)\n}\n\n\n\n# onShow(), onHide()\n\nAPP 中可以同时运行多个页面，但是每次只能显示其中一个页面；这点不同于纯前端开发，浏览器页面中每次只能有一个页面，当前页面打开另一个页面，上个页面就销毁了；不过和 SPA 开发有点相似，切换页面但浏览器全局 Context 是共享的。\n\n所以页面的切换，就产生了新的事件：页面被切换隐藏时调用 onHide()，页面被切换重新显示时调用 onShow()。\n\n示例如下：\n\nonShow () {\n  this.lcList.push('onShow')\n  console.info(`触发：onShow`)\n},\nonHide () {\n  this.lcList.push('onHide')\n  console.info(`触发：onHide`)\n}\n\n\n\n# onDestroy()\n\n页面被销毁时调用，被销毁的可能原因有：用户从当前页面返回到上一页，或者用户打开了太多的页面，框架自动销毁掉部分页面，避免占用资源。\n\n所以，页面销毁时应该做一些释放资源的操作，如：取消接口订阅监听geolocation.unsubscribe()。\n\n判断页面是否处于被销毁状态，可以调用 ViewModel 的 $valid 属性：true 表示存在，false 表示销毁。\n\n示例如下：\n\nonDestroy () {\n  console.info(`触发：onDestroy`)\n  console.info(`执行：页面要被销毁，销毁状态：${this.$valid}，应该做取消接口订阅监听的操作: geolocation.unsubscribe() `) // true，即将销毁\n  setTimeout(function () {\n    // 页面已销毁，不会执行\n    console.info(`执行：页面已被销毁，不会执行`)\n  }.bind(this), 0)\n}\n\n\n提示：\n\n * setTimeout之类的异步操作绑定在了当前页面上，因此当页面销毁之后异步调用不会执行。\n\n\n# onBackPress()\n\n当用户右滑返回或点击返回实体按键时触发该事件。\n\n如果事件响应方法最后返回true表示不返回，自己处理业务逻辑（完毕后开发者自行调用 API 返回）；否则：不返回数据，或者返回其它数据，表示遵循系统逻辑：返回到上一页。\n\n示例如下：\n\nonBackPress () {\n  console.info(`触发：onBackPress`)\n  // true：表示自己处理；否则默认返回上一页\n  // return true\n}\n\n\n\n# onRefresh(query)\n\n监听页面重新打开。\n\n1.当页面在 manifest 中 launchMode 标识为'singleTask'时，仅会存在一个目标页面实例，用户多次打开目标页面时触发此函数。\n2.打开目标页面时在 push 参数中携带 flag 'clearTask'，且页面实例已经存在时触发。该回调中参数为重新打开该页面时携带的参数，详见页面启动模式。\n\n示例如下：\n\nonRefresh(query) {\n  // launchMode 为 singleTask 时，重新打开页面时携带的参数不会自动更新到页面 this 对象上\n  // 需要在此处从 query 中拿到并手动更新\n  console.log('page refreshed!!!')\n}\n\n\n\n# onConfigurationChanged(event)\n\n监听应用配置发生变化。当应用配置发生变化时触发，如系统语言改变。\n\n参数\n\n参数名     类型       描述\nevent   Object   应用配置发生变化的事件\n\nevent参数\n\n参数名    类型       描述\ntype   String   应用配置发生变化的原因类型，支持的 type 值如下所示\n\nevent 中 type 现在支持的参数值如下\n\n参数名      描述\nlocale   应用配置因为语言、地区变化而发生改变\n\n示例如下：\n\nonConfigurationChanged(evt) {\n  console.log(`触发生命周期onConfigurationChanged, 配置类型：${evt.type}`)\n}\n\n\n\n# APP的生命周期\n\n当前为 APP 的生命周期提供了五个回调函数：onCreate()、onShow()、onHide()、onDestroy()、onError(e)。\n\n示例如下：\n\nexport default {\n  // 监听应用创建,应用创建时调用\n  onCreate() { \n    console.info('Application onCreate')\n  },\n  // 监听应用返回前台,应用返回前台时调用\n  onShow() { \n    console.info('Application onShow')\n  },\n  // 监听应用退到后台,应用退到后台时调用\n  onHide() { \n    console.info('Application onHide')\n  },\n  // 监听应用销毁,应用销毁时调用\n  onDestroy() { \n    console.info('Application onDesteroy')\n  },\n  // 监听应用报错,应用捕获异常时调用,参数为Error对象。\n  onError(e) {\n    console.log('Application onError', e)\n  },\n  // 暴露给所有页面，在页面中通过：this.$app.$def.method1()访问\n  method1() {\n    console.info('这是APP的方法')\n  },\n  // 暴露给所有页面，在页面中通过：this.$app.$def.data1访问\n  data1: {\n    name: '这是APP存的数据'\n  }\n}\n",normalizedContent:"# 生命周期\n\n * 页面的生命周期：oninit、onready、onshow、onhide、ondestroy、onbackpress、onrefresh、onconfigurationchanged\n * 页面的状态：显示、隐藏、销毁\n * app 的生命周期：oncreate、onshow、onhide、ondestroy 、onerror\n\n\n# 生命周期图\n\n\n\n\n# 页面的生命周期\n\n由于页面通过viewmodel渲染，那么页面的生命周期指的也就是viewmodel的生命周期，包括常见的：oninit, onready, onshow 在页面创建时触发调用。\n\n\n# oninit()\n\n表示viewmodel的数据已经准备好，可以开始使用页面中的数据。\n\n示例如下：\n\nprivate: {\n  // 生命周期的文本列表\n  lclist: []\n},\noninit () {\n  this.lclist.push('oninit')\n\n  console.info(`触发：oninit`)\n  // 执行：获取viewmodel的lclist属性：oninit\n  console.info(`执行：获取viewmodel的lclist属性：${this.lclist}`)\n  // $app信息\n  console.info(`获取：manifest.json的config.data的数据：${this.$app.$data.name}`)\n  console.info(`获取：app文件中的数据：${this.$app.$def.data1.name}`)\n  console.info(`执行：app文件中的方法`, this.$app.$def.method1())\n}\n\n\n\n# onready()\n\n表示viewmodel的模板已经编译完成，可以开始获取 dom 节点（如：this.$element(idxxx)）。\n\n示例如下：\n\nonready () {\n  this.lclist.push('onready')\n  console.info(`触发：onready`)\n}\n\n\n\n# onshow(), onhide()\n\napp 中可以同时运行多个页面，但是每次只能显示其中一个页面；这点不同于纯前端开发，浏览器页面中每次只能有一个页面，当前页面打开另一个页面，上个页面就销毁了；不过和 spa 开发有点相似，切换页面但浏览器全局 context 是共享的。\n\n所以页面的切换，就产生了新的事件：页面被切换隐藏时调用 onhide()，页面被切换重新显示时调用 onshow()。\n\n示例如下：\n\nonshow () {\n  this.lclist.push('onshow')\n  console.info(`触发：onshow`)\n},\nonhide () {\n  this.lclist.push('onhide')\n  console.info(`触发：onhide`)\n}\n\n\n\n# ondestroy()\n\n页面被销毁时调用，被销毁的可能原因有：用户从当前页面返回到上一页，或者用户打开了太多的页面，框架自动销毁掉部分页面，避免占用资源。\n\n所以，页面销毁时应该做一些释放资源的操作，如：取消接口订阅监听geolocation.unsubscribe()。\n\n判断页面是否处于被销毁状态，可以调用 viewmodel 的 $valid 属性：true 表示存在，false 表示销毁。\n\n示例如下：\n\nondestroy () {\n  console.info(`触发：ondestroy`)\n  console.info(`执行：页面要被销毁，销毁状态：${this.$valid}，应该做取消接口订阅监听的操作: geolocation.unsubscribe() `) // true，即将销毁\n  settimeout(function () {\n    // 页面已销毁，不会执行\n    console.info(`执行：页面已被销毁，不会执行`)\n  }.bind(this), 0)\n}\n\n\n提示：\n\n * settimeout之类的异步操作绑定在了当前页面上，因此当页面销毁之后异步调用不会执行。\n\n\n# onbackpress()\n\n当用户右滑返回或点击返回实体按键时触发该事件。\n\n如果事件响应方法最后返回true表示不返回，自己处理业务逻辑（完毕后开发者自行调用 api 返回）；否则：不返回数据，或者返回其它数据，表示遵循系统逻辑：返回到上一页。\n\n示例如下：\n\nonbackpress () {\n  console.info(`触发：onbackpress`)\n  // true：表示自己处理；否则默认返回上一页\n  // return true\n}\n\n\n\n# onrefresh(query)\n\n监听页面重新打开。\n\n1.当页面在 manifest 中 launchmode 标识为'singletask'时，仅会存在一个目标页面实例，用户多次打开目标页面时触发此函数。\n2.打开目标页面时在 push 参数中携带 flag 'cleartask'，且页面实例已经存在时触发。该回调中参数为重新打开该页面时携带的参数，详见页面启动模式。\n\n示例如下：\n\nonrefresh(query) {\n  // launchmode 为 singletask 时，重新打开页面时携带的参数不会自动更新到页面 this 对象上\n  // 需要在此处从 query 中拿到并手动更新\n  console.log('page refreshed!!!')\n}\n\n\n\n# onconfigurationchanged(event)\n\n监听应用配置发生变化。当应用配置发生变化时触发，如系统语言改变。\n\n参数\n\n参数名     类型       描述\nevent   object   应用配置发生变化的事件\n\nevent参数\n\n参数名    类型       描述\ntype   string   应用配置发生变化的原因类型，支持的 type 值如下所示\n\nevent 中 type 现在支持的参数值如下\n\n参数名      描述\nlocale   应用配置因为语言、地区变化而发生改变\n\n示例如下：\n\nonconfigurationchanged(evt) {\n  console.log(`触发生命周期onconfigurationchanged, 配置类型：${evt.type}`)\n}\n\n\n\n# app的生命周期\n\n当前为 app 的生命周期提供了五个回调函数：oncreate()、onshow()、onhide()、ondestroy()、onerror(e)。\n\n示例如下：\n\nexport default {\n  // 监听应用创建,应用创建时调用\n  oncreate() { \n    console.info('application oncreate')\n  },\n  // 监听应用返回前台,应用返回前台时调用\n  onshow() { \n    console.info('application onshow')\n  },\n  // 监听应用退到后台,应用退到后台时调用\n  onhide() { \n    console.info('application onhide')\n  },\n  // 监听应用销毁,应用销毁时调用\n  ondestroy() { \n    console.info('application ondesteroy')\n  },\n  // 监听应用报错,应用捕获异常时调用,参数为error对象。\n  onerror(e) {\n    console.log('application onerror', e)\n  },\n  // 暴露给所有页面，在页面中通过：this.$app.$def.method1()访问\n  method1() {\n    console.info('这是app的方法')\n  },\n  // 暴露给所有页面，在页面中通过：this.$app.$def.data1访问\n  data1: {\n    name: '这是app存的数据'\n  }\n}\n",charsets:{cjk:!0}},{title:"全局属性和方法",frontmatter:{},regularPath:"/zh/guide/framework/script/global-data-method.html",relativePath:"zh/guide/framework/script/global-data-method.md",key:"v-775de6e0",path:"/zh/guide/framework/script/global-data-method.html",headers:[{level:2,title:"对象",slug:"对象",normalizedTitle:"对象",charIndex:14},{level:3,title:"公共对象",slug:"公共对象",normalizedTitle:"公共对象",charIndex:21},{level:2,title:"方法",slug:"方法",normalizedTitle:"方法",charIndex:7},{level:3,title:"this.$canIUse",slug:"this-caniuse",normalizedTitle:"this.$caniuse",charIndex:929},{level:3,title:"this.$watch",slug:"this-watch",normalizedTitle:"this.$watch",charIndex:1610},{level:3,title:"this.$element",slug:"this-element",normalizedTitle:"this.$element",charIndex:2453},{level:3,title:"this.$nextTick",slug:"this-nexttick",normalizedTitle:"this.$nexttick",charIndex:2888}],headersStr:"对象 公共对象 方法 this.$canIUse this.$watch this.$element this.$nextTick",content:"# 全局属性和方法\n\n\n# 对象\n\n\n# 公共对象\n\n属性       类型        描述\n$app     Object    应用对象\n$page    Object    页面对象\n$valid   Boolean   页面对象是否有效\n\n# 应用对象\n\n在页面中可通过 $app 访问到全局应用对象。\n\n在app.ux文件中，开发者可以定义全局可访问的数据和方法，在页面中通过this.$app.$def访问，在app.ux文件中，直接通过this访问。例如在app.ux文件中定义如下：\n\n<script>\n/**\n * 应用级别的配置，供所有页面公用\n */\nexport default {\n  data: {\n    a: 1\n  },\n  func: function() {\n    console.log(this.data.a)\n    console.log(`function executed!`)\n  }\n}\n<\/script>\n\n\n在其他页面可以这样调用：\n\nthis.$app.$def.data\nthis.$app.$def.func()\n\n\n可通过 $app 访问如下内置方法：\n\n属性     类型         描述\nexit   Function   退出 JS 应用，结束应用生命周期。调用方法：this.$app.exit()\n\n# 页面对象\n\n在页面中可通过this.$page访问到当前页面对象，该对象上可访问到如下属性：\n\n属性          类型       描述\nname        String   获取当前页面路由的名称，与manifest 文件中router.pages 中对应的属性名一致\npath        String   获取当前页面路由的 path，与manifest 文件中router.pages 中对应的 path 一致\ncomponent   String   获取当前页面路由的 component，与manifest 文件中router.pages 中对应的 component\n                     一致\n\n\n# 方法\n\n\n# this.$canIUse\n\n在页面中可通过 this.$canIUse 进行可使用的能力查询，包括接口和组件。\n\n# 参数:\n\n类型       描述\nString   要查询的能力，格式见下方\n\n# 返回值：\n\n类型        描述\nBoolean   查询的能力是否支持\n\n# 入参格式\n\n# 查询接口\n\n// 查询feature下的方法是否支持\n`@${featureName}.${method}`\n// 查询某个feature是否支持\n`@${featureName}`\n\n\n示例\n\nif (this.$canIUse('@system.router.push')) {\n  // 可以使用方法@system.router.push\n}\nif (this.$canIUse('@system.router')) {\n  // 可以使用@system.router接口\n}\n\n\n# 查询组件\n\ntype取值可以是'attr'、'style'、'method'，分别对应组件的属性、样式、方法。\n\n// 查询组件下的属性、样式、方法是否支持\n`${componentName}.${type}.${name}`\n// 查询组件是否支持\n`${componentName}`\n\n\n示例\n\nif (this.$canIUse('scroll')) {\n  // 可以使用scroll组件\n}\nif (this.$canIUse('scroll.attr.scroll-x')) {\n  // 可以使用scroll组件的scroll-x属性\n}\n\n\n\n# this.$watch\n\n监控数据改变。动态添加属性/事件绑定，属性必须在 data 中定义，handler 函数必须在<script>定义，当属性值发生变化时事件被触发。\n如果是监听对象中的属性，参数请使用.分割，如：$watch(xxx.xxx.xxx, methodName)。\n\n# 参数\n\n属性        类型       描述\ndata      String   属性名，支持'a.b.c'格式，不支持数组索引\nhandler   String   事件句柄函数名，函数的第一个参数为新属性值，第二个参数为旧的属性值\n\n# 代码示例\n\n<script>\n  export default {\n    props: ['propObject'],\n    data {\n      say: '',\n      propSay: ''\n    },\n    onInit() {\n      // 监听数据变化\n      this.$watch('say', 'watchDataChange')\n      this.$watch('propObject.name', 'watchPropsChange')\n    },\n    /**\n     * 监听数据变化，你可以对数据处理后，设置值到data上\n     * @param newV\n     * @param oldV\n     */\n    watchPropsChange(newV, oldV) {\n      console.info(`监听数据变化：`, newV, oldV)\n      this.propSay = newV && newV.toUpperCase()\n    },\n    watchDataChange(newV, oldV) {\n      console.info(`监听数据变化：`, newV, oldV)\n    }\n  }\n<\/script>\n\n\n\n# this.$element\n\n获取指定 id 的组件 dom 对象，如果没有指定 id，则返回根组件 dom 对象。\n\n# 参数\n\n类型       描述\nString   this.$element('idName')获取 dom 节点\n\n# 代码示例\n\n<template>\n  <div>\n    <div id='xxx'></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onReady() {\n      const el = this.$element('xxx')\n      console.log(`输出xxx节点信息： ${el}`)\n    }\n  }\n<\/script>\n\n\nthis.$element('xxx') 获取 id 为 xxx 的 div 组件实例对象， this.$element() 获取模板中的根组件实例对象。\n\nid属性赋值可以查看此文档。\n\n\n# this.$nextTick\n\n在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，可以获取更新后DOM。\n\n# 参数\n\n类型         描述\nFunction   回调函数中执行的是会对DOM进行操作的处理\n\n# 代码示例\n\n<template>\n  <div class=\"page\">\n    <text @click=\"onAddClick\">添加项目</text>\n    <div class=\"list\" id=\"list\">\n      <div class=\"item\" for=\"{{list}}\">\n        <text>{{ $item }}</text>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list: [\"项目1\", \"项目2\"]\n    },\n    onAddClick() {\n      this.list.push(Math.random())\n      // 更新数据后,DOM没有立即发生变化。\n      this.$element(\"list\").getBoundingClientRect({\n        success: (rect) => {\n          console.log(\"getBoundingClientRect.height=\", rect.height)\n        }\n      })\n      this.$nextTick(() => {\n        // 更新数据后,DOM发生变化。\n        this.$element(\"list\").getBoundingClientRect({\n          success: (rect) => {\n            console.log(\"$nextTick getBoundingClientRect.height=\", rect.height)\n          }\n        })\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    padding-top: 20px;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  .list {\n    width: 200px;\n    flex-direction: column;\n    align-items: center;\n    border: 2px solid red;\n  }\n</style>\n\n\n除了以上公共方法，还有this.$on、this.$off、this.$dispatch、this.$broadcast、this.$emit等事件方法用于父子组件通信。方法说明如下：\n\n方法                参数                         描述\nthis.$on          type: String 事件名           添加事件处理句柄用法：this.$on('xxxx', this.fn)，fn 是在<script>中定义的函数\n                  handler: Function 事件句柄函数\nthis.$off         type: String 事件名           删除事件处理句柄用法：this.$off('xxxx', this.fn) this.$off('xxx')\n                  handler: Function 事件句柄函数   删除指定事件的所有处理句柄\nthis.$dispatch    type: String 事件名           向上层组件发送事件通知用法：this.$dispatch('xxx')正常情况下，会一直向上传递事件（冒泡）如果要停止冒泡，在事件句柄函数中调用evt.stop()即可\nthis.$broadcast   type: String 事件名           向子组件发送事件通知用法：this.$broadcast('xxx')正常情况下，会一直向下传递事件如果要停止传递，在事件句柄函数中调用evt.stop()即可\nthis.$emit        type: String 事件名           触发事件，对应的句柄函数被调用用法：this.$emit('xxx') this.$emit('xxx',\n                  data: Object 事件参数          {a:1})传递的事件参数可在事件回调函数中，通过evt.detail来访问，例如evt.detail.a\n\n事件方法使用示例可参考文档。",normalizedContent:"# 全局属性和方法\n\n\n# 对象\n\n\n# 公共对象\n\n属性       类型        描述\n$app     object    应用对象\n$page    object    页面对象\n$valid   boolean   页面对象是否有效\n\n# 应用对象\n\n在页面中可通过 $app 访问到全局应用对象。\n\n在app.ux文件中，开发者可以定义全局可访问的数据和方法，在页面中通过this.$app.$def访问，在app.ux文件中，直接通过this访问。例如在app.ux文件中定义如下：\n\n<script>\n/**\n * 应用级别的配置，供所有页面公用\n */\nexport default {\n  data: {\n    a: 1\n  },\n  func: function() {\n    console.log(this.data.a)\n    console.log(`function executed!`)\n  }\n}\n<\/script>\n\n\n在其他页面可以这样调用：\n\nthis.$app.$def.data\nthis.$app.$def.func()\n\n\n可通过 $app 访问如下内置方法：\n\n属性     类型         描述\nexit   function   退出 js 应用，结束应用生命周期。调用方法：this.$app.exit()\n\n# 页面对象\n\n在页面中可通过this.$page访问到当前页面对象，该对象上可访问到如下属性：\n\n属性          类型       描述\nname        string   获取当前页面路由的名称，与manifest 文件中router.pages 中对应的属性名一致\npath        string   获取当前页面路由的 path，与manifest 文件中router.pages 中对应的 path 一致\ncomponent   string   获取当前页面路由的 component，与manifest 文件中router.pages 中对应的 component\n                     一致\n\n\n# 方法\n\n\n# this.$caniuse\n\n在页面中可通过 this.$caniuse 进行可使用的能力查询，包括接口和组件。\n\n# 参数:\n\n类型       描述\nstring   要查询的能力，格式见下方\n\n# 返回值：\n\n类型        描述\nboolean   查询的能力是否支持\n\n# 入参格式\n\n# 查询接口\n\n// 查询feature下的方法是否支持\n`@${featurename}.${method}`\n// 查询某个feature是否支持\n`@${featurename}`\n\n\n示例\n\nif (this.$caniuse('@system.router.push')) {\n  // 可以使用方法@system.router.push\n}\nif (this.$caniuse('@system.router')) {\n  // 可以使用@system.router接口\n}\n\n\n# 查询组件\n\ntype取值可以是'attr'、'style'、'method'，分别对应组件的属性、样式、方法。\n\n// 查询组件下的属性、样式、方法是否支持\n`${componentname}.${type}.${name}`\n// 查询组件是否支持\n`${componentname}`\n\n\n示例\n\nif (this.$caniuse('scroll')) {\n  // 可以使用scroll组件\n}\nif (this.$caniuse('scroll.attr.scroll-x')) {\n  // 可以使用scroll组件的scroll-x属性\n}\n\n\n\n# this.$watch\n\n监控数据改变。动态添加属性/事件绑定，属性必须在 data 中定义，handler 函数必须在<script>定义，当属性值发生变化时事件被触发。\n如果是监听对象中的属性，参数请使用.分割，如：$watch(xxx.xxx.xxx, methodname)。\n\n# 参数\n\n属性        类型       描述\ndata      string   属性名，支持'a.b.c'格式，不支持数组索引\nhandler   string   事件句柄函数名，函数的第一个参数为新属性值，第二个参数为旧的属性值\n\n# 代码示例\n\n<script>\n  export default {\n    props: ['propobject'],\n    data {\n      say: '',\n      propsay: ''\n    },\n    oninit() {\n      // 监听数据变化\n      this.$watch('say', 'watchdatachange')\n      this.$watch('propobject.name', 'watchpropschange')\n    },\n    /**\n     * 监听数据变化，你可以对数据处理后，设置值到data上\n     * @param newv\n     * @param oldv\n     */\n    watchpropschange(newv, oldv) {\n      console.info(`监听数据变化：`, newv, oldv)\n      this.propsay = newv && newv.touppercase()\n    },\n    watchdatachange(newv, oldv) {\n      console.info(`监听数据变化：`, newv, oldv)\n    }\n  }\n<\/script>\n\n\n\n# this.$element\n\n获取指定 id 的组件 dom 对象，如果没有指定 id，则返回根组件 dom 对象。\n\n# 参数\n\n类型       描述\nstring   this.$element('idname')获取 dom 节点\n\n# 代码示例\n\n<template>\n  <div>\n    <div id='xxx'></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    onready() {\n      const el = this.$element('xxx')\n      console.log(`输出xxx节点信息： ${el}`)\n    }\n  }\n<\/script>\n\n\nthis.$element('xxx') 获取 id 为 xxx 的 div 组件实例对象， this.$element() 获取模板中的根组件实例对象。\n\nid属性赋值可以查看此文档。\n\n\n# this.$nexttick\n\n在下次 dom 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，可以获取更新后dom。\n\n# 参数\n\n类型         描述\nfunction   回调函数中执行的是会对dom进行操作的处理\n\n# 代码示例\n\n<template>\n  <div class=\"page\">\n    <text @click=\"onaddclick\">添加项目</text>\n    <div class=\"list\" id=\"list\">\n      <div class=\"item\" for=\"{{list}}\">\n        <text>{{ $item }}</text>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list: [\"项目1\", \"项目2\"]\n    },\n    onaddclick() {\n      this.list.push(math.random())\n      // 更新数据后,dom没有立即发生变化。\n      this.$element(\"list\").getboundingclientrect({\n        success: (rect) => {\n          console.log(\"getboundingclientrect.height=\", rect.height)\n        }\n      })\n      this.$nexttick(() => {\n        // 更新数据后,dom发生变化。\n        this.$element(\"list\").getboundingclientrect({\n          success: (rect) => {\n            console.log(\"$nexttick getboundingclientrect.height=\", rect.height)\n          }\n        })\n      })\n    }\n  }\n<\/script>\n<style>\n  .page {\n    padding-top: 20px;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  .list {\n    width: 200px;\n    flex-direction: column;\n    align-items: center;\n    border: 2px solid red;\n  }\n</style>\n\n\n除了以上公共方法，还有this.$on、this.$off、this.$dispatch、this.$broadcast、this.$emit等事件方法用于父子组件通信。方法说明如下：\n\n方法                参数                         描述\nthis.$on          type: string 事件名           添加事件处理句柄用法：this.$on('xxxx', this.fn)，fn 是在<script>中定义的函数\n                  handler: function 事件句柄函数\nthis.$off         type: string 事件名           删除事件处理句柄用法：this.$off('xxxx', this.fn) this.$off('xxx')\n                  handler: function 事件句柄函数   删除指定事件的所有处理句柄\nthis.$dispatch    type: string 事件名           向上层组件发送事件通知用法：this.$dispatch('xxx')正常情况下，会一直向上传递事件（冒泡）如果要停止冒泡，在事件句柄函数中调用evt.stop()即可\nthis.$broadcast   type: string 事件名           向子组件发送事件通知用法：this.$broadcast('xxx')正常情况下，会一直向下传递事件如果要停止传递，在事件句柄函数中调用evt.stop()即可\nthis.$emit        type: string 事件名           触发事件，对应的句柄函数被调用用法：this.$emit('xxx') this.$emit('xxx',\n                  data: object 事件参数          {a:1})传递的事件参数可在事件回调函数中，通过evt.detail来访问，例如evt.detail.a\n\n事件方法使用示例可参考文档。",charsets:{cjk:!0}},{title:"页面数据对象",frontmatter:{},regularPath:"/zh/guide/framework/script/page-data.html",relativePath:"zh/guide/framework/script/page-data.md",key:"v-655aa9f6",path:"/zh/guide/framework/script/page-data.html",headersStr:null,content:"# 页面数据对象\n\n属性          类型       描述\ndata        Object   组件级的数据模型，属性名不能以$或_开头，不要使用 for, if, show, tid 等保留字\npublic      Object   页面级组件的数据模型，影响传入数据的覆盖机制：public\n                     内定义的属性允许被传入的数据覆盖，如果外部传入数据的某个属性未被声明，在 public 中不会新增这个属性\nprotected   Object   页面级组件的数据模型，影响传入数据的覆盖机制：protected\n                     内定义的属性，允许被应用内部页面请求传递的数据覆盖，不允许被应用外部请求传递的数据覆盖\nprivate     Object   页面级组件的数据模型，影响传入数据的覆盖机制：private 内定义的属性不允许被覆盖\ncomputed    Object   计算属性，属性名不能以$或_开头, 不要使用 for, if, show, tid 等保留字\n\n温馨提示\n\n注意 public，protected，private 不能与 data 同时使用。",normalizedContent:"# 页面数据对象\n\n属性          类型       描述\ndata        object   组件级的数据模型，属性名不能以$或_开头，不要使用 for, if, show, tid 等保留字\npublic      object   页面级组件的数据模型，影响传入数据的覆盖机制：public\n                     内定义的属性允许被传入的数据覆盖，如果外部传入数据的某个属性未被声明，在 public 中不会新增这个属性\nprotected   object   页面级组件的数据模型，影响传入数据的覆盖机制：protected\n                     内定义的属性，允许被应用内部页面请求传递的数据覆盖，不允许被应用外部请求传递的数据覆盖\nprivate     object   页面级组件的数据模型，影响传入数据的覆盖机制：private 内定义的属性不允许被覆盖\ncomputed    object   计算属性，属性名不能以$或_开头, 不要使用 for, if, show, tid 等保留字\n\n温馨提示\n\n注意 public，protected，private 不能与 data 同时使用。",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/zh/guide/framework/template.html",relativePath:"zh/guide/framework/template.md",key:"v-30f0a494",path:"/zh/guide/framework/template.html",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"媒体查询",frontmatter:{},regularPath:"/zh/guide/framework/style/media-query.html",relativePath:"zh/guide/framework/style/media-query.md",key:"v-52f6d9ca",path:"/zh/guide/framework/style/media-query.html",headers:[{level:2,title:"语法",slug:"语法",normalizedTitle:"语法",charIndex:187},{level:3,title:"@media 方式引入媒体查询",slug:"media-方式引入媒体查询",normalizedTitle:"@media 方式引入媒体查询",charIndex:282},{level:3,title:"举例",slug:"举例",normalizedTitle:"举例",charIndex:373},{level:3,title:"@import 方式引入媒体查询",slug:"import-方式引入媒体查询",normalizedTitle:"@import 方式引入媒体查询",charIndex:621},{level:2,title:"媒体类型",slug:"媒体类型",normalizedTitle:"媒体类型",charIndex:206},{level:2,title:"媒体特性",slug:"媒体特性",normalizedTitle:"媒体特性",charIndex:216},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:1998},{level:2,title:"逻辑操作符",slug:"逻辑操作符",normalizedTitle:"逻辑操作符",charIndex:232},{level:2,title:"示例代码",slug:"示例代码",normalizedTitle:"示例代码",charIndex:2603},{level:2,title:"支持明细",slug:"支持明细",normalizedTitle:"支持明细",charIndex:4433}],headersStr:"语法 @media 方式引入媒体查询 举例 @import 方式引入媒体查询 媒体类型 媒体特性 注意 逻辑操作符 示例代码 支持明细",content:"# 媒体查询\n\n通过媒体查询(media query)，开发者可以根据各种设备特征和参数的值或者是否存在来调整JS 应用的样式。\n\n媒体查询是响应式设计的一部分。和 css 类似，可使用 @media at-rule 根据媒体查询的结果，有条件地应用样式表的一部分；也可使用 @import 有条件地应用整个样式表。\n\naiot-toolkit最低版本：1.1.3\n\n\n# 语法\n\n每条媒体查询语句都由一个可选的媒体类型和任意数量的媒体特性表达式构成，可以使用多种逻辑操作符合并多条媒体查询语句，媒体查询语句不区分大小写。\n\n有两种方法可以执行媒体查询：\n\n\n# @media 方式引入媒体查询\n\n@media [media type] [and|not|only] [(media feature)] {\n  CSS-Code;\n}\n\n\n\n# 举例\n\n * @media (max-width: 30) { ... } // level3的写法。\n * @media (width <= 30) { ... } // level4的写法，比level3更清晰简洁。\n * @media screen and (min-width: 400) and (max-width: 700) { ... } // 多条件写法。\n * @media (400 <= width <= 700) { ... } // 多条件level4写法。\n\n\n# @import 方式引入媒体查询\n\n@import './css_file_name.css' [media type] [and|not|only] [(media feature) ];\n\n\n\n# 媒体类型\n\n媒体类型（Media types）描述设备的类别。除了在使用 not 或 only 逻辑操作符必须一并填上媒体类型；其他时候，媒体类型是可选择是否填入的。目前JS 应用支持的媒体类型如下：\n\n媒体类型     简介\nscreen   主要用于屏幕。\n\n\n# 媒体特性\n\n媒体特性表达式是完全可选的，它负责测试这些特性或特征是否存在、值为多少。\n\n每条媒体特性表达式都必须用括号括起来。\n\n目前JS 应用支持的媒体特性如下：\n\n类型                 描述                                                    查询时是否需带单位   支持单位\nheight             定义输出设备中的页面可视区域高度                                      否           dp\nmin-height         定义输出设备中的页面可视区域最小高度                                    否           dp\nmax-height         定义输出设备中的页面可视区域最大高度                                    否           dp\nwidth              定义输出设备中的页面可视区域宽度                                      否           dp\nmin-width          定义输出设备中的页面可视区域最小宽度                                    否           dp\nmax-width          定义输出设备中的页面可视区域最大宽度                                    否           dp\naspect-ratio       定义输出设备中的页面可见区域宽高比，比例值需要按照 x / y 的格式，例如 1 / 2          否           无\nmin-aspect-ratio   定义输出设备中的页面可见区域最小宽高比，参数要求同上                            否           无\nmax-aspect-ratio   定义输出设备中的页面可见区域最大宽高比，参数要求同上                            否           无\ndevice-type        device-type 的可选值为：watch、band、smartspeaker，默认值：watch   否           无\nshape              屏幕形状，可选值：circle、rect、pill-shaped                      否           无\n\n\n# 注意\n\n1.在媒体特性列表中，标记了“查询时不带单位”的媒体特性，如 width、height 的查询，都不带长度单位，且长度单位只能为dp\n\ndp 数值 = 物理分辨率 / 设备像素比(device pixel ratio)\n\n举例：一个设备分辨率为 480*480，设备像素比 = 2，屏幕宽度 = 480 像素 = 240dp\n\n各设备数据参考\n\n设备类型   设备型号                  屏幕形状   屏幕尺寸     分辨率       PPI   DPR   水平DP值\n手表     Xiaomi Watch S1 Pro   圆形     1.47英寸   480x480   326   2.0   240\n手表     Xiaomi Watch H1       圆形     1.43英寸   466x466   326   2.0   233\n手表     Xiaomi Watch S3       圆形     1.43英寸   466x466   326   2.0   233\n手环     小米手环8 Pro             矩形     1.74英寸   336x480   336   2.1   168\n手环     小米手环9                 胶囊形    1.62英寸   192x490   325   2.0   96\n\n示例代码：\n\n//以下media query会在小米手环9生效，小米手环9的分辨率为：192*490，水平dp值为：96\n@media (min-width: 80) and (max-width: 160) {\n  .box {\n    background-color: green;\n  }\n}\n\n//以下media query会在小米手环8 Pro生效，小米手环8 Pro的分辨率为：336*480，水平dp值为：168\n@media (min-width: 160) and (max-width: 200) {\n  .box {\n    background-color: yellow;\n  }\n}\n\n//以下media query会在Xiaomi Watch S3手表生效，Xiaomi Watch S3手表的分辨率为：466*466，水平dp值为：233\n@media (min-width: 200) and (max-width: 300) {\n  .box {\n    background-color: red;\n  }\n}\n\n\n\n# 逻辑操作符\n\n开发者可以使用逻辑操作符组合多个媒体特性的查询条件，编写复杂的媒体查询。\n\n类型      描述\nand     and 运算符用于将多个媒体特性组合到一个单独的媒体查询中，要求每个链接的特性返回 true，则此时查询为真\nnot     not 运算符用于否定媒体查询，如果查询不返回 false，则返回\n        true。如果出现在逗号分隔的列表中，它只会否定应用它的特定查询。如果使用 not\n        运算符，则必须指定显式媒体类型。例如：not screen and (min-width: 400) and\n        (max-width: 700)注：not 关键字不能用于否定单个功能表达式，它会作用于整个媒体查询\nonly    only 运算符仅用于整个查询匹配应用样式，手表应用处理以 only 开头的关键词时将会忽略 only。如果使用\n        only 运算符，必须指定媒体类型。例如：only screen and (min-width: 400) and\n        (max-width: 700)\n,(逗号)   逗号分隔效果等同于 or\n        逻辑操作符。当使用逗号分隔的媒体查询时，如果任何一个媒体查询返回真，样式就是有效的。例如：(width >= 192),\n        (height >= 490)\nor      or 运算符用于将多个媒体特性比较语句组合到一个媒体查询语句中，只要有其中一条媒体特性比较语句返回\n        true，查询成立。例如：(min-width: 400) or (max-width: 700)\n<=      小于等于。例如： (400 <= width)\n>=      大于等于。例如： (500 >= height)\n<       小于。例如： (400 < width)\n>       大于。例如： (500 > height)\n\n\n# 示例代码\n\n * 查询形状为圆形或胶囊形\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (shape: circle) or (shape: pill-shaped) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n   \n\n * 同时查询设备类型为手表，屏幕形状为圆形\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (device-type: watch) and (shape: circle) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n\n\n# 支持明细\n\n设备产品               说明\n小米 S1 Pro 运动健康手表   不支持\n小米手环 8 Pro         不支持\nXiaomi Watch S3    支持2+特性\nRedmi Watch 4      不支持\n小米腕部心电血压记录仪        不支持\nXiaomi Watch S4    支持\nREDMI Watch 5      支持",normalizedContent:"# 媒体查询\n\n通过媒体查询(media query)，开发者可以根据各种设备特征和参数的值或者是否存在来调整js 应用的样式。\n\n媒体查询是响应式设计的一部分。和 css 类似，可使用 @media at-rule 根据媒体查询的结果，有条件地应用样式表的一部分；也可使用 @import 有条件地应用整个样式表。\n\naiot-toolkit最低版本：1.1.3\n\n\n# 语法\n\n每条媒体查询语句都由一个可选的媒体类型和任意数量的媒体特性表达式构成，可以使用多种逻辑操作符合并多条媒体查询语句，媒体查询语句不区分大小写。\n\n有两种方法可以执行媒体查询：\n\n\n# @media 方式引入媒体查询\n\n@media [media type] [and|not|only] [(media feature)] {\n  css-code;\n}\n\n\n\n# 举例\n\n * @media (max-width: 30) { ... } // level3的写法。\n * @media (width <= 30) { ... } // level4的写法，比level3更清晰简洁。\n * @media screen and (min-width: 400) and (max-width: 700) { ... } // 多条件写法。\n * @media (400 <= width <= 700) { ... } // 多条件level4写法。\n\n\n# @import 方式引入媒体查询\n\n@import './css_file_name.css' [media type] [and|not|only] [(media feature) ];\n\n\n\n# 媒体类型\n\n媒体类型（media types）描述设备的类别。除了在使用 not 或 only 逻辑操作符必须一并填上媒体类型；其他时候，媒体类型是可选择是否填入的。目前js 应用支持的媒体类型如下：\n\n媒体类型     简介\nscreen   主要用于屏幕。\n\n\n# 媒体特性\n\n媒体特性表达式是完全可选的，它负责测试这些特性或特征是否存在、值为多少。\n\n每条媒体特性表达式都必须用括号括起来。\n\n目前js 应用支持的媒体特性如下：\n\n类型                 描述                                                    查询时是否需带单位   支持单位\nheight             定义输出设备中的页面可视区域高度                                      否           dp\nmin-height         定义输出设备中的页面可视区域最小高度                                    否           dp\nmax-height         定义输出设备中的页面可视区域最大高度                                    否           dp\nwidth              定义输出设备中的页面可视区域宽度                                      否           dp\nmin-width          定义输出设备中的页面可视区域最小宽度                                    否           dp\nmax-width          定义输出设备中的页面可视区域最大宽度                                    否           dp\naspect-ratio       定义输出设备中的页面可见区域宽高比，比例值需要按照 x / y 的格式，例如 1 / 2          否           无\nmin-aspect-ratio   定义输出设备中的页面可见区域最小宽高比，参数要求同上                            否           无\nmax-aspect-ratio   定义输出设备中的页面可见区域最大宽高比，参数要求同上                            否           无\ndevice-type        device-type 的可选值为：watch、band、smartspeaker，默认值：watch   否           无\nshape              屏幕形状，可选值：circle、rect、pill-shaped                      否           无\n\n\n# 注意\n\n1.在媒体特性列表中，标记了“查询时不带单位”的媒体特性，如 width、height 的查询，都不带长度单位，且长度单位只能为dp\n\ndp 数值 = 物理分辨率 / 设备像素比(device pixel ratio)\n\n举例：一个设备分辨率为 480*480，设备像素比 = 2，屏幕宽度 = 480 像素 = 240dp\n\n各设备数据参考\n\n设备类型   设备型号                  屏幕形状   屏幕尺寸     分辨率       ppi   dpr   水平dp值\n手表     xiaomi watch s1 pro   圆形     1.47英寸   480x480   326   2.0   240\n手表     xiaomi watch h1       圆形     1.43英寸   466x466   326   2.0   233\n手表     xiaomi watch s3       圆形     1.43英寸   466x466   326   2.0   233\n手环     小米手环8 pro             矩形     1.74英寸   336x480   336   2.1   168\n手环     小米手环9                 胶囊形    1.62英寸   192x490   325   2.0   96\n\n示例代码：\n\n//以下media query会在小米手环9生效，小米手环9的分辨率为：192*490，水平dp值为：96\n@media (min-width: 80) and (max-width: 160) {\n  .box {\n    background-color: green;\n  }\n}\n\n//以下media query会在小米手环8 pro生效，小米手环8 pro的分辨率为：336*480，水平dp值为：168\n@media (min-width: 160) and (max-width: 200) {\n  .box {\n    background-color: yellow;\n  }\n}\n\n//以下media query会在xiaomi watch s3手表生效，xiaomi watch s3手表的分辨率为：466*466，水平dp值为：233\n@media (min-width: 200) and (max-width: 300) {\n  .box {\n    background-color: red;\n  }\n}\n\n\n\n# 逻辑操作符\n\n开发者可以使用逻辑操作符组合多个媒体特性的查询条件，编写复杂的媒体查询。\n\n类型      描述\nand     and 运算符用于将多个媒体特性组合到一个单独的媒体查询中，要求每个链接的特性返回 true，则此时查询为真\nnot     not 运算符用于否定媒体查询，如果查询不返回 false，则返回\n        true。如果出现在逗号分隔的列表中，它只会否定应用它的特定查询。如果使用 not\n        运算符，则必须指定显式媒体类型。例如：not screen and (min-width: 400) and\n        (max-width: 700)注：not 关键字不能用于否定单个功能表达式，它会作用于整个媒体查询\nonly    only 运算符仅用于整个查询匹配应用样式，手表应用处理以 only 开头的关键词时将会忽略 only。如果使用\n        only 运算符，必须指定媒体类型。例如：only screen and (min-width: 400) and\n        (max-width: 700)\n,(逗号)   逗号分隔效果等同于 or\n        逻辑操作符。当使用逗号分隔的媒体查询时，如果任何一个媒体查询返回真，样式就是有效的。例如：(width >= 192),\n        (height >= 490)\nor      or 运算符用于将多个媒体特性比较语句组合到一个媒体查询语句中，只要有其中一条媒体特性比较语句返回\n        true，查询成立。例如：(min-width: 400) or (max-width: 700)\n<=      小于等于。例如： (400 <= width)\n>=      大于等于。例如： (500 >= height)\n<       小于。例如： (400 < width)\n>       大于。例如： (500 > height)\n\n\n# 示例代码\n\n * 查询形状为圆形或胶囊形\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (shape: circle) or (shape: pill-shaped) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n   \n\n * 同时查询设备类型为手表，屏幕形状为圆形\n   \n     .box {\n       width: 100px;\n       height: 100px;\n       background-color: black;\n     }\n   \n     @media (device-type: watch) and (shape: circle) {\n       .box {\n         background-color: green;\n       }\n     }\n   \n\n\n# 支持明细\n\n设备产品               说明\n小米 s1 pro 运动健康手表   不支持\n小米手环 8 pro         不支持\nxiaomi watch s3    支持2+特性\nredmi watch 4      不支持\n小米腕部心电血压记录仪        不支持\nxiaomi watch s4    支持\nredmi watch 5      支持",charsets:{cjk:!0}},{title:"页面样式与布局",frontmatter:{},regularPath:"/zh/guide/framework/style/page-style-and-layout.html",relativePath:"zh/guide/framework/style/page-style-and-layout.md",key:"v-1d91c214",path:"/zh/guide/framework/style/page-style-and-layout.html",headers:[{level:2,title:"盒模型",slug:"盒模型",normalizedTitle:"盒模型",charIndex:14},{level:2,title:"长度单位",slug:"长度单位",normalizedTitle:"长度单位",charIndex:308},{level:3,title:"px",slug:"px",normalizedTitle:"px",charIndex:331},{level:3,title:"百分比%",slug:"百分比",normalizedTitle:"百分比%",charIndex:987},{level:3,title:"dp",slug:"dp",normalizedTitle:"dp",charIndex:336},{level:2,title:"设置定位",slug:"设置定位",normalizedTitle:"设置定位",charIndex:1312},{level:2,title:"设置样式",slug:"设置样式",normalizedTitle:"设置样式",charIndex:1385},{level:2,title:"通用样式",slug:"通用样式",normalizedTitle:"通用样式",charIndex:1959},{level:2,title:"Flex 布局示例",slug:"flex-布局示例",normalizedTitle:"flex 布局示例",charIndex:2003},{level:2,title:"动态修改样式",slug:"动态修改样式",normalizedTitle:"动态修改样式",charIndex:2702},{level:2,title:"引入 less/scss 预编译",slug:"引入-less-scss-预编译",normalizedTitle:"引入 less/scss 预编译",charIndex:3828},{level:3,title:"less 篇",slug:"less-篇",normalizedTitle:"less 篇",charIndex:3849},{level:3,title:"scss 篇",slug:"scss-篇",normalizedTitle:"scss 篇",charIndex:4181},{level:2,title:"使用 postcss 解析 css",slug:"使用-postcss-解析-css",normalizedTitle:"使用 postcss 解析 css",charIndex:4543}],headersStr:"盒模型 长度单位 px 百分比% dp 设置定位 设置样式 通用样式 Flex 布局示例 动态修改样式 引入 less/scss 预编译 less 篇 scss 篇 使用 postcss 解析 css",content:'# 页面样式与布局\n\n\n# 盒模型\n\nJS 应用布局框架使用 border-box 模型，具体表现与宽高边距计算可参考 MDN 文档box-sizing，暂不支持 content-box 模型与手动指定 box-sizing 属性。\n\n\n\n布局所占宽度 Width：\n\nWidth = width(包含padding-left + padding-right + border-left + border-right)\n\n布局所占高度 Height：\n\nHeight = height(包含padding-top + padding-bottom + border-top + border-bottom)\n\n\n# 长度单位\n\n框架对长度单位的支持，支持长度单位px、%、dp。\n\n\n# px\n\n与传统 web 页面不同，px是相对于项目配置基准宽度的单位，已经适配了移动端屏幕，其原理类似于rem。\n\n开发者只需按照设计稿确定框架样式中的 px 值即可。\n\n首先，我们需要定义项目配置基准宽度，它是项目的配置文件（<ProjectName>/src/manifest.json）中config.designWidth的值，默认不填则为 480。\n\n然后， 设计稿1px与框架样式1px转换公式如下：\n\n设计稿1px / 设计稿基准宽度 = 框架样式1px / 项目配置基准宽度\n\n\n示例如下：\n\n若设计稿宽度为 640px，元素 A 在设计稿上的宽度为 100px，实现的两种方案如下：\n\n方案一：\n\n修改项目配置基准宽度：将项目配置基准宽度设置为设计稿基准宽度，则框架样式1px等于设计稿1px\n\n * 设置项目配置基准宽度，在项目的配置文件（<ProjectName>/src/manifest.json）中，修改config.designWidth：\n\n{\n  "config": {\n    "designWidth": 640\n  }\n}\n\n\n * 设置元素 A 对应的框架样式：\n\nwidth: 100px;\n\n\n方案二：\n\n不修改项目配置基准宽度：若当前项目配置的项目配置基准宽度为 480，设元素 A 的框架样式 xpx，由转换公式得：100 / 640 = x / 480。\n\n * 设置元素 A 对应的框架样式：\n\nwidth: 75px;\n\n\n\n# 百分比%\n\nJS 应用的百分比计算规则与 css 类似，可参考MDN 文档。\n\n\n# dp\n\ndp 单位，全称为 device independent pixels，即设备独立像素。\n\n计算公式：dp 数值 = 物理分辨率 / 设备像素比(device pixel ratio)\n\n举例：一个设备分辨率为 480*480，设备像素比 = 2，屏幕宽度 = 480 像素 = 240dp\n\n示例代码：\n\n<style>\n  .dp-box{\n    width:360dp;\n    height:360dp;\n    background-color:green;\n    margin-bottom:40px;\n  }\n</style>\n\n\n\n# 设置定位\n\nposition 支持2种属性值：relative、absolute，并且默认值为 relative，可以参考MDN 文档。\n\n\n# 设置样式\n\n开发者可以使用内联样式、tag选择器、class选择器、id选择器来为组件设置样式\n\n同时也可以使用并列选择设置样式，暂时不支持后代选择器。\n\n详细的文档可以查看此处。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <text style="color: #FF0000;">内联样式</text>\n    <text id="title">ID选择器</text>\n    <text class="title">class选择器</text>\n    <text>tag选择器</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n  /* tag选择器 */\n  text {\n    color: #0000FF;\n  }\n  /* class选择器（推荐） */\n  .title {\n    color: #00FF00;\n  }\n  /* ID选择器 */\n  #title {\n    color: #00A000;\n  }\n  /* 并列选择 */\n  .title, #title {\n    font-weight: bold;\n  }\n\n</style>\n\n\n\n# 通用样式\n\n通用样式如 margin，padding 等属性可以点击此处查询。\n\n\n# Flex 布局示例\n\n框架使用Flex布局，关于Flex布局可以参考外部文档A Complete Guide to Flexbox。\n\nFlex布局的支持也可以在官网文档的通用样式查询。\n\ndiv 组件为最常用的 Flex 容器组件，具有 Flex 布局的特性；text、span组件为文本容器组件，其它组件不能直接放置文本内容。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <div class="item">\n      <text>item1</text>\n    </div>\n    <div class="item">\n      <text>item2</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    /* 交叉轴居中 */\n    align-items: center;\n    /* 纵向排列 */\n    flex-direction: column;\n  }\n  .item {\n    /* 有剩余空间时，允许被拉伸 */\n    /*flex-grow: 1;*/\n    /* 空间不够用时，不允许被压缩 */\n    flex-shrink: 0;\n    /* 主轴居中 */\n    justify-content: center;\n    width: 200px;\n    height: 100px;\n    margin: 10px;\n    background-color: #FF0000;\n  }\n</style>\n\n\n\n# 动态修改样式\n\n动态修改样式有多种方式，与传统前端开发习惯一致，包括但不限于以下：\n\n * 修改 class：更新组件的 class 属性中使用的变量的值\n * 修改内联 style：更新组件的 style 属性中的某个 CSS 的值\n * 修改绑定的对象：通过绑定的对象控制元素的样式\n\n示例如下：\n\n<template>\n  <div style="flex-direction: column;">\n    \x3c!-- 修改 class --\x3e\n    <text class="normal-text {{ className }}" onclick="changeClassName">点击我修改文字颜色</text>\n    \x3c!-- 修改内联 style --\x3e\n    <text style="color: {{ textColor }}" onclick="changeInlineStyle">点击我修改文字颜色</text>\n    \x3c!-- 修改绑定的对象 --\x3e\n    <text style="{{ styleObj }}" onclick="changeStyleObj">点击我修改文字颜色</text>\n  </div>\n</template>\n\n<style>\n  .normal-text {\n    font-weight: bold;\n  }\n  .text-blue {\n    color: #0faeff;\n  }\n  .text-red {\n    color: #f76160;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      className: \'text-blue\',\n      textColor: \'#0faeff\',\n      styleObj: {\n        color: \'red\'\n      }\n    },\n    onInit () {\n      console.info(\'动态修改样式\')\n    },\n    changeClassName () {\n      this.className = \'text-red\'\n    },\n    changeInlineStyle () {\n      this.textColor = \'#f76160\'\n    },\n    changeStyleObj () {\n      this.styleObj = {\n        color: \'yellow\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# 引入 less/scss 预编译\n\n\n# less 篇\n\nless 语法入门请参考less 中文官网。\n\n使用 less 请先安装相应的类库：less、less-loader：\n\nnpm i less less-loader\n\n\n详见文档样式语法 --\x3e 样式预编译；然后在<style>标签上添加属性lang="less" 示例如下：\n\n<template>\n  <div class="page">\n    <text id="title">less示例!</text>\n  </div>\n</template>\n<style lang="less">\n  /* 引入外部less文件 */\n  @import \'./style.less\';\n  /* 使用less */\n</style>\n\n\n\n# scss 篇\n\nscss 语法入门请参考scss 中文官网。\n\n使用 scss 请在JS 应用项目下执行以下命令安装相应的类库：node-sass、sass-loader：\n\nnpm i node-sass sass-loader\n\n\n详见文档style 样式 --\x3e 样式预编译；然后在<style>标签上添加属性lang="scss"。 示例如下：\n\n<template>\n  <div class="page">\n    <text id="title">less示例!</text>\n  </div>\n</template>\n\n<style lang="scss">\n  /* 引入外部scss文件 */\n  @import \'./style.scss\';\n  /* 使用scss */\n</style>\n\n\n\n# 使用 postcss 解析 css\n\nJS 应用支持 postcss 来解析 css，postcss 可以采用类似 less，sass 的语法来解析 css 了，比如支持变量，嵌套，定义函数等功能了。\n\n使用 postcss 解析 css 分为 3 个步骤：\n\n1.安装对应的 loader：\n\n> npm i postcss-loader precss@3.1.2 -D\n\n2.在项目的根目录新建一个 postcss.config.js，增加如下内容：\n\nmodule.exports = {\n  plugins: [require(\'precss\')]\n}\n\n\n其中 precss 为 postcss 的插件。\n\n3.在页面对应的 style 标签上增加 lang="postcss"，如下：\n\n<style lang="postcss">\n  /* 使用postcss */\n  .page {\n    justify-content: center;\n    background-color: #00beaf;\n  }\n  \n  #title {\n    color: #FF0000;\n  }\n</style>\n\n\n这样就可以在 css 里面书写对应的代码了。\n\n说明\n\n如果想支持更多的语法格式，可以在 postcss.config.js 文件里面添加更多的插件，关于 postcss 的插件见插件地址。',normalizedContent:'# 页面样式与布局\n\n\n# 盒模型\n\njs 应用布局框架使用 border-box 模型，具体表现与宽高边距计算可参考 mdn 文档box-sizing，暂不支持 content-box 模型与手动指定 box-sizing 属性。\n\n\n\n布局所占宽度 width：\n\nwidth = width(包含padding-left + padding-right + border-left + border-right)\n\n布局所占高度 height：\n\nheight = height(包含padding-top + padding-bottom + border-top + border-bottom)\n\n\n# 长度单位\n\n框架对长度单位的支持，支持长度单位px、%、dp。\n\n\n# px\n\n与传统 web 页面不同，px是相对于项目配置基准宽度的单位，已经适配了移动端屏幕，其原理类似于rem。\n\n开发者只需按照设计稿确定框架样式中的 px 值即可。\n\n首先，我们需要定义项目配置基准宽度，它是项目的配置文件（<projectname>/src/manifest.json）中config.designwidth的值，默认不填则为 480。\n\n然后， 设计稿1px与框架样式1px转换公式如下：\n\n设计稿1px / 设计稿基准宽度 = 框架样式1px / 项目配置基准宽度\n\n\n示例如下：\n\n若设计稿宽度为 640px，元素 a 在设计稿上的宽度为 100px，实现的两种方案如下：\n\n方案一：\n\n修改项目配置基准宽度：将项目配置基准宽度设置为设计稿基准宽度，则框架样式1px等于设计稿1px\n\n * 设置项目配置基准宽度，在项目的配置文件（<projectname>/src/manifest.json）中，修改config.designwidth：\n\n{\n  "config": {\n    "designwidth": 640\n  }\n}\n\n\n * 设置元素 a 对应的框架样式：\n\nwidth: 100px;\n\n\n方案二：\n\n不修改项目配置基准宽度：若当前项目配置的项目配置基准宽度为 480，设元素 a 的框架样式 xpx，由转换公式得：100 / 640 = x / 480。\n\n * 设置元素 a 对应的框架样式：\n\nwidth: 75px;\n\n\n\n# 百分比%\n\njs 应用的百分比计算规则与 css 类似，可参考mdn 文档。\n\n\n# dp\n\ndp 单位，全称为 device independent pixels，即设备独立像素。\n\n计算公式：dp 数值 = 物理分辨率 / 设备像素比(device pixel ratio)\n\n举例：一个设备分辨率为 480*480，设备像素比 = 2，屏幕宽度 = 480 像素 = 240dp\n\n示例代码：\n\n<style>\n  .dp-box{\n    width:360dp;\n    height:360dp;\n    background-color:green;\n    margin-bottom:40px;\n  }\n</style>\n\n\n\n# 设置定位\n\nposition 支持2种属性值：relative、absolute，并且默认值为 relative，可以参考mdn 文档。\n\n\n# 设置样式\n\n开发者可以使用内联样式、tag选择器、class选择器、id选择器来为组件设置样式\n\n同时也可以使用并列选择设置样式，暂时不支持后代选择器。\n\n详细的文档可以查看此处。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <text style="color: #ff0000;">内联样式</text>\n    <text id="title">id选择器</text>\n    <text class="title">class选择器</text>\n    <text>tag选择器</text>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n  /* tag选择器 */\n  text {\n    color: #0000ff;\n  }\n  /* class选择器（推荐） */\n  .title {\n    color: #00ff00;\n  }\n  /* id选择器 */\n  #title {\n    color: #00a000;\n  }\n  /* 并列选择 */\n  .title, #title {\n    font-weight: bold;\n  }\n\n</style>\n\n\n\n# 通用样式\n\n通用样式如 margin，padding 等属性可以点击此处查询。\n\n\n# flex 布局示例\n\n框架使用flex布局，关于flex布局可以参考外部文档a complete guide to flexbox。\n\nflex布局的支持也可以在官网文档的通用样式查询。\n\ndiv 组件为最常用的 flex 容器组件，具有 flex 布局的特性；text、span组件为文本容器组件，其它组件不能直接放置文本内容。\n\n示例如下：\n\n<template>\n  <div class="page">\n    <div class="item">\n      <text>item1</text>\n    </div>\n    <div class="item">\n      <text>item2</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    /* 交叉轴居中 */\n    align-items: center;\n    /* 纵向排列 */\n    flex-direction: column;\n  }\n  .item {\n    /* 有剩余空间时，允许被拉伸 */\n    /*flex-grow: 1;*/\n    /* 空间不够用时，不允许被压缩 */\n    flex-shrink: 0;\n    /* 主轴居中 */\n    justify-content: center;\n    width: 200px;\n    height: 100px;\n    margin: 10px;\n    background-color: #ff0000;\n  }\n</style>\n\n\n\n# 动态修改样式\n\n动态修改样式有多种方式，与传统前端开发习惯一致，包括但不限于以下：\n\n * 修改 class：更新组件的 class 属性中使用的变量的值\n * 修改内联 style：更新组件的 style 属性中的某个 css 的值\n * 修改绑定的对象：通过绑定的对象控制元素的样式\n\n示例如下：\n\n<template>\n  <div style="flex-direction: column;">\n    \x3c!-- 修改 class --\x3e\n    <text class="normal-text {{ classname }}" onclick="changeclassname">点击我修改文字颜色</text>\n    \x3c!-- 修改内联 style --\x3e\n    <text style="color: {{ textcolor }}" onclick="changeinlinestyle">点击我修改文字颜色</text>\n    \x3c!-- 修改绑定的对象 --\x3e\n    <text style="{{ styleobj }}" onclick="changestyleobj">点击我修改文字颜色</text>\n  </div>\n</template>\n\n<style>\n  .normal-text {\n    font-weight: bold;\n  }\n  .text-blue {\n    color: #0faeff;\n  }\n  .text-red {\n    color: #f76160;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      classname: \'text-blue\',\n      textcolor: \'#0faeff\',\n      styleobj: {\n        color: \'red\'\n      }\n    },\n    oninit () {\n      console.info(\'动态修改样式\')\n    },\n    changeclassname () {\n      this.classname = \'text-red\'\n    },\n    changeinlinestyle () {\n      this.textcolor = \'#f76160\'\n    },\n    changestyleobj () {\n      this.styleobj = {\n        color: \'yellow\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# 引入 less/scss 预编译\n\n\n# less 篇\n\nless 语法入门请参考less 中文官网。\n\n使用 less 请先安装相应的类库：less、less-loader：\n\nnpm i less less-loader\n\n\n详见文档样式语法 --\x3e 样式预编译；然后在<style>标签上添加属性lang="less" 示例如下：\n\n<template>\n  <div class="page">\n    <text id="title">less示例!</text>\n  </div>\n</template>\n<style lang="less">\n  /* 引入外部less文件 */\n  @import \'./style.less\';\n  /* 使用less */\n</style>\n\n\n\n# scss 篇\n\nscss 语法入门请参考scss 中文官网。\n\n使用 scss 请在js 应用项目下执行以下命令安装相应的类库：node-sass、sass-loader：\n\nnpm i node-sass sass-loader\n\n\n详见文档style 样式 --\x3e 样式预编译；然后在<style>标签上添加属性lang="scss"。 示例如下：\n\n<template>\n  <div class="page">\n    <text id="title">less示例!</text>\n  </div>\n</template>\n\n<style lang="scss">\n  /* 引入外部scss文件 */\n  @import \'./style.scss\';\n  /* 使用scss */\n</style>\n\n\n\n# 使用 postcss 解析 css\n\njs 应用支持 postcss 来解析 css，postcss 可以采用类似 less，sass 的语法来解析 css 了，比如支持变量，嵌套，定义函数等功能了。\n\n使用 postcss 解析 css 分为 3 个步骤：\n\n1.安装对应的 loader：\n\n> npm i postcss-loader precss@3.1.2 -d\n\n2.在项目的根目录新建一个 postcss.config.js，增加如下内容：\n\nmodule.exports = {\n  plugins: [require(\'precss\')]\n}\n\n\n其中 precss 为 postcss 的插件。\n\n3.在页面对应的 style 标签上增加 lang="postcss"，如下：\n\n<style lang="postcss">\n  /* 使用postcss */\n  .page {\n    justify-content: center;\n    background-color: #00beaf;\n  }\n  \n  #title {\n    color: #ff0000;\n  }\n</style>\n\n\n这样就可以在 css 里面书写对应的代码了。\n\n说明\n\n如果想支持更多的语法格式，可以在 postcss.config.js 文件里面添加更多的插件，关于 postcss 的插件见插件地址。',charsets:{cjk:!0}},{title:"template 模板",frontmatter:{},regularPath:"/zh/guide/framework/template/",relativePath:"zh/guide/framework/template/README.md",key:"v-429eb076",path:"/zh/guide/framework/template/",headers:[{level:2,title:"数据绑定",slug:"数据绑定",normalizedTitle:"数据绑定",charIndex:118},{level:2,title:"事件绑定",slug:"事件绑定",normalizedTitle:"事件绑定",charIndex:316},{level:2,title:"列表渲染",slug:"列表渲染",normalizedTitle:"列表渲染",charIndex:764},{level:2,title:"条件渲染",slug:"条件渲染",normalizedTitle:"条件渲染",charIndex:1614},{level:2,title:"逻辑控制块",slug:"逻辑控制块",normalizedTitle:"逻辑控制块",charIndex:2273}],headersStr:"数据绑定 事件绑定 列表渲染 条件渲染 逻辑控制块",content:'# template 模板\n\n类似HTML的标签语言，结合基础组件、事件，构建出页面的结构。\n\n注意\n\n模板中只能有 1 个根节点，如：div；请不要在<template>下存在多个根节点，也不要使用 block 作为根节点。\n\n\n# 数据绑定\n\n<template>\n  <text>{{message}}</text>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      message: \'Hello\'\n    }\n  }\n<\/script>\n\n\n\n# 事件绑定\n\n<template>\n  <div>\n    \x3c!-- 正常格式 --\x3e\n    <text onclick="press"></text>\n    \x3c!-- 缩写 --\x3e\n    <text @click="press"></text>\n  </div>\n</template>\n\n<script>\n  export default {\n    press(e) {\n      this.title = \'Hello\'\n    }\n  }\n<\/script>\n\n\n事件回调支持的写法（其中{{}}可以省略）：\n\nfn：fn为事件回调函数名（在<script>中有对应的函数实现）；\n\nfn(a,b)：函数参数例如a，b可以是常量，或者是在<script>中定义的页面的数据变量（前面不用写this）；\n\n回调函数被调用时，会在参数列表末尾自动添加一个evt参数，通过evt参数访问回调事件相关上下文数据（数据内容具体参看组件回调事件说明），例如点击事件的点击位置x，y。\n\n\n# 列表渲染\n\n<template>\n  <div>\n    <div for="{{list}}" tid="uniqueId">\n      <text>{{$idx}}</text>\n      <text>{{$item.uniqueId}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      list: [\n        { uniqueId: 1 },\n        { uniqueId: 2 }\n      ]\n    }\n  }\n<\/script>\n\n\nfor指令根据源数据数组渲染列表，支持的写法如下（其中{{}}可以省略）：\n\n * for="{{list}}" list为源数据数组，默认的数组元素名为$item；\n * for="{{value in list}}" value为自定义的数组元素名，默认的数组元素索引名为$idx；\n * for="{{(index, value) in list}}" index为自定义的数组元素索引名，value为自定义的数组元素名。\n\nfor指令的tid属性用于指定数组元素的唯一 Id，若未指定，默认使用数组索引($idx)作为唯一 Id。tid属性的作用在于元素节点重用，优化 for 循环的重绘效率。\n\n示例代码中，tid="uniqueId"表示使用数组list的数组元素$item.uniqueId作为数组元素的唯一 Id，且必须保证 uniqueId 这个属性值在每个数组元素都不一样。\n\n使用tid属性时应注意：\n\n * tid属性指定的数据属性必须存在，否则可能导致运行异常；\n * tid属性指定的数据属性要保证唯一，否则可能导致性能问题；\n * tid属性目前不支持表达式。\n\n\n# 条件渲染\n\n分为2种：if/elif/else 和show。它们的区别在于：if为false时，组件会从VDOM中移除，而show仅仅是渲染时不可见，组件依然存在于 VDOM 中；\n\nif/elif/else节点必须是相邻的兄弟节点，否则无法通过编译。\n\n<template>\n  <div>\n    <text if="{{display}}">Hello-1</text>\n    <text elif="{{display}}">Hello-2</text>\n    <text else>Hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\nshow等同于visible=none，主要用于在原生组件上声明；\n\n<template>\n  <text show="{{visible}}">Hello</text>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# 逻辑控制块\n\n可以使用<block>实现更为灵活的循环/条件渲染；注意<block>目前只支持for和if/elif/else属性，如果没有指定任何属性，<block>则在构建时被当作透明节点对待，其子节点被添加到<block>的父节点上。\n\n<template>\n  <list>\n    <block for="cities">\n      <list-item type="city">\n        <text>{{$item.name}}</text>\n      </list-item>\n      <list-item type="spot" for="$item.spots">\n        <text>{{$item.address}}</text>\n      </list-item>\n    </block>\n  </list>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      cities: [\n        {\n          name: \'beijing\',\n          spots: [\n            { address: \'XXX\' }\n          ]\n        },\n        {\n          name: \'shanghai\',\n          spots: [\n            { address: \'XXX\' },\n            { address: \'XXX\' }\n          ]\n        }\n      ]\n    }\n  }\n<\/script>\n',normalizedContent:'# template 模板\n\n类似html的标签语言，结合基础组件、事件，构建出页面的结构。\n\n注意\n\n模板中只能有 1 个根节点，如：div；请不要在<template>下存在多个根节点，也不要使用 block 作为根节点。\n\n\n# 数据绑定\n\n<template>\n  <text>{{message}}</text>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      message: \'hello\'\n    }\n  }\n<\/script>\n\n\n\n# 事件绑定\n\n<template>\n  <div>\n    \x3c!-- 正常格式 --\x3e\n    <text onclick="press"></text>\n    \x3c!-- 缩写 --\x3e\n    <text @click="press"></text>\n  </div>\n</template>\n\n<script>\n  export default {\n    press(e) {\n      this.title = \'hello\'\n    }\n  }\n<\/script>\n\n\n事件回调支持的写法（其中{{}}可以省略）：\n\nfn：fn为事件回调函数名（在<script>中有对应的函数实现）；\n\nfn(a,b)：函数参数例如a，b可以是常量，或者是在<script>中定义的页面的数据变量（前面不用写this）；\n\n回调函数被调用时，会在参数列表末尾自动添加一个evt参数，通过evt参数访问回调事件相关上下文数据（数据内容具体参看组件回调事件说明），例如点击事件的点击位置x，y。\n\n\n# 列表渲染\n\n<template>\n  <div>\n    <div for="{{list}}" tid="uniqueid">\n      <text>{{$idx}}</text>\n      <text>{{$item.uniqueid}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      list: [\n        { uniqueid: 1 },\n        { uniqueid: 2 }\n      ]\n    }\n  }\n<\/script>\n\n\nfor指令根据源数据数组渲染列表，支持的写法如下（其中{{}}可以省略）：\n\n * for="{{list}}" list为源数据数组，默认的数组元素名为$item；\n * for="{{value in list}}" value为自定义的数组元素名，默认的数组元素索引名为$idx；\n * for="{{(index, value) in list}}" index为自定义的数组元素索引名，value为自定义的数组元素名。\n\nfor指令的tid属性用于指定数组元素的唯一 id，若未指定，默认使用数组索引($idx)作为唯一 id。tid属性的作用在于元素节点重用，优化 for 循环的重绘效率。\n\n示例代码中，tid="uniqueid"表示使用数组list的数组元素$item.uniqueid作为数组元素的唯一 id，且必须保证 uniqueid 这个属性值在每个数组元素都不一样。\n\n使用tid属性时应注意：\n\n * tid属性指定的数据属性必须存在，否则可能导致运行异常；\n * tid属性指定的数据属性要保证唯一，否则可能导致性能问题；\n * tid属性目前不支持表达式。\n\n\n# 条件渲染\n\n分为2种：if/elif/else 和show。它们的区别在于：if为false时，组件会从vdom中移除，而show仅仅是渲染时不可见，组件依然存在于 vdom 中；\n\nif/elif/else节点必须是相邻的兄弟节点，否则无法通过编译。\n\n<template>\n  <div>\n    <text if="{{display}}">hello-1</text>\n    <text elif="{{display}}">hello-2</text>\n    <text else>hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\nshow等同于visible=none，主要用于在原生组件上声明；\n\n<template>\n  <text show="{{visible}}">hello</text>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# 逻辑控制块\n\n可以使用<block>实现更为灵活的循环/条件渲染；注意<block>目前只支持for和if/elif/else属性，如果没有指定任何属性，<block>则在构建时被当作透明节点对待，其子节点被添加到<block>的父节点上。\n\n<template>\n  <list>\n    <block for="cities">\n      <list-item type="city">\n        <text>{{$item.name}}</text>\n      </list-item>\n      <list-item type="spot" for="$item.spots">\n        <text>{{$item.address}}</text>\n      </list-item>\n    </block>\n  </list>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      cities: [\n        {\n          name: \'beijing\',\n          spots: [\n            { address: \'xxx\' }\n          ]\n        },\n        {\n          name: \'shanghai\',\n          spots: [\n            { address: \'xxx\' },\n            { address: \'xxx\' }\n          ]\n        }\n      ]\n    }\n  }\n<\/script>\n',charsets:{cjk:!0}},{title:"style 样式",frontmatter:{},regularPath:"/zh/guide/framework/style/",relativePath:"zh/guide/framework/style/README.md",key:"v-24ea5155",path:"/zh/guide/framework/style/",headers:[{level:2,title:"文件导入",slug:"文件导入",normalizedTitle:"文件导入",charIndex:228},{level:2,title:"模板内部样式",slug:"模板内部样式",normalizedTitle:"模板内部样式",charIndex:390},{level:2,title:"选择器",slug:"选择器",normalizedTitle:"选择器",charIndex:537},{level:2,title:"选择器优先级",slug:"选择器优先级",normalizedTitle:"选择器优先级",charIndex:894},{level:2,title:"样式预编译",slug:"样式预编译",normalizedTitle:"样式预编译",charIndex:1287}],headersStr:"文件导入 模板内部样式 选择器 选择器优先级 样式预编译",content:'# style 样式\n\n用于描述 template 模板的组件样式，决定组件应该如何显示。\n\n样式布局采用 CSS Flexbox（弹性盒）样式，针对部分原生组件，对 CSS 进行了少量的扩充以及修改。\n\n为了解决屏幕适配问题，所有与大小相关的样式（例如 width、font-size）均以基准宽度（默认 480px）为基础，根据实际屏幕宽度进行缩放，例如 width:100px，在 960px 宽度屏幕上，width 实际上为 200px。\n\n\n# 文件导入\n\n支持 2 种导入外部文件的方式：\n\n\x3c!-- 导入外部文件, 代替style内部样式 --\x3e\n<style src="./style.css"></style>\n\n\x3c!-- 合并外部文件 --\x3e\n<style>\n  @import \'./style.css\';\n  .a {\n  }\n</style>\n\n\n\n# 模板内部样式\n\n支持使用 style、class 属性来控制组件的样式：\n\n\x3c!-- 内联inline --\x3e\n<div style="color:red; margin: 10px;"/>\n\x3c!-- class声明 --\x3e\n<div class="normal append"/>\n\n\n\n# 选择器\n\n支持的选择器有：\n\n选择器      样例           样例描述\n.class   .intro       选择所有拥有 class="intro" 的组件\n#id      #firstname   选择拥有 id="firstname" 的组件\ntag      div          选择所有 div 组件\n,        .a, .b       选择所有 class="a"以及 class="b"的组件\n\n<style>\n  /* 单个选择器 */\n  text {\n  }\n  .class-abc {\n  }\n  #idAbc {\n  }\n  /* 同一样式适应多个选择器 */\n  .font-text, .font-comma {\n  }\n</style>\n\n\n\n# 选择器优先级\n\n当前样式的选择器的优先级计算保持与浏览器一致，是浏览器 CSS 渲染的一个子集（仅支持：inline, id, class, tag）。\n\n多条 CSS 声明可以匹配到同一个元素 如 div，应用在该元素上的 CSS 声明总体优先级是：inline > #id > .class > tag，这四大类匹配到该元素的多个 CSS 声明，如：<div id="sample" style="width: 200px;" class="class-div"></div>，其优先级按照各选择器的权值高低之和来比较。选择器的优先级权值如下：\n\n * ID选择器（例如: #hello）的权值为 10000\n\n * 类选择器（例如: .example）的权值为 100\n\n * 类型选择器（例如: h1）的权值为 1\n\ncss 的优先级计算文档也可以查看MDN 文档入门\n\n\n# 样式预编译\n\n目前 JS 应用支持less与sass的预编译，具体教程也可以参考这里。\n\n\x3c!--导入外部文件, 代替style内部样式--\x3e\n<style lang="less" src="./lessFile.less"></style>\n\n\x3c!--合并外部文件--\x3e\n<style lang="less">\n  @import \'./lessFile.less\';\n  .less-font-text, .less-font-comma {\n    font-size: 60px;\n  }\n</style>\n',normalizedContent:'# style 样式\n\n用于描述 template 模板的组件样式，决定组件应该如何显示。\n\n样式布局采用 css flexbox（弹性盒）样式，针对部分原生组件，对 css 进行了少量的扩充以及修改。\n\n为了解决屏幕适配问题，所有与大小相关的样式（例如 width、font-size）均以基准宽度（默认 480px）为基础，根据实际屏幕宽度进行缩放，例如 width:100px，在 960px 宽度屏幕上，width 实际上为 200px。\n\n\n# 文件导入\n\n支持 2 种导入外部文件的方式：\n\n\x3c!-- 导入外部文件, 代替style内部样式 --\x3e\n<style src="./style.css"></style>\n\n\x3c!-- 合并外部文件 --\x3e\n<style>\n  @import \'./style.css\';\n  .a {\n  }\n</style>\n\n\n\n# 模板内部样式\n\n支持使用 style、class 属性来控制组件的样式：\n\n\x3c!-- 内联inline --\x3e\n<div style="color:red; margin: 10px;"/>\n\x3c!-- class声明 --\x3e\n<div class="normal append"/>\n\n\n\n# 选择器\n\n支持的选择器有：\n\n选择器      样例           样例描述\n.class   .intro       选择所有拥有 class="intro" 的组件\n#id      #firstname   选择拥有 id="firstname" 的组件\ntag      div          选择所有 div 组件\n,        .a, .b       选择所有 class="a"以及 class="b"的组件\n\n<style>\n  /* 单个选择器 */\n  text {\n  }\n  .class-abc {\n  }\n  #idabc {\n  }\n  /* 同一样式适应多个选择器 */\n  .font-text, .font-comma {\n  }\n</style>\n\n\n\n# 选择器优先级\n\n当前样式的选择器的优先级计算保持与浏览器一致，是浏览器 css 渲染的一个子集（仅支持：inline, id, class, tag）。\n\n多条 css 声明可以匹配到同一个元素 如 div，应用在该元素上的 css 声明总体优先级是：inline > #id > .class > tag，这四大类匹配到该元素的多个 css 声明，如：<div id="sample" style="width: 200px;" class="class-div"></div>，其优先级按照各选择器的权值高低之和来比较。选择器的优先级权值如下：\n\n * id选择器（例如: #hello）的权值为 10000\n\n * 类选择器（例如: .example）的权值为 100\n\n * 类型选择器（例如: h1）的权值为 1\n\ncss 的优先级计算文档也可以查看mdn 文档入门\n\n\n# 样式预编译\n\n目前 js 应用支持less与sass的预编译，具体教程也可以参考这里。\n\n\x3c!--导入外部文件, 代替style内部样式--\x3e\n<style lang="less" src="./lessfile.less"></style>\n\n\x3c!--合并外部文件--\x3e\n<style lang="less">\n  @import \'./lessfile.less\';\n  .less-font-text, .less-font-comma {\n    font-size: 60px;\n  }\n</style>\n',charsets:{cjk:!0}},{title:"组件",frontmatter:{},regularPath:"/zh/guide/framework/template/component.html",relativePath:"zh/guide/framework/template/component.md",key:"v-07d84b36",path:"/zh/guide/framework/template/component.html",headers:[{level:2,title:"组件自定义",slug:"组件自定义",normalizedTitle:"组件自定义",charIndex:9},{level:3,title:"自定义组件生命周期：",slug:"自定义组件生命周期",normalizedTitle:"自定义组件生命周期：",charIndex:965},{level:2,title:"组件引入",slug:"组件引入",normalizedTitle:"组件引入",charIndex:1122},{level:2,title:"父子组件通信",slug:"父子组件通信",normalizedTitle:"父子组件通信",charIndex:1731},{level:3,title:"父组件通过 Prop 向子组件传递数据",slug:"父组件通过-prop-向子组件传递数据",normalizedTitle:"父组件通过 prop 向子组件传递数据",charIndex:1742},{level:3,title:"子组件对父组件通信",slug:"子组件对父组件通信",normalizedTitle:"子组件对父组件通信",charIndex:2475}],headersStr:"组件自定义 自定义组件生命周期： 组件引入 父子组件通信 父组件通过 Prop 向子组件传递数据 子组件对父组件通信",content:'# 组件\n\n\n# 组件自定义\n\n开发页面时开发者必须用到 Native 组件，如：text、div，这些组件是由各平台 Native 底层渲染出来的；如果开发一个复杂的页面，开发者把所有的 UI 部分写在一个文件的<template>，那代码的可维护性将会很低，并且模块之间容易产生不必要的耦合关系。\n\n为了更好的组织逻辑与代码，可以把页面按照功能拆成多个模块，每个模块负责其中的一个功能部分，最后页面将这些模块引入管理起来，传递业务与配置数据完成代码分离，那么这就是自定义组件的意义。\n\n自定义组件是一个开发者编写的组件，使用起来和 Native 一样，最终按照组件的<template>来渲染；同时开发起来又和页面一样，拥有 ViewModel 实现对数据、事件、方法的管理。\n\nTIP\n\n由于自定义组件拥有独立的ViewModel，因此存在一定内存开销，在手表手环等轻量级设备上不建议使用。\n\n示例如下：\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">自定义组件:</text>\n    <text>{{ say }}</text>\n    <text>{{ obj.name }}</text>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding-top: 20px;\n\n    .tutorial-title {\n      font-weight: bold;\n    }\n  }\n</style>\n\n<script>\n  // 子组件\n  export default {\n    data: {\n      say: \'hello\',\n      obj: {\n        name: \'quickApp\'\n      }\n    },\n    onInit() {\n      console.log(\'我是子组件\')\n    }\n  }\n<\/script>\n\n\n自定义组件中数据模型只能使用data 属性 ，data 类型是 Object 。\n\n\n# 自定义组件生命周期：\n\nonInit ：表示组件ViewModel的数据已经准备好，可以开始使用页面中的数据。\n\nonReady ：表示组件ViewModel的模板已经编译完成，可以开始获取 DOM 节点。\n\nonDestroy ：组件被销毁时调用，组件销毁时应该做一些释放资源的操作，例如释放定时器等。\n\n\n# 组件引入\n\nvela中是通过<import>标签引入组件，如下面代码所示：\n\n<import name="XXX" src="XXX"></import>\n\n\n<import>标签中的src属性指定自定义组件的地址，name属性指定在父组件中引用该组件时使用的 标签名称。\n\n示例如下：\n\n<import name="comp-part1" src="./part1"></import>\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">引入组件：</text>\n    <comp-part1></comp-part1>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding: 20px 10px;\n  }\n  .tutorial-title {\n      font-weight: bold;\n  }\n</style>\n\n<script>\n  // 父组件\n  export default {\n    private: {},\n    onInit() {\n      console.log(\'引入组件\')\n    }\n  }\n<\/script>\n\n\n\n# 父子组件通信\n\n\n# 父组件通过 Prop 向子组件传递数据\n\n父组件向子组件传递数据，通过在子组件的props属性中声明对外暴露的属性名称，然后在组件引用标签上声明传递的父组件数据，详见Props部分。\n\n示例如下：\n\n\x3c!-- 子组件 --\x3e\n<template>\n  <div class="child-demo">\n    <text class="title">子组件:</text>\n    <text>{{ say }}</text>\n    <text>{{ propObject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'say\', \'propObject\'],\n    onInit() {\n      console.info(`外部传递的数据：`, this.say, this.propObject)\n    }\n  }\n<\/script>\n\n\n\x3c!-- 父组件 --\x3e\n<import name="comp" src="./comp"></import>\n<template>\n  <div class="parent-demo">\n    <comp say="{{say}}" prop-object="{{obj}}"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      say:\'hello\'\n      obj:{\n        name:\'child-demo\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# 子组件对父组件通信\n\n * 子组件通过$emit()触发在节点上绑定的自定义事件来执行父组件的方法，如父组件与组件一；\n * 子组件通过$dispatch()触发自定义事件，父组件通过$on()监控自定义事件的触发，如父组件与组件二；\n\n示例如下：\n\n \x3c!-- 父组件 --\x3e\n<import name="comp1" src="./comp1.ux"></import>\n<import name="comp2" src="./comp2.ux"></import>\n<import name="comp3" src="./comp3.ux"></import>\n<template>\n  <div class="parent-demo">\n    <text>我是父组件count:{{count}}</text>\n    <comp1 count="{{count}}" onemit-evt="emitEvt"></comp1>\n\n    <text>我是父组件num:{{num}}</text>\n    <comp2 num="{{num}}"></comp2>\n\n    <text>我是父组件age:{{age}}</text>\n    <input type="button" onclick="evtTypeEmit" value="触发$broadcast()"></input>\n    <comp3></comp3>\n  </div>\n</template>\n\n<script>\n  export default {\n    private:{\n      count:20,\n      num:20,\n      age:18\n    },\n    onInit(){\n      this.$on(\'dispatchEvt\',this.dispatchEvt)\n    },\n    emitEvt(evt){\n      this.count = evt.detail.count\n    },\n    dispatchEvt(evt){\n      this.num = evt.detail.num\n    },\n    evtTypeEmit(){\n      this.$broadcast(\'broadevt\',{\n        age:19\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp1 --\x3e\n<template>\n  <div class="child-demo">\n    <text>我是子组件一count:{{compCount}}</text>\n    <input type="button" onclick=\'addHandler\' value=\'add\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'count\'],\n    data(){\n      return{\n        compCount:this.count\n      }\n    },\n    addHandler(){\n      this.compCount ++\n      this.$emit(\'emitEvt\',{\n        count:this.compCount\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp2 --\x3e\n<template>\n  <div class="child-demo">\n    <text>我是子组件二num:{{compNum}}</text>\n    <input type="button" onclick=\'delHandler\' value=\'del\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'num\'],\n    data(){\n      return{\n        compNum:this.num\n      }\n    },\n    delHandler(){\n      this.compNum --\n      this.$dispatch(\'dispatchEvt\',{\n        num:this.compNum\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp3 --\x3e\n<template>\n  <div class="child-demo">\n    <text>我是子组件三age:{{compAge}}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props:[],\n    data(){\n      return{\n        compAge:null\n      }\n    },\n    onInit(){\n      this.$on(\'broadevt\',this.broadevt)\n    },\n    broadevt(evt){\n      this.compAge = evt.detail.age\n    }\n  }\n<\/script>\n\n\n框架向开发者提供了双向的事件传递\n\n * 向下传递：父组件触发，子组件响应；调用parentVm.$broadcast()完成向下传递，如：broadevt\n * 向上传递：子组件触发，父组件响应；调用childVm.$dispatch()完成向上传递，如：dispatchEvt\n\n提示：\n\n * 触发时传递参数，再接收时使用evt.detail来获取参数\n * 当传递结束后，可以调用evt.stop()来结束传递,否则会一直传递下去',normalizedContent:'# 组件\n\n\n# 组件自定义\n\n开发页面时开发者必须用到 native 组件，如：text、div，这些组件是由各平台 native 底层渲染出来的；如果开发一个复杂的页面，开发者把所有的 ui 部分写在一个文件的<template>，那代码的可维护性将会很低，并且模块之间容易产生不必要的耦合关系。\n\n为了更好的组织逻辑与代码，可以把页面按照功能拆成多个模块，每个模块负责其中的一个功能部分，最后页面将这些模块引入管理起来，传递业务与配置数据完成代码分离，那么这就是自定义组件的意义。\n\n自定义组件是一个开发者编写的组件，使用起来和 native 一样，最终按照组件的<template>来渲染；同时开发起来又和页面一样，拥有 viewmodel 实现对数据、事件、方法的管理。\n\ntip\n\n由于自定义组件拥有独立的viewmodel，因此存在一定内存开销，在手表手环等轻量级设备上不建议使用。\n\n示例如下：\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">自定义组件:</text>\n    <text>{{ say }}</text>\n    <text>{{ obj.name }}</text>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding-top: 20px;\n\n    .tutorial-title {\n      font-weight: bold;\n    }\n  }\n</style>\n\n<script>\n  // 子组件\n  export default {\n    data: {\n      say: \'hello\',\n      obj: {\n        name: \'quickapp\'\n      }\n    },\n    oninit() {\n      console.log(\'我是子组件\')\n    }\n  }\n<\/script>\n\n\n自定义组件中数据模型只能使用data 属性 ，data 类型是 object 。\n\n\n# 自定义组件生命周期：\n\noninit ：表示组件viewmodel的数据已经准备好，可以开始使用页面中的数据。\n\nonready ：表示组件viewmodel的模板已经编译完成，可以开始获取 dom 节点。\n\nondestroy ：组件被销毁时调用，组件销毁时应该做一些释放资源的操作，例如释放定时器等。\n\n\n# 组件引入\n\nvela中是通过<import>标签引入组件，如下面代码所示：\n\n<import name="xxx" src="xxx"></import>\n\n\n<import>标签中的src属性指定自定义组件的地址，name属性指定在父组件中引用该组件时使用的 标签名称。\n\n示例如下：\n\n<import name="comp-part1" src="./part1"></import>\n\n<template>\n  <div class="tutorial-page">\n    <text class="tutorial-title">引入组件：</text>\n    <comp-part1></comp-part1>\n  </div>\n</template>\n\n<style lang="less">\n  .tutorial-page {\n    flex-direction: column;\n    padding: 20px 10px;\n  }\n  .tutorial-title {\n      font-weight: bold;\n  }\n</style>\n\n<script>\n  // 父组件\n  export default {\n    private: {},\n    oninit() {\n      console.log(\'引入组件\')\n    }\n  }\n<\/script>\n\n\n\n# 父子组件通信\n\n\n# 父组件通过 prop 向子组件传递数据\n\n父组件向子组件传递数据，通过在子组件的props属性中声明对外暴露的属性名称，然后在组件引用标签上声明传递的父组件数据，详见props部分。\n\n示例如下：\n\n\x3c!-- 子组件 --\x3e\n<template>\n  <div class="child-demo">\n    <text class="title">子组件:</text>\n    <text>{{ say }}</text>\n    <text>{{ propobject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'say\', \'propobject\'],\n    oninit() {\n      console.info(`外部传递的数据：`, this.say, this.propobject)\n    }\n  }\n<\/script>\n\n\n\x3c!-- 父组件 --\x3e\n<import name="comp" src="./comp"></import>\n<template>\n  <div class="parent-demo">\n    <comp say="{{say}}" prop-object="{{obj}}"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      say:\'hello\'\n      obj:{\n        name:\'child-demo\'\n      }\n    }\n  }\n<\/script>\n\n\n\n# 子组件对父组件通信\n\n * 子组件通过$emit()触发在节点上绑定的自定义事件来执行父组件的方法，如父组件与组件一；\n * 子组件通过$dispatch()触发自定义事件，父组件通过$on()监控自定义事件的触发，如父组件与组件二；\n\n示例如下：\n\n \x3c!-- 父组件 --\x3e\n<import name="comp1" src="./comp1.ux"></import>\n<import name="comp2" src="./comp2.ux"></import>\n<import name="comp3" src="./comp3.ux"></import>\n<template>\n  <div class="parent-demo">\n    <text>我是父组件count:{{count}}</text>\n    <comp1 count="{{count}}" onemit-evt="emitevt"></comp1>\n\n    <text>我是父组件num:{{num}}</text>\n    <comp2 num="{{num}}"></comp2>\n\n    <text>我是父组件age:{{age}}</text>\n    <input type="button" onclick="evttypeemit" value="触发$broadcast()"></input>\n    <comp3></comp3>\n  </div>\n</template>\n\n<script>\n  export default {\n    private:{\n      count:20,\n      num:20,\n      age:18\n    },\n    oninit(){\n      this.$on(\'dispatchevt\',this.dispatchevt)\n    },\n    emitevt(evt){\n      this.count = evt.detail.count\n    },\n    dispatchevt(evt){\n      this.num = evt.detail.num\n    },\n    evttypeemit(){\n      this.$broadcast(\'broadevt\',{\n        age:19\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp1 --\x3e\n<template>\n  <div class="child-demo">\n    <text>我是子组件一count:{{compcount}}</text>\n    <input type="button" onclick=\'addhandler\' value=\'add\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'count\'],\n    data(){\n      return{\n        compcount:this.count\n      }\n    },\n    addhandler(){\n      this.compcount ++\n      this.$emit(\'emitevt\',{\n        count:this.compcount\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp2 --\x3e\n<template>\n  <div class="child-demo">\n    <text>我是子组件二num:{{compnum}}</text>\n    <input type="button" onclick=\'delhandler\' value=\'del\'></input>\n  </div>\n</template>\n<script>\n  export default {\n    props: [\'num\'],\n    data(){\n      return{\n        compnum:this.num\n      }\n    },\n    delhandler(){\n      this.compnum --\n      this.$dispatch(\'dispatchevt\',{\n        num:this.compnum\n      })\n    },\n  }\n<\/script>\n\n\n\x3c!-- comp3 --\x3e\n<template>\n  <div class="child-demo">\n    <text>我是子组件三age:{{compage}}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props:[],\n    data(){\n      return{\n        compage:null\n      }\n    },\n    oninit(){\n      this.$on(\'broadevt\',this.broadevt)\n    },\n    broadevt(evt){\n      this.compage = evt.detail.age\n    }\n  }\n<\/script>\n\n\n框架向开发者提供了双向的事件传递\n\n * 向下传递：父组件触发，子组件响应；调用parentvm.$broadcast()完成向下传递，如：broadevt\n * 向上传递：子组件触发，父组件响应；调用childvm.$dispatch()完成向上传递，如：dispatchevt\n\n提示：\n\n * 触发时传递参数，再接收时使用evt.detail来获取参数\n * 当传递结束后，可以调用evt.stop()来结束传递,否则会一直传递下去',charsets:{cjk:!0}},{title:"计算属性",frontmatter:{},regularPath:"/zh/guide/framework/template/computed.html",relativePath:"zh/guide/framework/template/computed.md",key:"v-29b0aa88",path:"/zh/guide/framework/template/computed.html",headers:[{level:2,title:"计算属性的基本使用",slug:"计算属性的基本使用",normalizedTitle:"计算属性的基本使用",charIndex:11},{level:2,title:"设置计算属性的 `setter` 函数",slug:"设置计算属性的-setter-函数",normalizedTitle:"设置计算属性的 <code>setter</code> 函数",charIndex:null}],headersStr:"计算属性的基本使用 设置计算属性的 `setter` 函数",content:"# 计算属性\n\n\n# 计算属性的基本使用\n\n我们经常会在模版内使用表达式，合理使用表达式可以提升我们的开发效率。但是在模板中放入太多的逻辑会让模板过重且难以维护。例如：\n\n<text> {{ message.split('').reverse().join('') }} </text>\n\n\n在这个地方，模板不再是简单的声明式逻辑。如果我们在很多地方用上这样的表达式，有可能让模版的可读性降低，并且重复使用同一表达式逻辑会让代码变得冗余，不易维护。对此，我们可以使用计算属性：\n\n<template>\n    <div>\n      <text>Original message: \"{{ message }}\"</text>\n      <text>Comtextuted reversed message: \"{{ reversedMessage }}\"</text>\n    </div>\n</template>\n<script>\n    export default {\n      data: {\n        message: 'Hello'\n      },\n      computed: {\n        // 计算属性的 getter\n        reversedMessage() {\n          // `this` 指向 vm 实例\n          return this.message.split('').reverse().join('')\n        }\n      },\n      onReady() {\n        console.log(this.reversedMessage) // olleH\n    \n        this.message = 'Goodbye'\n    \n        console.log(this.reversedMessage) // eybdooG\n      }\n    }\n<\/script>\n\n\n这里我们声明了一个计算属性 reversedMessage。我们提供的函数将用作属性 vm.reversedMessage 的 getter 函数，这时 vm.reversedMessage 的值始终取决于 vm.message 的值。\n\n你可以像绑定普通属性一样在模板中绑定计算属性。组件实例知道 vm.reversedMessage 依赖于 vm.message，因此当 vm.message 发生改变时，所有依赖 vm.reversedMessage 的绑定也会更新。\n\n\n# 设置计算属性的 setter 函数\n\n计算属性默认只有 getter ，不过在需要时你也可以提供一个 setter ：\n\n<script>\n    export default {\n      data: {\n        firstName: 'Quick',\n        lastName: 'App'\n      },\n      computed: {\n        fullName: {\n          get() {\n            return `${this.firstName} ${this.lastName}`\n          },\n          set(value) {\n            const names = value.split(' ')\n            this.firstName = names[0]\n            this.lastName = names[names.length - 1]\n          }\n        }\n      },\n      onReady() {\n        console.log(this.fullName) // Quick App\n        this.fullName = 'John Doe'\n        console.log(this.firstName) // John\n        console.log(this.lastName) // Doe\n      }\n    }\n<\/script>\n",normalizedContent:"# 计算属性\n\n\n# 计算属性的基本使用\n\n我们经常会在模版内使用表达式，合理使用表达式可以提升我们的开发效率。但是在模板中放入太多的逻辑会让模板过重且难以维护。例如：\n\n<text> {{ message.split('').reverse().join('') }} </text>\n\n\n在这个地方，模板不再是简单的声明式逻辑。如果我们在很多地方用上这样的表达式，有可能让模版的可读性降低，并且重复使用同一表达式逻辑会让代码变得冗余，不易维护。对此，我们可以使用计算属性：\n\n<template>\n    <div>\n      <text>original message: \"{{ message }}\"</text>\n      <text>comtextuted reversed message: \"{{ reversedmessage }}\"</text>\n    </div>\n</template>\n<script>\n    export default {\n      data: {\n        message: 'hello'\n      },\n      computed: {\n        // 计算属性的 getter\n        reversedmessage() {\n          // `this` 指向 vm 实例\n          return this.message.split('').reverse().join('')\n        }\n      },\n      onready() {\n        console.log(this.reversedmessage) // olleh\n    \n        this.message = 'goodbye'\n    \n        console.log(this.reversedmessage) // eybdoog\n      }\n    }\n<\/script>\n\n\n这里我们声明了一个计算属性 reversedmessage。我们提供的函数将用作属性 vm.reversedmessage 的 getter 函数，这时 vm.reversedmessage 的值始终取决于 vm.message 的值。\n\n你可以像绑定普通属性一样在模板中绑定计算属性。组件实例知道 vm.reversedmessage 依赖于 vm.message，因此当 vm.message 发生改变时，所有依赖 vm.reversedmessage 的绑定也会更新。\n\n\n# 设置计算属性的 setter 函数\n\n计算属性默认只有 getter ，不过在需要时你也可以提供一个 setter ：\n\n<script>\n    export default {\n      data: {\n        firstname: 'quick',\n        lastname: 'app'\n      },\n      computed: {\n        fullname: {\n          get() {\n            return `${this.firstname} ${this.lastname}`\n          },\n          set(value) {\n            const names = value.split(' ')\n            this.firstname = names[0]\n            this.lastname = names[names.length - 1]\n          }\n        }\n      },\n      onready() {\n        console.log(this.fullname) // quick app\n        this.fullname = 'john doe'\n        console.log(this.firstname) // john\n        console.log(this.lastname) // doe\n      }\n    }\n<\/script>\n",charsets:{cjk:!0}},{title:"条件指令",frontmatter:{},regularPath:"/zh/guide/framework/template/if.html",relativePath:"zh/guide/framework/template/if.md",key:"v-2243ecb0",path:"/zh/guide/framework/template/if.html",headers:[{level:2,title:"if指令",slug:"if指令",normalizedTitle:"if指令",charIndex:11},{level:2,title:"show指令",slug:"show指令",normalizedTitle:"show指令",charIndex:392},{level:2,title:"if与show区别",slug:"if与show区别",normalizedTitle:"if与show区别",charIndex:685}],headersStr:"if指令 show指令 if与show区别",content:'# 条件指令\n\n\n# if指令\n\nif 条件指令，是指 if/elif/else 这 3 个相关指令，用于控制是否增加或者删除组件；\n\nif/elif/else 节点必须是相邻的兄弟节点。\n\n<template>\n  <div>\n    <text if="{{display}}">Hello-1</text>\n    <text elif="{{display}}">Hello-2</text>\n    <text else>Hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\n\n# show指令\n\nshow 指令，是指是否显示组件，用于控制组件的显示状态，并不会从 DOM 结构中删除；\n\nshow等同于 visible=none，主要用于在原生组件上声明；\n\n<template>\n  <text show="{{visible}}">Hello</text>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# if与show区别\n\n * 当 if/elif 指令的值为 false 时，节点会从页面中移除，当 if/elif 指令值为 true，组件动态插入 DOM 结构中；\n\n * 当 show 指令的值为 true 时，节点可见，当其值为 false 时，组件不可见，但节点仍会保留在页面 DOM 结构中。',normalizedContent:'# 条件指令\n\n\n# if指令\n\nif 条件指令，是指 if/elif/else 这 3 个相关指令，用于控制是否增加或者删除组件；\n\nif/elif/else 节点必须是相邻的兄弟节点。\n\n<template>\n  <div>\n    <text if="{{display}}">hello-1</text>\n    <text elif="{{display}}">hello-2</text>\n    <text else>hello-3</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      display: false\n    }\n  }\n<\/script>\n\n\n\n# show指令\n\nshow 指令，是指是否显示组件，用于控制组件的显示状态，并不会从 dom 结构中删除；\n\nshow等同于 visible=none，主要用于在原生组件上声明；\n\n<template>\n  <text show="{{visible}}">hello</text>\n</template>\n\n<script>\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      visible: false\n    }\n  }\n<\/script>\n\n\n\n# if与show区别\n\n * 当 if/elif 指令的值为 false 时，节点会从页面中移除，当 if/elif 指令值为 true，组件动态插入 dom 结构中；\n\n * 当 show 指令的值为 true 时，节点可见，当其值为 false 时，组件不可见，但节点仍会保留在页面 dom 结构中。',charsets:{cjk:!0}},{title:"事件绑定",frontmatter:{},regularPath:"/zh/guide/framework/template/event.html",relativePath:"zh/guide/framework/template/event.md",key:"v-03ac50d4",path:"/zh/guide/framework/template/event.html",headers:[{level:2,title:"格式",slug:"格式",normalizedTitle:"格式",charIndex:11},{level:2,title:"传参",slug:"传参",normalizedTitle:"传参",charIndex:141},{level:3,title:"常量",slug:"常量",normalizedTitle:"常量",charIndex:148},{level:3,title:"变量",slug:"变量",normalizedTitle:"变量",charIndex:575}],headersStr:"格式 传参 常量 变量",content:'# 事件绑定\n\n\n# 格式\n\n<text onclick="press"></text>\n\n\n可以简写为：\n\n<text @click="press"></text>\n\n\nfn：fn为事件回调函数名（在<script>中有对应的函数实现），上例中press为事件回调函数。\n\n\n# 传参\n\n\n# 常量\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle($idx,$item)">{{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5]\n    },\n    handle(idx,item,$evt) { // 点击第一个元素\n      console.log(idx) // 0\n      console.log(item) // 1\n      console.log($evt) // { pageX: 4, pageY: 246, clientX: 4, clientY: 246, offsetX: 4, offsetY: 246 }\n    }\n  }\n<\/script>\n\n\n\n# 变量\n\n<script>中定义的页面的数据变量（前面不用写this）。\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle(total,$item)"> {{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5],\n      total:0\n    },\n    handle(total,num,$evt){\n      console.log(total)\n      console.log(num)\n      console.log($evt)\n    }\n  }\n<\/script>\n\n\nWARNING\n\n回调函数被调用时，会在参数列表末尾自动添加一个evt参数，通过evt参数访问回调事件相关上下文数据。',normalizedContent:'# 事件绑定\n\n\n# 格式\n\n<text onclick="press"></text>\n\n\n可以简写为：\n\n<text @click="press"></text>\n\n\nfn：fn为事件回调函数名（在<script>中有对应的函数实现），上例中press为事件回调函数。\n\n\n# 传参\n\n\n# 常量\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle($idx,$item)">{{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5]\n    },\n    handle(idx,item,$evt) { // 点击第一个元素\n      console.log(idx) // 0\n      console.log(item) // 1\n      console.log($evt) // { pagex: 4, pagey: 246, clientx: 4, clienty: 246, offsetx: 4, offsety: 246 }\n    }\n  }\n<\/script>\n\n\n\n# 变量\n\n<script>中定义的页面的数据变量（前面不用写this）。\n\n<template>\n  <div class="page">\n    <text for="{{list}}" onclick="handle(total,$item)"> {{$item}}</text>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      list:[1,2,3,4,5],\n      total:0\n    },\n    handle(total,num,$evt){\n      console.log(total)\n      console.log(num)\n      console.log($evt)\n    }\n  }\n<\/script>\n\n\nwarning\n\n回调函数被调用时，会在参数列表末尾自动添加一个evt参数，通过evt参数访问回调事件相关上下文数据。',charsets:{cjk:!0}},{title:"UX 文件",frontmatter:{},regularPath:"/zh/guide/framework/ux.html",relativePath:"zh/guide/framework/ux.md",key:"v-76903e54",path:"/zh/guide/framework/ux.html",headers:[{level:2,title:"app.ux",slug:"app-ux",normalizedTitle:"app.ux",charIndex:972}],headersStr:"app.ux",content:'# UX 文件\n\nAPP，页面均通过 ux 后缀文件编写，ux 后缀文件由template 模板、style 样式和script 脚本3 个部分组成，一个典型的页面 ux 后缀文件示例如下：\n\n<template>\n  \x3c!-- template里只能有一个根节点 --\x3e\n  <div class="page">\n    <text class="title">欢迎打开{{title}}</text>\n    \x3c!-- 点击跳转详情页 --\x3e\n    <input class="btn" type="button" value="跳转到详情页" onclick="routeDetail">\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .title {\n    font-size: 30px;\n    text-align: center;\n  }\n\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 75px;\n    border-radius: 43px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      title: \'示例页面\'\n    },\n    routeDetail () {\n      // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由\n      router.push ({\n        uri: \'/DemoDetail\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# app.ux\n\n当前app.ux编译后会包含manifest配置信息（可以在npm run build之后查看文件内容），所以请不要删除/**manifest**/的注释内容标识。\n\n您可以在<script>中引入一些公共的脚本，并暴露在当前 app 的对象上，如下所示，然后就可以在页面 ux 文件的 ViewModel 中，通过this.$app.$def.util访问。\n\n<script>\n  /**\n   * 应用级别的配置，供所有页面公用\n   */\n  import util from \'./util\'\n\n  export default {\n    showMenu: util.showMenu,\n    createShortcut: util.createShortcut,\n    util\n  }\n<\/script>\n',normalizedContent:'# ux 文件\n\napp，页面均通过 ux 后缀文件编写，ux 后缀文件由template 模板、style 样式和script 脚本3 个部分组成，一个典型的页面 ux 后缀文件示例如下：\n\n<template>\n  \x3c!-- template里只能有一个根节点 --\x3e\n  <div class="page">\n    <text class="title">欢迎打开{{title}}</text>\n    \x3c!-- 点击跳转详情页 --\x3e\n    <input class="btn" type="button" value="跳转到详情页" onclick="routedetail">\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .title {\n    font-size: 30px;\n    text-align: center;\n  }\n\n  .btn {\n    width: 400px;\n    height: 60px;\n    margin-top: 75px;\n    border-radius: 43px;\n    background-color: #09ba07;\n    font-size: 30px;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖\n    private: {\n      title: \'示例页面\'\n    },\n    routedetail () {\n      // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由\n      router.push ({\n        uri: \'/demodetail\'\n      })\n    }\n  }\n<\/script>\n\n\n\n# app.ux\n\n当前app.ux编译后会包含manifest配置信息（可以在npm run build之后查看文件内容），所以请不要删除/**manifest**/的注释内容标识。\n\n您可以在<script>中引入一些公共的脚本，并暴露在当前 app 的对象上，如下所示，然后就可以在页面 ux 文件的 viewmodel 中，通过this.$app.$def.util访问。\n\n<script>\n  /**\n   * 应用级别的配置，供所有页面公用\n   */\n  import util from \'./util\'\n\n  export default {\n    showmenu: util.showmenu,\n    createshortcut: util.createshortcut,\n    util\n  }\n<\/script>\n',charsets:{cjk:!0}},{title:"循环指令",frontmatter:{},regularPath:"/zh/guide/framework/template/for.html",relativePath:"zh/guide/framework/template/for.md",key:"v-98c39f14",path:"/zh/guide/framework/template/for.html",headers:[{level:2,title:"列表渲染",slug:"列表渲染",normalizedTitle:"列表渲染",charIndex:11}],headersStr:"列表渲染",content:'# 循环指令\n\n\n# 列表渲染\n\n如果要实现列表渲染，我们会用到 for 指令。for 指令用于循环输出一个数组类型的数据。\n\nTIP\n\nfor指令根据源数据数组渲染列表，支持的写法如下（其中{{}}可以省略）：\n\n * for="{{list}}" list为源数据数组，默认的数组元素名为$item；\n * for="{{value in list}}" value为自定义的数组元素名，默认的数组元素索引名为$idx；\n * for="{{(index, value) in list}}" index为自定义的数组元素索引名，value为自定义的数组元素名。\n\nTIP\n\nfor指令的tid属性用于指定数组元素的唯一 Id，若未指定，默认使用数组索引($idx)作为唯一 Id。tid属性的作用在于元素节点重用，优化 for 循环的重绘效率\n\n示例如下：\n\n<template>\n  <div class="page">\n    \x3c!-- 方式1：默认$item代表数组中的元素, $idx代表数组中的索引 --\x3e\n    <div class="row" for="{{list}}" tid="uniqueId">\n      <text>{{$idx}}.{{$item.name}}</text>\n    </div>\n    \x3c!-- 方式2：自定义元素变量名称 --\x3e\n    <div class="row" for="value in list" tid="uniqueId">\n      <text>{{$idx}}.{{value.name}}</text>\n    </div>\n    \x3c!-- 方式3：自定义元素、索引的变量名称 --\x3e\n    <div class="row" for="(personIndex, personItem) in list" tid="uniqueId">\n      <text>{{personIndex}}.{{personItem.name}}</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n\n  .row {\n    width: 85%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      list: [\n        { name: \'aa\', uniqueId: 1 },\n        { name: \'bb\', uniqueId: 2 },\n        { name: \'cc\', uniqueId: 3 }\n      ]\n    },\n    onInit() {\n      console.info(\'指令for\')\n    }\n  }\n<\/script>\n\n\n示例代码中，在渲染页面时，div.row的结构，会根据 script 中的数据 list 的定义，被循环的生成多个。\n\ntid="uniqueId"，数组元素的某个属性名，不一定叫uniqueId。它类似于React的key={item.uniqueId}或vue的:key="item.uniqueId"，用于优化渲染速度。\n\n当数据修改时，数据不改变的dom不会被重新渲染，已经改变的数据所在的dom才会被重新渲染，因此我们必须保证uniqueId这个属性值在每个数组元素都不一样。\n\n注意\n\n 1. for 指令只能循环数组，不能循环对象。\n\n 2. for 指令在 block 标签的行为与它在其他标签的行为不一样，block 标签在渲染时不会额外插入DOM节点，而是会循环其内部的DOM结构，其他标签则会循环生成其自身。\n\n 3. 当 for 指令与 if 指令共存于一个标签时， if 指令的优先级优于 for 指令。为了方便未看文档的新人快速上手项目，不建议这两个指令共存于同一个标签。\n\n 4. 自定义变量表示 for 指令的数组索引和数组元素时，变量名不可以用$或_开头。\n\n 5. 使用tid属性时应注意：\n    \n    * tid属性指定的数据属性必须存在，否则可能导致运行异常；\n    * tid属性指定的数据属性要保证唯一，否则可能导致性能问题；\n    * tid属性目前不支持表达式。',normalizedContent:'# 循环指令\n\n\n# 列表渲染\n\n如果要实现列表渲染，我们会用到 for 指令。for 指令用于循环输出一个数组类型的数据。\n\ntip\n\nfor指令根据源数据数组渲染列表，支持的写法如下（其中{{}}可以省略）：\n\n * for="{{list}}" list为源数据数组，默认的数组元素名为$item；\n * for="{{value in list}}" value为自定义的数组元素名，默认的数组元素索引名为$idx；\n * for="{{(index, value) in list}}" index为自定义的数组元素索引名，value为自定义的数组元素名。\n\ntip\n\nfor指令的tid属性用于指定数组元素的唯一 id，若未指定，默认使用数组索引($idx)作为唯一 id。tid属性的作用在于元素节点重用，优化 for 循环的重绘效率\n\n示例如下：\n\n<template>\n  <div class="page">\n    \x3c!-- 方式1：默认$item代表数组中的元素, $idx代表数组中的索引 --\x3e\n    <div class="row" for="{{list}}" tid="uniqueid">\n      <text>{{$idx}}.{{$item.name}}</text>\n    </div>\n    \x3c!-- 方式2：自定义元素变量名称 --\x3e\n    <div class="row" for="value in list" tid="uniqueid">\n      <text>{{$idx}}.{{value.name}}</text>\n    </div>\n    \x3c!-- 方式3：自定义元素、索引的变量名称 --\x3e\n    <div class="row" for="(personindex, personitem) in list" tid="uniqueid">\n      <text>{{personindex}}.{{personitem.name}}</text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .page {\n    flex-direction: column;\n  }\n\n  .row {\n    width: 85%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n</style>\n\n<script>\n  export default {\n    private: {\n      list: [\n        { name: \'aa\', uniqueid: 1 },\n        { name: \'bb\', uniqueid: 2 },\n        { name: \'cc\', uniqueid: 3 }\n      ]\n    },\n    oninit() {\n      console.info(\'指令for\')\n    }\n  }\n<\/script>\n\n\n示例代码中，在渲染页面时，div.row的结构，会根据 script 中的数据 list 的定义，被循环的生成多个。\n\ntid="uniqueid"，数组元素的某个属性名，不一定叫uniqueid。它类似于react的key={item.uniqueid}或vue的:key="item.uniqueid"，用于优化渲染速度。\n\n当数据修改时，数据不改变的dom不会被重新渲染，已经改变的数据所在的dom才会被重新渲染，因此我们必须保证uniqueid这个属性值在每个数组元素都不一样。\n\n注意\n\n 1. for 指令只能循环数组，不能循环对象。\n\n 2. for 指令在 block 标签的行为与它在其他标签的行为不一样，block 标签在渲染时不会额外插入dom节点，而是会循环其内部的dom结构，其他标签则会循环生成其自身。\n\n 3. 当 for 指令与 if 指令共存于一个标签时， if 指令的优先级优于 for 指令。为了方便未看文档的新人快速上手项目，不建议这两个指令共存于同一个标签。\n\n 4. 自定义变量表示 for 指令的数组索引和数组元素时，变量名不可以用$或_开头。\n\n 5. 使用tid属性时应注意：\n    \n    * tid属性指定的数据属性必须存在，否则可能导致运行异常；\n    * tid属性指定的数据属性要保证唯一，否则可能导致性能问题；\n    * tid属性目前不支持表达式。',charsets:{cjk:!0}},{title:"多屏适配",frontmatter:{},regularPath:"/zh/guide/multi-screens/",relativePath:"zh/guide/multi-screens/README.md",key:"v-777ef2b5",path:"/zh/guide/multi-screens/",headers:[{level:2,title:"为什么要做多屏适配？",slug:"为什么要做多屏适配",normalizedTitle:"为什么要做多屏适配？",charIndex:11},{level:2,title:"如何做多屏适配？",slug:"如何做多屏适配",normalizedTitle:"如何做多屏适配？",charIndex:956}],headersStr:"为什么要做多屏适配？ 如何做多屏适配？",content:"# 多屏适配\n\n\n# 为什么要做多屏适配？\n\n小米可穿戴设备（手环、手表）众多，设备间屏幕形状、尺寸和分辨率存在差异，为了保证应用在不同屏幕上都能正常显示，需要进行多屏适配。 建议开发者在开发应用时尽量考虑多屏适配，提高应用的通用性，以保证应用能分发到尽量多的可穿戴设备上，帮助开发者快速拓展用户。 以下表格是搭载 Vela OS 的设备屏幕详细信息，请参考。\n\n设备类型   设备型号                    屏幕形状     屏幕尺寸     分辨率       PPI   屏幕宽度DP   长宽比\n手表     Xiaomi Watch S1 Pro     圆形       1.47英寸   480x480   326   240      1\n手表     Xiaomi Watch H1         圆形       1.43英寸   466x466   326   233      1\n手表     Xiaomi Watch S3         圆形       1.43英寸   466x466   326   233      1\n手表     Xiaomi Watch S4 sport   圆形       1.43英寸   466x466   326   233      1\n手表     Xiaomi Watch S4         圆形       1.43英寸   466x466   326   233      1\n手表     REDMI Watch 5           矩形       2.07英寸   432x514   324   216      0.8\n手环     小米手环8 Pro               矩形       1.74英寸   336x480   336   168      0.7\n手环     小米手环9                   跑道型胶囊屏   1.62英寸   192x490   325   96       0.4\n手环     小米手环9 Pro               矩形       1.74英寸   336x480   325   160      0.7\n\n\n# 如何做多屏适配？\n\n多屏适配的前提是应用需要进行多屏设计，设计稿需要包含不同屏幕的适配方案，具体设计方法请参考 多屏设计。\n\n框架提供了一系列技术规范，帮助开发者按照设计稿完成应用的多屏适配，请参考 多屏规范。\n\n我们的 IDE 也提供了多屏 UI 模拟器，帮助开发者快速预览应用在不同屏幕上的效果，以便进行适当调整，请参考 多屏 UI 模拟器。\n\n我们提供了一些对常见页面元素进行多屏适配的代码示例以及整站案例供参考，代码示例。",normalizedContent:"# 多屏适配\n\n\n# 为什么要做多屏适配？\n\n小米可穿戴设备（手环、手表）众多，设备间屏幕形状、尺寸和分辨率存在差异，为了保证应用在不同屏幕上都能正常显示，需要进行多屏适配。 建议开发者在开发应用时尽量考虑多屏适配，提高应用的通用性，以保证应用能分发到尽量多的可穿戴设备上，帮助开发者快速拓展用户。 以下表格是搭载 vela os 的设备屏幕详细信息，请参考。\n\n设备类型   设备型号                    屏幕形状     屏幕尺寸     分辨率       ppi   屏幕宽度dp   长宽比\n手表     xiaomi watch s1 pro     圆形       1.47英寸   480x480   326   240      1\n手表     xiaomi watch h1         圆形       1.43英寸   466x466   326   233      1\n手表     xiaomi watch s3         圆形       1.43英寸   466x466   326   233      1\n手表     xiaomi watch s4 sport   圆形       1.43英寸   466x466   326   233      1\n手表     xiaomi watch s4         圆形       1.43英寸   466x466   326   233      1\n手表     redmi watch 5           矩形       2.07英寸   432x514   324   216      0.8\n手环     小米手环8 pro               矩形       1.74英寸   336x480   336   168      0.7\n手环     小米手环9                   跑道型胶囊屏   1.62英寸   192x490   325   96       0.4\n手环     小米手环9 pro               矩形       1.74英寸   336x480   325   160      0.7\n\n\n# 如何做多屏适配？\n\n多屏适配的前提是应用需要进行多屏设计，设计稿需要包含不同屏幕的适配方案，具体设计方法请参考 多屏设计。\n\n框架提供了一系列技术规范，帮助开发者按照设计稿完成应用的多屏适配，请参考 多屏规范。\n\n我们的 ide 也提供了多屏 ui 模拟器，帮助开发者快速预览应用在不同屏幕上的效果，以便进行适当调整，请参考 多屏 ui 模拟器。\n\n我们提供了一些对常见页面元素进行多屏适配的代码示例以及整站案例供参考，代码示例。",charsets:{cjk:!0}},{title:"条件编译",frontmatter:{},regularPath:"/zh/guide/multi-screens/conditional-compilation.html",relativePath:"zh/guide/multi-screens/conditional-compilation.md",key:"v-778dee2c",path:"/zh/guide/multi-screens/conditional-compilation.html",headers:[{level:2,title:"流程",slug:"流程",normalizedTitle:"流程",charIndex:129}],headersStr:"流程",content:'# 条件编译\n\n基于设备特性的条件编译是一种在编译过程中根据设备类型和屏幕形状等特征来决定哪些代码应该被包含在应用程序中的技术。这项功能适用于跨设备应用开发，其中不同的设备可能需要不同的代码逻辑和界面布局。目前支持条件编译的文件类型有：ux、js。\n\n\n# 流程\n\n 1. 安装 conditional-compilation-webpack-plugin\n\nnpm install conditional-compilation-webpack-plugin -D\n\n\n 2. 安装 cross-env\n\nnpm install cross-env -D\n\n\n 3. 在项目根目录中增加 quickapp.config.js 文件，并参考如下配置\n\nconst ConditionalCompilationWebpackPlugin = require("conditional-compilation-webpack-plugin")\n\nmodule.exports = {\n  plugins: [new ConditionalCompilationWebpackPlugin()]\n}\n\n\n 4. 根据设备特征，在 package.json 中添加脚本\n\n"scripts": {\n  "build:circle": "cross-env DEVICE_TYPE=WATCH SHAPE=CIRCLE aiot build --enable-custom-component",\n  "build:rect": "cross-env DEVICE_TYPE=WATCH SHAPE=RECT aiot build --enable-custom-component"\n}\n\n\n 5. 在代码中使用条件编译，参考如下代码\n\n<template>\n  <div class="home-page">\n    \x3c!-- if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'CIRCLE\' --\x3e\n    <input class="btn bg-red" type="button" value="handleSet" @click="handleSet" />\n    \x3c!-- endif --\x3e\n    \x3c!-- if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'RECT\' --\x3e\n    <input class="btn bg-blue" type="button" value="handleSet" @click="handleSet" />\n    \x3c!-- endif --\x3e\n  </div>\n</template>\n\n<script>\n  export default {\n    handleSet() {\n      // if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'CIRCLE\'\n      console.log(\'handleSet shape = circle\')\n      // endif\n      // if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'RECT\'\n      console.log(\'handleSet shape = rect\')\n      // endif\n    }\n  };\n<\/script>\n\n<style>\n  .home-page {\n    align-items: flex-start;\n    justify-content: flex-start;\n    padding: 60px;\n    position: relative;\n  }\n\n  .btn {\n    height: 60px;\n    width: 360px;\n    text-align: center;\n    border-radius: 5px;\n    margin-bottom: 30px;\n    color: #ffffff;\n    font-size: 30px;\n    background-color: #0faeff;\n  }\n\n/* if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'CIRCLE\' */\n  .bg-red {\n    background-color: red;\n  }\n/* endif */\n/* if true: process.env.DEVICE_TYPE === \'WATCH\' && process.env.SHAPE === \'RECT\' */\n  .bg-blue {\n    background-color: blue;\n  }\n/* endif */\n</style>\n\n\n 6. 执行配置好的编译命令\n\nnpm run build:circle\n或\nnpm run build:rect\n',normalizedContent:'# 条件编译\n\n基于设备特性的条件编译是一种在编译过程中根据设备类型和屏幕形状等特征来决定哪些代码应该被包含在应用程序中的技术。这项功能适用于跨设备应用开发，其中不同的设备可能需要不同的代码逻辑和界面布局。目前支持条件编译的文件类型有：ux、js。\n\n\n# 流程\n\n 1. 安装 conditional-compilation-webpack-plugin\n\nnpm install conditional-compilation-webpack-plugin -d\n\n\n 2. 安装 cross-env\n\nnpm install cross-env -d\n\n\n 3. 在项目根目录中增加 quickapp.config.js 文件，并参考如下配置\n\nconst conditionalcompilationwebpackplugin = require("conditional-compilation-webpack-plugin")\n\nmodule.exports = {\n  plugins: [new conditionalcompilationwebpackplugin()]\n}\n\n\n 4. 根据设备特征，在 package.json 中添加脚本\n\n"scripts": {\n  "build:circle": "cross-env device_type=watch shape=circle aiot build --enable-custom-component",\n  "build:rect": "cross-env device_type=watch shape=rect aiot build --enable-custom-component"\n}\n\n\n 5. 在代码中使用条件编译，参考如下代码\n\n<template>\n  <div class="home-page">\n    \x3c!-- if true: process.env.device_type === \'watch\' && process.env.shape === \'circle\' --\x3e\n    <input class="btn bg-red" type="button" value="handleset" @click="handleset" />\n    \x3c!-- endif --\x3e\n    \x3c!-- if true: process.env.device_type === \'watch\' && process.env.shape === \'rect\' --\x3e\n    <input class="btn bg-blue" type="button" value="handleset" @click="handleset" />\n    \x3c!-- endif --\x3e\n  </div>\n</template>\n\n<script>\n  export default {\n    handleset() {\n      // if true: process.env.device_type === \'watch\' && process.env.shape === \'circle\'\n      console.log(\'handleset shape = circle\')\n      // endif\n      // if true: process.env.device_type === \'watch\' && process.env.shape === \'rect\'\n      console.log(\'handleset shape = rect\')\n      // endif\n    }\n  };\n<\/script>\n\n<style>\n  .home-page {\n    align-items: flex-start;\n    justify-content: flex-start;\n    padding: 60px;\n    position: relative;\n  }\n\n  .btn {\n    height: 60px;\n    width: 360px;\n    text-align: center;\n    border-radius: 5px;\n    margin-bottom: 30px;\n    color: #ffffff;\n    font-size: 30px;\n    background-color: #0faeff;\n  }\n\n/* if true: process.env.device_type === \'watch\' && process.env.shape === \'circle\' */\n  .bg-red {\n    background-color: red;\n  }\n/* endif */\n/* if true: process.env.device_type === \'watch\' && process.env.shape === \'rect\' */\n  .bg-blue {\n    background-color: blue;\n  }\n/* endif */\n</style>\n\n\n 6. 执行配置好的编译命令\n\nnpm run build:circle\n或\nnpm run build:rect\n',charsets:{cjk:!0}},{title:"Props",frontmatter:{},regularPath:"/zh/guide/framework/template/Props.html",relativePath:"zh/guide/framework/template/Props.md",key:"v-3bf0d5d6",path:"/zh/guide/framework/template/Props.html",headers:[{level:2,title:"Prop 写法",slug:"prop-写法",normalizedTitle:"prop 写法",charIndex:12},{level:2,title:"属性默认值",slug:"属性默认值",normalizedTitle:"属性默认值",charIndex:569},{level:2,title:"数据单向性",slug:"数据单向性",normalizedTitle:"数据单向性",charIndex:925},{level:2,title:"常见的三种操作 prop 值的方法：",slug:"常见的三种操作-prop-值的方法",normalizedTitle:"常见的三种操作 prop 值的方法：",charIndex:1075},{level:3,title:"1. prop 传入的值作为初始值，用 data 接收",slug:"_1-prop-传入的值作为初始值-用-data-接收",normalizedTitle:"1. prop 传入的值作为初始值，用 data 接收",charIndex:1098},{level:3,title:"2. $watch 监控数据改变",slug:"_2-watch-监控数据改变",normalizedTitle:"2. $watch 监控数据改变",charIndex:1480},{level:3,title:"3. computed 属性",slug:"_3-computed-属性",normalizedTitle:"3. computed 属性",charIndex:1988},{level:2,title:"属性校验",slug:"属性校验",normalizedTitle:"属性校验",charIndex:2177}],headersStr:"Prop 写法 属性默认值 数据单向性 常见的三种操作 prop 值的方法： 1. prop 传入的值作为初始值，用 data 接收 2. $watch 监控数据改变 3. computed 属性 属性校验",content:"# Props\n\n\n# Prop 写法\n\nProp 属性名称使用 camelCase(驼峰命名法)命名，在外部传递数据时请转化为以 kebab-case (短横线分隔命名) propObject 转换为 prop-object。\n\n\x3c!-- 子组件 --\x3e\n<template>\n  <div class=\"child-demo\">\n    <text>{{ propObject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: ['propObject']\n  }\n<\/script>\n\n\n\x3c!-- 父组件 --\x3e\n<import name=\"comp\" src=\"./comp\"></import>\n<template>\n  <div class=\"parent-demo\">\n    <comp prop-object=\"{{obj}}\"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      obj: {\n        name: 'child-demo'\n      }\n    }\n  }\n<\/script>\n\n\n\n# 属性默认值\n\n子组件声明属性时，可以设置默认值。当调用子组件没有传入该数据时，将会自动设为默认值。\n\n如果需要设置默认值，props 属性的写法必须要要写成 Object 形式，不能写成 Array 形式。\n\n示例如下：\n\n<script>\n  // 子组件\n  export default {\n    props: {\n      prop1: {\n        default: 'Hello' //默认值\n      },\n      prop2Object: {} //不设置默认值\n    },\n    onInit() {\n      console.info(`外部传递的数据：`, this.prop1, this.prop2Object)\n    }\n  }\n<\/script>\n\n\n\n# 数据单向性\n\n父子间的数据传输是单向性的，父组件 prop 数据更新，子组件的数据会刷新为最新值；子组件的 prop 值发生改变，并不会改变父组件中值。\n\n但是prop 类型事数组或者对象，自组件变化会影响到父组件的值，这意味着你不应该在一个子组件内部改变 prop 的值，这是危险性操作。\n\n\n# 常见的三种操作 prop 值的方法：\n\n\n# 1. prop 传入的值作为初始值，用 data 接收\n\n<script>\n  export default {\n    props: ['say', 'propObject'],\n    data{\n      count: null,\n      obj: null\n    },\n    onInit() {\n      console.info(`外部传递的数据：`, this.say, this.propObject)\n\n      this.count = this.propObject.count // 将prop中一个简单类型赋值给data\n      this.obj = JSON.parse(JSON.stringify(this.propObject)) // 将 prop 深度克隆\n    }\n  }\n<\/script>\n\n\n\n# 2. $watch 监控数据改变\n\n如果是监听对象中的属性，参数请使用.分割，如：$watch(xxx.xxx.xxx, methodName)，详见$watch。\n\n<script>\n  export default {\n    props: ['propObject'],\n    data {\n      propSay: ''\n    },\n    onInit() {\n      // 监听数据变化\n      this.$watch('propObject.name', 'watchPropsChange')\n    },\n    /**\n     * 监听数据变化，你可以对数据处理后，设置值到data上\n     * @param newV\n     * @param oldV\n     */\n    watchPropsChange(newV, oldV) {\n      console.info(`监听数据变化：`, newV, oldV)\n      this.propSay = newV && newV.toUpperCase()\n    }\n  }\n<\/script>\n\n\n\n# 3. computed 属性\n\n详见计算属性。\n\n<script>\n  export default {\n    props: [\n      'say'\n    ],\n    computed:{\n      sayText() {\n        return this.say.toUpperCase()\n      }\n    }\n  }\n<\/script>\n\n\n\n# 属性校验\n\n子组件声明属性时，可以指定数据类型校验。\n\n类型检查支持的类型包括 [String、Number、Boolean、Function、Object、Array]\n\n如果需要校验类型，props 属性的写法必须要要写成 Object 形式，不能写成 Array 形式。\n\n示例如下：\n\n<script>\n  // 子组件\n  export default {\n    props: {\n      prop1: {\n        default: 'Hello' //默认值\n        type: String // 校验类型\n      },\n      prop2Object: {} //不设置默认值\n    },\n    onInit() {\n      console.info(`外部传递的数据：`, this.prop1, this.prop2Object)\n    }\n  }\n<\/script>\n",normalizedContent:"# props\n\n\n# prop 写法\n\nprop 属性名称使用 camelcase(驼峰命名法)命名，在外部传递数据时请转化为以 kebab-case (短横线分隔命名) propobject 转换为 prop-object。\n\n\x3c!-- 子组件 --\x3e\n<template>\n  <div class=\"child-demo\">\n    <text>{{ propobject.name }}</text>\n  </div>\n</template>\n<script>\n  export default {\n    props: ['propobject']\n  }\n<\/script>\n\n\n\x3c!-- 父组件 --\x3e\n<import name=\"comp\" src=\"./comp\"></import>\n<template>\n  <div class=\"parent-demo\">\n    <comp prop-object=\"{{obj}}\"></comp>\n  </div>\n</template>\n<script>\n  export default {\n    private: {\n      obj: {\n        name: 'child-demo'\n      }\n    }\n  }\n<\/script>\n\n\n\n# 属性默认值\n\n子组件声明属性时，可以设置默认值。当调用子组件没有传入该数据时，将会自动设为默认值。\n\n如果需要设置默认值，props 属性的写法必须要要写成 object 形式，不能写成 array 形式。\n\n示例如下：\n\n<script>\n  // 子组件\n  export default {\n    props: {\n      prop1: {\n        default: 'hello' //默认值\n      },\n      prop2object: {} //不设置默认值\n    },\n    oninit() {\n      console.info(`外部传递的数据：`, this.prop1, this.prop2object)\n    }\n  }\n<\/script>\n\n\n\n# 数据单向性\n\n父子间的数据传输是单向性的，父组件 prop 数据更新，子组件的数据会刷新为最新值；子组件的 prop 值发生改变，并不会改变父组件中值。\n\n但是prop 类型事数组或者对象，自组件变化会影响到父组件的值，这意味着你不应该在一个子组件内部改变 prop 的值，这是危险性操作。\n\n\n# 常见的三种操作 prop 值的方法：\n\n\n# 1. prop 传入的值作为初始值，用 data 接收\n\n<script>\n  export default {\n    props: ['say', 'propobject'],\n    data{\n      count: null,\n      obj: null\n    },\n    oninit() {\n      console.info(`外部传递的数据：`, this.say, this.propobject)\n\n      this.count = this.propobject.count // 将prop中一个简单类型赋值给data\n      this.obj = json.parse(json.stringify(this.propobject)) // 将 prop 深度克隆\n    }\n  }\n<\/script>\n\n\n\n# 2. $watch 监控数据改变\n\n如果是监听对象中的属性，参数请使用.分割，如：$watch(xxx.xxx.xxx, methodname)，详见$watch。\n\n<script>\n  export default {\n    props: ['propobject'],\n    data {\n      propsay: ''\n    },\n    oninit() {\n      // 监听数据变化\n      this.$watch('propobject.name', 'watchpropschange')\n    },\n    /**\n     * 监听数据变化，你可以对数据处理后，设置值到data上\n     * @param newv\n     * @param oldv\n     */\n    watchpropschange(newv, oldv) {\n      console.info(`监听数据变化：`, newv, oldv)\n      this.propsay = newv && newv.touppercase()\n    }\n  }\n<\/script>\n\n\n\n# 3. computed 属性\n\n详见计算属性。\n\n<script>\n  export default {\n    props: [\n      'say'\n    ],\n    computed:{\n      saytext() {\n        return this.say.touppercase()\n      }\n    }\n  }\n<\/script>\n\n\n\n# 属性校验\n\n子组件声明属性时，可以指定数据类型校验。\n\n类型检查支持的类型包括 [string、number、boolean、function、object、array]\n\n如果需要校验类型，props 属性的写法必须要要写成 object 形式，不能写成 array 形式。\n\n示例如下：\n\n<script>\n  // 子组件\n  export default {\n    props: {\n      prop1: {\n        default: 'hello' //默认值\n        type: string // 校验类型\n      },\n      prop2object: {} //不设置默认值\n    },\n    oninit() {\n      console.info(`外部传递的数据：`, this.prop1, this.prop2object)\n    }\n  }\n<\/script>\n",charsets:{cjk:!0}},{title:"适配规范",frontmatter:{},regularPath:"/zh/guide/multi-screens/specs.html",relativePath:"zh/guide/multi-screens/specs.md",key:"v-5ac019b2",path:"/zh/guide/multi-screens/specs.html",headers:[{level:2,title:"自适应布局",slug:"自适应布局",normalizedTitle:"自适应布局",charIndex:38},{level:2,title:"自适应单位",slug:"自适应单位",normalizedTitle:"自适应单位",charIndex:344},{level:3,title:"px",slug:"px",normalizedTitle:"px",charIndex:387},{level:3,title:"百分比%",slug:"百分比",normalizedTitle:"百分比%",charIndex:1076},{level:2,title:"固定长度单位",slug:"固定长度单位",normalizedTitle:"固定长度单位",charIndex:1374},{level:2,title:"媒体查询",slug:"媒体查询",normalizedTitle:"媒体查询",charIndex:2491},{level:2,title:"获取屏幕信息",slug:"获取屏幕信息",normalizedTitle:"获取屏幕信息",charIndex:3320}],headersStr:"自适应布局 自适应单位 px 百分比% 固定长度单位 媒体查询 获取屏幕信息",content:'# 适配规范\n\nVela OS 支持一系列适配多种屏幕的技术能力。\n\n\n# 自适应布局\n\n系统提供的容器组件均默认遵循 Flex 弹性布局规则，使用弹性布局可以实现屏幕自适应布局。\n\n比如以下代码可以实现行内多个 item 平均分布。\n\n<div>\n  <text style="flex-grow: 1; background-color:aqua;">1</text>\n  <text style="flex-grow: 1; background-color:yellow;">2</text>\n  <text style="flex-grow: 1; background-color:red;">3</text>\n</div>\n\n\n\n\n更多说明请参考Flex 布局示例\n\n\n# 自适应单位\n\n在编写 UI 样式时，可以采用系统提供的自适应长度单位，包括：\n\n * px\n * %\n\n\n# px\n\npx 在 Vela 应用中不表示屏幕的物理像素，而是相对于项目配置基准宽度的单位，其原理类似于rem。\n\n开发者在 manifest 文件中将 designWidth 字段配置为设计基准宽度（设计稿宽度），然后在样式描述中使用该长度单位，数值直接使用设计稿中的像素值，系统将自动计算使 Vela 应用 UI 在不同屏幕上进行等比缩放。\n\n{\n  "config": {\n    "designWidth": 336\n  }\n}\n\n\n<template>\n  <div class="demo-page">\n    <div class="container"></div>\n  </div>\n</template>\n\n<style>\n.demo-page {\n  justify-content: center;\n  align-items: center;\n}\n.container {\n  width: 168px;\n  height: 168px;\n  background-color: aquamarine;\n}\n</style>\n\n\n如上示例中将 designWidth 配置为 336px，那么所有的 px 值使用都会按照 336px 的基准宽度换算。 假设设备屏幕实际宽度为 336 像素，则 container 元素的实际宽度也为 168 像素；如果设备屏幕实际宽度为 192 像素，则 container 元素的实际宽度为 96 像素。\n\n336*480 屏幕 / 192*490 屏幕\n\n\n\n更多说明请参考长度单位\n\n\n# 百分比%\n\n% 表示百分比，许多样式属性可以取百分比值，经常用以根据父对象来确定大小。\n\n比如以下代码可以实现行内多个 item 按百分比占据父容器宽度，\n\n<div>\n  <text style="width: 20%; background-color:aqua;">1</text>\n  <text style="width: 40%; background-color:yellow;">2</text>\n  <text style="width: 40%; background-color:red;">3</text>\n</div>\n\n\n\n\n更多说明请参考CSS 百分比单位\n\n\n# 固定长度单位\n\n在有的布局场景下，需要使用固定长度单位，系统支持的 dp 长度单位可满足这个需求。\n\nDP 长度单位表示设备独立像素（device-independent pixel），也叫密度无关像素，可以认为是计算机坐标系统中的一个点，这个点代表一个可以由程序使用的逻辑像素，是一个近似物理尺寸的单位，其计算公式为：\n\n屏幕宽度的 DP 值 = 屏幕分辨率的宽度 / DPR\n元素宽/高度的 DP 值 = 元素宽/高度的物理像素数 / DPR\n\n\nDPR 表示设备像素比（device pixel ratio），是设备物理像素和逻辑像素（DP）的比值，其计算公式为：\n\nDPR = 设备 PPI / 160\n\n\nPPI（pixels per inch）表示每英寸的像素数，表征屏幕的物理密度，因此 DPR 又被称为逻辑密度。 设备屏幕的逻辑密度值（DPR）可以通过 device 接口获取。\n\n比如以下代码可以实现元素在不同尺寸屏幕上保持近似的物理尺寸，从而在大屏幕上呈现更多的元素。\n\n<template>\n  <div class="container">\n    <div class="text-box">\n      <text style="background-color: aquamarine;">\n        A\n      </text>\n      <text style="background-color: #ff0000;">\n        B\n      </text>\n      <text style="background-color: #00ff00;">\n        C\n      </text>\n      <text style="background-color: #0000ff;">\n        D\n      </text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .container {\n    justify-content: center;\n    align-items: center;\n  }\n  .text-box {\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  text {\n    width:116dp;\n    height: 30dp;\n    font-size: 15dp;\n    text-align: center;\n  }\n</style>\n\n\n466*466 屏幕 / 192*490 屏幕\n\n\n\n\n# 媒体查询\n\n媒体查询是 CSS3 引入的一个功能，用于根据不同的屏幕尺寸和设备类型，为网页应用不同的样式。\n\n在 Vela JS 应用中，也可以使用类似的媒体查询规范来针对不同屏幕和设备编写样式，详细介绍请参考媒体查询。\n\n比如以下代码可以实现根据屏幕形状来应用不同的样式。\n\n注意: 以下示例代码的designWidth为466\n\n<template>\n  <div class="container">\n    <text>10:30</text>\n    <text>我的待办</text>\n  </div>\n</template>\n\n<style>\n  /* 当屏幕为圆形屏幕时 */\n  @media screen and (shape: circle) {\n    .container {\n      padding-left: 80px;\n      padding-right: 80px;\n      padding-top: 40px;\n      flex-direction: row;\n      align-items: flex-start;\n      justify-content: space-between;\n    }\n    text {\n      font-size: 40px;\n    }\n  }\n  /* 当屏幕为胶囊形屏幕时 */\n  @media screen and (shape: pill-shaped) {\n    .container {\n      padding-top: 50px;\n      flex-direction: column;\n      align-items: center;\n    }\n    text {\n      margin-top: 10px;\n    }\n  }\n</style>\n\n\n466*466 屏幕 / 192*490 屏幕\n\n\n\n\n# 获取屏幕信息\n\n在 Vela JS 应用中，可以通过 device feature 接口获取屏幕信息，包括屏幕形状、屏幕分辨率等。根据获取到的结果可以进行相应的样式适配。\n\n比如以下代码可以实现根据屏幕形状决定 progress 组件的类型（是否是弧形）。\n\n<template>\n  <div class="container">\n    <progress percent="80" type="{{progressType}}"></progress>\n  </div>\n</template>\n\n<script>\n  import device from \'@system.device\'\n\n  export default {\n    data: {\n      progressType: "horizontal"\n    },\n    onInit() {\n      const that = this\n      device.getInfo({\n        success: function(ret) {\n          that.progressType = ret.screenShape === "circle" ? "arc" : "horizontal"\n        }\n      })\n    }\n  }\n<\/script>\n\n<style>\n  .container {\n    padding: 20px;\n  }\n</style>\n\n\n圆形屏幕 / 矩形屏幕\n\n\n\n详细介绍请参考 设备信息 device',normalizedContent:'# 适配规范\n\nvela os 支持一系列适配多种屏幕的技术能力。\n\n\n# 自适应布局\n\n系统提供的容器组件均默认遵循 flex 弹性布局规则，使用弹性布局可以实现屏幕自适应布局。\n\n比如以下代码可以实现行内多个 item 平均分布。\n\n<div>\n  <text style="flex-grow: 1; background-color:aqua;">1</text>\n  <text style="flex-grow: 1; background-color:yellow;">2</text>\n  <text style="flex-grow: 1; background-color:red;">3</text>\n</div>\n\n\n\n\n更多说明请参考flex 布局示例\n\n\n# 自适应单位\n\n在编写 ui 样式时，可以采用系统提供的自适应长度单位，包括：\n\n * px\n * %\n\n\n# px\n\npx 在 vela 应用中不表示屏幕的物理像素，而是相对于项目配置基准宽度的单位，其原理类似于rem。\n\n开发者在 manifest 文件中将 designwidth 字段配置为设计基准宽度（设计稿宽度），然后在样式描述中使用该长度单位，数值直接使用设计稿中的像素值，系统将自动计算使 vela 应用 ui 在不同屏幕上进行等比缩放。\n\n{\n  "config": {\n    "designwidth": 336\n  }\n}\n\n\n<template>\n  <div class="demo-page">\n    <div class="container"></div>\n  </div>\n</template>\n\n<style>\n.demo-page {\n  justify-content: center;\n  align-items: center;\n}\n.container {\n  width: 168px;\n  height: 168px;\n  background-color: aquamarine;\n}\n</style>\n\n\n如上示例中将 designwidth 配置为 336px，那么所有的 px 值使用都会按照 336px 的基准宽度换算。 假设设备屏幕实际宽度为 336 像素，则 container 元素的实际宽度也为 168 像素；如果设备屏幕实际宽度为 192 像素，则 container 元素的实际宽度为 96 像素。\n\n336*480 屏幕 / 192*490 屏幕\n\n\n\n更多说明请参考长度单位\n\n\n# 百分比%\n\n% 表示百分比，许多样式属性可以取百分比值，经常用以根据父对象来确定大小。\n\n比如以下代码可以实现行内多个 item 按百分比占据父容器宽度，\n\n<div>\n  <text style="width: 20%; background-color:aqua;">1</text>\n  <text style="width: 40%; background-color:yellow;">2</text>\n  <text style="width: 40%; background-color:red;">3</text>\n</div>\n\n\n\n\n更多说明请参考css 百分比单位\n\n\n# 固定长度单位\n\n在有的布局场景下，需要使用固定长度单位，系统支持的 dp 长度单位可满足这个需求。\n\ndp 长度单位表示设备独立像素（device-independent pixel），也叫密度无关像素，可以认为是计算机坐标系统中的一个点，这个点代表一个可以由程序使用的逻辑像素，是一个近似物理尺寸的单位，其计算公式为：\n\n屏幕宽度的 dp 值 = 屏幕分辨率的宽度 / dpr\n元素宽/高度的 dp 值 = 元素宽/高度的物理像素数 / dpr\n\n\ndpr 表示设备像素比（device pixel ratio），是设备物理像素和逻辑像素（dp）的比值，其计算公式为：\n\ndpr = 设备 ppi / 160\n\n\nppi（pixels per inch）表示每英寸的像素数，表征屏幕的物理密度，因此 dpr 又被称为逻辑密度。 设备屏幕的逻辑密度值（dpr）可以通过 device 接口获取。\n\n比如以下代码可以实现元素在不同尺寸屏幕上保持近似的物理尺寸，从而在大屏幕上呈现更多的元素。\n\n<template>\n  <div class="container">\n    <div class="text-box">\n      <text style="background-color: aquamarine;">\n        a\n      </text>\n      <text style="background-color: #ff0000;">\n        b\n      </text>\n      <text style="background-color: #00ff00;">\n        c\n      </text>\n      <text style="background-color: #0000ff;">\n        d\n      </text>\n    </div>\n  </div>\n</template>\n\n<style>\n  .container {\n    justify-content: center;\n    align-items: center;\n  }\n  .text-box {\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n  text {\n    width:116dp;\n    height: 30dp;\n    font-size: 15dp;\n    text-align: center;\n  }\n</style>\n\n\n466*466 屏幕 / 192*490 屏幕\n\n\n\n\n# 媒体查询\n\n媒体查询是 css3 引入的一个功能，用于根据不同的屏幕尺寸和设备类型，为网页应用不同的样式。\n\n在 vela js 应用中，也可以使用类似的媒体查询规范来针对不同屏幕和设备编写样式，详细介绍请参考媒体查询。\n\n比如以下代码可以实现根据屏幕形状来应用不同的样式。\n\n注意: 以下示例代码的designwidth为466\n\n<template>\n  <div class="container">\n    <text>10:30</text>\n    <text>我的待办</text>\n  </div>\n</template>\n\n<style>\n  /* 当屏幕为圆形屏幕时 */\n  @media screen and (shape: circle) {\n    .container {\n      padding-left: 80px;\n      padding-right: 80px;\n      padding-top: 40px;\n      flex-direction: row;\n      align-items: flex-start;\n      justify-content: space-between;\n    }\n    text {\n      font-size: 40px;\n    }\n  }\n  /* 当屏幕为胶囊形屏幕时 */\n  @media screen and (shape: pill-shaped) {\n    .container {\n      padding-top: 50px;\n      flex-direction: column;\n      align-items: center;\n    }\n    text {\n      margin-top: 10px;\n    }\n  }\n</style>\n\n\n466*466 屏幕 / 192*490 屏幕\n\n\n\n\n# 获取屏幕信息\n\n在 vela js 应用中，可以通过 device feature 接口获取屏幕信息，包括屏幕形状、屏幕分辨率等。根据获取到的结果可以进行相应的样式适配。\n\n比如以下代码可以实现根据屏幕形状决定 progress 组件的类型（是否是弧形）。\n\n<template>\n  <div class="container">\n    <progress percent="80" type="{{progresstype}}"></progress>\n  </div>\n</template>\n\n<script>\n  import device from \'@system.device\'\n\n  export default {\n    data: {\n      progresstype: "horizontal"\n    },\n    oninit() {\n      const that = this\n      device.getinfo({\n        success: function(ret) {\n          that.progresstype = ret.screenshape === "circle" ? "arc" : "horizontal"\n        }\n      })\n    }\n  }\n<\/script>\n\n<style>\n  .container {\n    padding: 20px;\n  }\n</style>\n\n\n圆形屏幕 / 矩形屏幕\n\n\n\n详细介绍请参考 设备信息 device',charsets:{cjk:!0}},{title:"常见问题",frontmatter:{},regularPath:"/zh/guide/other/faq.html",relativePath:"zh/guide/other/faq.md",key:"v-1350a57c",path:"/zh/guide/other/faq.html",headers:[{level:2,title:"如何适配不同尺寸的屏幕？",slug:"如何适配不同尺寸的屏幕",normalizedTitle:"如何适配不同尺寸的屏幕？",charIndex:11},{level:2,title:"模拟器怎么跟手表通信？",slug:"模拟器怎么跟手表通信",normalizedTitle:"模拟器怎么跟手表通信？",charIndex:180},{level:2,title:"如何解决通信过程中提示签名不正确的问题？",slug:"如何解决通信过程中提示签名不正确的问题",normalizedTitle:"如何解决通信过程中提示签名不正确的问题？",charIndex:235},{level:2,title:"如何排查通信(interconnect)相关的问题？",slug:"如何排查通信-interconnect-相关的问题",normalizedTitle:"如何排查通信(interconnect)相关的问题？",charIndex:367},{level:2,title:"如何解决列表数据更新时闪烁的问题？",slug:"如何解决列表数据更新时闪烁的问题",normalizedTitle:"如何解决列表数据更新时闪烁的问题？",charIndex:489},{level:2,title:"构建release版本rpk时打包证书有什么要求？",slug:"构建release版本rpk时打包证书有什么要求",normalizedTitle:"构建release版本rpk时打包证书有什么要求？",charIndex:565},{level:2,title:"如何解决手表和手机连接状态获取问题？",slug:"如何解决手表和手机连接状态获取问题",normalizedTitle:"如何解决手表和手机连接状态获取问题？",charIndex:737},{level:2,title:"模拟器支持哪些平台？",slug:"模拟器支持哪些平台",normalizedTitle:"模拟器支持哪些平台？",charIndex:835},{level:2,title:"Windows和Mac是否可以打包rpk？",slug:"windows和mac是否可以打包rpk",normalizedTitle:"windows和mac是否可以打包rpk？",charIndex:911},{level:2,title:"如何将rpk上传到手表真机运行?",slug:"如何将rpk上传到手表真机运行",normalizedTitle:"如何将rpk上传到手表真机运行?",charIndex:958},{level:2,title:"如何查看手表真机上的日志？",slug:"如何查看手表真机上的日志",normalizedTitle:"如何查看手表真机上的日志？",charIndex:1235}],headersStr:"如何适配不同尺寸的屏幕？ 模拟器怎么跟手表通信？ 如何解决通信过程中提示签名不正确的问题？ 如何排查通信(interconnect)相关的问题？ 如何解决列表数据更新时闪烁的问题？ 构建release版本rpk时打包证书有什么要求？ 如何解决手表和手机连接状态获取问题？ 模拟器支持哪些平台？ Windows和Mac是否可以打包rpk？ 如何将rpk上传到手表真机运行? 如何查看手表真机上的日志？",content:"# 常见问题\n\n\n# 如何适配不同尺寸的屏幕？\n\n框架默认的屏幕分辨率是480*480，Vela三方应用会自动适配，开发者可以直接按照设计稿的尺寸来开发。 比如，设计稿是466*466，可以在manifest.json中配置designWidth: 466，然后css中尺寸相关的数值跟设计稿保持一致即可。 更多详细细节信息可以参考：页面样式和布局。\n\n\n# 模拟器怎么跟手表通信？\n\n模拟器跟手机通讯，需要外接蓝牙适配器，并且配置比较复杂，建议使用真机调试。\n\n\n# 如何解决通信过程中提示签名不正确的问题？\n\n手表和手机通信前会检查应用的签名，如果签名不正确通信会被拒绝。所以调试通信时需要手机app和手表rpk使用配套的证书打包。\n遇到签名不正确的错误时，请检查导出rpk时使用的证书是否和打包手机app时的证书相同。\n\n\n# 如何排查通信(interconnect)相关的问题？\n\n首先检查手表端发送数据的数据结构是否正确（请参考发送数据）、send方法回调行数执行情况。 其次可以排查手机端打印的日志（使用adb logcat工具），看手机端接受的数据情况。\n\n\n# 如何解决列表数据更新时闪烁的问题？\n\n通过for循环渲染的列表，在数据更新时，如果出现闪烁，可以增加tid来解决。详细文档可以参考：循环指令。\n\n\n# 构建release版本rpk时打包证书有什么要求？\n\n 1. 如果涉及手表跟手机通信，打包rpk时的证书需要跟打包手机app的证书一致，否则无法通信；\n 2. 如果不涉及通信，对证书无特殊要求，按照文档中的步骤生成即可；\n\n> 注意：请妥善保管证书，并且保证每次使用相同的证书打release版本rpk包。如果证书改变，可能无法上架。\n\n\n# 如何解决手表和手机连接状态获取问题？\n\n进入页面直接获取状态往往会拿到DISCONNECTED，因此需要轮询获取状态，根据getApkStatus()的返回值，判断手表和手机的连接状态。\n\n\n# 模拟器支持哪些平台？\n\n模拟器支持Windows，Mac和Ubuntu三个平台，其中Windows支持Win10+，Mac支持macOS12+\n\n\n# Windows和Mac是否可以打包rpk？\n\nWindows和Mac可以打包rpk。\n\n\n# 如何将rpk上传到手表真机运行?\n\n 1. 手机安装小米运动健康(目前是通过商务拉群对接的方式提供。开发vela三方应用需求，请邮件联系常健：changjian@xiaomi.com)；\n 2. 点击【小米运动健康】--\x3e【我的】--\x3e【关于】--\x3e【Debug】；\n 3. 点击【第三方应用】；\n 4. 点击【Click to input package name】；\n 5. 随便输个字符（只有卸载时要详细包名）；\n 6. 选择【Install third app】；\n 7. 选择本地rpk文件安装；\n 8. 安装成功会有Toast提示。\n\n\n# 如何查看手表真机上的日志？\n\n 1. 手机安装小米运动健康(目前是通过商务拉群对接的方式提供。开发vela三方应用需求，请邮件联系常健：changjian@xiaomi.com)；\n 2. 小米运动健康与手表进行同步；\n 3. 在手表上复现问题；\n 4. 点击【小米运动健康】--\x3e【我的】--\x3e【关于】--\x3e【Debug】--\x3e【拉取固件日志】；\n 5. 拉取成功后保存在手机，日志文件目录: /sdcard/Android/data/com.mi.health/files/log。",normalizedContent:"# 常见问题\n\n\n# 如何适配不同尺寸的屏幕？\n\n框架默认的屏幕分辨率是480*480，vela三方应用会自动适配，开发者可以直接按照设计稿的尺寸来开发。 比如，设计稿是466*466，可以在manifest.json中配置designwidth: 466，然后css中尺寸相关的数值跟设计稿保持一致即可。 更多详细细节信息可以参考：页面样式和布局。\n\n\n# 模拟器怎么跟手表通信？\n\n模拟器跟手机通讯，需要外接蓝牙适配器，并且配置比较复杂，建议使用真机调试。\n\n\n# 如何解决通信过程中提示签名不正确的问题？\n\n手表和手机通信前会检查应用的签名，如果签名不正确通信会被拒绝。所以调试通信时需要手机app和手表rpk使用配套的证书打包。\n遇到签名不正确的错误时，请检查导出rpk时使用的证书是否和打包手机app时的证书相同。\n\n\n# 如何排查通信(interconnect)相关的问题？\n\n首先检查手表端发送数据的数据结构是否正确（请参考发送数据）、send方法回调行数执行情况。 其次可以排查手机端打印的日志（使用adb logcat工具），看手机端接受的数据情况。\n\n\n# 如何解决列表数据更新时闪烁的问题？\n\n通过for循环渲染的列表，在数据更新时，如果出现闪烁，可以增加tid来解决。详细文档可以参考：循环指令。\n\n\n# 构建release版本rpk时打包证书有什么要求？\n\n 1. 如果涉及手表跟手机通信，打包rpk时的证书需要跟打包手机app的证书一致，否则无法通信；\n 2. 如果不涉及通信，对证书无特殊要求，按照文档中的步骤生成即可；\n\n> 注意：请妥善保管证书，并且保证每次使用相同的证书打release版本rpk包。如果证书改变，可能无法上架。\n\n\n# 如何解决手表和手机连接状态获取问题？\n\n进入页面直接获取状态往往会拿到disconnected，因此需要轮询获取状态，根据getapkstatus()的返回值，判断手表和手机的连接状态。\n\n\n# 模拟器支持哪些平台？\n\n模拟器支持windows，mac和ubuntu三个平台，其中windows支持win10+，mac支持macos12+\n\n\n# windows和mac是否可以打包rpk？\n\nwindows和mac可以打包rpk。\n\n\n# 如何将rpk上传到手表真机运行?\n\n 1. 手机安装小米运动健康(目前是通过商务拉群对接的方式提供。开发vela三方应用需求，请邮件联系常健：changjian@xiaomi.com)；\n 2. 点击【小米运动健康】--\x3e【我的】--\x3e【关于】--\x3e【debug】；\n 3. 点击【第三方应用】；\n 4. 点击【click to input package name】；\n 5. 随便输个字符（只有卸载时要详细包名）；\n 6. 选择【install third app】；\n 7. 选择本地rpk文件安装；\n 8. 安装成功会有toast提示。\n\n\n# 如何查看手表真机上的日志？\n\n 1. 手机安装小米运动健康(目前是通过商务拉群对接的方式提供。开发vela三方应用需求，请邮件联系常健：changjian@xiaomi.com)；\n 2. 小米运动健康与手表进行同步；\n 3. 在手表上复现问题；\n 4. 点击【小米运动健康】--\x3e【我的】--\x3e【关于】--\x3e【debug】--\x3e【拉取固件日志】；\n 5. 拉取成功后保存在手机，日志文件目录: /sdcard/android/data/com.mi.health/files/log。",charsets:{cjk:!0}},{title:"发布",frontmatter:{},regularPath:"/zh/guide/publish/",relativePath:"zh/guide/publish/README.md",key:"v-f9b4ec96",path:"/zh/guide/publish/",headersStr:null,content:"# 发布\n\n目前需要联系工作人员zhangyuanpu@xiaomi.com进行合作发布。",normalizedContent:"# 发布\n\n目前需要联系工作人员zhangyuanpu@xiaomi.com进行合作发布。",charsets:{cjk:!0}},{title:"验收标准",frontmatter:{},regularPath:"/zh/guide/publish/acceptance-criteria.html",relativePath:"zh/guide/publish/acceptance-criteria.md",key:"v-1b07dfc0",path:"/zh/guide/publish/acceptance-criteria.html",headersStr:null,content:"# 验收标准\n\n为持续提升Vela快应用的用户体验，现正式将启动性能纳入质量验收标准：快应用首页渲染完成时间（FMP）≤2000ms。我们同步整理了快应用最佳实践，包含启动加速方案、资源加载策略等。开发者可参考：最佳实践进行针对性优化。",normalizedContent:"# 验收标准\n\n为持续提升vela快应用的用户体验，现正式将启动性能纳入质量验收标准：快应用首页渲染完成时间（fmp）≤2000ms。我们同步整理了快应用最佳实践，包含启动加速方案、资源加载策略等。开发者可参考：最佳实践进行针对性优化。",charsets:{cjk:!0}},{title:"快速入门",frontmatter:{},regularPath:"/zh/guide/start.html",relativePath:"zh/guide/start.md",key:"v-517db6e6",path:"/zh/guide/start.html",headersStr:null,content:"# 快速入门\n\n这部分主要适合 Vela JS 应用开发的初学者。通过实现一个简单的天气预报APP，来熟悉 Vela JS 应用开发的流程和基础知识。",normalizedContent:"# 快速入门\n\n这部分主要适合 vela js 应用开发的初学者。通过实现一个简单的天气预报app，来熟悉 vela js 应用开发的流程和基础知识。",charsets:{cjk:!0}},{title:"注意事项",frontmatter:{},regularPath:"/zh/guide/other/tips.html",relativePath:"zh/guide/other/tips.md",key:"v-2d041636",path:"/zh/guide/other/tips.html",headers:[{level:2,title:"手表中的异常场景",slug:"手表中的异常场景",normalizedTitle:"手表中的异常场景",charIndex:11},{level:2,title:"代码规范",slug:"代码规范",normalizedTitle:"代码规范",charIndex:156},{level:2,title:"常见优化",slug:"常见优化",normalizedTitle:"常见优化",charIndex:437}],headersStr:"手表中的异常场景 代码规范 常见优化",content:'# 注意事项\n\n\n# 手表中的异常场景\n\n 1. 网络异常，在没有网络的情况下提示\n 2. 数据异常（没有获取到数据，或者后端接口返回错误）处理\n 3. JS代码错误处理\n 4. 按钮防止重复点击（点击后发请求的操作尤其要注意）\n 5. 息屏后重新亮屏会重新触发onReady、onShow生命周期函数\n\n\n# 代码规范\n\n 1. app.ux文件中的代码，必须写到<script><\/script>中，否则代码不会执行！\n 2. *.ux文件中，template节点只能有一个根节点\n 3. 角度相关的css属性必须书写单位，比如total-angle: 360deg\n 4. list-item中，谨慎使用if/else/show等条件判断，保证所有的list-item结构一致\n 5. image的src属性不要使用变量拼接（比如 src="/common/{{type}}），否则编译器打包代码会显示警告，建议直接使用变量src="{{imgPath}}"\n\n\n# 常见优化\n\n 1. 减少网络请求次数和并发数\n 2. 数据实时性要求不高的接口考虑做本地缓存（缓存也要考虑数据大小）\n 3. 控制本地文件数量，避免直接遍历文件获取所有文件大小\n 4. 尽可能使用低分辨率的网络图片\n 5. 列表使用分页，每一页保持在20个item以内比较好\n 6. 网络请求的数据，不要直接存储在内存中，只存储需要用到的字段\n 7. 谨慎使用三方依赖，使用轻量级的依赖\n 8. 公共代码可以考虑放到全局，不要多次引入\n 9. 添加loading态，防止按钮频繁点击后发起多次网络请求',normalizedContent:'# 注意事项\n\n\n# 手表中的异常场景\n\n 1. 网络异常，在没有网络的情况下提示\n 2. 数据异常（没有获取到数据，或者后端接口返回错误）处理\n 3. js代码错误处理\n 4. 按钮防止重复点击（点击后发请求的操作尤其要注意）\n 5. 息屏后重新亮屏会重新触发onready、onshow生命周期函数\n\n\n# 代码规范\n\n 1. app.ux文件中的代码，必须写到<script><\/script>中，否则代码不会执行！\n 2. *.ux文件中，template节点只能有一个根节点\n 3. 角度相关的css属性必须书写单位，比如total-angle: 360deg\n 4. list-item中，谨慎使用if/else/show等条件判断，保证所有的list-item结构一致\n 5. image的src属性不要使用变量拼接（比如 src="/common/{{type}}），否则编译器打包代码会显示警告，建议直接使用变量src="{{imgpath}}"\n\n\n# 常见优化\n\n 1. 减少网络请求次数和并发数\n 2. 数据实时性要求不高的接口考虑做本地缓存（缓存也要考虑数据大小）\n 3. 控制本地文件数量，避免直接遍历文件获取所有文件大小\n 4. 尽可能使用低分辨率的网络图片\n 5. 列表使用分页，每一页保持在20个item以内比较好\n 6. 网络请求的数据，不要直接存储在内存中，只存储需要用到的字段\n 7. 谨慎使用三方依赖，使用轻量级的依赖\n 8. 公共代码可以考虑放到全局，不要多次引入\n 9. 添加loading态，防止按钮频繁点击后发起多次网络请求',charsets:{cjk:!0}},{title:"代码示例",frontmatter:{},regularPath:"/zh/guide/multi-screens/samples.html",relativePath:"zh/guide/multi-screens/samples.md",key:"v-7abf8e50",path:"/zh/guide/multi-screens/samples.html",headers:[{level:2,title:"页面布局及元素适配",slug:"页面布局及元素适配",normalizedTitle:"页面布局及元素适配",charIndex:11},{level:3,title:"自适应容器大小",slug:"自适应容器大小",normalizedTitle:"自适应容器大小",charIndex:42},{level:3,title:"单页三行布局",slug:"单页三行布局",normalizedTitle:"单页三行布局",charIndex:1461},{level:3,title:"px自动缩放计算",slug:"px自动缩放计算",normalizedTitle:"px自动缩放计算",charIndex:2257},{level:3,title:"全屏背景图",slug:"全屏背景图",normalizedTitle:"全屏背景图",charIndex:2906},{level:3,title:"页面标题栏",slug:"页面标题栏",normalizedTitle:"页面标题栏",charIndex:3025},{level:2,title:"跨屏应用项目示例",slug:"跨屏应用项目示例",normalizedTitle:"跨屏应用项目示例",charIndex:4088},{level:3,title:"清单应用",slug:"清单应用",normalizedTitle:"清单应用",charIndex:4101},{level:3,title:"计算器",slug:"计算器",normalizedTitle:"计算器",charIndex:4141}],headersStr:"页面布局及元素适配 自适应容器大小 单页三行布局 px自动缩放计算 全屏背景图 页面标题栏 跨屏应用项目示例 清单应用 计算器",content:'# 代码示例\n\n\n# 页面布局及元素适配\n\n一些开发中常见的跨屏适配示例。\n\n\n# 自适应容器大小\n\n使用百分比或flex样式替代px写固定容器大小的布局方式可以在多屏适时有更好的兼容性。比如长列表滚动的场景，示例如下：\n\n<template>\n  <div class="demo-page">\n    <text class="title"> 长列表 </text>\n    <list class="list">\n      <list-item class="item" type="custom" for="{{listData}}">\n        <text>{{$item.name}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      listData: [\n        {\n          name: \'TEST1 TEST1 TEST1\'\n        }, {\n          name: \'TEST2 TEST2 TEST2\'\n        }, {\n          name: \'TEST3 TEST3 TEST3\'\n        }, {\n          name: \'TEST4 TEST4 TEST4\'\n        }, {\n          name: \'TEST5 TEST5 TEST5\'\n        }, {\n          name: \'TEST6 TEST6 TEST6\'\n        }, {\n          name: \'TEST7 TEST7 TEST7\'\n        }, {\n          name: \'TEST8 TEST8 TEST8\'\n        }, {\n          name: \'TEST9 TEST9 TEST9\'\n        }, {\n          name: \'TEST10 TEST10 TEST10\'\n        }\n      ]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  flex-direction: column;\n  align-items: center;\n  background-color: #fff;\n}\n\n.title {\n  margin-top: 50px;\n  padding: 20px 0;\n  font-size: 32px;\n}\n.list {\n  flex: 1;\n  width: 340px;\n  margin-bottom: 5px;\n  align-items: center;\n}\n.item {\n  width: 100%;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 20px;\n  background-color: #ccc;\n  text-align: center;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  text-align: center;\n  color: #000;\n}\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 单页三行布局\n\n手表、手环场景下单页面三行布局是比较常用的一种设计方式，页面结构大致分为顶部标题栏，底部按钮交互区域以及中部主体内容区。建议采用顶部底部高度固定，主体部分高度自适应的方式来做整体布局。\n\n代码示例：\n\n<template>\n  <div class="demo-page">\n    <div class="header">\n      <text>header</text>\n    </div>\n    <div class="content">\n      <text>content</text>\n    </div>\n    <div class="footer">\n      <text>footer</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {}\n<\/script>\n\n<style>\n.demo-page {\n  width: 466px;\n  height: 466px;\n  flex-direction: column;\n}\n\n.header {\n  width: 100%;\n  height: 100px;\n  background-color: red;\n}\n\n.content {\n  flex: 1;\n  background-color: yellow;\n}\n\n.footer {\n  width: 100%;\n  height: 100px;\n  background-color: blue;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  color: black;\n  text-align: center;\n}\n\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# px自动缩放计算\n\npx长度单位会根据配置的项目配置基准宽度进行换算，过程中产生的小数位会做四舍五入处理。因此，在一些需要精准计算的场景中需要考虑到换算带来的误差值（通常为+-1px）。\n\n比如下面这个示例， 在计算行宽的时候没考虑误差，导致某些设备上产生渲染错行的问题：\n\n\n\n代码示例：\n\n<template>\n  <div class="demo-page">\n    <div class="item" for="nums">\n      <text>{{$item}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      nums: [1, 2, 3, 4]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.item {\n  width: 110px;\n  height: 110px;\n  margin: 2px;\n  background-color: #ccc;\n}\n\ntext {\n  color: #000;\n  font-size: 30px;\n}\n\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 全屏背景图\n\n使用全屏背景图需要考虑到图片在不同尺寸的屏幕下是否都能有比较好的展示效果。 如果背景图片中有一些交互性或严格要求位置的部分，建议作为单独的元素与背景图拆分处理。\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 页面标题栏\n\n页面标题通常位于页面顶部，在不同屏幕形状的设备上，需要考虑内容显示的美观性与完整性。通常在圆屏、胶囊屏等存在边缘剪切的设备上，标题栏会使用多行设计，保证顶部的展示内容长度不会超出屏幕；而在矩形屏幕上则做单行左右布局让整体设计更为舒展。\n\n代码示例：\n\n<template>\n  <div class="demo-page">\n    <div class="title">\n      <text class="title-text">{{text1}}</text>\n      <text class="title-text">{{text2}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      text1: \'09:28\',\n      text2: \'文案\'\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  justify-content: center;\n  background-color: #5c5c5c;\n}\n\n.title {\n  width: 90%;\n}\n\n.title-text {\n  font-size: 36px;\n  color: #fff;\n}\n\n@media (shape: circle){\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n@media (shape: rect) {\n  .title {\n    margin-top: 10px;\n    justify-content: space-between;\n    align-items: flex-start;\n    flex-direction: row-reverse;\n  }\n  .title-text {\n    font-size: 46px;\n  }\n}\n\n@media (shape: pill-shaped) {\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n  .title-text {\n    font-size: 72px;\n  }\n}\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 跨屏应用项目示例\n\n\n# 清单应用\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n项目地址：点击下载\n\n\n# 计算器\n\n圆形屏幕 / 矩形屏\n\n\n\n项目地址：点击下载',normalizedContent:'# 代码示例\n\n\n# 页面布局及元素适配\n\n一些开发中常见的跨屏适配示例。\n\n\n# 自适应容器大小\n\n使用百分比或flex样式替代px写固定容器大小的布局方式可以在多屏适时有更好的兼容性。比如长列表滚动的场景，示例如下：\n\n<template>\n  <div class="demo-page">\n    <text class="title"> 长列表 </text>\n    <list class="list">\n      <list-item class="item" type="custom" for="{{listdata}}">\n        <text>{{$item.name}}</text>\n      </list-item>\n    </list>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      listdata: [\n        {\n          name: \'test1 test1 test1\'\n        }, {\n          name: \'test2 test2 test2\'\n        }, {\n          name: \'test3 test3 test3\'\n        }, {\n          name: \'test4 test4 test4\'\n        }, {\n          name: \'test5 test5 test5\'\n        }, {\n          name: \'test6 test6 test6\'\n        }, {\n          name: \'test7 test7 test7\'\n        }, {\n          name: \'test8 test8 test8\'\n        }, {\n          name: \'test9 test9 test9\'\n        }, {\n          name: \'test10 test10 test10\'\n        }\n      ]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  flex-direction: column;\n  align-items: center;\n  background-color: #fff;\n}\n\n.title {\n  margin-top: 50px;\n  padding: 20px 0;\n  font-size: 32px;\n}\n.list {\n  flex: 1;\n  width: 340px;\n  margin-bottom: 5px;\n  align-items: center;\n}\n.item {\n  width: 100%;\n  height: 100px;\n  margin-bottom: 20px;\n  border-radius: 20px;\n  background-color: #ccc;\n  text-align: center;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  text-align: center;\n  color: #000;\n}\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 单页三行布局\n\n手表、手环场景下单页面三行布局是比较常用的一种设计方式，页面结构大致分为顶部标题栏，底部按钮交互区域以及中部主体内容区。建议采用顶部底部高度固定，主体部分高度自适应的方式来做整体布局。\n\n代码示例：\n\n<template>\n  <div class="demo-page">\n    <div class="header">\n      <text>header</text>\n    </div>\n    <div class="content">\n      <text>content</text>\n    </div>\n    <div class="footer">\n      <text>footer</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {}\n<\/script>\n\n<style>\n.demo-page {\n  width: 466px;\n  height: 466px;\n  flex-direction: column;\n}\n\n.header {\n  width: 100%;\n  height: 100px;\n  background-color: red;\n}\n\n.content {\n  flex: 1;\n  background-color: yellow;\n}\n\n.footer {\n  width: 100%;\n  height: 100px;\n  background-color: blue;\n}\n\ntext {\n  width: 100%;\n  font-size: 30px;\n  color: black;\n  text-align: center;\n}\n\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# px自动缩放计算\n\npx长度单位会根据配置的项目配置基准宽度进行换算，过程中产生的小数位会做四舍五入处理。因此，在一些需要精准计算的场景中需要考虑到换算带来的误差值（通常为+-1px）。\n\n比如下面这个示例， 在计算行宽的时候没考虑误差，导致某些设备上产生渲染错行的问题：\n\n\n\n代码示例：\n\n<template>\n  <div class="demo-page">\n    <div class="item" for="nums">\n      <text>{{$item}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      nums: [1, 2, 3, 4]\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n}\n\n.item {\n  width: 110px;\n  height: 110px;\n  margin: 2px;\n  background-color: #ccc;\n}\n\ntext {\n  color: #000;\n  font-size: 30px;\n}\n\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 全屏背景图\n\n使用全屏背景图需要考虑到图片在不同尺寸的屏幕下是否都能有比较好的展示效果。 如果背景图片中有一些交互性或严格要求位置的部分，建议作为单独的元素与背景图拆分处理。\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 页面标题栏\n\n页面标题通常位于页面顶部，在不同屏幕形状的设备上，需要考虑内容显示的美观性与完整性。通常在圆屏、胶囊屏等存在边缘剪切的设备上，标题栏会使用多行设计，保证顶部的展示内容长度不会超出屏幕；而在矩形屏幕上则做单行左右布局让整体设计更为舒展。\n\n代码示例：\n\n<template>\n  <div class="demo-page">\n    <div class="title">\n      <text class="title-text">{{text1}}</text>\n      <text class="title-text">{{text2}}</text>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    private: {\n      text1: \'09:28\',\n      text2: \'文案\'\n    }\n  }\n<\/script>\n\n<style>\n.demo-page {\n  justify-content: center;\n  background-color: #5c5c5c;\n}\n\n.title {\n  width: 90%;\n}\n\n.title-text {\n  font-size: 36px;\n  color: #fff;\n}\n\n@media (shape: circle){\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n@media (shape: rect) {\n  .title {\n    margin-top: 10px;\n    justify-content: space-between;\n    align-items: flex-start;\n    flex-direction: row-reverse;\n  }\n  .title-text {\n    font-size: 46px;\n  }\n}\n\n@media (shape: pill-shaped) {\n  .title {\n    flex-direction: column;\n    align-items: center;\n  }\n  .title-text {\n    font-size: 72px;\n  }\n}\n</style>\n\n\n效果展示：\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n\n# 跨屏应用项目示例\n\n\n# 清单应用\n\n圆形屏幕 / 矩形屏 / 胶囊屏\n\n\n\n项目地址：点击下载\n\n\n# 计算器\n\n圆形屏幕 / 矩形屏\n\n\n\n项目地址：点击下载',charsets:{cjk:!0}},{title:"添加交互",frontmatter:{},regularPath:"/zh/guide/start/add-interactivity.html",relativePath:"zh/guide/start/add-interactivity.md",key:"v-1358a386",path:"/zh/guide/start/add-interactivity.html",headers:[{level:2,title:"注册事件",slug:"注册事件",normalizedTitle:"注册事件",charIndex:71},{level:2,title:"页面跳转",slug:"页面跳转",normalizedTitle:"页面跳转",charIndex:77}],headersStr:"注册事件 页面跳转",content:'# 添加交互\n\n在上一章节中，我们已经编写了两个页面的结构和样式，但是两个页面之间没有任何关联， 在本章中，我们会实现页面间的跳转。\n\n\n# 注册事件\n\n页面跳转由用户触发，需要给页面的特定元素添加对应的事件，比如click/touchstart。 有关事件更多的细节，请参考通用事件。\n\n在这个天气预报App中，我们采用的交互是滑动切换页面：\n\n 1. 在实时天气页面中，向上滑动进入未来3天天气页面；\n 2. 在未来3天天气页面，向右滑动返回到实时天气页面。\n\n我们希望在页面任何地方滑动都执行跳转动作，所以将滑动事件(swipe)注册到根节点上。\n\n模板代码如下：\n\n<template>\n  <div class="page column" @swipe="toListPage">\n    \x3c!-- 页面其它内容 --\x3e\n  </div>\n</template>\n\n\n说明\n\n@swipe="toListPage"也可以写成onswipe="toListPage"，详情请参考事件绑定。\n\n\n# 页面跳转\n\n注册完事件后，需要在JavaScript代码中，定义toListPage()回调方法，通过判断滑动方向，决定是否做页面跳转。 页面跳转，需要使用到@system.router模块，使用前请先在manifest.json中声明：\n\n{\n  // ...\n  "features": [\n    { "name": "system.router" }\n  ]\n}\n\n\n说明\n\n更多router相关细节，请参考页面切换。\n\n声明模块后，即可在JavaScript脚本中引入模块，然后使用router提供的API在页面间跳转：\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    toListPage(eve) {\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\n同样，在未来3天天气页面中，使用相同的方式来实现页面返回逻辑。对应的代码为：\n\n<template>\n  <div class="page column" @swipe="toHomePage">\n    \x3c!-- 页面其它内容 --\x3e\n  </div>\n</template>\n\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    toHomePage(eve) {\n      if (eve.direction === \'right\') {\n        router.back()\n      }\n    }\n  }\n<\/script>\n',normalizedContent:'# 添加交互\n\n在上一章节中，我们已经编写了两个页面的结构和样式，但是两个页面之间没有任何关联， 在本章中，我们会实现页面间的跳转。\n\n\n# 注册事件\n\n页面跳转由用户触发，需要给页面的特定元素添加对应的事件，比如click/touchstart。 有关事件更多的细节，请参考通用事件。\n\n在这个天气预报app中，我们采用的交互是滑动切换页面：\n\n 1. 在实时天气页面中，向上滑动进入未来3天天气页面；\n 2. 在未来3天天气页面，向右滑动返回到实时天气页面。\n\n我们希望在页面任何地方滑动都执行跳转动作，所以将滑动事件(swipe)注册到根节点上。\n\n模板代码如下：\n\n<template>\n  <div class="page column" @swipe="tolistpage">\n    \x3c!-- 页面其它内容 --\x3e\n  </div>\n</template>\n\n\n说明\n\n@swipe="tolistpage"也可以写成onswipe="tolistpage"，详情请参考事件绑定。\n\n\n# 页面跳转\n\n注册完事件后，需要在javascript代码中，定义tolistpage()回调方法，通过判断滑动方向，决定是否做页面跳转。 页面跳转，需要使用到@system.router模块，使用前请先在manifest.json中声明：\n\n{\n  // ...\n  "features": [\n    { "name": "system.router" }\n  ]\n}\n\n\n说明\n\n更多router相关细节，请参考页面切换。\n\n声明模块后，即可在javascript脚本中引入模块，然后使用router提供的api在页面间跳转：\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    tolistpage(eve) {\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\n同样，在未来3天天气页面中，使用相同的方式来实现页面返回逻辑。对应的代码为：\n\n<template>\n  <div class="page column" @swipe="tohomepage">\n    \x3c!-- 页面其它内容 --\x3e\n  </div>\n</template>\n\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // ...\n    tohomepage(eve) {\n      if (eve.direction === \'right\') {\n        router.back()\n      }\n    }\n  }\n<\/script>\n',charsets:{cjk:!0}},{title:"数据获取",frontmatter:{},regularPath:"/zh/guide/start/data-fetch.html",relativePath:"zh/guide/start/data-fetch.md",key:"v-013a02d6",path:"/zh/guide/start/data-fetch.html",headers:[{level:2,title:"请求接口数据",slug:"请求接口数据",normalizedTitle:"请求接口数据",charIndex:89},{level:2,title:"数据渲染",slug:"数据渲染",normalizedTitle:"数据渲染",charIndex:1521}],headersStr:"请求接口数据 数据渲染",content:'# 数据获取\n\n在前面几个章节中，已经实现了天气预报App的UI，也添加了基本的交互。但页面中的数据 并非真实数据，接下来我们将从和风天气预报接口中请求真实数据并渲染。\n\n\n# 请求接口数据\n\n网络请求需要使用到数据请求fetch模块， 使用之前请在manifest.json中声明。\n\nfetch模块提供了fetch()方法，详细使用方法请参考Vela文档。\n\n每个页面都具有自己的生命周期，可以在onReady中发送请求， 代码如下：\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      // ...\n    },\n\n    onReady() {\n      let key = \'<你的key>\';\n      // location，这里使用的是武汉的code\n      // 更多的location code可以查看：https://github.com/qwd/LocationList\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101010100&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'返回的数据:\', JSON.stringify(result.data, null, 2));\n      }).catch(error => {\n        console.log(`数据请求失败:`, error);\n      })\n    },\n\n    // ...\n  }\n<\/script>\n\n\n> 使用之前，请到和风天气开发平台中申请key，然后替换上面代码中的key。\n\n添加上述代码并替换合法的key后，运行App，可以在控制台中看到类似下面的日志，说明请求成功。\n\n返回的数据: {\n  "code": "200",\n  "updateTime": "2022-01-04T10:07+08:00",\n  "fxLink": "http://hfx.link/2ax1",\n  "now": {\n    "obsTime": "2022-01-04T09:54+08:00",\n    "temp": "-1",\n    "feelsLike": "-4",\n    "icon": "100",\n    "text": "晴",\n    "wind360": "45",\n    "windDir": "东北风",\n    "windScale": "2",\n    "windSpeed": "7",\n    "humidity": "55",\n    "precip": "0.0",\n    "pressure": "1029",\n    "vis": "15",\n    "cloud": "10",\n    "dew": "-17"\n  },\n  "refer": {\n    "sources": [\n      "QWeather",\n      "NMC",\n      "ECMWF"\n    ],\n    "license": [\n      "no commercial use"\n    ]\n  }\n}\n\n\n\n# 数据渲染\n\n从后端请求到数据后，还需要将请求到的数据在页面上显示出来。要显示数据，只需要更改 页面数据对象上的对应数据即可：\n\nthis.weather = result.data.now;\n\n\n最终页面完整的JavaScript代码如下：\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      city: \'武汉市\',\n      province: \'湖北省\',\n      country: \'中国\',\n      weather: {\n        obsTime: "12-21 09:05",\n        temp: "13",\n        feelsLike: "10",\n        icon: "101",\n        text: "多云",\n        humidity: "72",\n        vis: "16"\n      }\n    },\n\n    onReady() {\n      let key = \'<你的key>\';\n      // location，这里使用的是武汉的code\n      // 更多的location code可以查看：https://github.com/qwd/LocationList\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101200101&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'返回的数据:\', JSON.stringify(result.data, null, 2));\n        this.weather = result.data.now;\n      }).catch(error => {\n        console.log(`数据请求失败:`, error);\n      })\n    },\n\n    toListPage(eve) {\n      console.log(eve);\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\n页面运行结果：\n\n\n\n未来3天天气预报界面的数据请求，跟实时天气页面一样，这里不再赘述。\n\n在真实的项目中，还需要处理更多的页面细节，比如页面请求数据时添加loading状态、对日期做对应的格式化处理等。\n\n为了给用户提供良好的体验，请严格按照设计稿编写页面结构和样式并对各种异常情况做相应的处理。',normalizedContent:'# 数据获取\n\n在前面几个章节中，已经实现了天气预报app的ui，也添加了基本的交互。但页面中的数据 并非真实数据，接下来我们将从和风天气预报接口中请求真实数据并渲染。\n\n\n# 请求接口数据\n\n网络请求需要使用到数据请求fetch模块， 使用之前请在manifest.json中声明。\n\nfetch模块提供了fetch()方法，详细使用方法请参考vela文档。\n\n每个页面都具有自己的生命周期，可以在onready中发送请求， 代码如下：\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      // ...\n    },\n\n    onready() {\n      let key = \'<你的key>\';\n      // location，这里使用的是武汉的code\n      // 更多的location code可以查看：https://github.com/qwd/locationlist\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101010100&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'返回的数据:\', json.stringify(result.data, null, 2));\n      }).catch(error => {\n        console.log(`数据请求失败:`, error);\n      })\n    },\n\n    // ...\n  }\n<\/script>\n\n\n> 使用之前，请到和风天气开发平台中申请key，然后替换上面代码中的key。\n\n添加上述代码并替换合法的key后，运行app，可以在控制台中看到类似下面的日志，说明请求成功。\n\n返回的数据: {\n  "code": "200",\n  "updatetime": "2022-01-04t10:07+08:00",\n  "fxlink": "http://hfx.link/2ax1",\n  "now": {\n    "obstime": "2022-01-04t09:54+08:00",\n    "temp": "-1",\n    "feelslike": "-4",\n    "icon": "100",\n    "text": "晴",\n    "wind360": "45",\n    "winddir": "东北风",\n    "windscale": "2",\n    "windspeed": "7",\n    "humidity": "55",\n    "precip": "0.0",\n    "pressure": "1029",\n    "vis": "15",\n    "cloud": "10",\n    "dew": "-17"\n  },\n  "refer": {\n    "sources": [\n      "qweather",\n      "nmc",\n      "ecmwf"\n    ],\n    "license": [\n      "no commercial use"\n    ]\n  }\n}\n\n\n\n# 数据渲染\n\n从后端请求到数据后，还需要将请求到的数据在页面上显示出来。要显示数据，只需要更改 页面数据对象上的对应数据即可：\n\nthis.weather = result.data.now;\n\n\n最终页面完整的javascript代码如下：\n\n<script>\n  import router from \'@system.router\';\n  import fetch from \'@system.fetch\';\n\n  export default {\n    private: {\n      city: \'武汉市\',\n      province: \'湖北省\',\n      country: \'中国\',\n      weather: {\n        obstime: "12-21 09:05",\n        temp: "13",\n        feelslike: "10",\n        icon: "101",\n        text: "多云",\n        humidity: "72",\n        vis: "16"\n      }\n    },\n\n    onready() {\n      let key = \'<你的key>\';\n      // location，这里使用的是武汉的code\n      // 更多的location code可以查看：https://github.com/qwd/locationlist\n      fetch.fetch({\n        url: `https://devapi.qweather.com/v7/weather/now?location=101200101&key=${key}`\n      }).then(res => {\n        const result = res.data;\n        console.log(\'返回的数据:\', json.stringify(result.data, null, 2));\n        this.weather = result.data.now;\n      }).catch(error => {\n        console.log(`数据请求失败:`, error);\n      })\n    },\n\n    tolistpage(eve) {\n      console.log(eve);\n      if (eve.direction === \'up\') {\n        router.push({\n          uri: \'/pages/list\'\n        })\n      }\n    }\n  }\n<\/script>\n\n\n页面运行结果：\n\n\n\n未来3天天气预报界面的数据请求，跟实时天气页面一样，这里不再赘述。\n\n在真实的项目中，还需要处理更多的页面细节，比如页面请求数据时添加loading状态、对日期做对应的格式化处理等。\n\n为了给用户提供良好的体验，请严格按照设计稿编写页面结构和样式并对各种异常情况做相应的处理。',charsets:{cjk:!0}},{title:"项目结构",frontmatter:{},regularPath:"/zh/guide/start/project-overview.html",relativePath:"zh/guide/start/project-overview.md",key:"v-3fdc26d4",path:"/zh/guide/start/project-overview.html",headers:[{level:2,title:"目录结构",slug:"目录结构",normalizedTitle:"目录结构",charIndex:58},{level:2,title:"配置文件",slug:"配置文件",normalizedTitle:"配置文件",charIndex:77},{level:2,title:"ux模板",slug:"ux模板",normalizedTitle:"ux模板",charIndex:508},{level:2,title:"app.ux",slug:"app-ux",normalizedTitle:"app.ux",charIndex:186},{level:2,title:"common",slug:"common",normalizedTitle:"common",charIndex:348},{level:2,title:"i18n",slug:"i18n",normalizedTitle:"i18n",charIndex:279}],headersStr:"目录结构 配置文件 ux模板 app.ux common i18n",content:'# 项目结构\n\n这个章节将基于安装环境中初始化的项目， 来讲解 Vela JS 应用项目中的各部分的作用。\n\n\n# 目录结构\n\nVela JS 应用项目由配置文件（manifest.json）、模板代码（ux文件）、 样式代码（css文件）、逻辑代码（js文件）以及资源文件（图片、音频等）组成。\n\n典型的项目目录结构如下：\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-CN.json\n|   └── en-US.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# 配置文件\n\n项目根目录中的manifest.json文件为项目的配置文件，应用信息、使用到的系统接口以及页面路由等信息需要在这个配置文件中声明。\n\n详细配置字段说明可以参考项目配置。\n\n\n# ux模板\n\n一个页面通常都由三部分组成：页面结构、样式和逻辑交互。这三部分，可以放在一个ux文件中，也可以作为独立的文件。\n\n如果放在一个ux文件中，则ux文件需要包含三标签：template、style和script。\n\n示例：\n\n<template>\n  <div class="page">\n    <text class="title">欢迎打开{{title}}</text>\n    <input class="btn" type="button" value="跳转到详情页" onclick="routeDetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // 页面数据对象\n    private: {\n      title: \'示例页面\'\n    },\n    // 按钮点击后的回调\n    routeDetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\n如果将页面结构、样式和逻辑交互分开作为独立的文件，可以使用如下目录结构：\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\n说明\n\n如果作为独立的文件，将ux/css/js文件分开后，ux文件中不能包含template标签。\n\n\n# app.ux\n\napp.ux用于定义App的生命周期、全局数据或者全局方法。\n\n详细使用方法可以参考app.ux。\n\n\n# common\n\ncommon文件夹主要用来存放公共的资源，比如图片、音频和公共样式等。\n\n\n# i18n\n\ni18n文件夹用来存放多语言配置文件。',normalizedContent:'# 项目结构\n\n这个章节将基于安装环境中初始化的项目， 来讲解 vela js 应用项目中的各部分的作用。\n\n\n# 目录结构\n\nvela js 应用项目由配置文件（manifest.json）、模板代码（ux文件）、 样式代码（css文件）、逻辑代码（js文件）以及资源文件（图片、音频等）组成。\n\n典型的项目目录结构如下：\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-cn.json\n|   └── en-us.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n\n# 配置文件\n\n项目根目录中的manifest.json文件为项目的配置文件，应用信息、使用到的系统接口以及页面路由等信息需要在这个配置文件中声明。\n\n详细配置字段说明可以参考项目配置。\n\n\n# ux模板\n\n一个页面通常都由三部分组成：页面结构、样式和逻辑交互。这三部分，可以放在一个ux文件中，也可以作为独立的文件。\n\n如果放在一个ux文件中，则ux文件需要包含三标签：template、style和script。\n\n示例：\n\n<template>\n  <div class="page">\n    <text class="title">欢迎打开{{title}}</text>\n    <input class="btn" type="button" value="跳转到详情页" onclick="routedetail">\n  </div>\n</template>\n\n<style>\n  .btn {\n    width: 400px;\n    height: 60px;\n    background-color: #09ba07;\n    color: #ffffff;\n  }\n</style>\n\n<script>\n  import router from \'@system.router\'\n\n  export default {\n    // 页面数据对象\n    private: {\n      title: \'示例页面\'\n    },\n    // 按钮点击后的回调\n    routedetail() {\n      router.push({\n        uri: \'/pages/detail\'\n      })\n    }\n  }\n<\/script>\n\n\n如果将页面结构、样式和逻辑交互分开作为独立的文件，可以使用如下目录结构：\n\n├── ...\n├── pages\n│   ├── ...\n│   └── detail\n|       ├── detail.ux\n|       ├── detail.css\n|       └── detail.js\n├── ...\n\n\n说明\n\n如果作为独立的文件，将ux/css/js文件分开后，ux文件中不能包含template标签。\n\n\n# app.ux\n\napp.ux用于定义app的生命周期、全局数据或者全局方法。\n\n详细使用方法可以参考app.ux。\n\n\n# common\n\ncommon文件夹主要用来存放公共的资源，比如图片、音频和公共样式等。\n\n\n# i18n\n\ni18n文件夹用来存放多语言配置文件。',charsets:{cjk:!0}},{title:"使用 AIoT-IDE 来开发 JS 应用",frontmatter:{},regularPath:"/zh/guide/start/use-ide.html",relativePath:"zh/guide/start/use-ide.md",key:"v-4b3682bc",path:"/zh/guide/start/use-ide.html",headers:[{level:2,title:"下载 AIoT-IDE",slug:"下载-aiot-ide",normalizedTitle:"下载 aiot-ide",charIndex:28},{level:2,title:"系统要求",slug:"系统要求",normalizedTitle:"系统要求",charIndex:179},{level:2,title:"安装 AIoT-IDE",slug:"安装-aiot-ide",normalizedTitle:"安装 aiot-ide",charIndex:275},{level:2,title:"历史版本",slug:"历史版本",normalizedTitle:"历史版本",charIndex:462},{level:2,title:"使用 AIoT-IDE",slug:"使用-aiot-ide",normalizedTitle:"使用 aiot-ide",charIndex:2},{level:3,title:"1. 初始化 Vela 项目",slug:"_1-初始化-vela-项目",normalizedTitle:"1. 初始化 vela 项目",charIndex:508},{level:3,title:"2. 项目开发",slug:"_2-项目开发",normalizedTitle:"2. 项目开发",charIndex:650},{level:3,title:"3. 开发向导指引",slug:"_3-开发向导指引",normalizedTitle:"3. 开发向导指引",charIndex:804},{level:3,title:"4. 模拟环境管理",slug:"_4-模拟环境管理",normalizedTitle:"4. 模拟环境管理",charIndex:1080},{level:3,title:"5. 运行项目",slug:"_5-运行项目",normalizedTitle:"5. 运行项目",charIndex:1501},{level:3,title:"6. 调试项目",slug:"_6-调试项目",normalizedTitle:"6. 调试项目",charIndex:1657},{level:3,title:"7. 打包项目",slug:"_7-打包项目",normalizedTitle:"7. 打包项目",charIndex:1773}],headersStr:"下载 AIoT-IDE 系统要求 安装 AIoT-IDE 历史版本 使用 AIoT-IDE 1. 初始化 Vela 项目 2. 项目开发 3. 开发向导指引 4. 模拟环境管理 5. 运行项目 6. 调试项目 7. 打包项目",content:'# 使用 AIoT-IDE 来开发 JS 应用\n\n\n# 下载 AIoT-IDE\n\n{{item.platform}}\n{{platform.platform}}\n\n本应用支持 macOS、Windows 及 Ubuntu 系统，请确保设备满足以下最低系统版本要求。\n\n----------------------------------------\n\n\n# 系统要求\n\n操作系统      最低版本要求\nmacOS     14（Sonoma）及以上\nWindows   10 或更高版本\nUbuntu    20.04 LTS 或更高版本\n\n\n# 安装 AIoT-IDE\n\nmac 版本下可能会遇到如下安装报错的问题:\n\n\n\n遇到此类问题，请按下面方法操作：\n\n1.打开 shell 窗口，输入 ：sudo xattr -r -d com.apple.quarantine,如下图示例一。\n2.敲入空格 再将应用程序拖入到窗口中，会得到下图示例二。\n3.点击回车，输入密码，再执行该程序即可。\n\n示例一\n\n示例二\n\n\n# 历史版本\n\n历史版本地址：点击查看\n密码：99E6\n\n\n# 使用 AIoT-IDE\n\n\n# 1. 初始化 Vela 项目\n\n * 通过点击左上角 「文件」 > 「新建项目」 打开项目初始化图形界面\n * 点击卡片左侧边栏的 Vela，点击 「创建」\n * 选择一个项目模版，点击 「下一步」\n * 输入项目名称和项目保存路径后，点击「创建」，等待项目创建完成\n\n\n\n\n\n\n# 2. 项目开发\n\n支持依赖安装、运行、调试、重启、模拟器管理和打包项目等功能。\n打开 Vela 快应用项目后，AIoT-IDE 会弹出顶部的 banner 操作按钮栏以及右侧的开发向导页，可根据开发向导的指引安装相关的依赖。\n依赖安装完成后，可点击 banner 栏里的操作按钮实现对应的功能。\n\n\n\n\n# 3. 开发向导指引\n\n打开 Vela 快应用项目，AIoT-IDE 右侧会弹出开发向导，用于指导开发。可以根据向导的提示完成对应的操作。\n\n\n\n按向导提示遇到 npm i 下载 npm 包失败,可按如下方法解决：\n\n\n\n * 检查当前项目根目录中是否有.npmrc 文件,如果没有则自己创建。\n   \n   \n\n * 打开.npmrc 文件,将下面内容复制到文件中\n   \n   registry="https://registry.npmmirror.com/"\n   \n   \n\n * 打开终端,在终端重新运行 npm i\n   \n   \n\n\n# 4. 模拟环境管理\n\nAIoT-IDE 支持自动初始化模拟器环境，创建、删除和列表展示模拟器，以便在运行/调试时可以选择不同的模拟器查看效果。\n\n模拟器环境说明\n\n如果缺少模拟器环境和模拟器实例，开发向导中会给出需相应的提示\n\n * 点击下方的「检查模拟器环境，创建模拟器实例」按钮，在弹出的模态窗口中选择 「自动安装」，插件会自动帮助安装模拟器相关的依赖\n * 在模拟器列表页，点击左上角的「创建」按钮去生成一个模拟器实例\n\n\n\n模拟器操作说明\n\n * 查看已创建的模拟器\n   点击 banner 栏的「模拟器」按钮，进入模拟器列表页，这里可以看到已经创建的模拟器的详细信息\n\n\n\n * 创建一个新的模拟器\n   * 点击设备管理左上角的新建按钮，进入模拟器表单页\n   * 在模拟器表单页，填写要创建的模拟器信息，点击「创建」按钮，插件首先会下载 Vela 镜像并完成创建\n\n推荐使用 Vela 正式版（4.0）版本的镜像\n\n\n\n\n# 5. 运行项目\n\n运行时首先需要选择要在哪个模拟器上预览效果，选择后则会将当前打开的快应用在模拟器中启动并显示项目 UI。\n\n\n\n插件会过滤出$HOME/.android/avd这个目录下以“Vela”开头的所有模拟器，如果没有找到，AIoT-IDE 右下角会弹出提示，可点击「模拟器」按钮去进行创建。\n\n\n# 6. 调试项目\n\n跟运行一样，调试时同样需要选择模拟器。\n快应用启动成功后，AIoT-IDE 底部会弹出调试面板，点击调试面板的 Tab 栏即可进行对应的操作，比如查看 DOM 树、查看 Console 以及断点调试。\n\n\n\n\n# 7. 打包项目\n\n开发模式打包\n开发完成后，可以点击 banner 栏的「打包」按钮来打包应用，默认会生成两个新的目录：dist、build；\n其中 dist 文件夹中会生成一个.debug.rpk文件，build 中会生成编译后的 js 文件。\n\n生产模式打包\n\n * 打包前需要配置 signature private key ，生成签名文件\n   \n   * 自动生成：点击 banner 栏的「发布」按钮 > 填写相关信息 > 点击「完成」按钮，插件会在项目的 sign 目录下生成private.pem和certificate.pem两个文件。签名文件生成成功后，点击顶部操作栏栏的「发布」按钮，打包生成的产物跟开发模式打包类似，但是 dist 文件夹中的 rpk 文件是 release 后缀。\n   \n   \n   \n   * 自动生成需要系统环境安装了 openssl，windows 系统可能遇到 openssl 缺失的问题，下面是具体解决方法。\n     \n     * 安装 openssl 并配置系统环境变量，并重启电脑。重启成功后，在 AIoT-IDE 中打开终端，输入 openssl，如下图所示，则是安装成功。\n     \n     \n   \n   * 手动生成：前提同样是系统环境安装了 openssl,然后打开终端运行以下命令生成签名文件，项目下新建 sign 目录，将生成的文件 private.pem 和 certificate.pem 放至该目录\n     openssl req -newkey rsa:2048 -nodes -keyout private.pem -x509 -days 3650 -out certificate.pem',normalizedContent:'# 使用 aiot-ide 来开发 js 应用\n\n\n# 下载 aiot-ide\n\n{{item.platform}}\n{{platform.platform}}\n\n本应用支持 macos、windows 及 ubuntu 系统，请确保设备满足以下最低系统版本要求。\n\n----------------------------------------\n\n\n# 系统要求\n\n操作系统      最低版本要求\nmacos     14（sonoma）及以上\nwindows   10 或更高版本\nubuntu    20.04 lts 或更高版本\n\n\n# 安装 aiot-ide\n\nmac 版本下可能会遇到如下安装报错的问题:\n\n\n\n遇到此类问题，请按下面方法操作：\n\n1.打开 shell 窗口，输入 ：sudo xattr -r -d com.apple.quarantine,如下图示例一。\n2.敲入空格 再将应用程序拖入到窗口中，会得到下图示例二。\n3.点击回车，输入密码，再执行该程序即可。\n\n示例一\n\n示例二\n\n\n# 历史版本\n\n历史版本地址：点击查看\n密码：99e6\n\n\n# 使用 aiot-ide\n\n\n# 1. 初始化 vela 项目\n\n * 通过点击左上角 「文件」 > 「新建项目」 打开项目初始化图形界面\n * 点击卡片左侧边栏的 vela，点击 「创建」\n * 选择一个项目模版，点击 「下一步」\n * 输入项目名称和项目保存路径后，点击「创建」，等待项目创建完成\n\n\n\n\n\n\n# 2. 项目开发\n\n支持依赖安装、运行、调试、重启、模拟器管理和打包项目等功能。\n打开 vela 快应用项目后，aiot-ide 会弹出顶部的 banner 操作按钮栏以及右侧的开发向导页，可根据开发向导的指引安装相关的依赖。\n依赖安装完成后，可点击 banner 栏里的操作按钮实现对应的功能。\n\n\n\n\n# 3. 开发向导指引\n\n打开 vela 快应用项目，aiot-ide 右侧会弹出开发向导，用于指导开发。可以根据向导的提示完成对应的操作。\n\n\n\n按向导提示遇到 npm i 下载 npm 包失败,可按如下方法解决：\n\n\n\n * 检查当前项目根目录中是否有.npmrc 文件,如果没有则自己创建。\n   \n   \n\n * 打开.npmrc 文件,将下面内容复制到文件中\n   \n   registry="https://registry.npmmirror.com/"\n   \n   \n\n * 打开终端,在终端重新运行 npm i\n   \n   \n\n\n# 4. 模拟环境管理\n\naiot-ide 支持自动初始化模拟器环境，创建、删除和列表展示模拟器，以便在运行/调试时可以选择不同的模拟器查看效果。\n\n模拟器环境说明\n\n如果缺少模拟器环境和模拟器实例，开发向导中会给出需相应的提示\n\n * 点击下方的「检查模拟器环境，创建模拟器实例」按钮，在弹出的模态窗口中选择 「自动安装」，插件会自动帮助安装模拟器相关的依赖\n * 在模拟器列表页，点击左上角的「创建」按钮去生成一个模拟器实例\n\n\n\n模拟器操作说明\n\n * 查看已创建的模拟器\n   点击 banner 栏的「模拟器」按钮，进入模拟器列表页，这里可以看到已经创建的模拟器的详细信息\n\n\n\n * 创建一个新的模拟器\n   * 点击设备管理左上角的新建按钮，进入模拟器表单页\n   * 在模拟器表单页，填写要创建的模拟器信息，点击「创建」按钮，插件首先会下载 vela 镜像并完成创建\n\n推荐使用 vela 正式版（4.0）版本的镜像\n\n\n\n\n# 5. 运行项目\n\n运行时首先需要选择要在哪个模拟器上预览效果，选择后则会将当前打开的快应用在模拟器中启动并显示项目 ui。\n\n\n\n插件会过滤出$home/.android/avd这个目录下以“vela”开头的所有模拟器，如果没有找到，aiot-ide 右下角会弹出提示，可点击「模拟器」按钮去进行创建。\n\n\n# 6. 调试项目\n\n跟运行一样，调试时同样需要选择模拟器。\n快应用启动成功后，aiot-ide 底部会弹出调试面板，点击调试面板的 tab 栏即可进行对应的操作，比如查看 dom 树、查看 console 以及断点调试。\n\n\n\n\n# 7. 打包项目\n\n开发模式打包\n开发完成后，可以点击 banner 栏的「打包」按钮来打包应用，默认会生成两个新的目录：dist、build；\n其中 dist 文件夹中会生成一个.debug.rpk文件，build 中会生成编译后的 js 文件。\n\n生产模式打包\n\n * 打包前需要配置 signature private key ，生成签名文件\n   \n   * 自动生成：点击 banner 栏的「发布」按钮 > 填写相关信息 > 点击「完成」按钮，插件会在项目的 sign 目录下生成private.pem和certificate.pem两个文件。签名文件生成成功后，点击顶部操作栏栏的「发布」按钮，打包生成的产物跟开发模式打包类似，但是 dist 文件夹中的 rpk 文件是 release 后缀。\n   \n   \n   \n   * 自动生成需要系统环境安装了 openssl，windows 系统可能遇到 openssl 缺失的问题，下面是具体解决方法。\n     \n     * 安装 openssl 并配置系统环境变量，并重启电脑。重启成功后，在 aiot-ide 中打开终端，输入 openssl，如下图所示，则是安装成功。\n     \n     \n   \n   * 手动生成：前提同样是系统环境安装了 openssl,然后打开终端运行以下命令生成签名文件，项目下新建 sign 目录，将生成的文件 private.pem 和 certificate.pem 放至该目录\n     openssl req -newkey rsa:2048 -nodes -keyout private.pem -x509 -days 3650 -out certificate.pem',charsets:{cjk:!0}},{title:"编译参数",frontmatter:{},regularPath:"/zh/guide/start/toolkit-params.html",relativePath:"zh/guide/start/toolkit-params.md",key:"v-9992a9d4",path:"/zh/guide/start/toolkit-params.html",headers:[{level:2,title:"如何设置编译参数",slug:"如何设置编译参数",normalizedTitle:"如何设置编译参数",charIndex:80},{level:2,title:"查看当前工具支持的全部编译参数",slug:"查看当前工具支持的全部编译参数",normalizedTitle:"查看当前工具支持的全部编译参数",charIndex:294},{level:2,title:"常见编译参数",slug:"常见编译参数",normalizedTitle:"常见编译参数",charIndex:335}],headersStr:"如何设置编译参数 查看当前工具支持的全部编译参数 常见编译参数",content:'# 编译参数\n\n编译工具提供了多种编译能力，开发者可以根据项目需求进行设置。请注意，编译参数仅在 build、server、release 命令中可用\n\n\n# 如何设置编译参数\n\n通常有两种方式设置编译参数，以抽取单独的 source-map 文件为例：\n\n * 在命令行携带编译参数\n\naiot build --devtool=source-map\n\n\n * 在项目根目录新建配置文件 quickapp.config.js，并配置 cli 属性；\n\nmodule.exports = {\n  cli: {\n    devtool: "source-map",\n  },\n};\n\n\n\n# 查看当前工具支持的全部编译参数\n\n npx aiot build -h\n\n\n\n# 常见编译参数\n\n参数名                         值类型       描述                                            默认值\n--devtool                   string    sourcemap 的输出形式， 参数值及含义可以参考 webpack/devtool   none\n                                      示例：aiot server --devtool=source-map\n--enable-jsc                boolean   是否将 js 文件将转换为 jsc 文件，以提高运行性能                  false\n                                      示例：aiot server --enable-jsc\n--enable-protobuf           boolean   是否启用 protobuf 的二进制打包，以提高运行性能                  false\n                                      示例：aiot server --enable-protobuf\n--enable-custom-component   boolean   是否支持自定义组件                                     false\n                                      示例：aiot server --enable-custom-component',normalizedContent:'# 编译参数\n\n编译工具提供了多种编译能力，开发者可以根据项目需求进行设置。请注意，编译参数仅在 build、server、release 命令中可用\n\n\n# 如何设置编译参数\n\n通常有两种方式设置编译参数，以抽取单独的 source-map 文件为例：\n\n * 在命令行携带编译参数\n\naiot build --devtool=source-map\n\n\n * 在项目根目录新建配置文件 quickapp.config.js，并配置 cli 属性；\n\nmodule.exports = {\n  cli: {\n    devtool: "source-map",\n  },\n};\n\n\n\n# 查看当前工具支持的全部编译参数\n\n npx aiot build -h\n\n\n\n# 常见编译参数\n\n参数名                         值类型       描述                                            默认值\n--devtool                   string    sourcemap 的输出形式， 参数值及含义可以参考 webpack/devtool   none\n                                      示例：aiot server --devtool=source-map\n--enable-jsc                boolean   是否将 js 文件将转换为 jsc 文件，以提高运行性能                  false\n                                      示例：aiot server --enable-jsc\n--enable-protobuf           boolean   是否启用 protobuf 的二进制打包，以提高运行性能                  false\n                                      示例：aiot server --enable-protobuf\n--enable-custom-component   boolean   是否支持自定义组件                                     false\n                                      示例：aiot server --enable-custom-component',charsets:{cjk:!0}},{title:"编写页面UI",frontmatter:{},regularPath:"/zh/guide/start/user-interface.html",relativePath:"zh/guide/start/user-interface.md",key:"v-b8fcda54",path:"/zh/guide/start/user-interface.html",headers:[{level:2,title:"功能需求",slug:"功能需求",normalizedTitle:"功能需求",charIndex:436},{level:2,title:"准备工作",slug:"准备工作",normalizedTitle:"准备工作",charIndex:554},{level:2,title:"页面结构",slug:"页面结构",normalizedTitle:"页面结构",charIndex:193},{level:3,title:"实时天气",slug:"实时天气",normalizedTitle:"实时天气",charIndex:464},{level:3,title:"未来3天天气",slug:"未来3天天气",normalizedTitle:"未来3天天气",charIndex:469},{level:2,title:"页面样式",slug:"页面样式",normalizedTitle:"页面样式",charIndex:3350},{level:3,title:"公共样式",slug:"公共样式",normalizedTitle:"公共样式",charIndex:3628},{level:3,title:"page",slug:"page",normalizedTitle:"page",charIndex:1128},{level:3,title:"头部信息",slug:"头部信息",normalizedTitle:"头部信息",charIndex:1433},{level:3,title:"实时天气",slug:"实时天气-2",normalizedTitle:"实时天气",charIndex:464},{level:3,title:"未来3天天气",slug:"未来3天天气-2",normalizedTitle:"未来3天天气",charIndex:469},{level:3,title:"底部信息",slug:"底部信息",normalizedTitle:"底部信息",charIndex:7444},{level:2,title:"页面效果",slug:"页面效果",normalizedTitle:"页面效果",charIndex:7680},{level:2,title:"页面数据",slug:"页面数据",normalizedTitle:"页面数据",charIndex:7718},{level:2,title:"列表渲染",slug:"列表渲染",normalizedTitle:"列表渲染",charIndex:9701},{level:3,title:"条件渲染",slug:"条件渲染",normalizedTitle:"条件渲染",charIndex:10543}],headersStr:"功能需求 准备工作 页面结构 实时天气 未来3天天气 页面样式 公共样式 page 头部信息 实时天气 未来3天天气 底部信息 页面效果 页面数据 列表渲染 条件渲染",content:'# 编写页面UI\n\n在上一节项目结构中，介绍了 Vela JS 应用项目中各文件、目录的作用，对项目结构有了一定的了解之后，接下来我们会实现一个简单的天气预报App。\n\n这个章节将实现这个App的页面UI，主要内容为：页面的基本结构、样式、数据结构定义以及数据渲染。\n\n根据UI设计稿还原样式是一个比较细致并且耗时的工作，为了提高工作效率，一般情况下，我们推荐先整体构思页面的实现方式（页面结构、样式和交互等），然后编写页面结构、然后统一添加样式，最后添加数据渲染和交互。\n\n这个使用指南中，为了方便展示 Vela JS 应用中页面结构，样式和交互的开发，采用了上述的开发流程。开发者在实际开发中，也可以根据自己的开发习惯，选择适合自己的工作流。\n\nTIP\n\n这部分有比较多的代码片段，如果您已经对HTML/CSS/JavaScript很熟悉，您可以选择跳过此部分内容。 但我们还是建议您阅读本章的内容，以了解 Vela JS 应用开发和传统前端开发的一些区别。\n\n\n# 功能需求\n\n我们将要实现的天气预报App由两个页面组成：实时天气和未来3天天气。实时天气界面展示当前天气情况，主要包括天气、温度、湿度和能见度等信息。未来3天天气页面用于展示未来三天的天气情况。\n\n最终要实现的效果图如下：\n\n\n\n\n# 准备工作\n\n这个App使用和风天气API获取天气数据，图标使用和风天气图标。\n\n该使用指南中的天气App仅用于演示 Vela JS 应用开发技术，如需在实际项目中使用相关接口和资源，请到和风天气开发平台注册并开通接口后使用。详细信息可在官网查看：\n\n * 和风天气开发平台: https://dev.qweather.com/\n * 和风天气图标: https://icons.qweather.com/\n * 图标下载地址: https://github.com/qwd/WeatherIcon\n\n\n# 页面结构\n\n在项目结构章节中，我们介绍了一个页面(ux文件)包含三部分：template、style和script 。接下来分别编写这两个页面的模板（template）代码。\n\n跟HTML非常类似，Vela的页面模板也是由标签和属性构成，并且语法也大部分与HTML保持一致。不一样的是Vela有自己的一系列内置组件，跟HTML支持的不完全相同。\n\n接下来的代码中，我们使用到了div、text和image组件，关于组件详细的使用方法，可以参考Vela官方文档 - 组件。\n\n\n# 实时天气\n\n实时天气页面，从整体上可以划分为上中下三部分： header、body和footer，代码如下。\n\n<template>\n  <div class="page">\n    \x3c!-- 头部城市信息 --\x3e\n    <div class="header"></div>\n    <div class="body">\n      \x3c!-- 主要天气信息 --\x3e\n      <div class="info"></div>\n      \x3c!-- 体感温度等其他信息 --\x3e\n      <div class="more-info"></div>\n    </div>\n    \x3c!-- 底部更新时间 --\x3e\n    <div class="footer"></div>\n  </div>\n</template>\n\n\n温馨提示\n\ntemplate只能有一个根节点。\n\n头部信息，包含城市、省份和国家信息，结构相对简单，代码如下：\n\n\x3c!-- 头部城市信息 --\x3e\n<div class="header">\n  <text class="city">武汉市</text>\n  <text class="province">湖北省/中国</text>\n</div>\n\n\n温馨提示\n\n文本必须放在text组件中，否则文本将无法展示在界面中。\n\n天气信息部分，相比头部要稍微复杂一点，总体可以分为左右两列，右侧部分又分为上下两行。代码如下：\n\n\x3c!-- 主要天气信息 --\x3e\n<div class="info">\n  <image class="icon" src="/common/icons/101.png"></image>\n  <div class="column center">\n    <text class="temp">6°</text>\n    <text class="weather">晴转多云</text>\n  </div>\n</div>\n\n\n接下来实现体感温度等其他信息模块，整体上可以分为三列，每一列又分成两行，代码如下：\n\n\x3c!-- 体感温度等其他信息 --\x3e\n<div class="more-info row">\n  <div class="item column center">\n    <text class="value">10°</text>\n    <text class="label">体感温度</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">67</text><text class="sub">%</text></div>\n    <text class="label">湿度</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">5</text><text class="sub">km</text></div>\n    <text class="label">能见度</text>\n  </div>\n</div>\n</div>\n\n\n最后是底部更新时间模块，这个模块结构相对比较简单，代码如下：\n\n\x3c!-- 底部更新时间 --\x3e\n<div class="footer center">\n  <text class="update-time">数据更新于12-20 09:15</text>\n</div>\n\n\n\n# 未来3天天气\n\n这个页面跟实时天气页面整体结构相同，也分为上中下三部分，并且header以及footer内容一致，这里不再赘述。\n\n接下来主要看中间部分的实现，主要包括未来3天天气概况以及天气列表。\n\n天气概况分为上下两行，代码如下：\n\n\x3c!-- 天气概况 --\x3e\n<div class="info">\n  <text class="title">未来3天预报</text>\n  <text class="summary">最高温8° 最低温-6°</text>\n</div>\n\n\n天气列表相对复杂一点，首先整体可以分为三列，每一列又可分成三行，代码如下：\n\n\x3c!-- 未来3天天气 --\x3e\n<div class="list">\n  <div class="item">\n    <text class="date">周日</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item">\n    <text class="date">周一</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item">\n    <text class="date">周二</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\n\n# 页面样式\n\nVela支持常用的CSS特性，也进行了少量的扩充以及修改，默认支持对不同尺寸屏幕的适配。详细的属性支持情况可以在属性列表中查询。\n\nVela JS 应用采用flex布局，可以方便实现常用的布局样式，关于flex布局的技术细节，可以参考MDN文档。\n\n目前只支持类选择器、ID选择器、分组选择器(,)和标签选择器，不支持后代选择器、属性选择器、通用选择器(*)、兄弟选择器(+)、直接父子选择器(>)、伪类和继承。\n\n目前为止，我们已经完成了页面结构的代码编写，但是目前为止，还未涉及任何样式的设置。接下来我们将分别实现各个模块的样式。\n\n\n# 公共样式\n\n编写样式代码之前，可以先提取出一些基础的公共样式，比如排列方式，颜色和对齐方式等。\n\n在我们这个项目中，主要使用到了水平排列和垂直排列，居中等。 颜色方面，主要是白色，我们可以将text的颜色默认设置为白色。\n\n提取出的基础样式为：\n\n/* 公共样式 */\ntext {\n  color: #ffffff;\n}\n\n.column {\n  flex-direction: column;\n}\n\n.row {\n  flex-direction: row;\n}\n\n.center {\n  align-items: center;\n  justify-content: center;\n}\n\n\n\n# page\n\n为了解决屏幕适配问题，所有与大小相关的样式（例如width、font-size）均以基准宽度（默认480px）为基础，根据实际屏幕宽度进行缩放，例如width:100px在960px宽度屏幕上，实际上为200px。\n\n我们设计稿按照480px宽度进行设计，所以设计稿中的尺寸，可以直接在样式中使用。比如下图中，整体宽度为480，体感温度等信息模块的尺寸为335*100，那么CSS代码为：\n\n.info {\n  width: 335px;\n  height: 100px; \n}\n\n\n\n\n对于整体页面，我们先将页面背景设置为黑色，形状设置为圆形，并设置页面宽度。\n\n.page {\n  padding: 40px;\n  background-color: #000000;\n  width: 480px;\n  border-radius: 240px;\n}\n\n\n说明\n\n如果设计稿基准宽度不是480，可以在manifest.json文件中通过config.designWidth字段配置：\n\n{\n  // ...\n  "config": {\n    "designWidth": 360\n  }\n}\n\n\n\n# 头部信息\n\n头部信息竖向排列，并且居中，可以使用前面抽取的公共样式：column和center。然后给文本分别添加样式，控制字体大小和颜色。\n\n修改后的模板代码如下：\n\n\x3c!-- 头部城市信息 --\x3e\n<div class="header column center">\n  <text class="city">武汉市</text>\n  <text class="province">湖北省/中国</text>\n</div>\n\n\nCSS代码如下：\n\n/* 头部样式 */\n.city {\n  font-size: 40px;\n}\n\n.province {\n  font-size: 18px;\n  color: #757575;\n}\n\n\n实际运行结果：\n\n\n\n# 实时天气\n\n跟头部信息类似，首先添加基础样式column、row和center来实现基本的布局，然后对各个文本组件，针对性的编写CSS代码来实现文字颜色，尺寸等样式。\n\n添加完成后的模板代码如下：\n\n<div class="body column center">\n  \x3c!-- 主要天气信息 --\x3e\n  <div class="info">\n    <image class="icon" src="/common/icons/101.png"></image>\n    <div class="column center">\n      <text class="temp">6°</text>\n      <text class="weather">晴转多云</text>\n    </div>\n  </div>\n  \x3c!-- 体感温度等其他信息 --\x3e\n  <div class="more-info row">\n    <div class="item column center">\n      <text class="value">10°</text>\n      <text class="label">体感温度</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">67</text><text class="sub">%</text></div>\n      <text class="label">湿度</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">5</text><text class="sub">km</text></div>\n      <text class="label">能见度</text>\n    </div>\n  </div>\n</div>\n\n\n体感温度等信息模块，首先水平方向排列(flex-direction: row)，然后各个item设置flex: 1，这样就实现了各个item宽度相等的效果。\n\n具体到每个item里面，只需要分别设置各个文本字段的颜色和大小即可。\n\nCSS代码如下：\n\n/* 天气数据样式 */\n.body {\n  flex: 1;\n}\n\n.temp {\n  font-size: 70px;\n}\n\n.icon {\n  width: 170px;\n  height: 170px;\n  margin-right: 20px;\n}\n\n.weather {\n  font-size: 24px;\n}\n\n/* 更多信息样式 */\n.more-info {\n  width: 335px;\n  height: 100px;\n  background-color: rgba(255, 255, 255, 0.21);\n  border-radius: 15px;\n}\n\n.item {\n  flex: 1;\n}\n\n.value {\n  font-size: 30px;\n}\n\n.sub {\n  font-size: 14px;\n  margin-top: 10px;\n}\n\n.label {\n  color: #757575;\n  margin-top: 5px;\n}\n\n\n实际运行结果：\n\n\n\n# 未来3天天气\n\n天气概况信息模块样式比较简单，竖向排列即可。\n\n跟体感温度等信息模块类似，未来三天天气列表也使用水平方向排列。不同的地方在于，各个item有背景颜色并且之间有间距，所以给各个item设置了固定的尺寸，然后根据剩下的空间 给各个item之间分配间距(justify-content: space-between)。\n\n修改完成后的模板代码为：\n\n\x3c!-- 未来3天天气 --\x3e\n<div class="list row">\n  <div class="item column center">\n    <text class="date">周日</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">周一</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">周二</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\nCSS代码为：\n\n/* 天气数据样式 */\n.body {\n  flex: 1;\n}\n\n.info {\n  margin-bottom: 20px;\n}\n\n.title {\n  font-size: 30px;\n}\n\n.summary {\n  font-size: 24px;\n  color: #757575;\n}\n\n/* 未来3天天气 */\n.list {\n  width: 380px;\n  justify-content: space-between;\n}\n\n.item {\n  width: 120px;\n  height: 175px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 15px;\n}\n\n.date {\n  font-size: 28px;\n}\n\n.icon {\n  width: 90px;\n  height: 90px;\n}\n\n.temp {\n  font-size: 24px;\n}\n\n\n实际运行结果：\n\n\n\n# 底部信息\n\n底部信息最终的模板代码如下：\n\n\x3c!-- 底部更新时间 --\x3e\n<div class="footer center">\n  <text class="update-time">数据更新于 12-20 09:15</text>\n</div>\n\n\nCSS代码如下：\n\n/* 底部样式 */\n.footer {\n  margin-top: 20px;    \n}\n\n.update-time {\n  color: #757575;\n}\n\n\n实际运行结果：\n\n\n\n# 页面效果\n\n完成页面结构和样式后，模拟器中实际运行的结果如下：\n\n\n\n\n# 页面数据\n\n我们已经实现了页面数据的渲染，但是目前所有的数据都是直接写到模板代码中，不能在程序中动态修改。\n\n如果需要在程序中动态修改界面上展示的数据，需要将数据存储到页面数据对象中，然后使用双大括号语法来引用数据，比如{{ name }}，详细使用方法可以参考模板语法。\n\n数据定义，需要通过JavaScript脚本来实现。跟HTML一样，JavaScript代码需要放在script标签中：\n\n<script>\n  export default {\n    private: {\n      city: \'武汉市\',\n      province: \'湖北省\',\n      country: \'中国\',\n      weather: {\n        // 数据观测时间\n        obsTime: "12-21 09:05",\n        // 温度\n        temp: "13",\n        // 体感温度\n        feelsLike: "10",\n        // 天气icon图标编号\n        icon: "101",\n        // 天气描述文本\n        text: "多云",\n        // 相对湿度\n        humidity: "72",\n        // 能见度，单位：公里\n        vis: "16"\n      }\n    }\n  }\n<\/script>\n\n\n定义好数据之后，替换之前的模板代码，替换后为：\n\n<template>\n  <div class="page column">\n    \x3c!-- 头部城市信息 --\x3e\n    <div class="header column center">\n      <text class="city">{{city}}</text>\n      <text class="province">{{province}}/{{country}}</text>\n    </div>\n    <div class="body column center">\n      \x3c!-- 主要天气信息 --\x3e\n      <div class="info">\n        <image class="icon" src="/common/icons/{{weather.icon}}.png"></image>\n        <div class="column center">\n          <text class="temp">{{weather.temp}}°</text>\n          <text class="weather">{{weather.text}}</text>\n        </div>\n      </div>\n      \x3c!-- 体感温度等其他信息 --\x3e\n      <div class="more-info row">\n        <div class="item column center">\n          <text class="value">{{weather.feelsLike}}°</text>\n          <text class="label">体感温度</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.humidity}}</text><text class="sub">%</text></div>\n          <text class="label">湿度</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.vis}}</text><text class="sub">km</text></div>\n          <text class="label">能见度</text>\n        </div>\n      </div>\n    </div>\n    \x3c!-- 底部更新时间 --\x3e\n    <div class="footer center">\n      <text class="update-time">数据更新于 {{weather.obsTime}}</text>\n    </div>\n  </div>\n</template>\n\n\n\n# 列表渲染\n\n在未来3天天气预报页面中，使用到了数组存储未来3天的天气数据。可以使用for指令来渲染（详细的for指令用法，请参考列表渲染）。\n\n数据定义为：\n\n{\n  list: [\n    {\n      "fxDate": "周日",\n      "tempMax": "12",\n      "tempMin": "-1",\n      "iconDay": "101",\n      "textDay": "多云",\n    },\n    {\n      "fxDate": "周一",\n      "tempMax": "13",\n      "tempMin": "0",\n      "iconDay": "100",\n      "textDay": "晴"\n    },\n    {\n      "fxDate": "周二",\n      "tempMax": "13",\n      "tempMin": "0",\n      "iconDay": "302",\n      "textDay": "晴",\n      "iconNight": "150",\n      "textNight": "晴"\n    }\n  ]\n}\n\n\n模板代码：\n\n\x3c!-- 未来3天天气 --\x3e\n<div class="list row">\n  <div class="item column center" for="{{list}}">\n    <text class="date">{{$item.fxDate}}</text>\n    <image class="icon" src="/common/icons/{{$item.iconDay}}.png"></image>\n    <text class="temp">{{$item.tempMin}}°~{{$item.tempMax}}°</text>\n  </div>\n</div>\n\n\n运行结果：\n\n\n\n# 条件渲染\n\n实际项目中经常会需要使用到条件判断，根据不同的条件渲染不同的UI。要使用条件渲染，请参考条件指令。',normalizedContent:'# 编写页面ui\n\n在上一节项目结构中，介绍了 vela js 应用项目中各文件、目录的作用，对项目结构有了一定的了解之后，接下来我们会实现一个简单的天气预报app。\n\n这个章节将实现这个app的页面ui，主要内容为：页面的基本结构、样式、数据结构定义以及数据渲染。\n\n根据ui设计稿还原样式是一个比较细致并且耗时的工作，为了提高工作效率，一般情况下，我们推荐先整体构思页面的实现方式（页面结构、样式和交互等），然后编写页面结构、然后统一添加样式，最后添加数据渲染和交互。\n\n这个使用指南中，为了方便展示 vela js 应用中页面结构，样式和交互的开发，采用了上述的开发流程。开发者在实际开发中，也可以根据自己的开发习惯，选择适合自己的工作流。\n\ntip\n\n这部分有比较多的代码片段，如果您已经对html/css/javascript很熟悉，您可以选择跳过此部分内容。 但我们还是建议您阅读本章的内容，以了解 vela js 应用开发和传统前端开发的一些区别。\n\n\n# 功能需求\n\n我们将要实现的天气预报app由两个页面组成：实时天气和未来3天天气。实时天气界面展示当前天气情况，主要包括天气、温度、湿度和能见度等信息。未来3天天气页面用于展示未来三天的天气情况。\n\n最终要实现的效果图如下：\n\n\n\n\n# 准备工作\n\n这个app使用和风天气api获取天气数据，图标使用和风天气图标。\n\n该使用指南中的天气app仅用于演示 vela js 应用开发技术，如需在实际项目中使用相关接口和资源，请到和风天气开发平台注册并开通接口后使用。详细信息可在官网查看：\n\n * 和风天气开发平台: https://dev.qweather.com/\n * 和风天气图标: https://icons.qweather.com/\n * 图标下载地址: https://github.com/qwd/weathericon\n\n\n# 页面结构\n\n在项目结构章节中，我们介绍了一个页面(ux文件)包含三部分：template、style和script 。接下来分别编写这两个页面的模板（template）代码。\n\n跟html非常类似，vela的页面模板也是由标签和属性构成，并且语法也大部分与html保持一致。不一样的是vela有自己的一系列内置组件，跟html支持的不完全相同。\n\n接下来的代码中，我们使用到了div、text和image组件，关于组件详细的使用方法，可以参考vela官方文档 - 组件。\n\n\n# 实时天气\n\n实时天气页面，从整体上可以划分为上中下三部分： header、body和footer，代码如下。\n\n<template>\n  <div class="page">\n    \x3c!-- 头部城市信息 --\x3e\n    <div class="header"></div>\n    <div class="body">\n      \x3c!-- 主要天气信息 --\x3e\n      <div class="info"></div>\n      \x3c!-- 体感温度等其他信息 --\x3e\n      <div class="more-info"></div>\n    </div>\n    \x3c!-- 底部更新时间 --\x3e\n    <div class="footer"></div>\n  </div>\n</template>\n\n\n温馨提示\n\ntemplate只能有一个根节点。\n\n头部信息，包含城市、省份和国家信息，结构相对简单，代码如下：\n\n\x3c!-- 头部城市信息 --\x3e\n<div class="header">\n  <text class="city">武汉市</text>\n  <text class="province">湖北省/中国</text>\n</div>\n\n\n温馨提示\n\n文本必须放在text组件中，否则文本将无法展示在界面中。\n\n天气信息部分，相比头部要稍微复杂一点，总体可以分为左右两列，右侧部分又分为上下两行。代码如下：\n\n\x3c!-- 主要天气信息 --\x3e\n<div class="info">\n  <image class="icon" src="/common/icons/101.png"></image>\n  <div class="column center">\n    <text class="temp">6°</text>\n    <text class="weather">晴转多云</text>\n  </div>\n</div>\n\n\n接下来实现体感温度等其他信息模块，整体上可以分为三列，每一列又分成两行，代码如下：\n\n\x3c!-- 体感温度等其他信息 --\x3e\n<div class="more-info row">\n  <div class="item column center">\n    <text class="value">10°</text>\n    <text class="label">体感温度</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">67</text><text class="sub">%</text></div>\n    <text class="label">湿度</text>\n  </div>\n  <div class="item column center">\n    <div><text class="value">5</text><text class="sub">km</text></div>\n    <text class="label">能见度</text>\n  </div>\n</div>\n</div>\n\n\n最后是底部更新时间模块，这个模块结构相对比较简单，代码如下：\n\n\x3c!-- 底部更新时间 --\x3e\n<div class="footer center">\n  <text class="update-time">数据更新于12-20 09:15</text>\n</div>\n\n\n\n# 未来3天天气\n\n这个页面跟实时天气页面整体结构相同，也分为上中下三部分，并且header以及footer内容一致，这里不再赘述。\n\n接下来主要看中间部分的实现，主要包括未来3天天气概况以及天气列表。\n\n天气概况分为上下两行，代码如下：\n\n\x3c!-- 天气概况 --\x3e\n<div class="info">\n  <text class="title">未来3天预报</text>\n  <text class="summary">最高温8° 最低温-6°</text>\n</div>\n\n\n天气列表相对复杂一点，首先整体可以分为三列，每一列又可分成三行，代码如下：\n\n\x3c!-- 未来3天天气 --\x3e\n<div class="list">\n  <div class="item">\n    <text class="date">周日</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item">\n    <text class="date">周一</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item">\n    <text class="date">周二</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\n\n# 页面样式\n\nvela支持常用的css特性，也进行了少量的扩充以及修改，默认支持对不同尺寸屏幕的适配。详细的属性支持情况可以在属性列表中查询。\n\nvela js 应用采用flex布局，可以方便实现常用的布局样式，关于flex布局的技术细节，可以参考mdn文档。\n\n目前只支持类选择器、id选择器、分组选择器(,)和标签选择器，不支持后代选择器、属性选择器、通用选择器(*)、兄弟选择器(+)、直接父子选择器(>)、伪类和继承。\n\n目前为止，我们已经完成了页面结构的代码编写，但是目前为止，还未涉及任何样式的设置。接下来我们将分别实现各个模块的样式。\n\n\n# 公共样式\n\n编写样式代码之前，可以先提取出一些基础的公共样式，比如排列方式，颜色和对齐方式等。\n\n在我们这个项目中，主要使用到了水平排列和垂直排列，居中等。 颜色方面，主要是白色，我们可以将text的颜色默认设置为白色。\n\n提取出的基础样式为：\n\n/* 公共样式 */\ntext {\n  color: #ffffff;\n}\n\n.column {\n  flex-direction: column;\n}\n\n.row {\n  flex-direction: row;\n}\n\n.center {\n  align-items: center;\n  justify-content: center;\n}\n\n\n\n# page\n\n为了解决屏幕适配问题，所有与大小相关的样式（例如width、font-size）均以基准宽度（默认480px）为基础，根据实际屏幕宽度进行缩放，例如width:100px在960px宽度屏幕上，实际上为200px。\n\n我们设计稿按照480px宽度进行设计，所以设计稿中的尺寸，可以直接在样式中使用。比如下图中，整体宽度为480，体感温度等信息模块的尺寸为335*100，那么css代码为：\n\n.info {\n  width: 335px;\n  height: 100px; \n}\n\n\n\n\n对于整体页面，我们先将页面背景设置为黑色，形状设置为圆形，并设置页面宽度。\n\n.page {\n  padding: 40px;\n  background-color: #000000;\n  width: 480px;\n  border-radius: 240px;\n}\n\n\n说明\n\n如果设计稿基准宽度不是480，可以在manifest.json文件中通过config.designwidth字段配置：\n\n{\n  // ...\n  "config": {\n    "designwidth": 360\n  }\n}\n\n\n\n# 头部信息\n\n头部信息竖向排列，并且居中，可以使用前面抽取的公共样式：column和center。然后给文本分别添加样式，控制字体大小和颜色。\n\n修改后的模板代码如下：\n\n\x3c!-- 头部城市信息 --\x3e\n<div class="header column center">\n  <text class="city">武汉市</text>\n  <text class="province">湖北省/中国</text>\n</div>\n\n\ncss代码如下：\n\n/* 头部样式 */\n.city {\n  font-size: 40px;\n}\n\n.province {\n  font-size: 18px;\n  color: #757575;\n}\n\n\n实际运行结果：\n\n\n\n# 实时天气\n\n跟头部信息类似，首先添加基础样式column、row和center来实现基本的布局，然后对各个文本组件，针对性的编写css代码来实现文字颜色，尺寸等样式。\n\n添加完成后的模板代码如下：\n\n<div class="body column center">\n  \x3c!-- 主要天气信息 --\x3e\n  <div class="info">\n    <image class="icon" src="/common/icons/101.png"></image>\n    <div class="column center">\n      <text class="temp">6°</text>\n      <text class="weather">晴转多云</text>\n    </div>\n  </div>\n  \x3c!-- 体感温度等其他信息 --\x3e\n  <div class="more-info row">\n    <div class="item column center">\n      <text class="value">10°</text>\n      <text class="label">体感温度</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">67</text><text class="sub">%</text></div>\n      <text class="label">湿度</text>\n    </div>\n    <div class="item column center">\n      <div><text class="value">5</text><text class="sub">km</text></div>\n      <text class="label">能见度</text>\n    </div>\n  </div>\n</div>\n\n\n体感温度等信息模块，首先水平方向排列(flex-direction: row)，然后各个item设置flex: 1，这样就实现了各个item宽度相等的效果。\n\n具体到每个item里面，只需要分别设置各个文本字段的颜色和大小即可。\n\ncss代码如下：\n\n/* 天气数据样式 */\n.body {\n  flex: 1;\n}\n\n.temp {\n  font-size: 70px;\n}\n\n.icon {\n  width: 170px;\n  height: 170px;\n  margin-right: 20px;\n}\n\n.weather {\n  font-size: 24px;\n}\n\n/* 更多信息样式 */\n.more-info {\n  width: 335px;\n  height: 100px;\n  background-color: rgba(255, 255, 255, 0.21);\n  border-radius: 15px;\n}\n\n.item {\n  flex: 1;\n}\n\n.value {\n  font-size: 30px;\n}\n\n.sub {\n  font-size: 14px;\n  margin-top: 10px;\n}\n\n.label {\n  color: #757575;\n  margin-top: 5px;\n}\n\n\n实际运行结果：\n\n\n\n# 未来3天天气\n\n天气概况信息模块样式比较简单，竖向排列即可。\n\n跟体感温度等信息模块类似，未来三天天气列表也使用水平方向排列。不同的地方在于，各个item有背景颜色并且之间有间距，所以给各个item设置了固定的尺寸，然后根据剩下的空间 给各个item之间分配间距(justify-content: space-between)。\n\n修改完成后的模板代码为：\n\n\x3c!-- 未来3天天气 --\x3e\n<div class="list row">\n  <div class="item column center">\n    <text class="date">周日</text>\n    <image class="icon" src="/common/icons/301.png"></image>\n    <text class="temp">-6°~8°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">周一</text>\n    <image class="icon" src="/common/icons/311.png"></image>\n    <text class="temp">-9°~4°</text>\n  </div>\n  <div class="item column center">\n    <text class="date">周二</text>\n    <image class="icon" src="/common/icons/100.png"></image>\n    <text class="temp">-3°~6°</text>\n  </div>\n</div>\n\n\ncss代码为：\n\n/* 天气数据样式 */\n.body {\n  flex: 1;\n}\n\n.info {\n  margin-bottom: 20px;\n}\n\n.title {\n  font-size: 30px;\n}\n\n.summary {\n  font-size: 24px;\n  color: #757575;\n}\n\n/* 未来3天天气 */\n.list {\n  width: 380px;\n  justify-content: space-between;\n}\n\n.item {\n  width: 120px;\n  height: 175px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 15px;\n}\n\n.date {\n  font-size: 28px;\n}\n\n.icon {\n  width: 90px;\n  height: 90px;\n}\n\n.temp {\n  font-size: 24px;\n}\n\n\n实际运行结果：\n\n\n\n# 底部信息\n\n底部信息最终的模板代码如下：\n\n\x3c!-- 底部更新时间 --\x3e\n<div class="footer center">\n  <text class="update-time">数据更新于 12-20 09:15</text>\n</div>\n\n\ncss代码如下：\n\n/* 底部样式 */\n.footer {\n  margin-top: 20px;    \n}\n\n.update-time {\n  color: #757575;\n}\n\n\n实际运行结果：\n\n\n\n# 页面效果\n\n完成页面结构和样式后，模拟器中实际运行的结果如下：\n\n\n\n\n# 页面数据\n\n我们已经实现了页面数据的渲染，但是目前所有的数据都是直接写到模板代码中，不能在程序中动态修改。\n\n如果需要在程序中动态修改界面上展示的数据，需要将数据存储到页面数据对象中，然后使用双大括号语法来引用数据，比如{{ name }}，详细使用方法可以参考模板语法。\n\n数据定义，需要通过javascript脚本来实现。跟html一样，javascript代码需要放在script标签中：\n\n<script>\n  export default {\n    private: {\n      city: \'武汉市\',\n      province: \'湖北省\',\n      country: \'中国\',\n      weather: {\n        // 数据观测时间\n        obstime: "12-21 09:05",\n        // 温度\n        temp: "13",\n        // 体感温度\n        feelslike: "10",\n        // 天气icon图标编号\n        icon: "101",\n        // 天气描述文本\n        text: "多云",\n        // 相对湿度\n        humidity: "72",\n        // 能见度，单位：公里\n        vis: "16"\n      }\n    }\n  }\n<\/script>\n\n\n定义好数据之后，替换之前的模板代码，替换后为：\n\n<template>\n  <div class="page column">\n    \x3c!-- 头部城市信息 --\x3e\n    <div class="header column center">\n      <text class="city">{{city}}</text>\n      <text class="province">{{province}}/{{country}}</text>\n    </div>\n    <div class="body column center">\n      \x3c!-- 主要天气信息 --\x3e\n      <div class="info">\n        <image class="icon" src="/common/icons/{{weather.icon}}.png"></image>\n        <div class="column center">\n          <text class="temp">{{weather.temp}}°</text>\n          <text class="weather">{{weather.text}}</text>\n        </div>\n      </div>\n      \x3c!-- 体感温度等其他信息 --\x3e\n      <div class="more-info row">\n        <div class="item column center">\n          <text class="value">{{weather.feelslike}}°</text>\n          <text class="label">体感温度</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.humidity}}</text><text class="sub">%</text></div>\n          <text class="label">湿度</text>\n        </div>\n        <div class="item column center">\n          <div><text class="value">{{weather.vis}}</text><text class="sub">km</text></div>\n          <text class="label">能见度</text>\n        </div>\n      </div>\n    </div>\n    \x3c!-- 底部更新时间 --\x3e\n    <div class="footer center">\n      <text class="update-time">数据更新于 {{weather.obstime}}</text>\n    </div>\n  </div>\n</template>\n\n\n\n# 列表渲染\n\n在未来3天天气预报页面中，使用到了数组存储未来3天的天气数据。可以使用for指令来渲染（详细的for指令用法，请参考列表渲染）。\n\n数据定义为：\n\n{\n  list: [\n    {\n      "fxdate": "周日",\n      "tempmax": "12",\n      "tempmin": "-1",\n      "iconday": "101",\n      "textday": "多云",\n    },\n    {\n      "fxdate": "周一",\n      "tempmax": "13",\n      "tempmin": "0",\n      "iconday": "100",\n      "textday": "晴"\n    },\n    {\n      "fxdate": "周二",\n      "tempmax": "13",\n      "tempmin": "0",\n      "iconday": "302",\n      "textday": "晴",\n      "iconnight": "150",\n      "textnight": "晴"\n    }\n  ]\n}\n\n\n模板代码：\n\n\x3c!-- 未来3天天气 --\x3e\n<div class="list row">\n  <div class="item column center" for="{{list}}">\n    <text class="date">{{$item.fxdate}}</text>\n    <image class="icon" src="/common/icons/{{$item.iconday}}.png"></image>\n    <text class="temp">{{$item.tempmin}}°~{{$item.tempmax}}°</text>\n  </div>\n</div>\n\n\n运行结果：\n\n\n\n# 条件渲染\n\n实际项目中经常会需要使用到条件判断，根据不同的条件渲染不同的ui。要使用条件渲染，请参考条件指令。',charsets:{cjk:!0}},{title:"APILevel2",frontmatter:{},regularPath:"/zh/guide/version/APILevel2.html",relativePath:"zh/guide/version/APILevel2.md",key:"v-982d61f0",path:"/zh/guide/version/APILevel2.html",headers:[{level:2,title:"框架",slug:"框架",normalizedTitle:"框架",charIndex:16},{level:2,title:"组件",slug:"组件",normalizedTitle:"组件",charIndex:58},{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:197}],headersStr:"框架 组件 接口",content:"# APILevel2\n\n\n# 框架\n\n * 新增媒体查询，支持media feature - shape\n\n\n# 组件\n\n * 新增barcode组件\n * 新增qrcode组件\n * 新增image-animator组件\n * 新增scroll组件\n * 新增getBoundingClientRect通用方法\n * swiper组件新增swipestart、swipeend事件\n\n\n# 接口\n\n * @system.device getInfo() 新增返回值：deviceType、APILevel",normalizedContent:"# apilevel2\n\n\n# 框架\n\n * 新增媒体查询，支持media feature - shape\n\n\n# 组件\n\n * 新增barcode组件\n * 新增qrcode组件\n * 新增image-animator组件\n * 新增scroll组件\n * 新增getboundingclientrect通用方法\n * swiper组件新增swipestart、swipeend事件\n\n\n# 接口\n\n * @system.device getinfo() 新增返回值：devicetype、apilevel",charsets:{cjk:!0}},{title:"APILevel3",frontmatter:{},regularPath:"/zh/guide/version/APILevel3.html",relativePath:"zh/guide/version/APILevel3.md",key:"v-29dd6006",path:"/zh/guide/version/APILevel3.html",headers:[{level:2,title:"框架",slug:"框架",normalizedTitle:"框架",charIndex:16},{level:2,title:"组件",slug:"组件",normalizedTitle:"组件",charIndex:64},{level:2,title:"接口",slug:"接口",normalizedTitle:"接口",charIndex:92},{level:2,title:"样式",slug:"样式",normalizedTitle:"样式",charIndex:27}],headersStr:"框架 组件 接口 样式",content:"# APILevel3\n\n\n# 框架\n\n * 新增通用样式：box-shadow\n * 新增全局方法：$canIUse\n\n\n# 组件\n\n * scroll组件新增边缘吸附样式\n\n\n# 接口\n\n * 新增接口：@system.uploadtask\n * @system.app新增canIUse方法\n * @system.device getInfo() 新增返回值：screenDensity，screenShape新增pill-shaped胶囊形屏\n\n\n# 样式\n\n * 扩展媒体查询，支持新特性以及逻辑运算\n * 新增dp单位",normalizedContent:"# apilevel3\n\n\n# 框架\n\n * 新增通用样式：box-shadow\n * 新增全局方法：$caniuse\n\n\n# 组件\n\n * scroll组件新增边缘吸附样式\n\n\n# 接口\n\n * 新增接口：@system.uploadtask\n * @system.app新增caniuse方法\n * @system.device getinfo() 新增返回值：screendensity，screenshape新增pill-shaped胶囊形屏\n\n\n# 样式\n\n * 扩展媒体查询，支持新特性以及逻辑运算\n * 新增dp单位",charsets:{cjk:!0}},{title:"APILevel4",frontmatter:{},regularPath:"/zh/guide/version/APILevel4.html",relativePath:"zh/guide/version/APILevel4.md",key:"v-c05d1df8",path:"/zh/guide/version/APILevel4.html",headers:[{level:2,title:"组件",slug:"组件",normalizedTitle:"组件",charIndex:16}],headersStr:"组件",content:"# APILevel4\n\n\n# 组件\n\n * 新增接口：@system.event",normalizedContent:"# apilevel4\n\n\n# 组件\n\n * 新增接口：@system.event",charsets:{cjk:!0}},{title:"APILevel",frontmatter:{},regularPath:"/zh/guide/version/",relativePath:"zh/guide/version/README.md",key:"v-3a692956",path:"/zh/guide/version/",headersStr:null,content:"# APILevel\n\nAPILevel 用来标识当前框架提供的接口标准集合，文档中所有接口是默认属于 APILevel 1，如果\n\n某些接口属于其他版本，会被标注出来。",normalizedContent:"# apilevel\n\napilevel 用来标识当前框架提供的接口标准集合，文档中所有接口是默认属于 apilevel 1，如果\n\n某些接口属于其他版本，会被标注出来。",charsets:{cjk:!0}},{frontmatter:{showToc:!1,sidebar:!1},regularPath:"/zh/samples/",relativePath:"zh/samples/README.md",key:"v-718fa615",path:"/zh/samples/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"关于AIoT-IDE",frontmatter:{},regularPath:"/zh/tools/",relativePath:"zh/tools/README.md",key:"v-78f9a3d6",path:"/zh/tools/",headers:[{level:2,title:"项目结构",slug:"项目结构",normalizedTitle:"项目结构",charIndex:324}],headersStr:"项目结构",content:"# 关于AIoT-IDE\n\nAIoT-IDE 是用于开发Xiaomi Vela JS 应用的官方集成开发环境。建立在 Visual Studio Code（以下简称 VS Code）的基础上，它继承了 VS Code 的全部功能，比如代码编辑、插件集成、主题定制及个性化设置。此外，AIoT-IDE 还引入了一系列专门针对 Xiaomi Vela JS 应用 应用开发的增强功能，它们包括但不限于：\n\n * 智能编码提示\n * Vela JS应用调试\n * 实时编译预览\n * Vela JS应用 打包发布\n * Vela JS应用 真机调试\n\n本章主要介绍 AIoT-IDE 的核心功能。如需下载安装请查看，请直接访问 安装环境 章节。\n\n\n# 项目结构\n\n只有当AIoT-IDE打开Xiaomi Vela JS 应用，才能使用应用开发的增强功能。\n\n一个最基本的Xiaomi Vela JS 应用由描述项目信息配置文件mainfest.json和放置项目公交资源的app.ux文件，不同描述页面的ux文件。\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-CN.json\n|   └── en-US.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n当AIoT-IDE打开一个项目时会判断当前项目的根目录或者src目录下是否有mainfest.json文件，如果有则会读取mainfest.json中的deviceTypeList，通过deviceTypeList字段的内容判断当前项目是什么类型的Xiaomi Vela JS应用。",normalizedContent:"# 关于aiot-ide\n\naiot-ide 是用于开发xiaomi vela js 应用的官方集成开发环境。建立在 visual studio code（以下简称 vs code）的基础上，它继承了 vs code 的全部功能，比如代码编辑、插件集成、主题定制及个性化设置。此外，aiot-ide 还引入了一系列专门针对 xiaomi vela js 应用 应用开发的增强功能，它们包括但不限于：\n\n * 智能编码提示\n * vela js应用调试\n * 实时编译预览\n * vela js应用 打包发布\n * vela js应用 真机调试\n\n本章主要介绍 aiot-ide 的核心功能。如需下载安装请查看，请直接访问 安装环境 章节。\n\n\n# 项目结构\n\n只有当aiot-ide打开xiaomi vela js 应用，才能使用应用开发的增强功能。\n\n一个最基本的xiaomi vela js 应用由描述项目信息配置文件mainfest.json和放置项目公交资源的app.ux文件，不同描述页面的ux文件。\n\n├── manifest.json\n├── app.ux\n├── pages\n│   ├── index\n|   |   └── index.ux\n│   └── detail\n|       └── detail.ux\n├── i18n\n|   ├── defaults.json\n|   ├── zh-cn.json\n|   └── en-us.json\n└── common\n    ├── style.css\n    ├── utils.js\n    └── logo.png\n\n\n当aiot-ide打开一个项目时会判断当前项目的根目录或者src目录下是否有mainfest.json文件，如果有则会读取mainfest.json中的devicetypelist，通过devicetypelist字段的内容判断当前项目是什么类型的xiaomi vela js应用。",charsets:{cjk:!0}},{title:"编译设置",frontmatter:{},regularPath:"/zh/tools/debug/build-setting.html",relativePath:"zh/tools/debug/build-setting.md",key:"v-060f12fc",path:"/zh/tools/debug/build-setting.html",headersStr:null,content:"# 编译设置\n\n编译设置功能可自定义模拟器运行时打开的页面和页面缓存,未进行设置时会默认读取项目中的manifest.json中的router配置\n\n\n\n在顶部banner区域，增加了当前编译模式显示按钮，点击当前编译配置路由路径，可切换编译配置或点击新增添加新的编译配置\n\n\n\n点击当前编译配置名称，可进入编译模式设置界面，选择对当前项目的编辑配置进行增删改。\n\n",normalizedContent:"# 编译设置\n\n编译设置功能可自定义模拟器运行时打开的页面和页面缓存,未进行设置时会默认读取项目中的manifest.json中的router配置\n\n\n\n在顶部banner区域，增加了当前编译模式显示按钮，点击当前编译配置路由路径，可切换编译配置或点击新增添加新的编译配置\n\n\n\n点击当前编译配置名称，可进入编译模式设置界面，选择对当前项目的编辑配置进行增删改。\n\n",charsets:{cjk:!0}},{title:"优化评分",frontmatter:{},regularPath:"/zh/tools/debug/audit.html",relativePath:"zh/tools/debug/audit.md",key:"v-42f699a4",path:"/zh/tools/debug/audit.html",headers:[{level:2,title:"文件分析",slug:"文件分析",normalizedTitle:"文件分析",charIndex:140},{level:2,title:"性能指标",slug:"性能指标",normalizedTitle:"性能指标",charIndex:220},{level:2,title:"优化检测项",slug:"优化检测项",normalizedTitle:"优化检测项",charIndex:267},{level:3,title:"多次引用代码检测",slug:"多次引用代码检测",normalizedTitle:"多次引用代码检测",charIndex:310},{level:3,title:"大型依赖替换检测",slug:"大型依赖替换检测",normalizedTitle:"大型依赖替换检测",charIndex:324},{level:3,title:"未使用依赖检测",slug:"未使用依赖检测",normalizedTitle:"未使用依赖检测",charIndex:338},{level:3,title:"未使用系统功能检测",slug:"未使用系统功能检测",normalizedTitle:"未使用系统功能检测",charIndex:351},{level:3,title:"网络请求耗时检测",slug:"网络请求耗时检测",normalizedTitle:"网络请求耗时检测",charIndex:366},{level:3,title:"网络请求https使用检测",slug:"网络请求https使用检测",normalizedTitle:"网络请求https使用检测",charIndex:380},{level:3,title:"网络请求次数检测",slug:"网络请求次数检测",normalizedTitle:"网络请求次数检测",charIndex:399},{level:3,title:"网络请求异常检测",slug:"网络请求异常检测",normalizedTitle:"网络请求异常检测",charIndex:413},{level:3,title:"代码执行报错检测",slug:"代码执行报错检测",normalizedTitle:"代码执行报错检测",charIndex:427}],headersStr:"文件分析 性能指标 优化检测项 多次引用代码检测 大型依赖替换检测 未使用依赖检测 未使用系统功能检测 网络请求耗时检测 网络请求https使用检测 网络请求次数检测 网络请求异常检测 代码执行报错检测",content:"# 优化评分\n\n为了优化开发者开发体验，AIoT-IDE中内置了生成优化评分报告功能，点击生成报告按钮即可根据当前打开的应用生成优化报告。\n\n\n\n整体分为动态分析和静态分析2部分，每个检测项会包括：触发条目的具体信息（例如代码位置/文件url/网络url），优化建议等。\n\n\n# 文件分析\n\n 1. 用来帮助用户比较直观地了解当前包体积占比过高的文件，优化包体积\n\n 2. 后续也规划提供类似treeMap的依赖占比可视化分析\n\n\n\n\n# 性能指标\n\n优化报告中有给出多维度的性能指标，给出优化建议,以便开发者进行优化。\n\n\n\n\n# 优化检测项\n\n * 一个统一的、汇总式地检测入口，目前共计上线9则检查项：\n   * 多次引用代码检测\n   * 大型依赖替换检测\n   * 未使用依赖检测\n   * 未使用系统功能检测\n   * 网络请求耗时检测\n   * 网络请求https使用检测\n   * 网络请求次数检测\n   * 网络请求异常检测\n   * 代码执行报错检测\n\n\n# 多次引用代码检测\n\n优化报告中会标出多次引用的代码，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 大型依赖替换检测\n\n优化报告中会标出体积过大的依赖项，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 未使用依赖检测\n\n优化报告中会标出未使用的依赖项，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 未使用系统功能检测\n\n优化报告中会标出未使用的系统功能，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求耗时检测\n\n优化报告中会标出请求响应耗时过长的请求，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求https使用检测\n\n优化报告中会标出请求响应中未使用https的，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求次数检测\n\n优化报告中会标出请求响应中频繁请求的，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求异常检测\n\n优化报告中会标出请求响应异常，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 代码执行报错检测\n\n优化报告中会标出项目中代码执行报错的，给出优化建议，以便开发者进行优化。\n\n",normalizedContent:"# 优化评分\n\n为了优化开发者开发体验，aiot-ide中内置了生成优化评分报告功能，点击生成报告按钮即可根据当前打开的应用生成优化报告。\n\n\n\n整体分为动态分析和静态分析2部分，每个检测项会包括：触发条目的具体信息（例如代码位置/文件url/网络url），优化建议等。\n\n\n# 文件分析\n\n 1. 用来帮助用户比较直观地了解当前包体积占比过高的文件，优化包体积\n\n 2. 后续也规划提供类似treemap的依赖占比可视化分析\n\n\n\n\n# 性能指标\n\n优化报告中有给出多维度的性能指标，给出优化建议,以便开发者进行优化。\n\n\n\n\n# 优化检测项\n\n * 一个统一的、汇总式地检测入口，目前共计上线9则检查项：\n   * 多次引用代码检测\n   * 大型依赖替换检测\n   * 未使用依赖检测\n   * 未使用系统功能检测\n   * 网络请求耗时检测\n   * 网络请求https使用检测\n   * 网络请求次数检测\n   * 网络请求异常检测\n   * 代码执行报错检测\n\n\n# 多次引用代码检测\n\n优化报告中会标出多次引用的代码，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 大型依赖替换检测\n\n优化报告中会标出体积过大的依赖项，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 未使用依赖检测\n\n优化报告中会标出未使用的依赖项，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 未使用系统功能检测\n\n优化报告中会标出未使用的系统功能，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求耗时检测\n\n优化报告中会标出请求响应耗时过长的请求，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求https使用检测\n\n优化报告中会标出请求响应中未使用https的，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求次数检测\n\n优化报告中会标出请求响应中频繁请求的，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 网络请求异常检测\n\n优化报告中会标出请求响应异常，给出优化建议，以便开发者进行优化。\n\n\n\n\n# 代码执行报错检测\n\n优化报告中会标出项目中代码执行报错的，给出优化建议，以便开发者进行优化。\n\n",charsets:{cjk:!0}},{title:"内存分析",frontmatter:{},regularPath:"/zh/tools/debug/memory.html",relativePath:"zh/tools/debug/memory.md",key:"v-1a5f1d96",path:"/zh/tools/debug/memory.html",headersStr:null,content:"# 内存分析\n\n进行内存泄漏排查时，您可以通过两次内存快照(dump)来协助分析。例如排查页面内存泄漏，先在进入页面前 dump 一次，再在推出页面后 dump 一次。排查内存泄漏有两种场景：\n\n对于不依赖底层能力的应用：如果您的应用不需要诸如 blueos.multimedia.audio 等底层能力，您可以直接在 AIoT-IDE 中测试。在问题场景的前后分别点击 位置 4 来进行内存快照。\n\n对于依赖底层能力的应用：您需要安装可以执行 js 堆内存快照的固件，运行命令 dump_js_heap /sdcard，然后将快照文件从真机设备拷贝到计算机上，在 AIoT-IDE 中通过 位置 3 加载进行分析。\n\n在 AIoT-IDE 中，JavaScript 堆分析和导出的工具位于功能面板区域选择 调试 -> Snapshot -> Profile，如下图标签1，2，3所示：\n\n",normalizedContent:"# 内存分析\n\n进行内存泄漏排查时，您可以通过两次内存快照(dump)来协助分析。例如排查页面内存泄漏，先在进入页面前 dump 一次，再在推出页面后 dump 一次。排查内存泄漏有两种场景：\n\n对于不依赖底层能力的应用：如果您的应用不需要诸如 blueos.multimedia.audio 等底层能力，您可以直接在 aiot-ide 中测试。在问题场景的前后分别点击 位置 4 来进行内存快照。\n\n对于依赖底层能力的应用：您需要安装可以执行 js 堆内存快照的固件，运行命令 dump_js_heap /sdcard，然后将快照文件从真机设备拷贝到计算机上，在 aiot-ide 中通过 位置 3 加载进行分析。\n\n在 aiot-ide 中，javascript 堆分析和导出的工具位于功能面板区域选择 调试 -> snapshot -> profile，如下图标签1，2，3所示：\n\n",charsets:{cjk:!0}},{title:"调试运行",frontmatter:{},regularPath:"/zh/tools/debug/debug.html",relativePath:"zh/tools/debug/debug.md",key:"v-70c98784",path:"/zh/tools/debug/debug.html",headersStr:null,content:"# 调试运行\n\n点击选择设备按钮，选择要运行模拟器，点击确定，再点击调试按钮将启动对应模拟器。\n\n\n\n模拟器启动成功后，将打开调试页面，当运行多个模拟器时。调试窗口对应的是(如下图标签1，2，3所示)模拟器运行页面中标题有选中效果的模拟器\n\n\n\n点击模拟器，可切换调试服务，进行对应调试。\n\n\n\n",normalizedContent:"# 调试运行\n\n点击选择设备按钮，选择要运行模拟器，点击确定，再点击调试按钮将启动对应模拟器。\n\n\n\n模拟器启动成功后，将打开调试页面，当运行多个模拟器时。调试窗口对应的是(如下图标签1，2，3所示)模拟器运行页面中标题有选中效果的模拟器\n\n\n\n点击模拟器，可切换调试服务，进行对应调试。\n\n\n\n",charsets:{cjk:!0}},{title:"多屏适配",frontmatter:{},regularPath:"/zh/tools/debug/multi-screens.html",relativePath:"zh/tools/debug/multi-screens.md",key:"v-76427afe",path:"/zh/tools/debug/multi-screens.html",headers:[{level:2,title:"多设备模拟器创建",slug:"多设备模拟器创建",normalizedTitle:"多设备模拟器创建",charIndex:77},{level:2,title:"自定义模拟器",slug:"自定义模拟器",normalizedTitle:"自定义模拟器",charIndex:545},{level:2,title:"多屏预览",slug:"多屏预览",normalizedTitle:"多屏预览",charIndex:821},{level:2,title:"自定义模拟器皮肤",slug:"自定义模拟器皮肤",normalizedTitle:"自定义模拟器皮肤",charIndex:920},{level:2,title:"Vela 模拟器皮肤组",slug:"vela-模拟器皮肤组",normalizedTitle:"vela 模拟器皮肤组",charIndex:990},{level:2,title:"Layout 文件的制作",slug:"layout-文件的制作",normalizedTitle:"layout 文件的制作",charIndex:1290},{level:2,title:"应用皮肤文件",slug:"应用皮肤文件",normalizedTitle:"应用皮肤文件",charIndex:2335},{level:2,title:"layout详解",slug:"layout详解",normalizedTitle:"layout详解",charIndex:2535}],headersStr:"多设备模拟器创建 自定义模拟器 多屏预览 自定义模拟器皮肤 Vela 模拟器皮肤组 Layout 文件的制作 应用皮肤文件 layout详解",content:"# 多屏适配\n\n为了提升开发者开发体验，AIoT-IDE内置了****功能，可将一套代码跑在多个不同的设备屏幕上，以测试在不同屏幕上的适配效果。\n\n\n# 多设备模拟器创建\n\n为了还原最真实的多屏适配开发场景，AIoT-IDE提供了多个不同设备尺寸配置的模拟器和不同的镜像版本，以便在多种设备，不同镜像系统上测试应用。\n\n目前提供三种镜像可供选择\n\n * vela-miwear-watch-5.0 vela5.0稳定发布版本\n\n * vela-miwear-watch-4.0 vela4.0稳定发布版本\n\n * vela-watch-4.0 vela开发版本\n\n目前提供六种不同屏幕尺寸的设备可供创建：\n\nxiaomiWatch 466*466\n\nredmiWatch\n\nxiaomiBand\n\nxiaomiBandpro\n\nxiaomi10Band\n\nxiaomiSoundMini\n\n目前创建模拟器时，vela-miwear-watch-5.0和vela-miwear-watch-4.0只支持xiaomiWatch(466*466)尺寸一种设备，vela-watch-4.0支持上面全部设备类型，并且可自定义设备类型进行创建。\n\n注意\n\n模拟器与真实设备之间是有性能差异的\n\n\n# 自定义模拟器\n\n此外，为了支持更多尺寸的设备，创建模拟器时还可以选择custom自定义模拟器时，提供以下自定义配置：\n\n * 1.可自定义模拟器宽高(宽高小于800大于100)，模拟器形状，模拟器密度等操作。\n * 2.可自定义并设置模拟器类型，目前主要为watch，band，smartspeaker\n * 3.可自定义模拟器形状，目前主要有两种形状圆形和矩形，矩形可自定义圆角\n * 4.可自定义模拟器屏幕dpi\n\n\n\n点击底部新建按钮，完成模拟器创建后，AIoT-IDE右下角会弹出创建成功提示，设备管理页面会实时更新创建的模拟器。\n\n\n\n\n# 多屏预览\n\n在创建完不同设备类型的模拟器后，通过调试或运行按钮启动模拟器时，选择对应不同设备的模拟器点击确定，即可同时运行。\n\n\n\n运行成功后，模拟器预览页将出现不同设备屏幕的预览效果\n\n\n\n\n# 自定义模拟器皮肤\n\n此外，如果用户不仅仅满足于自定义模拟器的显示效果，希望能更逼真的预览模拟器设备，我们还提供了自定义皮肤的功能。\n\n\n# Vela 模拟器皮肤组\n\n制作一款皮肤共需要两张图片和一个配置文件：\n\n * background.png 是设备主体图，要求屏幕区域为黑色\n * foreground.png 用于遮挡模拟器画面以外的部分。\n * layout配置文件，主要是用来配置皮肤所需的background.png，foreground.png布局信息\n\n\n\n其中foreground.png 一般由背景图片中扣出模拟器画面部分并将屏幕部分修改为透明色。没有 foreground.png 与有 foreground.png 的对比如下:\n\n未配置foreground.png\n\n配置了foreground.png\n\n\n# Layout 文件的制作\n\n拷贝以下代码并按照注释修改信息即可，其余部分保持不变\n\n  parts {\n    device {\n      display {\n        # 模拟器尺寸 \n        width 466\n        # 模拟器尺寸\n        height 466\n        # x和y填 0\n        x 0\n        y 0\n      }\n    }\n    portrait {\n      background {\n        # 背景图片的名称\n        image background.png\n      }\n      foreground {\n        # 前景图片的名称\n        mask foreground.png\n      }\n    }\n  }\n  layouts {\n    portrait {\n      // 整个皮肤的大小，一般使用背景图片的像素尺寸\n      width 572\n      height 938\n      event EV_SW:0:1 \n      part1 {\n        name portrait\n        x 0\n        y 0\n      }\n      part2 {\n        name device\n        # 前景图片从背景图片中扣图时的起始坐标，以左上角为0，0计算\n        x 54\n        y 236\n      }\n    }\n  }\n\n  // 将会在创建模拟器时透传给底层配置的字段\n  props {\n    // 屏幕形状。可选值： circle（圆形）、rect(矩形)、pill-shaped（胶囊形屏eg: 全面屏手环）\n    shape circle\n    // 屏幕密度，可选值： ['120'，'140'，'160'，'180'，'213'，'240'，'280'，'320'，'340'，'360'，'400'，'420'，'440'，'480'，'560'，'640']\n    density 320\n    // 设备类型，可选值：phone（手机）、watch（手表）、pad（平板）、car（车机）、tv（电视）、band（手环）smartspeaker（音响），默认watch\n    flavor watch\n  }\n\n\n\n# 应用皮肤文件\n\n在通过通过 AIoT-IDE 打开 SKD 目录，该目录下有一个 skins 目录，在 skins/user 目录下新建一个文件夹名称为你的皮肤名称，将制作好的文件放入其中，如果 skins下没有user，则先创建 user 目录 ，再次使用 IDE 创建模拟器时即可选择应用该皮肤。\n\n注意\n\nSDK目录是一个以点开头的目录，请提前打开操作系统的隐藏文件后再进行操作。\n\n\n\n\n# layout详解\n\n其中的 layout 文件中的内容如下：\n\n\n\nlayout配置内容详解：\n\n * layout 中可定义 portrait 和 landscape 两种布局方式，即竖屏和横屏其中的width 和 height 为你的background.png 的像素大小\n\n * event 固定值填 EV_SW:0:0\n\n * part1 引用上方 parts 中定义背景图片和前景图的那个，name 表示 引用 part 的名称，x，y 表示布局开始的左边，以左上角开始为0，0\n\n * part2 引用上方 parts 中定义 dispaly 的那个，name 表示 引用 part 的名称，x，y 表示布局开始的坐标，以左上角开始为0，0\n\n * parts 定义皮肤的组成部分，一般又两部分组成，即皮肤和模拟器画面，带 display 的表示模拟器画面，带 background 和 foreground 的表示皮肤。",normalizedContent:"# 多屏适配\n\n为了提升开发者开发体验，aiot-ide内置了****功能，可将一套代码跑在多个不同的设备屏幕上，以测试在不同屏幕上的适配效果。\n\n\n# 多设备模拟器创建\n\n为了还原最真实的多屏适配开发场景，aiot-ide提供了多个不同设备尺寸配置的模拟器和不同的镜像版本，以便在多种设备，不同镜像系统上测试应用。\n\n目前提供三种镜像可供选择\n\n * vela-miwear-watch-5.0 vela5.0稳定发布版本\n\n * vela-miwear-watch-4.0 vela4.0稳定发布版本\n\n * vela-watch-4.0 vela开发版本\n\n目前提供六种不同屏幕尺寸的设备可供创建：\n\nxiaomiwatch 466*466\n\nredmiwatch\n\nxiaomiband\n\nxiaomibandpro\n\nxiaomi10band\n\nxiaomisoundmini\n\n目前创建模拟器时，vela-miwear-watch-5.0和vela-miwear-watch-4.0只支持xiaomiwatch(466*466)尺寸一种设备，vela-watch-4.0支持上面全部设备类型，并且可自定义设备类型进行创建。\n\n注意\n\n模拟器与真实设备之间是有性能差异的\n\n\n# 自定义模拟器\n\n此外，为了支持更多尺寸的设备，创建模拟器时还可以选择custom自定义模拟器时，提供以下自定义配置：\n\n * 1.可自定义模拟器宽高(宽高小于800大于100)，模拟器形状，模拟器密度等操作。\n * 2.可自定义并设置模拟器类型，目前主要为watch，band，smartspeaker\n * 3.可自定义模拟器形状，目前主要有两种形状圆形和矩形，矩形可自定义圆角\n * 4.可自定义模拟器屏幕dpi\n\n\n\n点击底部新建按钮，完成模拟器创建后，aiot-ide右下角会弹出创建成功提示，设备管理页面会实时更新创建的模拟器。\n\n\n\n\n# 多屏预览\n\n在创建完不同设备类型的模拟器后，通过调试或运行按钮启动模拟器时，选择对应不同设备的模拟器点击确定，即可同时运行。\n\n\n\n运行成功后，模拟器预览页将出现不同设备屏幕的预览效果\n\n\n\n\n# 自定义模拟器皮肤\n\n此外，如果用户不仅仅满足于自定义模拟器的显示效果，希望能更逼真的预览模拟器设备，我们还提供了自定义皮肤的功能。\n\n\n# vela 模拟器皮肤组\n\n制作一款皮肤共需要两张图片和一个配置文件：\n\n * background.png 是设备主体图，要求屏幕区域为黑色\n * foreground.png 用于遮挡模拟器画面以外的部分。\n * layout配置文件，主要是用来配置皮肤所需的background.png，foreground.png布局信息\n\n\n\n其中foreground.png 一般由背景图片中扣出模拟器画面部分并将屏幕部分修改为透明色。没有 foreground.png 与有 foreground.png 的对比如下:\n\n未配置foreground.png\n\n配置了foreground.png\n\n\n# layout 文件的制作\n\n拷贝以下代码并按照注释修改信息即可，其余部分保持不变\n\n  parts {\n    device {\n      display {\n        # 模拟器尺寸 \n        width 466\n        # 模拟器尺寸\n        height 466\n        # x和y填 0\n        x 0\n        y 0\n      }\n    }\n    portrait {\n      background {\n        # 背景图片的名称\n        image background.png\n      }\n      foreground {\n        # 前景图片的名称\n        mask foreground.png\n      }\n    }\n  }\n  layouts {\n    portrait {\n      // 整个皮肤的大小，一般使用背景图片的像素尺寸\n      width 572\n      height 938\n      event ev_sw:0:1 \n      part1 {\n        name portrait\n        x 0\n        y 0\n      }\n      part2 {\n        name device\n        # 前景图片从背景图片中扣图时的起始坐标，以左上角为0，0计算\n        x 54\n        y 236\n      }\n    }\n  }\n\n  // 将会在创建模拟器时透传给底层配置的字段\n  props {\n    // 屏幕形状。可选值： circle（圆形）、rect(矩形)、pill-shaped（胶囊形屏eg: 全面屏手环）\n    shape circle\n    // 屏幕密度，可选值： ['120'，'140'，'160'，'180'，'213'，'240'，'280'，'320'，'340'，'360'，'400'，'420'，'440'，'480'，'560'，'640']\n    density 320\n    // 设备类型，可选值：phone（手机）、watch（手表）、pad（平板）、car（车机）、tv（电视）、band（手环）smartspeaker（音响），默认watch\n    flavor watch\n  }\n\n\n\n# 应用皮肤文件\n\n在通过通过 aiot-ide 打开 skd 目录，该目录下有一个 skins 目录，在 skins/user 目录下新建一个文件夹名称为你的皮肤名称，将制作好的文件放入其中，如果 skins下没有user，则先创建 user 目录 ，再次使用 ide 创建模拟器时即可选择应用该皮肤。\n\n注意\n\nsdk目录是一个以点开头的目录，请提前打开操作系统的隐藏文件后再进行操作。\n\n\n\n\n# layout详解\n\n其中的 layout 文件中的内容如下：\n\n\n\nlayout配置内容详解：\n\n * layout 中可定义 portrait 和 landscape 两种布局方式，即竖屏和横屏其中的width 和 height 为你的background.png 的像素大小\n\n * event 固定值填 ev_sw:0:0\n\n * part1 引用上方 parts 中定义背景图片和前景图的那个，name 表示 引用 part 的名称，x，y 表示布局开始的左边，以左上角开始为0，0\n\n * part2 引用上方 parts 中定义 dispaly 的那个，name 表示 引用 part 的名称，x，y 表示布局开始的坐标，以左上角开始为0，0\n\n * parts 定义皮肤的组成部分，一般又两部分组成，即皮肤和模拟器画面，带 display 的表示模拟器画面，带 background 和 foreground 的表示皮肤。",charsets:{cjk:!0}},{title:"编译预览",frontmatter:{},regularPath:"/zh/tools/debug/start.html",relativePath:"zh/tools/debug/start.md",key:"v-0de11fe0",path:"/zh/tools/debug/start.html",headers:[{level:2,title:"运行项目",slug:"运行项目",normalizedTitle:"运行项目",charIndex:104}],headersStr:"运行项目",content:"# 编译预览\n\n运行，调试，发布，打包vela项目主要靠顶部操作栏中的按钮来实现，同时依赖右侧用户引导页和设备管理页来保证当前开发环境具备模拟器运行环境，同时展示效果具体显示在右侧的模拟器预览界面。\n\n\n# 运行项目\n\n点击选择设备按钮，选择要运行的模拟器，点击确定后，再点击调试将启动模拟器。\n\n\n\n模拟器启动运行成功后，模拟器会推送当前项目，推送成功后，可在模拟器预览页预览效果，如下动态图所示：\n\n\n\n再次点击运行，将停止向模拟器推送当前项目，但模拟器依然保持运行。",normalizedContent:"# 编译预览\n\n运行，调试，发布，打包vela项目主要靠顶部操作栏中的按钮来实现，同时依赖右侧用户引导页和设备管理页来保证当前开发环境具备模拟器运行环境，同时展示效果具体显示在右侧的模拟器预览界面。\n\n\n# 运行项目\n\n点击选择设备按钮，选择要运行的模拟器，点击确定后，再点击调试将启动模拟器。\n\n\n\n模拟器启动运行成功后，模拟器会推送当前项目，推送成功后，可在模拟器预览页预览效果，如下动态图所示：\n\n\n\n再次点击运行，将停止向模拟器推送当前项目，但模拟器依然保持运行。",charsets:{cjk:!0}},{title:"日志查看",frontmatter:{},regularPath:"/zh/tools/debug/watch-log.html",relativePath:"zh/tools/debug/watch-log.md",key:"v-c66c4ad0",path:"/zh/tools/debug/watch-log.html",headersStr:null,content:"# 日志查看\n\n借助各项日志（如编译日志和模拟器日志），您可以迅速了解应用当前状态，从而提高开发效率。要查看日志，只需在功能面板中点击输出选项即可。日志输出面板提供了一系列实用功能，包括：切换日志类型、清空日志、开启/关闭自动滚动、导出日志 和 筛选日志等。\n\n * 切换日志类型：选择需要查看的日志类型，如模拟器日志、编译日志等。\n * 清空日志：一键清除当前类型的所有日志。\n * 开启/关闭自动滚动：当启用时，新日志添加到输出面板时，视图将自动滚动到最新的日志条目；关闭该功能后，自动滚动将停止，日志停留在上次查看的位置。\n * 导出日志：将当前类型的日志导出，保存至当前项目的 logs 目录下。\n * 筛选日志：在「输出」面板聚焦状态下，使用 Command+ F（在Windows上使用 Ctrl+ F）即可触发日志关键词搜索，支持正则表达式。\n\n\n\n温馨提示：如果在开发中遇到异常，如预览黑屏或渲染内容与代码不一致，请首先查看编译日志以确认应用是否构建成功，然后检查 模拟器日志以判断应用是否正常运行。如果两者均无问题，请参阅文档或向AIoT-IDE官方寻求技术支持。",normalizedContent:"# 日志查看\n\n借助各项日志（如编译日志和模拟器日志），您可以迅速了解应用当前状态，从而提高开发效率。要查看日志，只需在功能面板中点击输出选项即可。日志输出面板提供了一系列实用功能，包括：切换日志类型、清空日志、开启/关闭自动滚动、导出日志 和 筛选日志等。\n\n * 切换日志类型：选择需要查看的日志类型，如模拟器日志、编译日志等。\n * 清空日志：一键清除当前类型的所有日志。\n * 开启/关闭自动滚动：当启用时，新日志添加到输出面板时，视图将自动滚动到最新的日志条目；关闭该功能后，自动滚动将停止，日志停留在上次查看的位置。\n * 导出日志：将当前类型的日志导出，保存至当前项目的 logs 目录下。\n * 筛选日志：在「输出」面板聚焦状态下，使用 command+ f（在windows上使用 ctrl+ f）即可触发日志关键词搜索，支持正则表达式。\n\n\n\n温馨提示：如果在开发中遇到异常，如预览黑屏或渲染内容与代码不一致，请首先查看编译日志以确认应用是否构建成功，然后检查 模拟器日志以判断应用是否正常运行。如果两者均无问题，请参阅文档或向aiot-ide官方寻求技术支持。",charsets:{cjk:!0}},{title:"代码美化",frontmatter:{},regularPath:"/zh/tools/dev/format.html",relativePath:"zh/tools/dev/format.md",key:"v-90a2eed4",path:"/zh/tools/dev/format.html",headers:[{level:2,title:"自动格式化",slug:"自动格式化",normalizedTitle:"自动格式化",charIndex:11}],headersStr:"自动格式化",content:"# 代码美化\n\n\n# 自动格式化\n\n代码自动格式化在软件开发中至关重要，它带来的好处包括增强代码一致性、提高可读性、简化审查过程，并支持敏捷开发实践。AIoT-IDE 提供此功能，但默认情况下是关闭的。要启用它，只需进行简单设置：\n\n使用快捷键 Command ，（Windows 系统为 Ctrl ，）打开 设置 面板。 输入format进行搜索。\n\n勾选「Editor: Format On Save」，如下图所示。\n\n\n\n激活此选项后，每次保存时，系统都会自动使用 prettier 格式化代码。\n\nPrettier 是一款流行的代码格式化工具，支持多种开发语言和文件格式，其目标是提供统一的代码风格，以简化代码维护并提高团队效率。AIoT-IDE 内置 prettier 依赖，您无需额外操作即可使用。具体效果如下动态图所示：\n\n",normalizedContent:"# 代码美化\n\n\n# 自动格式化\n\n代码自动格式化在软件开发中至关重要，它带来的好处包括增强代码一致性、提高可读性、简化审查过程，并支持敏捷开发实践。aiot-ide 提供此功能，但默认情况下是关闭的。要启用它，只需进行简单设置：\n\n使用快捷键 command ，（windows 系统为 ctrl ，）打开 设置 面板。 输入format进行搜索。\n\n勾选「editor: format on save」，如下图所示。\n\n\n\n激活此选项后，每次保存时，系统都会自动使用 prettier 格式化代码。\n\nprettier 是一款流行的代码格式化工具，支持多种开发语言和文件格式，其目标是提供统一的代码风格，以简化代码维护并提高团队效率。aiot-ide 内置 prettier 依赖，您无需额外操作即可使用。具体效果如下动态图所示：\n\n",charsets:{cjk:!0}},{title:"功能按钮",frontmatter:{},regularPath:"/zh/tools/debug/toolbar.html",relativePath:"zh/tools/debug/toolbar.md",key:"v-42f51224",path:"/zh/tools/debug/toolbar.html",headers:[{level:2,title:"关闭所有模拟器",slug:"关闭所有模拟器",normalizedTitle:"关闭所有模拟器",charIndex:62},{level:2,title:"自定义模拟器显示",slug:"自定义模拟器显示",normalizedTitle:"自定义模拟器显示",charIndex:126},{level:2,title:"关机",slug:"关机",normalizedTitle:"关机",charIndex:203},{level:2,title:"首页",slug:"首页",normalizedTitle:"首页",charIndex:261},{level:2,title:"终端",slug:"终端",normalizedTitle:"终端",charIndex:323},{level:2,title:"查看日志",slug:"查看日志",normalizedTitle:"查看日志",charIndex:384},{level:2,title:"菜单",slug:"菜单",normalizedTitle:"菜单",charIndex:448},{level:2,title:"截图",slug:"截图",normalizedTitle:"截图",charIndex:509},{level:2,title:"尺寸",slug:"尺寸",normalizedTitle:"尺寸",charIndex:588},{level:2,title:"安装rpk",slug:"安装rpk",normalizedTitle:"安装rpk",charIndex:651},{level:2,title:"运行rpk",slug:"运行rpk",normalizedTitle:"运行rpk",charIndex:725}],headersStr:"关闭所有模拟器 自定义模拟器显示 关机 首页 终端 查看日志 菜单 截图 尺寸 安装rpk 运行rpk",content:"# 功能按钮\n\n在模拟器启动成功，进入模拟器运行页面后。AIoT-IDE提供了一些功能按钮方便开发者开发调试应用。\n\n\n# 关闭所有模拟器\n\n关闭所有模拟器，位于模拟器运行页面右上角，点击后可关闭所有正在运行的模拟器，如下图中序号1所示。\n\n\n\n\n# 自定义模拟器显示\n\n自定义模拟器显示，位于模拟器运行页面右上角，点击后可在弹出框中自定义已运行的模拟器的显示顺序，如下图序号1，序号2所示。\n\n\n\n\n# 关机\n\n关机，每个模拟器显示区域都会在右侧配置一个关机按钮，可关闭单个运行的模拟器，如下图序号1所示。\n\n\n\n\n# 首页\n\n首页，每个模拟器显示区域都会在右侧配置一个首页按钮，点击后可回到当前模拟器首页，如下图序号1，2所示。\n\n\n\n\n# 终端\n\n终端，每个模拟器显示区域都会在右侧配置一个终端按钮，点击进入模拟器命令行终端，如下图序号1，2所示。\n\n\n\n\n# 查看日志\n\n查看日志，每个模拟器显示区域都会在右侧配置一个查看日志按钮，点击进入可查看日志，如下图序号1，2所示。\n\n\n\n\n# 菜单\n\n菜单，每个模拟器显示区域都会在右侧配置一个菜单按钮，点击后可回到当前模拟器菜单页，如下图序号1所示。\n\n\n\n\n# 截图\n\n截图，每个模拟器显示区域都会在右侧配置一个截图按钮，点击可对当前模拟器效果进行截图，并选择有皮肤，无皮肤两种模式，如下图序号1，2所示。\n\n\n\n\n# 尺寸\n\n尺寸，每个模拟器显示区域都会在右侧配置一个尺寸按钮，可动态调整当前模拟器显示大小，如下图序号1，2所示。\n\n\n\n\n# 安装rpk\n\n安装rpk，每个模拟器显示区域都会在右侧配置一个安装rpk按钮，点击后选择本地rpk文件进行安装，如下图序号1，2所示。\n\n\n\n\n# 运行rpk\n\n运行rpk，每个模拟器显示区域都会在右侧配置一个运行rpk按钮，点击后在已安装的rpk列表中，切换运行的rpk或卸载已安装的rpk。如下图序号1，2，3所示。\n\n",normalizedContent:"# 功能按钮\n\n在模拟器启动成功，进入模拟器运行页面后。aiot-ide提供了一些功能按钮方便开发者开发调试应用。\n\n\n# 关闭所有模拟器\n\n关闭所有模拟器，位于模拟器运行页面右上角，点击后可关闭所有正在运行的模拟器，如下图中序号1所示。\n\n\n\n\n# 自定义模拟器显示\n\n自定义模拟器显示，位于模拟器运行页面右上角，点击后可在弹出框中自定义已运行的模拟器的显示顺序，如下图序号1，序号2所示。\n\n\n\n\n# 关机\n\n关机，每个模拟器显示区域都会在右侧配置一个关机按钮，可关闭单个运行的模拟器，如下图序号1所示。\n\n\n\n\n# 首页\n\n首页，每个模拟器显示区域都会在右侧配置一个首页按钮，点击后可回到当前模拟器首页，如下图序号1，2所示。\n\n\n\n\n# 终端\n\n终端，每个模拟器显示区域都会在右侧配置一个终端按钮，点击进入模拟器命令行终端，如下图序号1，2所示。\n\n\n\n\n# 查看日志\n\n查看日志，每个模拟器显示区域都会在右侧配置一个查看日志按钮，点击进入可查看日志，如下图序号1，2所示。\n\n\n\n\n# 菜单\n\n菜单，每个模拟器显示区域都会在右侧配置一个菜单按钮，点击后可回到当前模拟器菜单页，如下图序号1所示。\n\n\n\n\n# 截图\n\n截图，每个模拟器显示区域都会在右侧配置一个截图按钮，点击可对当前模拟器效果进行截图，并选择有皮肤，无皮肤两种模式，如下图序号1，2所示。\n\n\n\n\n# 尺寸\n\n尺寸，每个模拟器显示区域都会在右侧配置一个尺寸按钮，可动态调整当前模拟器显示大小，如下图序号1，2所示。\n\n\n\n\n# 安装rpk\n\n安装rpk，每个模拟器显示区域都会在右侧配置一个安装rpk按钮，点击后选择本地rpk文件进行安装，如下图序号1，2所示。\n\n\n\n\n# 运行rpk\n\n运行rpk，每个模拟器显示区域都会在右侧配置一个运行rpk按钮，点击后在已安装的rpk列表中，切换运行的rpk或卸载已安装的rpk。如下图序号1，2，3所示。\n\n",charsets:{cjk:!0}},{title:"代码补全",frontmatter:{},regularPath:"/zh/tools/dev/start.html",relativePath:"zh/tools/dev/start.md",key:"v-7504089c",path:"/zh/tools/dev/start.html",headers:[{level:2,title:"ux 文件自动补全",slug:"ux-文件自动补全",normalizedTitle:"ux 文件自动补全",charIndex:155},{level:2,title:"style 区域内补全",slug:"style-区域内补全",normalizedTitle:"style 区域内补全",charIndex:278},{level:2,title:"其他补全",slug:"其他补全",normalizedTitle:"其他补全",charIndex:355}],headersStr:"ux 文件自动补全 style 区域内补全 其他补全",content:"# 代码补全\n\nAIoT-IDE 是基于 Visual Studio Code 二次开发的，因此它继承了 VS Code 的所有代码编辑功能。此外，为了更贴合Xiaomi Vela JS 应用的开发需求和提升开发者的体验，AIoT-IDE 内置了用于 ux 文件的语法功能，包括语法辅助和自动补全等。\n\n\n# ux 文件自动补全\n\n * template 区域内补全\n   * 标签补全：输入 <（标签开头）后开始自动补全标签\n   * 标签属性补全：自动补全通用属性和组件特有的属性\n   * 标签属性值补全：如果存在枚举值，自动补全属性值\n\n\n\n\n# style 区域内补全\n\n * CSS 属性补全：支持 Css 属性的自动补全；\n * CSS 属性值补全：支持 Css 属性值的自动补全。\n\n\n\n\n# 其他补全\n\n * 路径补全：自动补全文件路径，如组件路径；\n * class 值补全：根据 style 标签中定义的 class 值进行自动补全。\n\n\n\nux 文件定义跳转\n\n * 跳转支持：template 区域的 class 和 id，变量，方法，自定义组件跳转，script 区域的接口跳转等；\n * 跳转操作：Mac 下使用 command + 左键，Windows 下使用 ctrl + 左键，即可跳转至定义处。\n\nux文件链接跳转\n\n * 链接跳转：可以从 ux 文件跳转到链接对应的文件；\n * 跳转操作：Mac 下使用 command + 左键，Windows 下使用 ctrl + 左键，即可实现跳转。\n\n\n\nux 文件悬浮提示\n\n * 标签提示：显示标签相关信息；\n * 属性值提示：显示标签属性值相关信息；\n * 样式提示：显示关于 style 的样式信息；\n * 脚本提示：显示 script 区域的方法，导入模块等提示信息。\n\n",normalizedContent:"# 代码补全\n\naiot-ide 是基于 visual studio code 二次开发的，因此它继承了 vs code 的所有代码编辑功能。此外，为了更贴合xiaomi vela js 应用的开发需求和提升开发者的体验，aiot-ide 内置了用于 ux 文件的语法功能，包括语法辅助和自动补全等。\n\n\n# ux 文件自动补全\n\n * template 区域内补全\n   * 标签补全：输入 <（标签开头）后开始自动补全标签\n   * 标签属性补全：自动补全通用属性和组件特有的属性\n   * 标签属性值补全：如果存在枚举值，自动补全属性值\n\n\n\n\n# style 区域内补全\n\n * css 属性补全：支持 css 属性的自动补全；\n * css 属性值补全：支持 css 属性值的自动补全。\n\n\n\n\n# 其他补全\n\n * 路径补全：自动补全文件路径，如组件路径；\n * class 值补全：根据 style 标签中定义的 class 值进行自动补全。\n\n\n\nux 文件定义跳转\n\n * 跳转支持：template 区域的 class 和 id，变量，方法，自定义组件跳转，script 区域的接口跳转等；\n * 跳转操作：mac 下使用 command + 左键，windows 下使用 ctrl + 左键，即可跳转至定义处。\n\nux文件链接跳转\n\n * 链接跳转：可以从 ux 文件跳转到链接对应的文件；\n * 跳转操作：mac 下使用 command + 左键，windows 下使用 ctrl + 左键，即可实现跳转。\n\n\n\nux 文件悬浮提示\n\n * 标签提示：显示标签相关信息；\n * 属性值提示：显示标签属性值相关信息；\n * 样式提示：显示关于 style 的样式信息；\n * 脚本提示：显示 script 区域的方法，导入模块等提示信息。\n\n",charsets:{cjk:!0}},{title:"可视化编辑",frontmatter:{},regularPath:"/zh/tools/dev/manifest.html",relativePath:"zh/tools/dev/manifest.md",key:"v-7a257416",path:"/zh/tools/dev/manifest.html",headersStr:null,content:"# 可视化编辑\n\nmanifest.json作为Xiaomi Vela JS 应用的主要配置文件,AIoT-IDE中配置了可视化编辑界面，如下图所示：\n\n\n\n点击打开manifest可视化界面后，可更直观清晰的对manifest.json进行编辑\n\n",normalizedContent:"# 可视化编辑\n\nmanifest.json作为xiaomi vela js 应用的主要配置文件,aiot-ide中配置了可视化编辑界面，如下图所示：\n\n\n\n点击打开manifest可视化界面后，可更直观清晰的对manifest.json进行编辑\n\n",charsets:{cjk:!0}},{title:"功能介绍",frontmatter:{},regularPath:"/zh/tools/devicedebug/start.html",relativePath:"zh/tools/devicedebug/start.md",key:"v-42b4364c",path:"/zh/tools/devicedebug/start.html",headers:[{level:2,title:"设备升级",slug:"设备升级",normalizedTitle:"设备升级",charIndex:74},{level:2,title:"环境准备",slug:"环境准备",normalizedTitle:"环境准备",charIndex:168},{level:2,title:"连接",slug:"连接",normalizedTitle:"连接",charIndex:52},{level:2,title:"调试",slug:"调试",normalizedTitle:"调试",charIndex:33}],headersStr:"设备升级 环境准备 连接 调试",content:"# 功能介绍\n\n支持开发Xiaomi Vela JS应用时进行真机调试，在AIoT-IDE可通过设备ID连接真机，将应用推送到真机进行调试\n\n\n# 设备升级\n\n目前真机调试只支持 O62 设备，请先联系小米工作人员获取小米Vela设备真机调试全流程指南 文档,按照文档内容，获取对应ota包将设备升级到支持真机调试的指定版本。\n\n\n# 环境准备\n\n 1. 请使用测试版小米运动健康，连接测试用机\n 2. 请保证电脑网络和手机网络在一个局域网下\n\n\n# 连接\n\n1.打开rpk 先在真机上打开安装好的真机调试debug-app（图中红框标记的）\n\n\n\n2.进行连接 打开debug-app后，点击开启调试，debug-app的中间按钮状态进入到【等待IDE连接】\n\n3.IDE端连接 在电脑端打开AIOT-IDE，进入真机调试界面\n\n4.开始连接 点击连接设备，输入设备IDE（设备ID从上面的debug-App中的设备ID获取），点击连接\n\n\n\n5.连接成功 连接成功后，按钮下面列表中出现一条真机信息，状态显示为Connected\n\n\n\n\n# 调试\n\n在真机连接成功后，可进入调试阶段，将当前开发的vela应用在真机上调试。\n\n1.选择设备 在顶部tab栏中点击连接设备，选择真机设备，然后点击调试，进入真机调试模式。\n\n\n\n\n\n\n\n2.进入真机调试 调试运行成功后，真机上会自动打开当前应用，AIOT-IDE底部会直接打开调试面板\n\n\n\n3 获取日志 在真机调试面板中点击获取日志，可直接拉取真机上的日志\n\n\n\n4.推送其他rpk 在真机调试页面中可点击推送rpk按钮，选择要推送的非当前项目rpk进行推送，进行真机调试。\n\n\n\n5.真机调试效果 在AIOT-IDE调试面板上进行调试，真机会实时显示调试效果(但不支持热更新，如要修改源码可点击打包按钮打包当前应用，通过第四步进行rpk安装)\n\n",normalizedContent:"# 功能介绍\n\n支持开发xiaomi vela js应用时进行真机调试，在aiot-ide可通过设备id连接真机，将应用推送到真机进行调试\n\n\n# 设备升级\n\n目前真机调试只支持 o62 设备，请先联系小米工作人员获取小米vela设备真机调试全流程指南 文档,按照文档内容，获取对应ota包将设备升级到支持真机调试的指定版本。\n\n\n# 环境准备\n\n 1. 请使用测试版小米运动健康，连接测试用机\n 2. 请保证电脑网络和手机网络在一个局域网下\n\n\n# 连接\n\n1.打开rpk 先在真机上打开安装好的真机调试debug-app（图中红框标记的）\n\n\n\n2.进行连接 打开debug-app后，点击开启调试，debug-app的中间按钮状态进入到【等待ide连接】\n\n3.ide端连接 在电脑端打开aiot-ide，进入真机调试界面\n\n4.开始连接 点击连接设备，输入设备ide（设备id从上面的debug-app中的设备id获取），点击连接\n\n\n\n5.连接成功 连接成功后，按钮下面列表中出现一条真机信息，状态显示为connected\n\n\n\n\n# 调试\n\n在真机连接成功后，可进入调试阶段，将当前开发的vela应用在真机上调试。\n\n1.选择设备 在顶部tab栏中点击连接设备，选择真机设备，然后点击调试，进入真机调试模式。\n\n\n\n\n\n\n\n2.进入真机调试 调试运行成功后，真机上会自动打开当前应用，aiot-ide底部会直接打开调试面板\n\n\n\n3 获取日志 在真机调试面板中点击获取日志，可直接拉取真机上的日志\n\n\n\n4.推送其他rpk 在真机调试页面中可点击推送rpk按钮，选择要推送的非当前项目rpk进行推送，进行真机调试。\n\n\n\n5.真机调试效果 在aiot-ide调试面板上进行调试，真机会实时显示调试效果(但不支持热更新，如要修改源码可点击打包按钮打包当前应用，通过第四步进行rpk安装)\n\n",charsets:{cjk:!0}},{title:"应用热更新",frontmatter:{},regularPath:"/zh/tools/dev/build.html",relativePath:"zh/tools/dev/build.md",key:"v-7e2ef6f8",path:"/zh/tools/dev/build.html",headersStr:null,content:"# 应用热更新\n\n在使用AIoT-IDE开发Xiaomi Vela JS 应用时，还内置了热更新功能。开发者在通过点击顶部操作栏运行或调试按钮，运行模拟器时会时刻监听文件变化。\n\n\n\n在监听到文件变化会自动触发编译，推送当前项目，实时预览代码编译后的最新效果，当再次点击运行或调试按钮，取消推送时，将停止监听文件文件，减小性能消耗。\n\n",normalizedContent:"# 应用热更新\n\n在使用aiot-ide开发xiaomi vela js 应用时，还内置了热更新功能。开发者在通过点击顶部操作栏运行或调试按钮，运行模拟器时会时刻监听文件变化。\n\n\n\n在监听到文件变化会自动触发编译，推送当前项目，实时预览代码编译后的最新效果，当再次点击运行或调试按钮，取消推送时，将停止监听文件文件，减小性能消耗。\n\n",charsets:{cjk:!0}},{title:"运行模拟器",frontmatter:{},regularPath:"/zh/tools/emulator/emulator-run.html",relativePath:"zh/tools/emulator/emulator-run.md",key:"v-ed55735c",path:"/zh/tools/emulator/emulator-run.html",headersStr:null,content:"# 运行模拟器\n\n在设备管理页面的模拟器列表中，点击运行图标，会自动运行模拟器，并且按钮进入loading状态。不过通过设备管理页运行模拟器成功后，并不会推送当前打开的Xiaomi Vela JS应用项目，还是需要点击顶部顶部操作栏的 选择设备按钮选择已运行的模拟器再点击调试按钮，运行当前项目。\n\n\n\n * 通过设备管理页运行成功后，不同的镜像将有不同的表现：\n   \n   * vela-miwear-watch-5.0镜像版本的模拟器将显示表盘页面。\n   \n   * vela-miwear-watch-4.0镜像版本的模拟器将显示表盘页面。\n   \n   * vela-watch-4.0的镜像版本的模拟器，由于将显示为黑屏。\n\n如下图标签1，2所示：\n\n",normalizedContent:"# 运行模拟器\n\n在设备管理页面的模拟器列表中，点击运行图标，会自动运行模拟器，并且按钮进入loading状态。不过通过设备管理页运行模拟器成功后，并不会推送当前打开的xiaomi vela js应用项目，还是需要点击顶部顶部操作栏的 选择设备按钮选择已运行的模拟器再点击调试按钮，运行当前项目。\n\n\n\n * 通过设备管理页运行成功后，不同的镜像将有不同的表现：\n   \n   * vela-miwear-watch-5.0镜像版本的模拟器将显示表盘页面。\n   \n   * vela-miwear-watch-4.0镜像版本的模拟器将显示表盘页面。\n   \n   * vela-watch-4.0的镜像版本的模拟器，由于将显示为黑屏。\n\n如下图标签1，2所示：\n\n",charsets:{cjk:!0}},{title:"设备管理",frontmatter:{},regularPath:"/zh/tools/emulator/create-emulator.html",relativePath:"zh/tools/emulator/create-emulator.md",key:"v-4710ed94",path:"/zh/tools/emulator/create-emulator.html",headers:[{level:2,title:"模拟器设备管理",slug:"模拟器设备管理",normalizedTitle:"模拟器设备管理",charIndex:115},{level:3,title:"自动创建模拟器",slug:"自动创建模拟器",normalizedTitle:"自动创建模拟器",charIndex:230},{level:3,title:"新建模拟器",slug:"新建模拟器",normalizedTitle:"新建模拟器",charIndex:386},{level:2,title:"模拟器SDK管理",slug:"模拟器sdk管理",normalizedTitle:"模拟器sdk管理",charIndex:1002},{level:2,title:"设备使用配置",slug:"设备使用配置",normalizedTitle:"设备使用配置",charIndex:1226}],headersStr:"模拟器设备管理 自动创建模拟器 新建模拟器 模拟器SDK管理 设备使用配置",content:"# 设备管理\n\n设备管理页主要分为两部分：\n\n * 1.模拟器版本管理：提供对模拟器的增删改查和运行功能，如下图1所示。\n * 2.Vela镜像版本管理：提供对模拟器运行环境所需的SDK包的安装和更新，如下图2所示。\n\n\n\n\n# 模拟器设备管理\n\n模拟器设备管理，主要展示模拟器的基本信息：\n\n * 名称\n * 镜像版本\n * 屏幕尺寸\n * 构建时间\n * 操作栏（提供删除，运行等功能）\n\n此外，用户可以点击左上角新建按钮进入模拟器创建页面。\n\n\n\n\n# 自动创建模拟器\n\n在初次使用 AIoT-IDE开发工具时，在初始化模拟器环境时，会检测本地是否已经创建过模拟器，若本地没有创建过模拟器将会提示开发者是否要自动创建模拟器。\n\n\n\n选择确定，将会在初始化环境后自动创建一个正式版模拟器。\n\n\n\n选择创建所有设备模拟器，将会自动创建所有设备类型的模拟器。\n\n\n\n\n# 新建模拟器\n\n点击上图新建按钮打开模拟器创建页面。首次进入创建模拟器页面，镜像版本默认为vela-miwear-watch-5.0，输入模拟器名称后，点击新建即可完成创建。如下图标签1，2，3，4所示：\n\n\n\n除了默认的vela-miwear-watch-5.0镜像，还可以在上图标签3中，下拉选择vela-miwear-watch-4.0镜像和vela-watch-4.0镜像，如下图标签1，2所示：\n\n\n\n在设备管理列表中，可对已创建的模拟器进行操作，目前提供了运行，暂停，删除等操作按钮。\n\n * 此外，在设备管理列表中，为了方便用户操作，还提供了多个快捷配置：\n   \n   * 复制启动命令：复制当前模拟器的启动命令，方便用户通过命令行自启模拟器和模拟器启动失败时进行排查。\n   \n   * 打开模拟器目录：打开模拟器文件存放目录，方便直接查看模拟器配置文件。\n   \n   * 打开镜像文件：打开模拟器SDK包存放目录，方便直接查看模拟器SDK包文件。\n   \n   * 安装Rpk：在模拟器运行成功后，用于可选择本地环境里Rpk包，直接安装预览（模拟器非运行状态时禁用）。\n   \n   * 自定义镜像目录：当用于本地多有个镜像文件时，用户可以自定义镜像目录，运行自己本地的镜像文件。\n   \n   * 重置镜像目录为默认：用户自定义镜像目录后，可以通过重置镜像目录为将镜像运行目录重置为系统默认目录。\n\n\n\n\n# 模拟器SDK管理\n\n模拟器SDK管理主要分为两部分：\n\n * 模拟器内核，如下图1所示\n * 模拟器镜像，如下图2所示\n\n\n\n模拟器SDK管理页面中主要从四个维度展示模拟器信息\n\n * 名称\n * 版本\n * 构建时间\n * 状态\n\n每次启动AIoT-IDE时，会自动检测模拟器内核和模拟器镜像版本是否需要更新或安装，用户可以在列表的状态一栏中，查看到模拟器内核或被模拟器镜像是否安装或是否需要升级，可手动点击安装或升级，如下图1所示\n\n\n\n\n# 设备使用配置\n\n除了上面的基础功能，模拟器设备管理页面提供可一项单的的设备使用配置（如下图1所示）：\n\n * Adb Mode: 是否优先使用插件内置的adb模块，还是使用主机本地的adb模块（如下图2所示）\n * Hide Qt Window: 是否使用GRPC技术将模拟器嵌入到IDE中显示，否则在IDE外部弹出显示（如下图3所示）。\n\n",normalizedContent:"# 设备管理\n\n设备管理页主要分为两部分：\n\n * 1.模拟器版本管理：提供对模拟器的增删改查和运行功能，如下图1所示。\n * 2.vela镜像版本管理：提供对模拟器运行环境所需的sdk包的安装和更新，如下图2所示。\n\n\n\n\n# 模拟器设备管理\n\n模拟器设备管理，主要展示模拟器的基本信息：\n\n * 名称\n * 镜像版本\n * 屏幕尺寸\n * 构建时间\n * 操作栏（提供删除，运行等功能）\n\n此外，用户可以点击左上角新建按钮进入模拟器创建页面。\n\n\n\n\n# 自动创建模拟器\n\n在初次使用 aiot-ide开发工具时，在初始化模拟器环境时，会检测本地是否已经创建过模拟器，若本地没有创建过模拟器将会提示开发者是否要自动创建模拟器。\n\n\n\n选择确定，将会在初始化环境后自动创建一个正式版模拟器。\n\n\n\n选择创建所有设备模拟器，将会自动创建所有设备类型的模拟器。\n\n\n\n\n# 新建模拟器\n\n点击上图新建按钮打开模拟器创建页面。首次进入创建模拟器页面，镜像版本默认为vela-miwear-watch-5.0，输入模拟器名称后，点击新建即可完成创建。如下图标签1，2，3，4所示：\n\n\n\n除了默认的vela-miwear-watch-5.0镜像，还可以在上图标签3中，下拉选择vela-miwear-watch-4.0镜像和vela-watch-4.0镜像，如下图标签1，2所示：\n\n\n\n在设备管理列表中，可对已创建的模拟器进行操作，目前提供了运行，暂停，删除等操作按钮。\n\n * 此外，在设备管理列表中，为了方便用户操作，还提供了多个快捷配置：\n   \n   * 复制启动命令：复制当前模拟器的启动命令，方便用户通过命令行自启模拟器和模拟器启动失败时进行排查。\n   \n   * 打开模拟器目录：打开模拟器文件存放目录，方便直接查看模拟器配置文件。\n   \n   * 打开镜像文件：打开模拟器sdk包存放目录，方便直接查看模拟器sdk包文件。\n   \n   * 安装rpk：在模拟器运行成功后，用于可选择本地环境里rpk包，直接安装预览（模拟器非运行状态时禁用）。\n   \n   * 自定义镜像目录：当用于本地多有个镜像文件时，用户可以自定义镜像目录，运行自己本地的镜像文件。\n   \n   * 重置镜像目录为默认：用户自定义镜像目录后，可以通过重置镜像目录为将镜像运行目录重置为系统默认目录。\n\n\n\n\n# 模拟器sdk管理\n\n模拟器sdk管理主要分为两部分：\n\n * 模拟器内核，如下图1所示\n * 模拟器镜像，如下图2所示\n\n\n\n模拟器sdk管理页面中主要从四个维度展示模拟器信息\n\n * 名称\n * 版本\n * 构建时间\n * 状态\n\n每次启动aiot-ide时，会自动检测模拟器内核和模拟器镜像版本是否需要更新或安装，用户可以在列表的状态一栏中，查看到模拟器内核或被模拟器镜像是否安装或是否需要升级，可手动点击安装或升级，如下图1所示\n\n\n\n\n# 设备使用配置\n\n除了上面的基础功能，模拟器设备管理页面提供可一项单的的设备使用配置（如下图1所示）：\n\n * adb mode: 是否优先使用插件内置的adb模块，还是使用主机本地的adb模块（如下图2所示）\n * hide qt window: 是否使用grpc技术将模拟器嵌入到ide中显示，否则在ide外部弹出显示（如下图3所示）。\n\n",charsets:{cjk:!0}},{title:"新建项目",frontmatter:{},regularPath:"/zh/tools/project/creat-project.html",relativePath:"zh/tools/project/creat-project.md",key:"v-64a017ae",path:"/zh/tools/project/creat-project.html",headersStr:null,content:"# 新建项目\n\nAIoT-IDE提供了对Xiaomi Vela JS应用项目的新建和管理功能。\n\n开发者初次使用AIoT-IDE时可按如下步骤打开新建项目弹窗创建项目：\n\n * 1.点击左上角文件按钮，出现下拉菜单。\n * 2.点击新建项目菜单，打开新建项目弹窗。\n\n\n\n在新建项目时可选择项目类型，并通过我们提供的模板创建基础的Xiaomi Vela JS应用项目，目前提供了八种基础模板：\n\n * 1.Xiaomi Vela JS应用项目基础模板\n * 2.Xiaomi Vela JS应用项目日历模板\n * 3.Xiaomi Vela JS应用项目图表模板\n * 4.Xiaomi Vela JS应用项目列表模板\n * 5.Xiaomi Vela JS应用项目音乐播放器模板\n * 6.Xiaomi Vela JS应用项目开发示例模板\n * 7.Xiaomi Vela JS应用项目计算器模板\n * 8.Xiaomi Vela JS应用项目设置面板模板\n\n\n\n选择完模板后，点击下一步，请按下面步骤完成创建：\n\n * 1.输入项目名称\n * 2.选择创建目录(AIoT-IDE会记录用户曾选择过的创建目录，可直接选择)\n * 3.输入完相应表单内容，点击创建，即可创建成功。\n\n\n\n创建成功后，AIoT-IDE会自动打开创建的项目，按引导页指示安装项目依赖后，即可运行项目(下图标签1，2)。\n\n",normalizedContent:"# 新建项目\n\naiot-ide提供了对xiaomi vela js应用项目的新建和管理功能。\n\n开发者初次使用aiot-ide时可按如下步骤打开新建项目弹窗创建项目：\n\n * 1.点击左上角文件按钮，出现下拉菜单。\n * 2.点击新建项目菜单，打开新建项目弹窗。\n\n\n\n在新建项目时可选择项目类型，并通过我们提供的模板创建基础的xiaomi vela js应用项目，目前提供了八种基础模板：\n\n * 1.xiaomi vela js应用项目基础模板\n * 2.xiaomi vela js应用项目日历模板\n * 3.xiaomi vela js应用项目图表模板\n * 4.xiaomi vela js应用项目列表模板\n * 5.xiaomi vela js应用项目音乐播放器模板\n * 6.xiaomi vela js应用项目开发示例模板\n * 7.xiaomi vela js应用项目计算器模板\n * 8.xiaomi vela js应用项目设置面板模板\n\n\n\n选择完模板后，点击下一步，请按下面步骤完成创建：\n\n * 1.输入项目名称\n * 2.选择创建目录(aiot-ide会记录用户曾选择过的创建目录，可直接选择)\n * 3.输入完相应表单内容，点击创建，即可创建成功。\n\n\n\n创建成功后，aiot-ide会自动打开创建的项目，按引导页指示安装项目依赖后，即可运行项目(下图标签1，2)。\n\n",charsets:{cjk:!0}},{title:"管理项目",frontmatter:{},regularPath:"/zh/tools/project/project.html",relativePath:"zh/tools/project/project.md",key:"v-401963b4",path:"/zh/tools/project/project.html",headers:[{level:2,title:"打开历史项目",slug:"打开历史项目",normalizedTitle:"打开历史项目",charIndex:59},{level:2,title:"删除项目",slug:"删除项目",normalizedTitle:"删除项目",charIndex:149},{level:2,title:"导入项目",slug:"导入项目",normalizedTitle:"导入项目",charIndex:240}],headersStr:"打开历史项目 删除项目 导入项目",content:"# 管理项目\n\n对通过AIoT-IDE新建项目创建的Xiaomi Vela JS应用项目，AIoT-IDE提供了删除和打开历史项目的功能。\n\n\n# 打开历史项目\n\n在打开新建项目弹窗时，可查看到已创建项目的历史信息卡片，选中其中一个项目，通过右下角打开按钮打开项目，如下图1，2所示：\n\n\n\n\n# 删除项目\n\n将鼠标移动至历史项目信息顶部的管理按钮，点击后每个卡片的右上角会出现一个勾选按钮，选择一个或多个历史项目后，可点击右下角删除项目。如下图标签1，2，3所示：\n\n\n\n\n# 导入项目\n\n将鼠标移动至历史项目信息顶部的导入按钮，点击后将会自动打开一个文件夹选择框，选择对应的项目类型进行导入，非qucikApp项目和Xiaomi Vela JS应用项目将无法导入\n\n",normalizedContent:"# 管理项目\n\n对通过aiot-ide新建项目创建的xiaomi vela js应用项目，aiot-ide提供了删除和打开历史项目的功能。\n\n\n# 打开历史项目\n\n在打开新建项目弹窗时，可查看到已创建项目的历史信息卡片，选中其中一个项目，通过右下角打开按钮打开项目，如下图1，2所示：\n\n\n\n\n# 删除项目\n\n将鼠标移动至历史项目信息顶部的管理按钮，点击后每个卡片的右上角会出现一个勾选按钮，选择一个或多个历史项目后，可点击右下角删除项目。如下图标签1，2，3所示：\n\n\n\n\n# 导入项目\n\n将鼠标移动至历史项目信息顶部的导入按钮，点击后将会自动打开一个文件夹选择框，选择对应的项目类型进行导入，非qucikapp项目和xiaomi vela js应用项目将无法导入\n\n",charsets:{cjk:!0}},{title:"项目类型",frontmatter:{},regularPath:"/zh/tools/project/template.html",relativePath:"zh/tools/project/template.md",key:"v-2580dfb6",path:"/zh/tools/project/template.html",headersStr:null,content:"# 项目类型\n\nAIoT-IDE不仅支持Xiaomi Vela JS应用项目，还支持对快应用项目的创建.\n\n\n\n如上图标签1，2所示，在打开新建项目弹窗后，可左侧菜单栏选择quickApp，再点击创建进入创建页面，按输入提示输入创建信息，即可创建快应用项目。\n\n",normalizedContent:"# 项目类型\n\naiot-ide不仅支持xiaomi vela js应用项目，还支持对快应用项目的创建.\n\n\n\n如上图标签1，2所示，在打开新建项目弹窗后，可左侧菜单栏选择quickapp，再点击创建进入创建页面，按输入提示输入创建信息，即可创建快应用项目。\n\n",charsets:{cjk:!0}},{title:"发布应用",frontmatter:{},regularPath:"/zh/tools/release/release.html",relativePath:"zh/tools/release/release.md",key:"v-ac772924",path:"/zh/tools/release/release.html",headersStr:null,content:"# 发布应用\n\n不同于顶部按钮区域的打包按钮，点击发布按钮发布应用，将生成release包。\n\nrelease包是为了发布到生产环境而设计的，因此它会进行更严格的优化，以减少文件大小和加载时间。通常情况下，release 只包含必要的文件和代码，会删除所有的调试信息、注释和未使用的代码，以减小文件大小并提高性能。\n\n同时，在生成release包前，会检查当前目录下是否包含签名文件，如果没有会进入创建签名页面，按提示点击完成即可创建签名文件。\n\n\n\n签名文件创建成功后，再次点击发布即可创建release包。\n\n",normalizedContent:"# 发布应用\n\n不同于顶部按钮区域的打包按钮，点击发布按钮发布应用，将生成release包。\n\nrelease包是为了发布到生产环境而设计的，因此它会进行更严格的优化，以减少文件大小和加载时间。通常情况下，release 只包含必要的文件和代码，会删除所有的调试信息、注释和未使用的代码，以减小文件大小并提高性能。\n\n同时，在生成release包前，会检查当前目录下是否包含签名文件，如果没有会进入创建签名页面，按提示点击完成即可创建签名文件。\n\n\n\n签名文件创建成功后，再次点击发布即可创建release包。\n\n",charsets:{cjk:!0}},{title:"打包应用",frontmatter:{},regularPath:"/zh/tools/release/start.html",relativePath:"zh/tools/release/start.md",key:"v-3ed53990",path:"/zh/tools/release/start.html",headersStr:null,content:"# 打包应用\n\nXiaomi Vela JS 应用 应用的封装采用了专门的 .rpk 文件格式，而在 AIoT-IDE 中，我们在顶部操作栏提供了打包，发布两个按钮对项目进行打包，如下图标签1，2所示。\n\n\n\n直接点击打包应用，会在功能面板执行打包名，打包成功后会在dist目录下生成debug包\n\n\n\ndebug包是为了方便开发者进行调试而设计的，因此它不会进行过多的优化。通常情况下，debug 包会包含调试信息，以便开发者进行调试和定位错误。",normalizedContent:"# 打包应用\n\nxiaomi vela js 应用 应用的封装采用了专门的 .rpk 文件格式，而在 aiot-ide 中，我们在顶部操作栏提供了打包，发布两个按钮对项目进行打包，如下图标签1，2所示。\n\n\n\n直接点击打包应用，会在功能面板执行打包名，打包成功后会在dist目录下生成debug包\n\n\n\ndebug包是为了方便开发者进行调试而设计的，因此它不会进行过多的优化。通常情况下，debug 包会包含调试信息，以便开发者进行调试和定位错误。",charsets:{cjk:!0}},{title:"了解界面",frontmatter:{},regularPath:"/zh/tools/start/project.html",relativePath:"zh/tools/start/project.md",key:"v-07b72814",path:"/zh/tools/start/project.html",headers:[{level:2,title:"界面布局",slug:"界面布局",normalizedTitle:"界面布局",charIndex:11},{level:2,title:"工具栏界面",slug:"工具栏界面",normalizedTitle:"工具栏界面",charIndex:361},{level:2,title:"模拟器界面",slug:"模拟器界面",normalizedTitle:"模拟器界面",charIndex:625},{level:2,title:"用户引导页",slug:"用户引导页",normalizedTitle:"用户引导页",charIndex:650},{level:2,title:"设备管理页",slug:"设备管理页",normalizedTitle:"设备管理页",charIndex:461},{level:2,title:"模拟器运行预览页面",slug:"模拟器运行预览页面",normalizedTitle:"模拟器运行预览页面",charIndex:677}],headersStr:"界面布局 工具栏界面 模拟器界面 用户引导页 设备管理页 模拟器运行预览页面",content:"# 了解界面\n\n\n# 界面布局\n\nAIoT-IDE 的主窗口由几个主要区域构成，具体如下：\n\n1.侧边栏：提供资源管理器、搜索、Git 管理、插件市场、快捷入口等功能。\n2.菜单栏：包含文件、编辑、选择、视图、转到、终端、窗口、帮助等菜单项。\n3.工具栏：包含修运行、调试、重启、打包、发布等功能按钮选项。\n4.代码编辑区：包含代码编辑、定义跳转、代码补全、错误提示等功能，详情参阅代码补全。\n5.功能面板：提供问题、输出、终端、调试等面板。\n6.模拟器：包含引导页提示，仿真预览、模拟真机操作、截图等功能。\n\n\n\n只有通过AIoT-IDE 打开的是一个Xiaomi Vela JS应用，主窗口界面才会如上图所示，AIoT-IDE会通过打开的项目结构自动识别打开的项目是否为Xiaomi Vela JS应用项目。\n\n\n# 工具栏界面\n\nAIoT-IDE 工具栏界面中含有几个常用功能：\n\n选择设备：选择本地创建的模拟器\n调试：编译预览当前打开的Xiaomi Vela JS应用项目，并打开调试面板，调试当前项目\n设备：打开设备管理页面，创建不同镜像类型，设备类型的模拟器\n打包：将当前Xiaomi Vela JS应用项目打包为rpk\n发布：生成 release类型的应用包（RPK）\n\n另外，AIoT-IDE支持直接预览Xiaomi Vela JS应用项目打包后的rpk，可将rpk解压后的目录通过AIoT-IDE打开，可对rpk进行预览。\n\n\n# 模拟器界面\n\n模拟器界面主要包含三部分:\n\n * 用户引导页\n * 模拟器SDK和设备管理更新页\n * 模拟器运行预览页面\n\n\n# 用户引导页\n\n模拟器用户引导页会引导用户初始化Xiaomi Vela JS应用模拟器运行环境。按引导页提示进行操作:\n\n * 1.安装项目依赖，等待项目依赖和环境安装完成，才能正常编译预览Xiaomi Vela JS应用项目\n * 2.初始化模拟器环境，模拟器用户引导页会自动当前环境是否具备模拟器运行环境，如不具备可按用户引导页操作，自动安装好模拟器环境\n\n\n\n按照上图引导页提示正确操作完毕后，引导页会给出项目可以当前项目可以正常启动的提示，如下图中标签1所示。\n\n\n\n注意：出于性能考虑，引导页不会轮询监测项目依赖和模拟器运行环境是否已经具备，当用户选择自行手动安装的方式，安装好项目依赖和模拟器运行环境时，可点击引导页右上角刷新按钮，刷新引导页状态。\n\n\n\n\n# 设备管理页\n\n设备管理页主要分为两部分：\n\n * 1.模拟器管理和真机调试：提供对模拟器的增删改查和运行功能和真机调试\n * 2.模拟器SDK管理：提供对模拟器运行环境所需的SDK包的安装和更新\n\n\n\n\n\n\n# 模拟器运行预览页面\n\n模拟器预览页是通过grpc技术将运行的模拟器内嵌到AIoT-IDE中，进行预览显示。当项目依赖和模拟器环境具备后，可按如下步骤预览当前项目：\n\n * 1.点击顶部操作栏的选择设备按钮，选择一个或多个要运行的模拟器。\n * 2.点击顶部操作栏的调试按钮，运行模拟器，按钮进入loading状态，运行成功后，会变为蓝色。\n * 3.底部工具栏开始输出模拟器运行日志，页面从用户引导页自动切换模拟器预览页面。\n * 4.模拟器运行成功，模拟器预览页将出现对应模拟器，并将当前打开的Xiaomi Vela JS应用推送到运行的模拟器中。\n\n",normalizedContent:"# 了解界面\n\n\n# 界面布局\n\naiot-ide 的主窗口由几个主要区域构成，具体如下：\n\n1.侧边栏：提供资源管理器、搜索、git 管理、插件市场、快捷入口等功能。\n2.菜单栏：包含文件、编辑、选择、视图、转到、终端、窗口、帮助等菜单项。\n3.工具栏：包含修运行、调试、重启、打包、发布等功能按钮选项。\n4.代码编辑区：包含代码编辑、定义跳转、代码补全、错误提示等功能，详情参阅代码补全。\n5.功能面板：提供问题、输出、终端、调试等面板。\n6.模拟器：包含引导页提示，仿真预览、模拟真机操作、截图等功能。\n\n\n\n只有通过aiot-ide 打开的是一个xiaomi vela js应用，主窗口界面才会如上图所示，aiot-ide会通过打开的项目结构自动识别打开的项目是否为xiaomi vela js应用项目。\n\n\n# 工具栏界面\n\naiot-ide 工具栏界面中含有几个常用功能：\n\n选择设备：选择本地创建的模拟器\n调试：编译预览当前打开的xiaomi vela js应用项目，并打开调试面板，调试当前项目\n设备：打开设备管理页面，创建不同镜像类型，设备类型的模拟器\n打包：将当前xiaomi vela js应用项目打包为rpk\n发布：生成 release类型的应用包（rpk）\n\n另外，aiot-ide支持直接预览xiaomi vela js应用项目打包后的rpk，可将rpk解压后的目录通过aiot-ide打开，可对rpk进行预览。\n\n\n# 模拟器界面\n\n模拟器界面主要包含三部分:\n\n * 用户引导页\n * 模拟器sdk和设备管理更新页\n * 模拟器运行预览页面\n\n\n# 用户引导页\n\n模拟器用户引导页会引导用户初始化xiaomi vela js应用模拟器运行环境。按引导页提示进行操作:\n\n * 1.安装项目依赖，等待项目依赖和环境安装完成，才能正常编译预览xiaomi vela js应用项目\n * 2.初始化模拟器环境，模拟器用户引导页会自动当前环境是否具备模拟器运行环境，如不具备可按用户引导页操作，自动安装好模拟器环境\n\n\n\n按照上图引导页提示正确操作完毕后，引导页会给出项目可以当前项目可以正常启动的提示，如下图中标签1所示。\n\n\n\n注意：出于性能考虑，引导页不会轮询监测项目依赖和模拟器运行环境是否已经具备，当用户选择自行手动安装的方式，安装好项目依赖和模拟器运行环境时，可点击引导页右上角刷新按钮，刷新引导页状态。\n\n\n\n\n# 设备管理页\n\n设备管理页主要分为两部分：\n\n * 1.模拟器管理和真机调试：提供对模拟器的增删改查和运行功能和真机调试\n * 2.模拟器sdk管理：提供对模拟器运行环境所需的sdk包的安装和更新\n\n\n\n\n\n\n# 模拟器运行预览页面\n\n模拟器预览页是通过grpc技术将运行的模拟器内嵌到aiot-ide中，进行预览显示。当项目依赖和模拟器环境具备后，可按如下步骤预览当前项目：\n\n * 1.点击顶部操作栏的选择设备按钮，选择一个或多个要运行的模拟器。\n * 2.点击顶部操作栏的调试按钮，运行模拟器，按钮进入loading状态，运行成功后，会变为蓝色。\n * 3.底部工具栏开始输出模拟器运行日志，页面从用户引导页自动切换模拟器预览页面。\n * 4.模拟器运行成功，模拟器预览页将出现对应模拟器，并将当前打开的xiaomi vela js应用推送到运行的模拟器中。\n\n",charsets:{cjk:!0}},{title:"关于AIoT-IDE",frontmatter:{},regularPath:"/zh/tools/start/about.html",relativePath:"zh/tools/start/about.md",key:"v-a8bb0b28",path:"/zh/tools/start/about.html",headers:[{level:2,title:"了解界面",slug:"了解界面",normalizedTitle:"了解界面",charIndex:296}],headersStr:"了解界面",content:"# 关于AIoT-IDE\n\nAIoT-IDE 是用于开发Xiaomi Vela JS 应用的官方集成开发环境。建立在 Visual Studio Code（以下简称 VS Code）的基础上，它继承了 VS Code 的全部功能，比如代码编辑、插件集成、主题定制及个性化设置。此外，AIoT-IDE 还引入了一系列专门针对 Vela JS 应用开发的增强功能，它们包括但不限于：\n\n * 智能编码提示\n * Vela JS应用调试\n * 实时编译预览\n * Vela JS应用 打包发布\n\n本章主要介绍 AIoT-IDE 的核心功能。如需下载安装请查看，请直接访问 安装环境 章节。\n\n\n# 了解界面\n\nAIoT-IDE 的主窗口由几个主要区域构成，具体如下：\n\n * 1.侧边栏：提供资源管理器、搜索、Git 管理、插件市场、快捷入口等功能\n * 2.菜单栏：包含文件、编辑、选择、视图、转到、终端、窗口、帮助等菜单项\n * 3.工具栏：包含修运行、调试、重启、打包、发布等功能按钮选项\n * 4.代码编辑区：包含代码编辑、定义跳转、代码补全、错误提示等功能，详情参阅代码补全\n * 5.功能面板：提供问题、输出、终端、调试等面板\n * 6.模拟器：包含引导页提示，仿真预览、模拟真机操作、截图等功能\n\n\n\n只有通过AIoT-IDE 打开的是一个Xiaomi Vela JS应用项目，项目窗口才会如上所示，AIoT-IDE会通过项目结构自动识别打开的项目是否为Xiaomi Vela JS应用项目",normalizedContent:"# 关于aiot-ide\n\naiot-ide 是用于开发xiaomi vela js 应用的官方集成开发环境。建立在 visual studio code（以下简称 vs code）的基础上，它继承了 vs code 的全部功能，比如代码编辑、插件集成、主题定制及个性化设置。此外，aiot-ide 还引入了一系列专门针对 vela js 应用开发的增强功能，它们包括但不限于：\n\n * 智能编码提示\n * vela js应用调试\n * 实时编译预览\n * vela js应用 打包发布\n\n本章主要介绍 aiot-ide 的核心功能。如需下载安装请查看，请直接访问 安装环境 章节。\n\n\n# 了解界面\n\naiot-ide 的主窗口由几个主要区域构成，具体如下：\n\n * 1.侧边栏：提供资源管理器、搜索、git 管理、插件市场、快捷入口等功能\n * 2.菜单栏：包含文件、编辑、选择、视图、转到、终端、窗口、帮助等菜单项\n * 3.工具栏：包含修运行、调试、重启、打包、发布等功能按钮选项\n * 4.代码编辑区：包含代码编辑、定义跳转、代码补全、错误提示等功能，详情参阅代码补全\n * 5.功能面板：提供问题、输出、终端、调试等面板\n * 6.模拟器：包含引导页提示，仿真预览、模拟真机操作、截图等功能\n\n\n\n只有通过aiot-ide 打开的是一个xiaomi vela js应用项目，项目窗口才会如上所示，aiot-ide会通过项目结构自动识别打开的项目是否为xiaomi vela js应用项目",charsets:{cjk:!0}},{title:"AIoT-toolkit",frontmatter:{},regularPath:"/zh/tools/toolkit/start.html",relativePath:"zh/tools/toolkit/start.md",key:"v-48f684ca",path:"/zh/tools/toolkit/start.html",headers:[{level:2,title:"功能支持",slug:"功能支持",normalizedTitle:"功能支持",charIndex:138},{level:2,title:"版本支持",slug:"版本支持",normalizedTitle:"版本支持",charIndex:618},{level:2,title:"功能优化",slug:"功能优化",normalizedTitle:"功能优化",charIndex:974}],headersStr:"功能支持 版本支持 功能优化",content:'# AIoT-toolkit\n\n开发者在开发Xiaomi Vela JS 应用项目时，AIoT-IDE主要通过项目模板中内置的AIoT-toolkit完成项目的编译构建任务，得到构建文件（以 rpk 后缀命名，如：com.application.demo.rpk）。\n\n\n# 功能支持\n\nAIoT-toolkit是将源码项目转换为目标代码项目并生成目标代码应用的命令行工具，同时配备了 模拟器 相关功能供开发者使用。AIoT-toolkit提供了脱离AIoT-IDE，独立开发Xiaomi Vela JS 应用的能力。在不使用AIoT-IDE的情况下，可以完全通过AIoT-toolkit使用命令行工具进行开发，目前最新的AIoT-toolkit2.0有以下常用命令：\n\n * 创建项目：npm create aiot\n * 直接运行：aiot start，第一次运行会提示创建的模拟器，根据提示操作即可\n * 构建项目，生成rpk： aiot build\n * 构建项目-release模式：aiot release\n * 获取已连接设备列表: aiot getConnectedDevices\n * 获取设置平台：aiot getPlatforms\n * 创建Xiaomi Vela JS模拟器：aiot crateVelaAvd\n * 删除Xiaomi Vela JS模拟器：aiot deleteVelafangAvd\n\n\n# 版本支持\n\n目前AIoT-IDE支持AIoT-toolkit1.0，和AIoT-toolkit2.0，对AIoT-toolkit1.0的支持最小版本为1.0.18，对AIoT-toolkit2.0的支持最小版本为2.0.x。当前最新的AIoT-IDE1.6.0版本，推荐使用2.0，2.0提供了更快的编译速度和热更新支持，将给开发者提供更好的开发体验。\n\nAIoT-IDE在打开一个Xiaomi Vela JS应用时，会主动检测AIoT-toolkit版本，当前项目使用的是AIoT-toolkit1.0时会提示你可以升级并查看迁移文档，如下图标签1所示：\n\n\n\n如果你项目中使用了AIoT-toolkit2.0，但不是当前AIoT-IDE支持的最小正式版本，则会强制提示你升级。如下图标签1所示：\n\n\n\n\n# 功能优化\n\n对比AIoT-toolkit1.0，AIoT-toolkit2.0有以下重大改进：\n1.模板语法中可以直接写复杂函数\n\n<div \n    id="{{(x=> x+ y)(1)}}" \n    onclick="(evt)=>{\n       const x = 10;\n       return sum(x, evt, y)\n    }">\n</div>\n\n\n2.class的变量可以包含多个类名(之前每个变量只能包含1个类名)\n\nclass="a {{x}}"  // x="a1 a2 a3"\n\n\n3.style可以是string，也可以是object(之前只是object)\n\n <div style="a{{b}}c">\n\n </div>\n\n\n4.样式顺序可以随意写(之前必须按固定顺序)\n\n border: solid red 10px; \n\n\n5.错误提示定位到行列',normalizedContent:'# aiot-toolkit\n\n开发者在开发xiaomi vela js 应用项目时，aiot-ide主要通过项目模板中内置的aiot-toolkit完成项目的编译构建任务，得到构建文件（以 rpk 后缀命名，如：com.application.demo.rpk）。\n\n\n# 功能支持\n\naiot-toolkit是将源码项目转换为目标代码项目并生成目标代码应用的命令行工具，同时配备了 模拟器 相关功能供开发者使用。aiot-toolkit提供了脱离aiot-ide，独立开发xiaomi vela js 应用的能力。在不使用aiot-ide的情况下，可以完全通过aiot-toolkit使用命令行工具进行开发，目前最新的aiot-toolkit2.0有以下常用命令：\n\n * 创建项目：npm create aiot\n * 直接运行：aiot start，第一次运行会提示创建的模拟器，根据提示操作即可\n * 构建项目，生成rpk： aiot build\n * 构建项目-release模式：aiot release\n * 获取已连接设备列表: aiot getconnecteddevices\n * 获取设置平台：aiot getplatforms\n * 创建xiaomi vela js模拟器：aiot cratevelaavd\n * 删除xiaomi vela js模拟器：aiot deletevelafangavd\n\n\n# 版本支持\n\n目前aiot-ide支持aiot-toolkit1.0，和aiot-toolkit2.0，对aiot-toolkit1.0的支持最小版本为1.0.18，对aiot-toolkit2.0的支持最小版本为2.0.x。当前最新的aiot-ide1.6.0版本，推荐使用2.0，2.0提供了更快的编译速度和热更新支持，将给开发者提供更好的开发体验。\n\naiot-ide在打开一个xiaomi vela js应用时，会主动检测aiot-toolkit版本，当前项目使用的是aiot-toolkit1.0时会提示你可以升级并查看迁移文档，如下图标签1所示：\n\n\n\n如果你项目中使用了aiot-toolkit2.0，但不是当前aiot-ide支持的最小正式版本，则会强制提示你升级。如下图标签1所示：\n\n\n\n\n# 功能优化\n\n对比aiot-toolkit1.0，aiot-toolkit2.0有以下重大改进：\n1.模板语法中可以直接写复杂函数\n\n<div \n    id="{{(x=> x+ y)(1)}}" \n    onclick="(evt)=>{\n       const x = 10;\n       return sum(x, evt, y)\n    }">\n</div>\n\n\n2.class的变量可以包含多个类名(之前每个变量只能包含1个类名)\n\nclass="a {{x}}"  // x="a1 a2 a3"\n\n\n3.style可以是string，也可以是object(之前只是object)\n\n <div style="a{{b}}c">\n\n </div>\n\n\n4.样式顺序可以随意写(之前必须按固定顺序)\n\n border: solid red 10px; \n\n\n5.错误提示定位到行列',charsets:{cjk:!0}},{title:"升级迁移",frontmatter:{},regularPath:"/zh/tools/toolkit/update.html",relativePath:"zh/tools/toolkit/update.md",key:"v-b482f194",path:"/zh/tools/toolkit/update.html",headers:[{level:2,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:113}],headersStr:"注意事项",content:'# 升级迁移\n\n相较于AIoT-toolkit1.0，AIoT-toolkit2.0对Xiaomi Vela JS项目编译的速度有了极大的提升，同时也带来一些破坏性更新。在老项目使用了1.0现准备向2.0升级迁移时，请按下面的注意事项，对源代码进行轻微修改。\n\n\n# 注意事项\n\n开发者在从AIoT-toolkit1.0升级到AIoT-toolkit2.0有以下注意事项:\n\n描述                                                     解决办法\n有些语法修正                                                 修改源代码\n1. {{}} 中无需再嵌套{{}}，onclick="{{fun({{x}}，{{y}})}}" 改为\nonclick="fun(x, y)"\n\n2.不支持的样式选择器报错，例如伪类\n动态路径没有转换为完整的路径：                                        修改源代码\n1.0写法：../../common\n2.0写法：/common/****\n\n还有一些特殊的动态css值，从AIoT-toolkit1.0升级到AIoT-toolkit2.0，也要使用新的写法:\n\n * transform\n\n this.divStyle = {\n   transform: JSON.stringify({\n       translateX: "10px",\n       translateY: "20px",\n       scaleX: 2,\n       scaleY: 0.5,\n       rotate: "10deg",\n   }),\n };\n\n\n * background\n   \n     // 线性渐变\n     this.divStyle = {\n         background: JSON.stringify({\n             values: [\n             {\n                 type: "linearGradient",\n                 directions: ["to", "left"],\n                 values: ["#FF0000 10px", "#0000FF 100%"],\n             },\n             ],\n         }),\n     };\n     // 径向渐变\n     this.divStyle = {\n         background: JSON.stringify({\n             values: [{\n                 type: "radialGradient",\n                 size: ["farthest-corner"],\n                 directions: ["center"],\n                 values: ["#3f87a6", "#ebf8e1", "#f69d3c"],\n             }],\n         }),\n     };\n   \n\n * filter\n\n   this.divStyle = {\n       filter: JSON.stringify({\n           blur: "10px",\n       }),\n   };\n\n\n * url\n\nthis.divStyle = {\n   backgroundImage: "/common/logo.png",\n};\n\n\n注意\n\n以上改动请务必按照注意事项中的说明进行修改，否则在升级到2.0后将影响项目的正常运行和启动。',normalizedContent:'# 升级迁移\n\n相较于aiot-toolkit1.0，aiot-toolkit2.0对xiaomi vela js项目编译的速度有了极大的提升，同时也带来一些破坏性更新。在老项目使用了1.0现准备向2.0升级迁移时，请按下面的注意事项，对源代码进行轻微修改。\n\n\n# 注意事项\n\n开发者在从aiot-toolkit1.0升级到aiot-toolkit2.0有以下注意事项:\n\n描述                                                     解决办法\n有些语法修正                                                 修改源代码\n1. {{}} 中无需再嵌套{{}}，onclick="{{fun({{x}}，{{y}})}}" 改为\nonclick="fun(x, y)"\n\n2.不支持的样式选择器报错，例如伪类\n动态路径没有转换为完整的路径：                                        修改源代码\n1.0写法：../../common\n2.0写法：/common/****\n\n还有一些特殊的动态css值，从aiot-toolkit1.0升级到aiot-toolkit2.0，也要使用新的写法:\n\n * transform\n\n this.divstyle = {\n   transform: json.stringify({\n       translatex: "10px",\n       translatey: "20px",\n       scalex: 2,\n       scaley: 0.5,\n       rotate: "10deg",\n   }),\n };\n\n\n * background\n   \n     // 线性渐变\n     this.divstyle = {\n         background: json.stringify({\n             values: [\n             {\n                 type: "lineargradient",\n                 directions: ["to", "left"],\n                 values: ["#ff0000 10px", "#0000ff 100%"],\n             },\n             ],\n         }),\n     };\n     // 径向渐变\n     this.divstyle = {\n         background: json.stringify({\n             values: [{\n                 type: "radialgradient",\n                 size: ["farthest-corner"],\n                 directions: ["center"],\n                 values: ["#3f87a6", "#ebf8e1", "#f69d3c"],\n             }],\n         }),\n     };\n   \n\n * filter\n\n   this.divstyle = {\n       filter: json.stringify({\n           blur: "10px",\n       }),\n   };\n\n\n * url\n\nthis.divstyle = {\n   backgroundimage: "/common/logo.png",\n};\n\n\n注意\n\n以上改动请务必按照注意事项中的说明进行修改，否则在升级到2.0后将影响项目的正常运行和启动。',charsets:{cjk:!0}}],themeConfig:{logo:"/logo.png",searchMaxSuggestions:30,locales:{"/":{label:"简体中文",selectText:"选择语言",ariaLabel:"选择语言",toc:"快速导航",searchPlaceholder:"搜索",lastUpdated:"上次更新",nav:[{text:"教程",link:"/zh/guide/"},{text:"组件",link:"/zh/components/"},{text:"JS接口",link:"/zh/features/"},{text:"编程示例",link:"/zh/samples/"},{text:"工具",link:"/zh/tools/"}],sidebar:{"/zh/guide/":[{title:"快速入门",path:"/zh/guide/start",collapsable:!1,sidebarDepth:0,children:[["/zh/guide/start/use-ide","安装环境"],"/zh/guide/start/project-overview","/zh/guide/start/user-interface","/zh/guide/start/add-interactivity","/zh/guide/start/data-fetch","/zh/guide/start/toolkit-params"]},{title:"基础功能",path:"/zh/guide/framework/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/framework/project-structure","/zh/guide/framework/manifest","/zh/guide/framework/ux",{title:"模板语法",path:"/zh/guide/framework/template/",sidebarDepth:0,children:["/zh/guide/framework/template/Props","/zh/guide/framework/template/event","/zh/guide/framework/template/for","/zh/guide/framework/template/if","/zh/guide/framework/template/computed","/zh/guide/framework/template/component"]},{title:"样式语法",path:"/zh/guide/framework/style/",sidebarDepth:0,children:["/zh/guide/framework/style/page-style-and-layout","/zh/guide/framework/style/media-query"]},{title:"脚本语法",path:"/zh/guide/framework/script/",sidebarDepth:0,children:["/zh/guide/framework/script/global-data-method","/zh/guide/framework/script/page-data","/zh/guide/framework/script/lifecycle"]},"/zh/guide/framework/page-switch"]},{title:"进阶功能",path:"/zh/guide/framework/other/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/framework/other/i18n","/zh/guide/framework/other/background-running","/zh/guide/framework/other/hap-schema","/zh/guide/framework/other/launch-mode",{title:"多屏适配",path:"/zh/guide/multi-screens/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/multi-screens/specs","/zh/guide/multi-screens/samples","/zh/guide/multi-screens/conditional-compilation"]}]},{title:"开发者物料",path:"/zh/guide/developer-materials/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/developer-materials/extension-components"]},{title:"设计指南",path:"/zh/guide/design/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/design/multi-screens"]},{title:"最佳实践",path:"/zh/guide/best-practice/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/best-practice/memory","/zh/guide/best-practice/business","/zh/guide/best-practice/start"]},{title:"发布",path:"/zh/guide/publish/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/publish/acceptance-criteria"]},{title:"版本说明",path:"/zh/guide/version/",collapsable:!1,sidebarDepth:0,children:["/zh/guide/version/APILevel2","/zh/guide/version/APILevel3","/zh/guide/version/APILevel4"]},{title:"其他",collapsable:!1,sidebarDepth:0,children:["/zh/guide/other/faq","/zh/guide/other/tips"]}],"/zh/components/":[{title:"通用规范",path:"/zh/components/general/",collapsable:!1,sidebarDepth:0,children:["/zh/components/general/style","/zh/components/general/color","/zh/components/general/animation-style","/zh/components/general/background-img-styles","/zh/components/general/properties","/zh/components/general/events","/zh/components/general/methods"]},{title:"容器组件",path:"/zh/components/container/",collapsable:!1,sidebarDepth:0,children:["/zh/components/container/div","/zh/components/container/list","/zh/components/container/list-item","/zh/components/container/scroll","/zh/components/container/stack","/zh/components/container/swiper"]},{title:"基础组件",path:"/zh/components/basic/",collapsable:!1,sidebarDepth:0,children:["/zh/components/basic/text","/zh/components/basic/span","/zh/components/basic/a","/zh/components/basic/image","/zh/components/basic/image-animator","/zh/components/basic/progress","/zh/components/basic/marquee","/zh/components/basic/chart","/zh/components/basic/qrcode","/zh/components/basic/barcode"]},{title:"表单组件",path:"/zh/components/form/",collapsable:!1,sidebarDepth:0,children:["/zh/components/form/input","/zh/components/form/picker","/zh/components/form/switch","/zh/components/form/slider"]}],"/zh/features/":[{title:"通用规范",path:"/zh/features/grammar",collapsable:!1,sidebarDepth:2},{title:"基本功能",path:"/zh/features/basic/",collapsable:!1,sidebarDepth:0,children:["/zh/features/basic/app","/zh/features/basic/device","/zh/features/basic/router","/zh/features/basic/configuration"]},{title:"网络访问",path:"/zh/features/network/",collapsable:!1,sidebarDepth:0,children:["/zh/features/network/fetch","/zh/features/network/interconnect","/zh/features/network/request","/zh/features/network/uploadtask"]},{title:"数据文件",path:"/zh/features/data/",collapsable:!1,sidebarDepth:0,children:["/zh/features/data/storage","/zh/features/data/file"]},{title:"系统能力",path:"/zh/features/system/",collapsable:!1,sidebarDepth:0,children:["/zh/features/system/network","/zh/features/system/vibrator","/zh/features/system/brightness","/zh/features/system/record","/zh/features/system/geolocation","/zh/features/system/sensor","/zh/features/system/event","/zh/features/system/battery","/zh/features/system/volume","/zh/features/system/zip"]},{title:"安全",path:"/zh/features/security/",collapsable:!1,sidebarDepth:0,children:["/zh/features/security/crypto"]},{title:"其他",path:"/zh/features/other/",collapsable:!1,sidebarDepth:0,children:["/zh/features/other/audio","/zh/features/other/prompt"]}],"/zh/tools/":[{title:"快速入门",path:"/zh/tools/",collapsable:!1,sidebarDepth:0,children:["/zh/tools/","/zh/tools/start/project"]},{title:"项目创建",path:"/zh/tools/project/creat-project",collapsable:!1,sidebarDepth:0,children:["/zh/tools/project/creat-project","/zh/tools/project/template","/zh/tools/project/project"]},{title:"设备管理",path:"/zh/tools/emulator/create-emulator",collapsable:!1,sidebarDepth:0,children:["/zh/tools/emulator/create-emulator","/zh/tools/emulator/emulator-run"]},{title:"开发辅助",path:"/zh/tools/dev/start",collapsable:!1,sidebarDepth:0,children:["/zh/tools/dev/start","/zh/tools/dev/format","/zh/tools/dev/build","/zh/tools/dev/manifest"]},{title:"运行调试",path:"/zh/tools/debug/start",collapsable:!1,sidebarDepth:0,children:["/zh/tools/debug/start","/zh/tools/debug/watch-log","/zh/tools/debug/debug","/zh/tools/debug/toolbar","/zh/tools/debug/build-setting","/zh/tools/debug/memory","/zh/tools/debug/multi-screens","/zh/tools/debug/audit"]},{title:"真机调试",path:"/zh/tools/devicedebug/start",collapsable:!1,sidebarDepth:0,children:["/zh/tools/devicedebug/start"]},{title:"编译工具",path:"/zh/tools/toolkit/start",collapsable:!1,sidebarDepth:0,children:["/zh/tools/toolkit/start","/zh/tools/toolkit/update"]},{title:"打包发布",path:"/zh/tools/release/start",collapsable:!1,sidebarDepth:0,children:["/zh/tools/release/start","/zh/tools/release/release"]}]}},"/en/":{label:"English",selectText:"Languages",ariaLabel:"Select language",toc:"On This Page",searchPlaceholder:"Search",lastUpdated:"Last Updated",nav:[{text:"Tutorials",link:"/en/guide/"},{text:"Components",link:"/en/components/"},{text:"JS API",link:"/en/features/"},{text:"Samples",link:"/en/samples/"},{text:"Tools",link:"/en/tools/"}],sidebar:{"/en/guide/":[{title:"Quick Start",path:"/en/guide/start",collapsable:!1,sidebarDepth:0,children:[["/en/guide/start/use-ide","Environment Setup"],"/en/guide/start/project-overview","/en/guide/start/user-interface","/en/guide/start/add-interactivity","/en/guide/start/data-fetch","/en/guide/start/toolkit-params"]},{title:"Basic Features",path:"/en/guide/framework/",collapsable:!1,sidebarDepth:0,children:["/en/guide/framework/project-structure","/en/guide/framework/manifest","/en/guide/framework/ux",{title:"Template Syntax",path:"/en/guide/framework/template/",sidebarDepth:0,children:["/en/guide/framework/template/Props","/en/guide/framework/template/event","/en/guide/framework/template/for","/en/guide/framework/template/if","/en/guide/framework/template/computed","/en/guide/framework/template/component"]},{title:"Style Syntax",path:"/en/guide/framework/style/",sidebarDepth:0,children:["/en/guide/framework/style/page-style-and-layout","/en/guide/framework/style/media-query"]},{title:"Script Syntax",path:"/en/guide/framework/script/",sidebarDepth:0,children:["/en/guide/framework/script/global-data-method","/en/guide/framework/script/page-data","/en/guide/framework/script/lifecycle"]},"/en/guide/framework/page-switch"]},{title:"Advanced Features",path:"/en/guide/framework/other/",collapsable:!1,sidebarDepth:0,children:["/en/guide/framework/other/i18n","/en/guide/framework/other/background-running","/en/guide/framework/other/hap-schema","/en/guide/framework/other/launch-mode",{title:"Multi-screen Adaptation",path:"/en/guide/multi-screens/",collapsable:!1,sidebarDepth:0,children:["/en/guide/multi-screens/specs","/en/guide/multi-screens/samples","/en/guide/multi-screens/conditional-compilation"]}]},{title:"Developer Materials",path:"/en/guide/developer-materials/",collapsable:!1,sidebarDepth:0,children:["/en/guide/developer-materials/extension-components"]},{title:"Design Guidelines",path:"/en/guide/design/",collapsable:!1,sidebarDepth:0,children:["/en/guide/design/multi-screens"]},{title:"Best Practices",path:"/en/guide/best-practice/",collapsable:!1,sidebarDepth:0,children:["/en/guide/best-practice/memory","/en/guide/best-practice/business","/en/guide/best-practice/start"]},{title:"Release",path:"/en/guide/publish/",collapsable:!1,sidebarDepth:0,children:["/en/guide/publish/acceptance-criteria"]},{title:"Version Notes",path:"/en/guide/version/",collapsable:!1,sidebarDepth:0,children:["/en/guide/version/APILevel2","/en/guide/version/APILevel3","/en/guide/version/APILevel4"]},{title:"Others",collapsable:!1,sidebarDepth:0,children:["/en/guide/other/faq","/en/guide/other/tips"]}],"/en/components/":[{title:"General Specifications",path:"/en/components/general/",collapsable:!1,sidebarDepth:0,children:["/en/components/general/style","/en/components/general/color","/en/components/general/animation-style","/en/components/general/background-img-styles","/en/components/general/properties","/en/components/general/events","/en/components/general/methods"]},{title:"Container Components",path:"/en/components/container/",collapsable:!1,sidebarDepth:0,children:["/en/components/container/div","/en/components/container/list","/en/components/container/list-item","/en/components/container/scroll","/en/components/container/stack","/en/components/container/swiper"]},{title:"Basic Components",path:"/en/components/basic/",collapsable:!1,sidebarDepth:0,children:["/en/components/basic/text","/en/components/basic/span","/en/components/basic/a","/en/components/basic/image","/en/components/basic/image-animator","/en/components/basic/progress","/en/components/basic/marquee","/en/components/basic/chart","/en/components/basic/qrcode","/en/components/basic/barcode"]},{title:"Form Components",path:"/en/components/form/",collapsable:!1,sidebarDepth:0,children:["/en/components/form/input","/en/components/form/picker","/en/components/form/switch","/en/components/form/slider"]}],"/en/features/":[{title:"General Specifications",path:"/en/features/grammar",collapsable:!1,sidebarDepth:2},{title:"Basic Features",path:"/en/features/basic/",collapsable:!1,sidebarDepth:0,children:["/en/features/basic/app","/en/features/basic/device","/en/features/basic/router","/en/features/basic/configuration"]},{title:"Network Access",path:"/en/features/network/",collapsable:!1,sidebarDepth:0,children:["/en/features/network/fetch","/en/features/network/interconnect","/en/features/network/request","/en/features/network/uploadtask"]},{title:"Data Files",path:"/en/features/data/",collapsable:!1,sidebarDepth:0,children:["/en/features/data/storage","/en/features/data/file"]},{title:"System Capabilities",path:"/en/features/system/",collapsable:!1,sidebarDepth:0,children:["/en/features/system/network","/en/features/system/vibrator","/en/features/system/brightness","/en/features/system/record","/en/features/system/geolocation","/en/features/system/sensor","/en/features/system/event","/en/features/system/battery","/en/features/system/volume","/en/features/system/zip"]},{title:"Security",path:"/en/features/security/",collapsable:!1,sidebarDepth:0,children:["/en/features/security/crypto"]},{title:"Others",path:"/en/features/other/",collapsable:!1,sidebarDepth:0,children:["/en/features/other/audio","/en/features/other/prompt"]}],"/en/tools/":[{title:"Quick Start",path:"/en/tools/",collapsable:!1,sidebarDepth:0,children:["/en/tools/","/en/tools/start/project"]},{title:"Project Creation",path:"/en/tools/project/creat-project",collapsable:!1,sidebarDepth:0,children:["/en/tools/project/creat-project","/en/tools/project/template","/en/tools/project/project"]},{title:"Device Management",path:"/en/tools/emulator/create-emulator",collapsable:!1,sidebarDepth:0,children:["/en/tools/emulator/create-emulator","/en/tools/emulator/emulator-run"]},{title:"Development Assistance",path:"/en/tools/dev/start",collapsable:!1,sidebarDepth:0,children:["/en/tools/dev/start","/en/tools/dev/format","/en/tools/dev/build","/en/tools/dev/manifest"]},{title:"Running and Debugging",path:"/en/tools/debug/start",collapsable:!1,sidebarDepth:0,children:["/en/tools/debug/start","/en/tools/debug/watch-log","/en/tools/debug/debug","/en/tools/debug/toolbar","/en/tools/debug/build-setting","/en/tools/debug/memory","/en/tools/debug/multi-screens","/en/tools/debug/audit"]},{title:"Real Device Debugging",path:"/en/tools/devicedebug/start",collapsable:!1,sidebarDepth:0,children:["/en/tools/devicedebug/start"]},{title:"Compilation Tools",path:"/en/tools/toolkit/start",collapsable:!1,sidebarDepth:0,children:["/en/tools/toolkit/start","/en/tools/toolkit/update"]},{title:"Packaging and Release",path:"/en/tools/release/start",collapsable:!1,sidebarDepth:0,children:["/en/tools/release/start","/en/tools/release/release"]}]}}}},locales:{"/":{lang:"zh-CN",title:"Xiaomi Vela JS 应用",path:"/"},"/en/":{lang:"en-US",title:"Xiaomi Vela JS APP",path:"/en/"}}};t(269);Yt.component("api-level",()=>Promise.all([t.e(0),t.e(21)]).then(t.bind(null,368))),Yt.component("color",()=>Promise.all([t.e(0),t.e(22)]).then(t.bind(null,369))),Yt.component("sample-card",()=>Promise.all([t.e(0),t.e(23)]).then(t.bind(null,370))),Yt.component("Badge",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,371))),Yt.component("CodeBlock",()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,362))),Yt.component("CodeGroup",()=>Promise.all([t.e(0),t.e(8)]).then(t.bind(null,363)));t(270);var Os={name:"BackToTop",props:{threshold:{type:Number,default:300}},data:()=>({scrollTop:null}),computed:{show(){return this.scrollTop>this.threshold}},mounted(){this.scrollTop=this.getScrollTop(),window.addEventListener("scroll",Ts()(()=>{this.scrollTop=this.getScrollTop()},100))},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}},Ns=(t(271),Object(js.a)(Os,(function(){var e=this._self._c;return e("transition",{attrs:{name:"fade"}},[this.show?e("svg",{staticClass:"go-to-top",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 49.484 28.284"},on:{click:this.scrollToTop}},[e("g",{attrs:{transform:"translate(-229 -126.358)"}},[e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(229 151.107) rotate(-45)"}}),this._v(" "),e("rect",{attrs:{fill:"currentColor",width:"35",height:"5",rx:"2",transform:"translate(274.949 154.642) rotate(-135)"}})])]):this._e()])}),[],!1,null,"5fd4ef0c",null).exports),$s=[({Vue:e,router:n,isServer:t})=>{if(!t){const t=n.push;n.push=function(e,n,a){return n||a?t.call(this,e,n,a):t.call(this,e).catch(e=>{if("NavigationDuplicated"!==e.name)throw e;return e})};const a=n.replace;n.replace=function(e,n,t){return n||t?a.call(this,e,n,t):a.call(this,e).catch(e=>{if("NavigationDuplicated"!==e.name)throw e;return e})},e.config.errorHandler=(e,n,t)=>{"NavigationDuplicated"!==e.name&&console.error(e,t)}}},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:e})=>{e.component("BackToTop",Ns)}],qs=["BackToTop"];class Ms extends class{constructor(){this.store=new Yt({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){Yt.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Ms.prototype,{getPageAsyncComponent:ss,getLayoutAsyncComponent:ls,getAsyncComponent:cs,getVueComponent:ds});var Ls={install(e){const n=new Ms;e.$vuepress=n,e.prototype.$vuepress=n}};function _s(e,n){const t=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===t)}var Fs={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return us("pageKey",n),Yt.component(n)||Yt.component(n,ss(n)),Yt.component(n)?e(n):e("")}},Bs={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:t})=>e("div",{class:["content__"+n.slotKey]},t()[n.slotKey])},Us={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Vs=(t(272),t(273),Object(js.a)(Us,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Js={functional:!0,render(e,{parent:n,children:t}){if(n._isMounted)return t;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};Yt.config.productionTip=!1,Yt.use(Jr),Yt.use(Ls),Yt.mixin(function(e,n,t=Yt){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),t.$vuepress.$set("siteData",n);const a=new(e(t.$vuepress.$get("siteData"))),o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),i={};return Object.keys(o).reduce((e,n)=>(n.startsWith("$")&&(e[n]=o[n].get),e),i),{computed:i}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,t;for(const a in e)"/"===a?t=e[a]:0===this.$page.path.indexOf(a)&&(n=e[a]);return n||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const t=this.$siteTitle,a=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?a?a+" | "+t:t:a||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let t=0;t<e.length;t++){const a=e[t];if(a.path.toLowerCase()===n.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Rs)),Yt.component("Content",Fs),Yt.component("ContentSlotsDistributor",Bs),Yt.component("OutboundLink",Vs),Yt.component("ClientOnly",Js),Yt.component("Layout",ls("Layout")),Yt.component("NotFound",ls("NotFound")),Yt.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.10",hash:void 0},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Rs.routerBase||Rs.base,t=new Jr({base:n,mode:"history",fallback:!1,routes:Ds,scrollBehavior:(e,n,t)=>t||(e.hash?!Yt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,t,a)=>{if(_s(e,n.path))a();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const t=n.path.replace(/\/$/,"")+".html";_s(e,t)?a(t):a()}else a();else{const t=n.path+"/",o=n.path+".html";_s(e,o)?a(o):_s(e,t)?a(t):a()}})}(t);const a={};try{await Promise.all($s.filter(e=>"function"==typeof e).map(n=>n({Vue:Yt,options:a,router:t,siteData:Rs,isServer:e})))}catch(e){console.error(e)}return{app:new Yt(Object.assign(a,{router:t,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},qs.map(n=>e(n)))])})),router:t}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);